import {
  YjsConnection
} from "./chunk-QNEPXFJQ.js";
import {
  clsx
} from "./chunk-UUZM2G7P.js";
import {
  require_jsx_runtime
} from "./chunk-WXT7FLCE.js";
import {
  require_react_dom
} from "./chunk-SJDDRFLI.js";
import {
  require_react
} from "./chunk-FTFSCOIU.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// ../../node_modules/tslib/tslib.es6.mjs
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __addDisposableResource: () => __addDisposableResource,
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldIn: () => __classPrivateFieldIn,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __disposeResources: () => __disposeResources,
  __esDecorate: () => __esDecorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __propKey: () => __propKey,
  __read: () => __read,
  __rest: () => __rest,
  __rewriteRelativeImportExtension: () => __rewriteRelativeImportExtension,
  __runInitializers: () => __runInitializers,
  __setFunctionName: () => __setFunctionName,
  __spread: () => __spread,
  __spreadArray: () => __spreadArray,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values,
  default: () => tslib_es6_default
});
function __extends(d, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d, b2);
  function __() {
    this.constructor = d;
  }
  d.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
function __rest(s, e2) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e2.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e2.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) {
    if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
    return f;
  }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _2, done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
    var context = {};
    for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
    for (var p in contextIn.access) context.access[p] = contextIn.access[p];
    context.addInitializer = function(f) {
      if (done) throw new TypeError("Cannot add initializers after decoration has completed");
      extraInitializers.push(accept(f || null));
    };
    var result2 = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
    if (kind === "accessor") {
      if (result2 === void 0) continue;
      if (result2 === null || typeof result2 !== "object") throw new TypeError("Object expected");
      if (_2 = accept(result2.get)) descriptor.get = _2;
      if (_2 = accept(result2.set)) descriptor.set = _2;
      if (_2 = accept(result2.init)) initializers.unshift(_2);
    } else if (_2 = accept(result2)) {
      if (kind === "field") initializers.unshift(_2);
      else descriptor[key] = _2;
    }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
}
function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
}
function __propKey(x2) {
  return typeof x2 === "symbol" ? x2 : "".concat(x2);
}
function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P2, generator) {
  function adopt(value) {
    return value instanceof P2 ? value : new P2(function(resolve) {
      resolve(value);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject2) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject2(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject2(e2);
      }
    }
    function step(result2) {
      result2.done ? resolve(result2.value) : adopt(result2.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_2 = 0)), _2) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _2.label++;
          return { value: op[1], done: false };
        case 5:
          _2.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _2.ops.pop();
          _2.trys.pop();
          continue;
        default:
          if (!(t = _2.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _2 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _2.label = op[1];
            break;
          }
          if (op[0] === 6 && _2.label < t[1]) {
            _2.label = t[1];
            t = op;
            break;
          }
          if (t && _2.label < t[2]) {
            _2.label = t[2];
            _2.ops.push(op);
            break;
          }
          if (t[2]) _2.ops.pop();
          _2.trys.pop();
          continue;
      }
      op = body.call(thisArg, _2);
    } catch (e2) {
      op = [6, e2];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function() {
      if (o && i >= o.length) o = void 0;
      return { value: o && o[i++], done: !o };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e2;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
    for (var a = arguments[i], j2 = 0, jl = a.length; j2 < jl; j2++, k++)
      r[k] = a[j2];
  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l2 = from.length, ar; i < l2; i++) {
    if (ar || !(i in from)) {
      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
      ar[i] = from[i];
    }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function awaitReturn(f) {
    return function(v) {
      return Promise.resolve(v).then(f, reject2);
    };
  }
  function verb(n, f) {
    if (g[n]) {
      i[n] = function(v) {
        return new Promise(function(a, b2) {
          q.push([n, v, a, b2]) > 1 || resume(n, v);
        });
      };
      if (f) i[n] = f(i[n]);
    }
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e2) {
      settle2(q[0][3], e2);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject2) : settle2(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject2(value) {
    resume("throw", value);
  }
  function settle2(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i[Symbol.iterator] = function() {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function(v) {
      return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject2) {
        v = o[n](v), settle2(resolve, reject2, v.done, v.value);
      });
    };
  }
  function settle2(resolve, reject2, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject2);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result2 = {};
  if (mod != null) {
    for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result2, mod, k[i]);
  }
  __setModuleDefault(result2, mod);
  return result2;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose, inner;
    if (async) {
      if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
      dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
      if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
      dispose = value[Symbol.dispose];
      if (async) inner = dispose;
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    if (inner) dispose = function() {
      try {
        inner.call(this);
      } catch (e2) {
        return Promise.reject(e2);
      }
    };
    env.stack.push({ value, dispose, async });
  } else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}
function __disposeResources(env) {
  function fail(e2) {
    env.error = env.hasError ? new _SuppressedError(e2, env.error, "An error was suppressed during disposal.") : e2;
    env.hasError = true;
  }
  var r, s = 0;
  function next() {
    while (r = env.stack.pop()) {
      try {
        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
        if (r.dispose) {
          var result2 = r.dispose.call(r.value);
          if (r.async) return s |= 2, Promise.resolve(result2).then(next, function(e2) {
            fail(e2);
            return next();
          });
        } else s |= 1;
      } catch (e2) {
        fail(e2);
      }
    }
    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
    if (env.hasError) throw env.error;
  }
  return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
  if (typeof path === "string" && /^\.\.?\//.test(path)) {
    return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
      return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
    });
  }
  return path;
}
var extendStatics, __assign, __createBinding, __setModuleDefault, ownKeys, _SuppressedError, tslib_es6_default;
var init_tslib_es6 = __esm({
  "../../node_modules/tslib/tslib.es6.mjs"() {
    extendStatics = function(d, b2) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b3) {
        d2.__proto__ = b3;
      } || function(d2, b3) {
        for (var p in b3) if (Object.prototype.hasOwnProperty.call(b3, p)) d2[p] = b3[p];
      };
      return extendStatics(d, b2);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    __createBinding = Object.create ? (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    __setModuleDefault = Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
      o["default"] = v;
    };
    ownKeys = function(o) {
      ownKeys = Object.getOwnPropertyNames || function(o2) {
        var ar = [];
        for (var k in o2) if (Object.prototype.hasOwnProperty.call(o2, k)) ar[ar.length] = k;
        return ar;
      };
      return ownKeys(o);
    };
    _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message2) {
      var e2 = new Error(message2);
      return e2.name = "SuppressedError", e2.error = error, e2.suppressed = suppressed, e2;
    };
    tslib_es6_default = {
      __extends,
      __assign,
      __rest,
      __decorate,
      __param,
      __esDecorate,
      __runInitializers,
      __propKey,
      __setFunctionName,
      __metadata,
      __awaiter,
      __generator,
      __createBinding,
      __exportStar,
      __values,
      __read,
      __spread,
      __spreadArrays,
      __spreadArray,
      __await,
      __asyncGenerator,
      __asyncDelegator,
      __asyncValues,
      __makeTemplateObject,
      __importStar,
      __importDefault,
      __classPrivateFieldGet,
      __classPrivateFieldSet,
      __classPrivateFieldIn,
      __addDisposableResource,
      __disposeResources,
      __rewriteRelativeImportExtension
    };
  }
});

// ../../node_modules/fast-deep-equal/react.js
var require_react2 = __commonJS({
  "../../node_modules/fast-deep-equal/react.js"(exports2, module2) {
    "use strict";
    module2.exports = function equal(a, b2) {
      if (a === b2) return true;
      if (a && b2 && typeof a == "object" && typeof b2 == "object") {
        if (a.constructor !== b2.constructor) return false;
        var length, i, keys2;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b2.length) return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b2[i])) return false;
          return true;
        }
        if (a.constructor === RegExp) return a.source === b2.source && a.flags === b2.flags;
        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b2.valueOf();
        if (a.toString !== Object.prototype.toString) return a.toString() === b2.toString();
        keys2 = Object.keys(a);
        length = keys2.length;
        if (length !== Object.keys(b2).length) return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b2, keys2[i])) return false;
        for (i = length; i-- !== 0; ) {
          var key = keys2[i];
          if (key === "_owner" && a.$$typeof) {
            continue;
          }
          if (!equal(a[key], b2[key])) return false;
        }
        return true;
      }
      return a !== a && b2 !== b2;
    };
  }
});

// ../../node_modules/js-cookie/src/js.cookie.js
var require_js_cookie = __commonJS({
  "../../node_modules/js-cookie/src/js.cookie.js"(exports2, module2) {
    (function(factory2) {
      var registeredInModuleLoader;
      if (typeof define === "function" && define.amd) {
        define(factory2);
        registeredInModuleLoader = true;
      }
      if (typeof exports2 === "object") {
        module2.exports = factory2();
        registeredInModuleLoader = true;
      }
      if (!registeredInModuleLoader) {
        var OldCookies = window.Cookies;
        var api = window.Cookies = factory2();
        api.noConflict = function() {
          window.Cookies = OldCookies;
          return api;
        };
      }
    })(function() {
      function extend2() {
        var i = 0;
        var result2 = {};
        for (; i < arguments.length; i++) {
          var attributes = arguments[i];
          for (var key in attributes) {
            result2[key] = attributes[key];
          }
        }
        return result2;
      }
      function decode(s) {
        return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
      }
      function init(converter) {
        function api() {
        }
        function set2(key, value, attributes) {
          if (typeof document === "undefined") {
            return;
          }
          attributes = extend2({
            path: "/"
          }, api.defaults, attributes);
          if (typeof attributes.expires === "number") {
            attributes.expires = new Date(/* @__PURE__ */ new Date() * 1 + attributes.expires * 864e5);
          }
          attributes.expires = attributes.expires ? attributes.expires.toUTCString() : "";
          try {
            var result2 = JSON.stringify(value);
            if (/^[\{\[]/.test(result2)) {
              value = result2;
            }
          } catch (e2) {
          }
          value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
          key = encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);
          var stringifiedAttributes = "";
          for (var attributeName in attributes) {
            if (!attributes[attributeName]) {
              continue;
            }
            stringifiedAttributes += "; " + attributeName;
            if (attributes[attributeName] === true) {
              continue;
            }
            stringifiedAttributes += "=" + attributes[attributeName].split(";")[0];
          }
          return document.cookie = key + "=" + value + stringifiedAttributes;
        }
        function get3(key, json) {
          if (typeof document === "undefined") {
            return;
          }
          var jar = {};
          var cookies = document.cookie ? document.cookie.split("; ") : [];
          var i = 0;
          for (; i < cookies.length; i++) {
            var parts = cookies[i].split("=");
            var cookie = parts.slice(1).join("=");
            if (!json && cookie.charAt(0) === '"') {
              cookie = cookie.slice(1, -1);
            }
            try {
              var name = decode(parts[0]);
              cookie = (converter.read || converter)(cookie, name) || decode(cookie);
              if (json) {
                try {
                  cookie = JSON.parse(cookie);
                } catch (e2) {
                }
              }
              jar[name] = cookie;
              if (key === name) {
                break;
              }
            } catch (e2) {
            }
          }
          return key ? jar[key] : jar;
        }
        api.set = set2;
        api.get = function(key) {
          return get3(
            key,
            false
            /* read as raw */
          );
        };
        api.getJSON = function(key) {
          return get3(
            key,
            true
            /* read as json */
          );
        };
        api.remove = function(key, attributes) {
          set2(key, "", extend2(attributes, {
            expires: -1
          }));
        };
        api.defaults = {};
        api.withConverter = init;
        return api;
      }
      return init(function() {
      });
    });
  }
});

// ../../node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "../../node_modules/toggle-selection/index.js"(exports2, module2) {
    module2.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i = 0; i < selection.rangeCount; i++) {
        ranges.push(selection.getRangeAt(i));
      }
      switch (active.tagName.toUpperCase()) {
        // .toUpperCase handles XHTML
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range2) {
            selection.addRange(range2);
          });
        }
        active && active.focus();
      };
    };
  }
});

// ../../node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "../../node_modules/copy-to-clipboard/index.js"(exports2, module2) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format3(message2) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
      return message2.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy(text, options) {
      var debug, message2, reselectPrevious, range2, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range2 = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e2) {
          e2.stopPropagation();
          if (options.format) {
            e2.preventDefault();
            if (typeof e2.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format4 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format4, text);
            } else {
              e2.clipboardData.clearData();
              e2.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e2.preventDefault();
            options.onCopy(e2.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range2.selectNodeContents(mark);
        selection.addRange(range2);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message2 = format3("message" in options ? options.message : defaultMessage);
          window.prompt(message2, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range2);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module2.exports = copy;
  }
});

// ../../node_modules/nano-css/index.js
var require_nano_css = __commonJS({
  "../../node_modules/nano-css/index.js"(exports2) {
    "use strict";
    var KEBAB_REGEX = /[A-Z]/g;
    var hash = function(str) {
      var h = 5381, i = str.length;
      while (i) h = h * 33 ^ str.charCodeAt(--i);
      return "_" + (h >>> 0).toString(36);
    };
    exports2.create = function(config) {
      config = config || {};
      var assign2 = config.assign || Object.assign;
      var client = typeof window === "object";
      if (true) {
        if (client) {
          if (typeof document !== "object" || !document.getElementsByTagName("HTML")) {
            console.error(
              'nano-css detected browser environment because of "window" global, but "document" global seems to be defective.'
            );
          }
        }
      }
      var renderer = assign2({
        raw: "",
        pfx: "_",
        client,
        assign: assign2,
        stringify: JSON.stringify,
        kebab: function(prop) {
          return prop.replace(KEBAB_REGEX, "-$&").toLowerCase();
        },
        decl: function(key, value) {
          key = renderer.kebab(key);
          return key + ":" + value + ";";
        },
        hash: function(obj) {
          return hash(renderer.stringify(obj));
        },
        selector: function(parent2, selector) {
          return parent2 + (selector[0] === ":" ? "" : " ") + selector;
        },
        putRaw: function(rawCssRule) {
          renderer.raw += rawCssRule;
        }
      }, config);
      if (renderer.client) {
        if (!renderer.sh)
          document.head.appendChild(renderer.sh = document.createElement("style"));
        if (true) {
          renderer.sh.setAttribute("data-nano-css-dev", "");
          renderer.shTest = document.createElement("style");
          renderer.shTest.setAttribute("data-nano-css-dev-tests", "");
          document.head.appendChild(renderer.shTest);
        }
        renderer.putRaw = function(rawCssRule) {
          if (false) {
            var sheet = renderer.sh.sheet;
            try {
              sheet.insertRule(rawCssRule, sheet.cssRules.length);
            } catch (error) {
            }
          } else {
            try {
              renderer.shTest.sheet.insertRule(rawCssRule, renderer.shTest.sheet.cssRules.length);
            } catch (error) {
              if (config.verbose) {
                console.error(error);
              }
            }
            renderer.sh.appendChild(document.createTextNode(rawCssRule));
          }
        };
      }
      renderer.put = function(selector, decls, atrule) {
        var str = "";
        var prop, value;
        var postponed = [];
        for (prop in decls) {
          value = decls[prop];
          if (value instanceof Object && !(value instanceof Array)) {
            postponed.push(prop);
          } else {
            if (!renderer.sourcemaps) {
              str += "    " + renderer.decl(prop, value, selector, atrule) + "\n";
            } else {
              str += renderer.decl(prop, value, selector, atrule);
            }
          }
        }
        if (str) {
          if (!renderer.sourcemaps) {
            str = "\n" + selector + " {\n" + str + "}\n";
          } else {
            str = selector + "{" + str + "}";
          }
          renderer.putRaw(atrule ? atrule + "{" + str + "}" : str);
        }
        for (var i = 0; i < postponed.length; i++) {
          prop = postponed[i];
          if (prop[0] === "@" && prop !== "@font-face") {
            renderer.putAt(selector, decls[prop], prop);
          } else {
            renderer.put(renderer.selector(selector, prop), decls[prop], atrule);
          }
        }
      };
      renderer.putAt = renderer.put;
      return renderer;
    };
  }
});

// ../../node_modules/nano-css/addon/__dev__/warnOnMissingDependencies.js
var require_warnOnMissingDependencies = __commonJS({
  "../../node_modules/nano-css/addon/__dev__/warnOnMissingDependencies.js"(exports2, module2) {
    "use strict";
    var pkgName = "nano-css";
    module2.exports = function warnOnMissingDependencies(addon, renderer, deps) {
      var missing = [];
      for (var i = 0; i < deps.length; i++) {
        var name = deps[i];
        if (!renderer[name]) {
          missing.push(name);
        }
      }
      if (missing.length) {
        var str = 'Addon "' + addon + '" is missing the following dependencies:';
        for (var j2 = 0; j2 < missing.length; j2++) {
          str += '\n require("' + pkgName + "/addon/" + missing[j2] + '").addon(nano);';
        }
        throw new Error(str);
      }
    };
  }
});

// ../../node_modules/nano-css/addon/cssom.js
var require_cssom = __commonJS({
  "../../node_modules/nano-css/addon/cssom.js"(exports2) {
    "use strict";
    exports2.addon = function(renderer) {
      if (!renderer.client) return;
      if (true) {
        require_warnOnMissingDependencies()("cssom", renderer, ["sh"]);
      }
      document.head.appendChild(renderer.msh = document.createElement("style"));
      renderer.createRule = function(selector, prelude) {
        var rawCss = selector + "{}";
        if (prelude) rawCss = prelude + "{" + rawCss + "}";
        var sheet = prelude ? renderer.msh.sheet : renderer.sh.sheet;
        var index3 = sheet.insertRule(rawCss, sheet.cssRules.length);
        var rule = (sheet.cssRules || sheet.rules)[index3];
        rule.index = index3;
        if (prelude) {
          var selectorRule = (rule.cssRules || rule.rules)[0];
          rule.style = selectorRule.style;
          rule.styleMap = selectorRule.styleMap;
        }
        return rule;
      };
    };
  }
});

// ../../node_modules/nano-css/addon/vcssom/removeRule.js
var require_removeRule = __commonJS({
  "../../node_modules/nano-css/addon/vcssom/removeRule.js"(exports2) {
    function removeRule(rule) {
      var maxIndex = rule.index;
      var sh = rule.parentStyleSheet;
      var rules = sh.cssRules || sh.rules;
      maxIndex = Math.max(maxIndex, rules.length - 1);
      while (maxIndex >= 0) {
        if (rules[maxIndex] === rule) {
          sh.deleteRule(maxIndex);
          break;
        }
        maxIndex--;
      }
    }
    exports2.removeRule = removeRule;
  }
});

// ../../node_modules/nano-css/addon/vcssom.js
var require_vcssom = __commonJS({
  "../../node_modules/nano-css/addon/vcssom.js"(exports2) {
    "use strict";
    var removeRule = require_removeRule().removeRule;
    exports2.addon = function(renderer) {
      if (!renderer.client) return;
      if (true) {
        require_warnOnMissingDependencies()("cssom", renderer, ["createRule"]);
      }
      var kebab = renderer.kebab;
      function VRule(selector, prelude) {
        this.rule = renderer.createRule(selector, prelude);
        this.decl = {};
      }
      VRule.prototype.diff = function(newDecl) {
        var oldDecl = this.decl;
        var style = this.rule.style;
        var property2;
        for (property2 in oldDecl)
          if (newDecl[property2] === void 0)
            style.removeProperty(property2);
        for (property2 in newDecl)
          if (newDecl[property2] !== oldDecl[property2])
            style.setProperty(kebab(property2), newDecl[property2]);
        this.decl = newDecl;
      };
      VRule.prototype.del = function() {
        removeRule(this.rule);
      };
      function VSheet() {
        this.tree = {};
      }
      VSheet.prototype.diff = function(newTree) {
        var oldTree = this.tree;
        for (var prelude in oldTree) {
          if (newTree[prelude] === void 0) {
            var rules = oldTree[prelude];
            for (var selector in rules)
              rules[selector].del();
          }
        }
        for (var prelude in newTree) {
          if (oldTree[prelude] === void 0) {
            for (var selector in newTree[prelude]) {
              var rule = new VRule(selector, prelude);
              rule.diff(newTree[prelude][selector]);
              newTree[prelude][selector] = rule;
            }
          } else {
            var oldRules = oldTree[prelude];
            var newRules = newTree[prelude];
            for (var selector in oldRules)
              if (!newRules[selector])
                oldRules[selector].del();
            for (var selector in newRules) {
              var rule = oldRules[selector];
              if (rule) {
                rule.diff(newRules[selector]);
                newRules[selector] = rule;
              } else {
                rule = new VRule(selector, prelude);
                rule.diff(newRules[selector]);
                newRules[selector] = rule;
              }
            }
          }
        }
        this.tree = newTree;
      };
      renderer.VRule = VRule;
      renderer.VSheet = VSheet;
    };
  }
});

// ../../node_modules/nano-css/addon/vcssom/cssToTree.js
var require_cssToTree = __commonJS({
  "../../node_modules/nano-css/addon/vcssom/cssToTree.js"(exports2) {
    function cssToTree2(tree, css, selector, prelude) {
      var declarations = {};
      var hasDeclarations = false;
      var key, value;
      for (key in css) {
        value = css[key];
        if (typeof value !== "object") {
          hasDeclarations = true;
          declarations[key] = value;
        }
      }
      if (hasDeclarations) {
        if (!tree[prelude]) tree[prelude] = {};
        tree[prelude][selector] = declarations;
      }
      for (key in css) {
        value = css[key];
        if (typeof value === "object") {
          if (key[0] === "@") {
            cssToTree2(tree, value, selector, key);
          } else {
            var hasCurrentSymbol = key.indexOf("&") > -1;
            var selectorParts = selector.split(",");
            if (hasCurrentSymbol) {
              for (var i = 0; i < selectorParts.length; i++) {
                selectorParts[i] = key.replace(/&/g, selectorParts[i]);
              }
            } else {
              for (var i = 0; i < selectorParts.length; i++) {
                selectorParts[i] = selectorParts[i] + " " + key;
              }
            }
            cssToTree2(tree, value, selectorParts.join(","), prelude);
          }
        }
      }
    }
    exports2.cssToTree = cssToTree2;
  }
});

// ../../node_modules/screenfull/dist/screenfull.js
var require_screenfull = __commonJS({
  "../../node_modules/screenfull/dist/screenfull.js"(exports2, module2) {
    (function() {
      "use strict";
      var document2 = typeof window !== "undefined" && typeof window.document !== "undefined" ? window.document : {};
      var isCommonjs = typeof module2 !== "undefined" && module2.exports;
      var fn = (function() {
        var val;
        var fnMap = [
          [
            "requestFullscreen",
            "exitFullscreen",
            "fullscreenElement",
            "fullscreenEnabled",
            "fullscreenchange",
            "fullscreenerror"
          ],
          // New WebKit
          [
            "webkitRequestFullscreen",
            "webkitExitFullscreen",
            "webkitFullscreenElement",
            "webkitFullscreenEnabled",
            "webkitfullscreenchange",
            "webkitfullscreenerror"
          ],
          // Old WebKit
          [
            "webkitRequestFullScreen",
            "webkitCancelFullScreen",
            "webkitCurrentFullScreenElement",
            "webkitCancelFullScreen",
            "webkitfullscreenchange",
            "webkitfullscreenerror"
          ],
          [
            "mozRequestFullScreen",
            "mozCancelFullScreen",
            "mozFullScreenElement",
            "mozFullScreenEnabled",
            "mozfullscreenchange",
            "mozfullscreenerror"
          ],
          [
            "msRequestFullscreen",
            "msExitFullscreen",
            "msFullscreenElement",
            "msFullscreenEnabled",
            "MSFullscreenChange",
            "MSFullscreenError"
          ]
        ];
        var i = 0;
        var l2 = fnMap.length;
        var ret = {};
        for (; i < l2; i++) {
          val = fnMap[i];
          if (val && val[1] in document2) {
            for (i = 0; i < val.length; i++) {
              ret[fnMap[0][i]] = val[i];
            }
            return ret;
          }
        }
        return false;
      })();
      var eventNameMap = {
        change: fn.fullscreenchange,
        error: fn.fullscreenerror
      };
      var screenfull2 = {
        request: function(element, options) {
          return new Promise((function(resolve, reject2) {
            var onFullScreenEntered = (function() {
              this.off("change", onFullScreenEntered);
              resolve();
            }).bind(this);
            this.on("change", onFullScreenEntered);
            element = element || document2.documentElement;
            var returnPromise = element[fn.requestFullscreen](options);
            if (returnPromise instanceof Promise) {
              returnPromise.then(onFullScreenEntered).catch(reject2);
            }
          }).bind(this));
        },
        exit: function() {
          return new Promise((function(resolve, reject2) {
            if (!this.isFullscreen) {
              resolve();
              return;
            }
            var onFullScreenExit = (function() {
              this.off("change", onFullScreenExit);
              resolve();
            }).bind(this);
            this.on("change", onFullScreenExit);
            var returnPromise = document2[fn.exitFullscreen]();
            if (returnPromise instanceof Promise) {
              returnPromise.then(onFullScreenExit).catch(reject2);
            }
          }).bind(this));
        },
        toggle: function(element, options) {
          return this.isFullscreen ? this.exit() : this.request(element, options);
        },
        onchange: function(callback) {
          this.on("change", callback);
        },
        onerror: function(callback) {
          this.on("error", callback);
        },
        on: function(event, callback) {
          var eventName = eventNameMap[event];
          if (eventName) {
            document2.addEventListener(eventName, callback, false);
          }
        },
        off: function(event, callback) {
          var eventName = eventNameMap[event];
          if (eventName) {
            document2.removeEventListener(eventName, callback, false);
          }
        },
        raw: fn
      };
      if (!fn) {
        if (isCommonjs) {
          module2.exports = { isEnabled: false };
        } else {
          window.screenfull = { isEnabled: false };
        }
        return;
      }
      Object.defineProperties(screenfull2, {
        isFullscreen: {
          get: function() {
            return Boolean(document2[fn.fullscreenElement]);
          }
        },
        element: {
          enumerable: true,
          get: function() {
            return document2[fn.fullscreenElement];
          }
        },
        isEnabled: {
          enumerable: true,
          get: function() {
            return Boolean(document2[fn.fullscreenEnabled]);
          }
        }
      });
      if (isCommonjs) {
        module2.exports = screenfull2;
      } else {
        window.screenfull = screenfull2;
      }
    })();
  }
});

// ../../node_modules/react-universal-interface/lib/render.js
var require_render = __commonJS({
  "../../node_modules/react-universal-interface/lib/render.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var react_1 = require_react();
    var isReact16Plus = parseInt(react_1.version.substr(0, react_1.version.indexOf("."))) > 15;
    var isFn = function(fn) {
      return typeof fn === "function";
    };
    var render2 = function(props, data) {
      var more = [];
      for (var _i = 2; _i < arguments.length; _i++) {
        more[_i - 2] = arguments[_i];
      }
      if (true) {
        if (typeof props !== "object") {
          throw new TypeError("renderChildren(props, data) first argument must be a props object.");
        }
        var children_1 = props.children, render_1 = props.render;
        if (isFn(children_1) && isFn(render_1)) {
          console.warn('Both "render" and "children" are specified for in a universal interface component. Children will be used.');
          console.trace();
        }
        if (typeof data !== "object") {
          console.warn("Universal component interface normally expects data to be an object, " + ('"' + typeof data + '" received.'));
          console.trace();
        }
      }
      var render3 = props.render, _a = props.children, children = _a === void 0 ? render3 : _a, component = props.component, _b = props.comp, comp = _b === void 0 ? component : _b;
      if (isFn(children))
        return children.apply(void 0, tslib_1.__spreadArrays([data], more));
      if (comp) {
        return react_1.createElement(comp, data);
      }
      if (children instanceof Array)
        return isReact16Plus ? children : react_1.createElement.apply(void 0, tslib_1.__spreadArrays(["div", null], children));
      if (children && children instanceof Object) {
        if (true) {
          if (!children.type || typeof children.type !== "string" && typeof children.type !== "function" && typeof children.type !== "symbol") {
            console.warn('Universal component interface received object as children, expected React element, but received unexpected React "type".');
            console.trace();
          }
          if (typeof children.type === "string")
            return children;
          return react_1.cloneElement(children, Object.assign({}, children.props, data));
        } else {
          if (typeof children.type === "string")
            return children;
          return react_1.cloneElement(children, Object.assign({}, children.props, data));
        }
      }
      return children || null;
    };
    exports2.default = render2;
  }
});

// ../../node_modules/react-universal-interface/lib/wrapInStatefulComponent.js
var require_wrapInStatefulComponent = __commonJS({
  "../../node_modules/react-universal-interface/lib/wrapInStatefulComponent.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React90 = tslib_1.__importStar(require_react());
    var wrapInStatefulComponent = function(Comp) {
      var Decorated = (function(_super) {
        tslib_1.__extends(class_1, _super);
        function class_1() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.render = function() {
          return Comp(this.props, this.context);
        };
        return class_1;
      })(React90.Component);
      if (true) {
        Decorated.displayName = "Decorated(" + (Comp.displayName || Comp.name) + ")";
      }
      return Decorated;
    };
    exports2.default = wrapInStatefulComponent;
  }
});

// ../../node_modules/react-universal-interface/lib/addClassDecoratorSupport.js
var require_addClassDecoratorSupport = __commonJS({
  "../../node_modules/react-universal-interface/lib/addClassDecoratorSupport.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var wrapInStatefulComponent_1 = tslib_1.__importDefault(require_wrapInStatefulComponent());
    var addClassDecoratorSupport = function(Comp) {
      var isSFC = !Comp.prototype;
      return !isSFC ? Comp : wrapInStatefulComponent_1.default(Comp);
    };
    exports2.default = addClassDecoratorSupport;
  }
});

// ../../node_modules/react-universal-interface/lib/createEnhancer.js
var require_createEnhancer = __commonJS({
  "../../node_modules/react-universal-interface/lib/createEnhancer.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.divWrapper = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var React90 = tslib_1.__importStar(require_react());
    var addClassDecoratorSupport_1 = tslib_1.__importDefault(require_addClassDecoratorSupport());
    var h = React90.createElement;
    var noWrap = function(Comp, propName, props, state) {
      var _a;
      return h(Comp, propName ? tslib_1.__assign((_a = {}, _a[propName] = state, _a), props) : tslib_1.__assign(tslib_1.__assign({}, state), props));
    };
    exports2.divWrapper = function(Comp, propName, props, state) {
      return h("div", null, noWrap(Comp, propName, props, state));
    };
    var createEnhancer = function(Facc, prop, wrapper) {
      if (wrapper === void 0) {
        wrapper = noWrap;
      }
      var enhancer = function(Comp, propName, faccProps) {
        if (propName === void 0) {
          propName = prop;
        }
        if (faccProps === void 0) {
          faccProps = null;
        }
        var isClassDecoratorMethodCall = typeof Comp === "string";
        if (isClassDecoratorMethodCall) {
          return function(Klass) {
            return enhancer(Klass, Comp || prop, propName);
          };
        }
        var Enhanced = function(props) {
          return h(Facc, faccProps, function(state) {
            return wrapper(Comp, propName, props, state);
          });
        };
        if (true) {
          Enhanced.displayName = (Facc.displayName || Facc.name) + "(" + (Comp.displayName || Comp.name) + ")";
        }
        return isClassDecoratorMethodCall ? addClassDecoratorSupport_1.default(Enhanced) : Enhanced;
      };
      return enhancer;
    };
    exports2.default = createEnhancer;
  }
});

// ../../node_modules/react-universal-interface/lib/hookToRenderProp.js
var require_hookToRenderProp = __commonJS({
  "../../node_modules/react-universal-interface/lib/hookToRenderProp.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var render_1 = tslib_1.__importDefault(require_render());
    var defaultMapPropsToArgs = function(props) {
      return [props];
    };
    var hookToRenderProp = function(hook, mapPropsToArgs) {
      if (mapPropsToArgs === void 0) {
        mapPropsToArgs = defaultMapPropsToArgs;
      }
      return function(props) {
        return render_1.default(props, hook.apply(void 0, mapPropsToArgs(props)));
      };
    };
    exports2.default = hookToRenderProp;
  }
});

// ../../node_modules/react-universal-interface/lib/index.js
var require_lib = __commonJS({
  "../../node_modules/react-universal-interface/lib/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.hookToRenderProp = exports2.createEnhancer = exports2.render = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var render_1 = tslib_1.__importDefault(require_render());
    exports2.render = render_1.default;
    var createEnhancer_1 = tslib_1.__importDefault(require_createEnhancer());
    exports2.createEnhancer = createEnhancer_1.default;
    var hookToRenderProp_1 = tslib_1.__importDefault(require_hookToRenderProp());
    exports2.hookToRenderProp = hookToRenderProp_1.default;
  }
});

// ../../node_modules/fast-shallow-equal/index.js
var require_fast_shallow_equal = __commonJS({
  "../../node_modules/fast-shallow-equal/index.js"(exports2) {
    var keyList = Object.keys;
    exports2.equal = function equal(a, b2) {
      if (a === b2) return true;
      if (!(a instanceof Object) || !(b2 instanceof Object)) return false;
      var keys2 = keyList(a);
      var length = keys2.length;
      for (var i = 0; i < length; i++)
        if (!(keys2[i] in b2)) return false;
      for (var i = 0; i < length; i++)
        if (a[keys2[i]] !== b2[keys2[i]]) return false;
      return length === keyList(b2).length;
    };
  }
});

// ../../node_modules/ts-easing/lib/index.js
var require_lib2 = __commonJS({
  "../../node_modules/ts-easing/lib/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    exports2.easing = {
      // No easing, no acceleration
      linear: function(t) {
        return t;
      },
      // Accelerates fast, then slows quickly towards end.
      quadratic: function(t) {
        return t * (-(t * t) * t + 4 * t * t - 6 * t + 4);
      },
      // Overshoots over 1 and then returns to 1 towards end.
      cubic: function(t) {
        return t * (4 * t * t - 9 * t + 6);
      },
      // Overshoots over 1 multiple times - wiggles around 1.
      elastic: function(t) {
        return t * (33 * t * t * t * t - 106 * t * t * t + 126 * t * t - 67 * t + 15);
      },
      // Accelerating from zero velocity
      inQuad: function(t) {
        return t * t;
      },
      // Decelerating to zero velocity
      outQuad: function(t) {
        return t * (2 - t);
      },
      // Acceleration until halfway, then deceleration
      inOutQuad: function(t) {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
      },
      // Accelerating from zero velocity
      inCubic: function(t) {
        return t * t * t;
      },
      // Decelerating to zero velocity
      outCubic: function(t) {
        return --t * t * t + 1;
      },
      // Acceleration until halfway, then deceleration
      inOutCubic: function(t) {
        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
      },
      // Accelerating from zero velocity
      inQuart: function(t) {
        return t * t * t * t;
      },
      // Decelerating to zero velocity
      outQuart: function(t) {
        return 1 - --t * t * t * t;
      },
      // Acceleration until halfway, then deceleration
      inOutQuart: function(t) {
        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
      },
      // Accelerating from zero velocity
      inQuint: function(t) {
        return t * t * t * t * t;
      },
      // Decelerating to zero velocity
      outQuint: function(t) {
        return 1 + --t * t * t * t * t;
      },
      // Acceleration until halfway, then deceleration
      inOutQuint: function(t) {
        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
      },
      // Accelerating from zero velocity
      inSine: function(t) {
        return -Math.cos(t * (Math.PI / 2)) + 1;
      },
      // Decelerating to zero velocity
      outSine: function(t) {
        return Math.sin(t * (Math.PI / 2));
      },
      // Accelerating until halfway, then decelerating
      inOutSine: function(t) {
        return -(Math.cos(Math.PI * t) - 1) / 2;
      },
      // Exponential accelerating from zero velocity
      inExpo: function(t) {
        return Math.pow(2, 10 * (t - 1));
      },
      // Exponential decelerating to zero velocity
      outExpo: function(t) {
        return -Math.pow(2, -10 * t) + 1;
      },
      // Exponential accelerating until halfway, then decelerating
      inOutExpo: function(t) {
        t /= 0.5;
        if (t < 1)
          return Math.pow(2, 10 * (t - 1)) / 2;
        t--;
        return (-Math.pow(2, -10 * t) + 2) / 2;
      },
      // Circular accelerating from zero velocity
      inCirc: function(t) {
        return -Math.sqrt(1 - t * t) + 1;
      },
      // Circular decelerating to zero velocity Moves VERY fast at the beginning and
      // then quickly slows down in the middle. This tween can actually be used
      // in continuous transitions where target value changes all the time,
      // because of the very quick start, it hides the jitter between target value changes.
      outCirc: function(t) {
        return Math.sqrt(1 - (t = t - 1) * t);
      },
      // Circular acceleration until halfway, then deceleration
      inOutCirc: function(t) {
        t /= 0.5;
        if (t < 1)
          return -(Math.sqrt(1 - t * t) - 1) / 2;
        t -= 2;
        return (Math.sqrt(1 - t * t) + 1) / 2;
      }
    };
  }
});

// ../../node_modules/ts-keycode-enum/dist/js/Key.enum.js
var require_Key_enum = __commonJS({
  "../../node_modules/ts-keycode-enum/dist/js/Key.enum.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", { value: true });
    var Key4;
    (function(Key5) {
      Key5[Key5["Backspace"] = 8] = "Backspace";
      Key5[Key5["Tab"] = 9] = "Tab";
      Key5[Key5["Enter"] = 13] = "Enter";
      Key5[Key5["Shift"] = 16] = "Shift";
      Key5[Key5["Ctrl"] = 17] = "Ctrl";
      Key5[Key5["Alt"] = 18] = "Alt";
      Key5[Key5["PauseBreak"] = 19] = "PauseBreak";
      Key5[Key5["CapsLock"] = 20] = "CapsLock";
      Key5[Key5["Escape"] = 27] = "Escape";
      Key5[Key5["Space"] = 32] = "Space";
      Key5[Key5["PageUp"] = 33] = "PageUp";
      Key5[Key5["PageDown"] = 34] = "PageDown";
      Key5[Key5["End"] = 35] = "End";
      Key5[Key5["Home"] = 36] = "Home";
      Key5[Key5["LeftArrow"] = 37] = "LeftArrow";
      Key5[Key5["UpArrow"] = 38] = "UpArrow";
      Key5[Key5["RightArrow"] = 39] = "RightArrow";
      Key5[Key5["DownArrow"] = 40] = "DownArrow";
      Key5[Key5["Insert"] = 45] = "Insert";
      Key5[Key5["Delete"] = 46] = "Delete";
      Key5[Key5["Zero"] = 48] = "Zero";
      Key5[Key5["ClosedParen"] = 48] = "ClosedParen";
      Key5[Key5["One"] = 49] = "One";
      Key5[Key5["ExclamationMark"] = 49] = "ExclamationMark";
      Key5[Key5["Two"] = 50] = "Two";
      Key5[Key5["AtSign"] = 50] = "AtSign";
      Key5[Key5["Three"] = 51] = "Three";
      Key5[Key5["PoundSign"] = 51] = "PoundSign";
      Key5[Key5["Hash"] = 51] = "Hash";
      Key5[Key5["Four"] = 52] = "Four";
      Key5[Key5["DollarSign"] = 52] = "DollarSign";
      Key5[Key5["Five"] = 53] = "Five";
      Key5[Key5["PercentSign"] = 53] = "PercentSign";
      Key5[Key5["Six"] = 54] = "Six";
      Key5[Key5["Caret"] = 54] = "Caret";
      Key5[Key5["Hat"] = 54] = "Hat";
      Key5[Key5["Seven"] = 55] = "Seven";
      Key5[Key5["Ampersand"] = 55] = "Ampersand";
      Key5[Key5["Eight"] = 56] = "Eight";
      Key5[Key5["Star"] = 56] = "Star";
      Key5[Key5["Asterik"] = 56] = "Asterik";
      Key5[Key5["Nine"] = 57] = "Nine";
      Key5[Key5["OpenParen"] = 57] = "OpenParen";
      Key5[Key5["A"] = 65] = "A";
      Key5[Key5["B"] = 66] = "B";
      Key5[Key5["C"] = 67] = "C";
      Key5[Key5["D"] = 68] = "D";
      Key5[Key5["E"] = 69] = "E";
      Key5[Key5["F"] = 70] = "F";
      Key5[Key5["G"] = 71] = "G";
      Key5[Key5["H"] = 72] = "H";
      Key5[Key5["I"] = 73] = "I";
      Key5[Key5["J"] = 74] = "J";
      Key5[Key5["K"] = 75] = "K";
      Key5[Key5["L"] = 76] = "L";
      Key5[Key5["M"] = 77] = "M";
      Key5[Key5["N"] = 78] = "N";
      Key5[Key5["O"] = 79] = "O";
      Key5[Key5["P"] = 80] = "P";
      Key5[Key5["Q"] = 81] = "Q";
      Key5[Key5["R"] = 82] = "R";
      Key5[Key5["S"] = 83] = "S";
      Key5[Key5["T"] = 84] = "T";
      Key5[Key5["U"] = 85] = "U";
      Key5[Key5["V"] = 86] = "V";
      Key5[Key5["W"] = 87] = "W";
      Key5[Key5["X"] = 88] = "X";
      Key5[Key5["Y"] = 89] = "Y";
      Key5[Key5["Z"] = 90] = "Z";
      Key5[Key5["LeftWindowKey"] = 91] = "LeftWindowKey";
      Key5[Key5["RightWindowKey"] = 92] = "RightWindowKey";
      Key5[Key5["SelectKey"] = 93] = "SelectKey";
      Key5[Key5["Numpad0"] = 96] = "Numpad0";
      Key5[Key5["Numpad1"] = 97] = "Numpad1";
      Key5[Key5["Numpad2"] = 98] = "Numpad2";
      Key5[Key5["Numpad3"] = 99] = "Numpad3";
      Key5[Key5["Numpad4"] = 100] = "Numpad4";
      Key5[Key5["Numpad5"] = 101] = "Numpad5";
      Key5[Key5["Numpad6"] = 102] = "Numpad6";
      Key5[Key5["Numpad7"] = 103] = "Numpad7";
      Key5[Key5["Numpad8"] = 104] = "Numpad8";
      Key5[Key5["Numpad9"] = 105] = "Numpad9";
      Key5[Key5["Multiply"] = 106] = "Multiply";
      Key5[Key5["Add"] = 107] = "Add";
      Key5[Key5["Subtract"] = 109] = "Subtract";
      Key5[Key5["DecimalPoint"] = 110] = "DecimalPoint";
      Key5[Key5["Divide"] = 111] = "Divide";
      Key5[Key5["F1"] = 112] = "F1";
      Key5[Key5["F2"] = 113] = "F2";
      Key5[Key5["F3"] = 114] = "F3";
      Key5[Key5["F4"] = 115] = "F4";
      Key5[Key5["F5"] = 116] = "F5";
      Key5[Key5["F6"] = 117] = "F6";
      Key5[Key5["F7"] = 118] = "F7";
      Key5[Key5["F8"] = 119] = "F8";
      Key5[Key5["F9"] = 120] = "F9";
      Key5[Key5["F10"] = 121] = "F10";
      Key5[Key5["F11"] = 122] = "F11";
      Key5[Key5["F12"] = 123] = "F12";
      Key5[Key5["NumLock"] = 144] = "NumLock";
      Key5[Key5["ScrollLock"] = 145] = "ScrollLock";
      Key5[Key5["SemiColon"] = 186] = "SemiColon";
      Key5[Key5["Equals"] = 187] = "Equals";
      Key5[Key5["Comma"] = 188] = "Comma";
      Key5[Key5["Dash"] = 189] = "Dash";
      Key5[Key5["Period"] = 190] = "Period";
      Key5[Key5["UnderScore"] = 189] = "UnderScore";
      Key5[Key5["PlusSign"] = 187] = "PlusSign";
      Key5[Key5["ForwardSlash"] = 191] = "ForwardSlash";
      Key5[Key5["Tilde"] = 192] = "Tilde";
      Key5[Key5["GraveAccent"] = 192] = "GraveAccent";
      Key5[Key5["OpenBracket"] = 219] = "OpenBracket";
      Key5[Key5["ClosedBracket"] = 221] = "ClosedBracket";
      Key5[Key5["Quote"] = 222] = "Quote";
    })(Key4 = exports2.Key || (exports2.Key = {}));
  }
});

// ../../node_modules/lodash/_freeGlobal.js
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// ../../node_modules/lodash/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// ../../node_modules/lodash/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// ../../node_modules/lodash/_getRawTag.js
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e2) {
  }
  var result2 = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result2;
}
var getRawTag_default = getRawTag;

// ../../node_modules/lodash/_objectToString.js
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// ../../node_modules/lodash/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// ../../node_modules/lodash/isObjectLike.js
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// ../../node_modules/lodash/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// ../../node_modules/lodash/_baseToNumber.js
var NAN = 0 / 0;
function baseToNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN;
  }
  return +value;
}
var baseToNumber_default = baseToNumber;

// ../../node_modules/lodash/_arrayMap.js
function arrayMap(array, iteratee2) {
  var index3 = -1, length = array == null ? 0 : array.length, result2 = Array(length);
  while (++index3 < length) {
    result2[index3] = iteratee2(array[index3], index3, array);
  }
  return result2;
}
var arrayMap_default = arrayMap;

// ../../node_modules/lodash/isArray.js
var isArray = Array.isArray;
var isArray_default = isArray;

// ../../node_modules/lodash/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY ? "-0" : result2;
}
var baseToString_default = baseToString;

// ../../node_modules/lodash/_createMathOperation.js
function createMathOperation(operator, defaultValue) {
  return function(value, other) {
    var result2;
    if (value === void 0 && other === void 0) {
      return defaultValue;
    }
    if (value !== void 0) {
      result2 = value;
    }
    if (other !== void 0) {
      if (result2 === void 0) {
        return other;
      }
      if (typeof value == "string" || typeof other == "string") {
        value = baseToString_default(value);
        other = baseToString_default(other);
      } else {
        value = baseToNumber_default(value);
        other = baseToNumber_default(other);
      }
      result2 = operator(value, other);
    }
    return result2;
  };
}
var createMathOperation_default = createMathOperation;

// ../../node_modules/lodash/add.js
var add = createMathOperation_default(function(augend, addend) {
  return augend + addend;
}, 0);
var add_default = add;

// ../../node_modules/lodash/_trimmedEndIndex.js
var reWhitespace = /\s/;
function trimmedEndIndex(string) {
  var index3 = string.length;
  while (index3-- && reWhitespace.test(string.charAt(index3))) {
  }
  return index3;
}
var trimmedEndIndex_default = trimmedEndIndex;

// ../../node_modules/lodash/_baseTrim.js
var reTrimStart = /^\s+/;
function baseTrim(string) {
  return string ? string.slice(0, trimmedEndIndex_default(string) + 1).replace(reTrimStart, "") : string;
}
var baseTrim_default = baseTrim;

// ../../node_modules/lodash/isObject.js
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_default = isObject;

// ../../node_modules/lodash/toNumber.js
var NAN2 = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value) {
  if (typeof value == "number") {
    return value;
  }
  if (isSymbol_default(value)) {
    return NAN2;
  }
  if (isObject_default(value)) {
    var other = typeof value.valueOf == "function" ? value.valueOf() : value;
    value = isObject_default(other) ? other + "" : other;
  }
  if (typeof value != "string") {
    return value === 0 ? value : +value;
  }
  value = baseTrim_default(value);
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN2 : +value;
}
var toNumber_default = toNumber;

// ../../node_modules/lodash/toFinite.js
var INFINITY2 = 1 / 0;
var MAX_INTEGER = 17976931348623157e292;
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber_default(value);
  if (value === INFINITY2 || value === -INFINITY2) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}
var toFinite_default = toFinite;

// ../../node_modules/lodash/toInteger.js
function toInteger(value) {
  var result2 = toFinite_default(value), remainder = result2 % 1;
  return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;
}
var toInteger_default = toInteger;

// ../../node_modules/lodash/after.js
var FUNC_ERROR_TEXT = "Expected a function";
function after(n, func) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger_default(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}
var after_default = after;

// ../../node_modules/lodash/identity.js
function identity(value) {
  return value;
}
var identity_default = identity;

// ../../node_modules/lodash/isFunction.js
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// ../../node_modules/lodash/_coreJsData.js
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// ../../node_modules/lodash/_isMasked.js
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
})();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// ../../node_modules/lodash/_toSource.js
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e2) {
    }
    try {
      return func + "";
    } catch (e2) {
    }
  }
  return "";
}
var toSource_default = toSource;

// ../../node_modules/lodash/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// ../../node_modules/lodash/_getValue.js
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// ../../node_modules/lodash/_getNative.js
function getNative(object, key) {
  var value = getValue_default(object, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// ../../node_modules/lodash/_WeakMap.js
var WeakMap = getNative_default(root_default, "WeakMap");
var WeakMap_default = WeakMap;

// ../../node_modules/lodash/_metaMap.js
var metaMap = WeakMap_default && new WeakMap_default();
var metaMap_default = metaMap;

// ../../node_modules/lodash/_baseSetData.js
var baseSetData = !metaMap_default ? identity_default : function(func, data) {
  metaMap_default.set(func, data);
  return func;
};
var baseSetData_default = baseSetData;

// ../../node_modules/lodash/_baseCreate.js
var objectCreate = Object.create;
var baseCreate = /* @__PURE__ */ (function() {
  function object() {
  }
  return function(proto) {
    if (!isObject_default(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result2 = new object();
    object.prototype = void 0;
    return result2;
  };
})();
var baseCreate_default = baseCreate;

// ../../node_modules/lodash/_createCtor.js
function createCtor(Ctor) {
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return new Ctor();
      case 1:
        return new Ctor(args[0]);
      case 2:
        return new Ctor(args[0], args[1]);
      case 3:
        return new Ctor(args[0], args[1], args[2]);
      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);
      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate_default(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);
    return isObject_default(result2) ? result2 : thisBinding;
  };
}
var createCtor_default = createCtor;

// ../../node_modules/lodash/_createBind.js
var WRAP_BIND_FLAG = 1;
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor_default(func);
  function wrapper() {
    var fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}
var createBind_default = createBind;

// ../../node_modules/lodash/_apply.js
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// ../../node_modules/lodash/_composeArgs.js
var nativeMax = Math.max;
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array(leftLength + rangeLength), isUncurried = !isCurried;
  while (++leftIndex < leftLength) {
    result2[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result2[leftIndex++] = args[argsIndex++];
  }
  return result2;
}
var composeArgs_default = composeArgs;

// ../../node_modules/lodash/_composeArgsRight.js
var nativeMax2 = Math.max;
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax2(argsLength - holdersLength, 0), result2 = Array(rangeLength + rightLength), isUncurried = !isCurried;
  while (++argsIndex < rangeLength) {
    result2[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result2[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result2[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result2;
}
var composeArgsRight_default = composeArgsRight;

// ../../node_modules/lodash/_countHolders.js
function countHolders(array, placeholder) {
  var length = array.length, result2 = 0;
  while (length--) {
    if (array[length] === placeholder) {
      ++result2;
    }
  }
  return result2;
}
var countHolders_default = countHolders;

// ../../node_modules/lodash/_baseLodash.js
function baseLodash() {
}
var baseLodash_default = baseLodash;

// ../../node_modules/lodash/_LazyWrapper.js
var MAX_ARRAY_LENGTH = 4294967295;
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}
LazyWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var LazyWrapper_default = LazyWrapper;

// ../../node_modules/lodash/noop.js
function noop() {
}
var noop_default = noop;

// ../../node_modules/lodash/_getData.js
var getData = !metaMap_default ? noop_default : function(func) {
  return metaMap_default.get(func);
};
var getData_default = getData;

// ../../node_modules/lodash/_realNames.js
var realNames = {};
var realNames_default = realNames;

// ../../node_modules/lodash/_getFuncName.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function getFuncName(func) {
  var result2 = func.name + "", array = realNames_default[result2], length = hasOwnProperty3.call(realNames_default, result2) ? array.length : 0;
  while (length--) {
    var data = array[length], otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result2;
}
var getFuncName_default = getFuncName;

// ../../node_modules/lodash/_LodashWrapper.js
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = void 0;
}
LodashWrapper.prototype = baseCreate_default(baseLodash_default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var LodashWrapper_default = LodashWrapper;

// ../../node_modules/lodash/_copyArray.js
function copyArray(source, array) {
  var index3 = -1, length = source.length;
  array || (array = Array(length));
  while (++index3 < length) {
    array[index3] = source[index3];
  }
  return array;
}
var copyArray_default = copyArray;

// ../../node_modules/lodash/_wrapperClone.js
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper_default) {
    return wrapper.clone();
  }
  var result2 = new LodashWrapper_default(wrapper.__wrapped__, wrapper.__chain__);
  result2.__actions__ = copyArray_default(wrapper.__actions__);
  result2.__index__ = wrapper.__index__;
  result2.__values__ = wrapper.__values__;
  return result2;
}
var wrapperClone_default = wrapperClone;

// ../../node_modules/lodash/wrapperLodash.js
var objectProto5 = Object.prototype;
var hasOwnProperty4 = objectProto5.hasOwnProperty;
function lodash(value) {
  if (isObjectLike_default(value) && !isArray_default(value) && !(value instanceof LazyWrapper_default)) {
    if (value instanceof LodashWrapper_default) {
      return value;
    }
    if (hasOwnProperty4.call(value, "__wrapped__")) {
      return wrapperClone_default(value);
    }
  }
  return new LodashWrapper_default(value);
}
lodash.prototype = baseLodash_default.prototype;
lodash.prototype.constructor = lodash;
var wrapperLodash_default = lodash;

// ../../node_modules/lodash/_isLaziable.js
function isLaziable(func) {
  var funcName = getFuncName_default(func), other = wrapperLodash_default[funcName];
  if (typeof other != "function" || !(funcName in LazyWrapper_default.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData_default(other);
  return !!data && func === data[0];
}
var isLaziable_default = isLaziable;

// ../../node_modules/lodash/_shortOut.js
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// ../../node_modules/lodash/_setData.js
var setData = shortOut_default(baseSetData_default);
var setData_default = setData;

// ../../node_modules/lodash/_getWrapDetails.js
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
var reSplitDetails = /,? & /;
function getWrapDetails(source) {
  var match2 = source.match(reWrapDetails);
  return match2 ? match2[1].split(reSplitDetails) : [];
}
var getWrapDetails_default = getWrapDetails;

// ../../node_modules/lodash/_insertWrapDetails.js
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
  details = details.join(length > 2 ? ", " : " ");
  return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
}
var insertWrapDetails_default = insertWrapDetails;

// ../../node_modules/lodash/constant.js
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// ../../node_modules/lodash/_defineProperty.js
var defineProperty = (function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e2) {
  }
})();
var defineProperty_default = defineProperty;

// ../../node_modules/lodash/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// ../../node_modules/lodash/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// ../../node_modules/lodash/_arrayEach.js
function arrayEach(array, iteratee2) {
  var index3 = -1, length = array == null ? 0 : array.length;
  while (++index3 < length) {
    if (iteratee2(array[index3], index3, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEach_default = arrayEach;

// ../../node_modules/lodash/_baseFindIndex.js
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length, index3 = fromIndex + (fromRight ? 1 : -1);
  while (fromRight ? index3-- : ++index3 < length) {
    if (predicate(array[index3], index3, array)) {
      return index3;
    }
  }
  return -1;
}
var baseFindIndex_default = baseFindIndex;

// ../../node_modules/lodash/_baseIsNaN.js
function baseIsNaN(value) {
  return value !== value;
}
var baseIsNaN_default = baseIsNaN;

// ../../node_modules/lodash/_strictIndexOf.js
function strictIndexOf(array, value, fromIndex) {
  var index3 = fromIndex - 1, length = array.length;
  while (++index3 < length) {
    if (array[index3] === value) {
      return index3;
    }
  }
  return -1;
}
var strictIndexOf_default = strictIndexOf;

// ../../node_modules/lodash/_baseIndexOf.js
function baseIndexOf(array, value, fromIndex) {
  return value === value ? strictIndexOf_default(array, value, fromIndex) : baseFindIndex_default(array, baseIsNaN_default, fromIndex);
}
var baseIndexOf_default = baseIndexOf;

// ../../node_modules/lodash/_arrayIncludes.js
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf_default(array, value, 0) > -1;
}
var arrayIncludes_default = arrayIncludes;

// ../../node_modules/lodash/_updateWrapDetails.js
var WRAP_BIND_FLAG2 = 1;
var WRAP_BIND_KEY_FLAG = 2;
var WRAP_CURRY_FLAG = 8;
var WRAP_CURRY_RIGHT_FLAG = 16;
var WRAP_PARTIAL_FLAG = 32;
var WRAP_PARTIAL_RIGHT_FLAG = 64;
var WRAP_ARY_FLAG = 128;
var WRAP_REARG_FLAG = 256;
var WRAP_FLIP_FLAG = 512;
var wrapFlags = [
  ["ary", WRAP_ARY_FLAG],
  ["bind", WRAP_BIND_FLAG2],
  ["bindKey", WRAP_BIND_KEY_FLAG],
  ["curry", WRAP_CURRY_FLAG],
  ["curryRight", WRAP_CURRY_RIGHT_FLAG],
  ["flip", WRAP_FLIP_FLAG],
  ["partial", WRAP_PARTIAL_FLAG],
  ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
  ["rearg", WRAP_REARG_FLAG]
];
function updateWrapDetails(details, bitmask) {
  arrayEach_default(wrapFlags, function(pair) {
    var value = "_." + pair[0];
    if (bitmask & pair[1] && !arrayIncludes_default(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}
var updateWrapDetails_default = updateWrapDetails;

// ../../node_modules/lodash/_setWrapToString.js
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + "";
  return setToString_default(wrapper, insertWrapDetails_default(source, updateWrapDetails_default(getWrapDetails_default(source), bitmask)));
}
var setWrapToString_default = setWrapToString;

// ../../node_modules/lodash/_createRecurry.js
var WRAP_BIND_FLAG3 = 1;
var WRAP_BIND_KEY_FLAG2 = 2;
var WRAP_CURRY_BOUND_FLAG = 4;
var WRAP_CURRY_FLAG2 = 8;
var WRAP_PARTIAL_FLAG2 = 32;
var WRAP_PARTIAL_RIGHT_FLAG2 = 64;
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG2, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG2 : WRAP_PARTIAL_RIGHT_FLAG2;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG2 : WRAP_PARTIAL_FLAG2);
  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG3 | WRAP_BIND_KEY_FLAG2);
  }
  var newData = [
    func,
    bitmask,
    thisArg,
    newPartials,
    newHolders,
    newPartialsRight,
    newHoldersRight,
    argPos,
    ary2,
    arity
  ];
  var result2 = wrapFunc.apply(void 0, newData);
  if (isLaziable_default(func)) {
    setData_default(result2, newData);
  }
  result2.placeholder = placeholder;
  return setWrapToString_default(result2, func, bitmask);
}
var createRecurry_default = createRecurry;

// ../../node_modules/lodash/_getHolder.js
function getHolder(func) {
  var object = func;
  return object.placeholder;
}
var getHolder_default = getHolder;

// ../../node_modules/lodash/_isIndex.js
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// ../../node_modules/lodash/_reorder.js
var nativeMin = Math.min;
function reorder(array, indexes) {
  var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray_default(array);
  while (length--) {
    var index3 = indexes[length];
    array[length] = isIndex_default(index3, arrLength) ? oldArray[index3] : void 0;
  }
  return array;
}
var reorder_default = reorder;

// ../../node_modules/lodash/_replaceHolders.js
var PLACEHOLDER = "__lodash_placeholder__";
function replaceHolders(array, placeholder) {
  var index3 = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index3 < length) {
    var value = array[index3];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index3] = PLACEHOLDER;
      result2[resIndex++] = index3;
    }
  }
  return result2;
}
var replaceHolders_default = replaceHolders;

// ../../node_modules/lodash/_createHybrid.js
var WRAP_BIND_FLAG4 = 1;
var WRAP_BIND_KEY_FLAG3 = 2;
var WRAP_CURRY_FLAG3 = 8;
var WRAP_CURRY_RIGHT_FLAG2 = 16;
var WRAP_ARY_FLAG2 = 128;
var WRAP_FLIP_FLAG2 = 512;
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG2, isBind = bitmask & WRAP_BIND_FLAG4, isBindKey = bitmask & WRAP_BIND_KEY_FLAG3, isCurried = bitmask & (WRAP_CURRY_FLAG3 | WRAP_CURRY_RIGHT_FLAG2), isFlip = bitmask & WRAP_FLIP_FLAG2, Ctor = isBindKey ? void 0 : createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index3 = length;
    while (index3--) {
      args[index3] = arguments[index3];
    }
    if (isCurried) {
      var placeholder = getHolder_default(wrapper), holdersCount = countHolders_default(args, placeholder);
    }
    if (partials) {
      args = composeArgs_default(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight_default(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders_default(args, placeholder);
      return createRecurry_default(
        func,
        bitmask,
        createHybrid,
        wrapper.placeholder,
        thisArg,
        args,
        newHolders,
        argPos,
        ary2,
        arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
    length = args.length;
    if (argPos) {
      args = reorder_default(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary2 < length) {
      args.length = ary2;
    }
    if (this && this !== root_default && this instanceof wrapper) {
      fn = Ctor || createCtor_default(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}
var createHybrid_default = createHybrid;

// ../../node_modules/lodash/_createCurry.js
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor_default(func);
  function wrapper() {
    var length = arguments.length, args = Array(length), index3 = length, placeholder = getHolder_default(wrapper);
    while (index3--) {
      args[index3] = arguments[index3];
    }
    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders_default(args, placeholder);
    length -= holders.length;
    if (length < arity) {
      return createRecurry_default(
        func,
        bitmask,
        createHybrid_default,
        wrapper.placeholder,
        void 0,
        args,
        holders,
        void 0,
        void 0,
        arity - length
      );
    }
    var fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    return apply_default(fn, this, args);
  }
  return wrapper;
}
var createCurry_default = createCurry;

// ../../node_modules/lodash/_createPartial.js
var WRAP_BIND_FLAG5 = 1;
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG5, Ctor = createCtor_default(func);
  function wrapper() {
    var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = this && this !== root_default && this instanceof wrapper ? Ctor : func;
    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply_default(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}
var createPartial_default = createPartial;

// ../../node_modules/lodash/_mergeData.js
var PLACEHOLDER2 = "__lodash_placeholder__";
var WRAP_BIND_FLAG6 = 1;
var WRAP_BIND_KEY_FLAG4 = 2;
var WRAP_CURRY_BOUND_FLAG2 = 4;
var WRAP_CURRY_FLAG4 = 8;
var WRAP_ARY_FLAG3 = 128;
var WRAP_REARG_FLAG2 = 256;
var nativeMin2 = Math.min;
function mergeData(data, source) {
  var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG6 | WRAP_BIND_KEY_FLAG4 | WRAP_ARY_FLAG3);
  var isCombo = srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_CURRY_FLAG4 || srcBitmask == WRAP_ARY_FLAG3 && bitmask == WRAP_REARG_FLAG2 && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG3 | WRAP_REARG_FLAG2) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG4;
  if (!(isCommon || isCombo)) {
    return data;
  }
  if (srcBitmask & WRAP_BIND_FLAG6) {
    data[2] = source[2];
    newBitmask |= bitmask & WRAP_BIND_FLAG6 ? 0 : WRAP_CURRY_BOUND_FLAG2;
  }
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs_default(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders_default(data[3], PLACEHOLDER2) : source[4];
  }
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight_default(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders_default(data[5], PLACEHOLDER2) : source[6];
  }
  value = source[7];
  if (value) {
    data[7] = value;
  }
  if (srcBitmask & WRAP_ARY_FLAG3) {
    data[8] = data[8] == null ? source[8] : nativeMin2(data[8], source[8]);
  }
  if (data[9] == null) {
    data[9] = source[9];
  }
  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}
var mergeData_default = mergeData;

// ../../node_modules/lodash/_createWrap.js
var FUNC_ERROR_TEXT2 = "Expected a function";
var WRAP_BIND_FLAG7 = 1;
var WRAP_BIND_KEY_FLAG5 = 2;
var WRAP_CURRY_FLAG5 = 8;
var WRAP_CURRY_RIGHT_FLAG3 = 16;
var WRAP_PARTIAL_FLAG3 = 32;
var WRAP_PARTIAL_RIGHT_FLAG3 = 64;
var nativeMax3 = Math.max;
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG5;
  if (!isBindKey && typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT2);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG3 | WRAP_PARTIAL_RIGHT_FLAG3);
    partials = holders = void 0;
  }
  ary2 = ary2 === void 0 ? ary2 : nativeMax3(toInteger_default(ary2), 0);
  arity = arity === void 0 ? arity : toInteger_default(arity);
  length -= holders ? holders.length : 0;
  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG3) {
    var partialsRight = partials, holdersRight = holders;
    partials = holders = void 0;
  }
  var data = isBindKey ? void 0 : getData_default(func);
  var newData = [
    func,
    bitmask,
    thisArg,
    partials,
    holders,
    partialsRight,
    holdersRight,
    argPos,
    ary2,
    arity
  ];
  if (data) {
    mergeData_default(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax3(newData[9] - length, 0);
  if (!arity && bitmask & (WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3)) {
    bitmask &= ~(WRAP_CURRY_FLAG5 | WRAP_CURRY_RIGHT_FLAG3);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG7) {
    var result2 = createBind_default(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG5 || bitmask == WRAP_CURRY_RIGHT_FLAG3) {
    result2 = createCurry_default(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG3 || bitmask == (WRAP_BIND_FLAG7 | WRAP_PARTIAL_FLAG3)) && !holders.length) {
    result2 = createPartial_default(func, bitmask, thisArg, partials);
  } else {
    result2 = createHybrid_default.apply(void 0, newData);
  }
  var setter = data ? baseSetData_default : setData_default;
  return setWrapToString_default(setter(result2, newData), func, bitmask);
}
var createWrap_default = createWrap;

// ../../node_modules/lodash/ary.js
var WRAP_ARY_FLAG4 = 128;
function ary(func, n, guard) {
  n = guard ? void 0 : n;
  n = func && n == null ? func.length : n;
  return createWrap_default(func, WRAP_ARY_FLAG4, void 0, void 0, void 0, void 0, n);
}
var ary_default = ary;

// ../../node_modules/lodash/_baseAssignValue.js
function baseAssignValue(object, key, value) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// ../../node_modules/lodash/eq.js
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// ../../node_modules/lodash/_assignValue.js
var objectProto6 = Object.prototype;
var hasOwnProperty5 = objectProto6.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty5.call(object, key) && eq_default(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignValue_default = assignValue;

// ../../node_modules/lodash/_copyObject.js
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index3 = -1, length = props.length;
  while (++index3 < length) {
    var key = props[index3];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object, key, newValue);
    } else {
      assignValue_default(object, key, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// ../../node_modules/lodash/_overRest.js
var nativeMax4 = Math.max;
function overRest(func, start, transform2) {
  start = nativeMax4(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index3 = -1, length = nativeMax4(args.length - start, 0), array = Array(length);
    while (++index3 < length) {
      array[index3] = args[start + index3];
    }
    index3 = -1;
    var otherArgs = Array(start + 1);
    while (++index3 < start) {
      otherArgs[index3] = args[index3];
    }
    otherArgs[start] = transform2(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// ../../node_modules/lodash/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// ../../node_modules/lodash/isLength.js
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// ../../node_modules/lodash/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// ../../node_modules/lodash/_isIterateeCall.js
function isIterateeCall(value, index3, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index3;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index3, object.length) : type == "string" && index3 in object) {
    return eq_default(object[index3], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// ../../node_modules/lodash/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index3 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index3 < length) {
      var source = sources[index3];
      if (source) {
        assigner(object, source, index3, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// ../../node_modules/lodash/_isPrototype.js
var objectProto7 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto7;
  return value === proto;
}
var isPrototype_default = isPrototype;

// ../../node_modules/lodash/_baseTimes.js
function baseTimes(n, iteratee2) {
  var index3 = -1, result2 = Array(n);
  while (++index3 < n) {
    result2[index3] = iteratee2(index3);
  }
  return result2;
}
var baseTimes_default = baseTimes;

// ../../node_modules/lodash/_baseIsArguments.js
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// ../../node_modules/lodash/isArguments.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
var propertyIsEnumerable = objectProto8.propertyIsEnumerable;
var isArguments = baseIsArguments_default(/* @__PURE__ */ (function() {
  return arguments;
})()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty6.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// ../../node_modules/lodash/stubFalse.js
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// ../../node_modules/lodash/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// ../../node_modules/lodash/_baseIsTypedArray.js
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// ../../node_modules/lodash/_baseUnary.js
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// ../../node_modules/lodash/_nodeUtil.js
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = (function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e2) {
  }
})();
var nodeUtil_default = nodeUtil;

// ../../node_modules/lodash/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// ../../node_modules/lodash/_arrayLikeKeys.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes_default(value.length, String) : [], length = result2.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty7.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
    isIndex_default(key, length)))) {
      result2.push(key);
    }
  }
  return result2;
}
var arrayLikeKeys_default = arrayLikeKeys;

// ../../node_modules/lodash/_overArg.js
function overArg(func, transform2) {
  return function(arg) {
    return func(transform2(arg));
  };
}
var overArg_default = overArg;

// ../../node_modules/lodash/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// ../../node_modules/lodash/_baseKeys.js
var objectProto10 = Object.prototype;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result2 = [];
  for (var key in Object(object)) {
    if (hasOwnProperty8.call(object, key) && key != "constructor") {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeys_default = baseKeys;

// ../../node_modules/lodash/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// ../../node_modules/lodash/assign.js
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
var assign = createAssigner_default(function(object, source) {
  if (isPrototype_default(source) || isArrayLike_default(source)) {
    copyObject_default(source, keys_default(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty9.call(source, key)) {
      assignValue_default(object, key, source[key]);
    }
  }
});
var assign_default = assign;

// ../../node_modules/lodash/_nativeKeysIn.js
function nativeKeysIn(object) {
  var result2 = [];
  if (object != null) {
    for (var key in Object(object)) {
      result2.push(key);
    }
  }
  return result2;
}
var nativeKeysIn_default = nativeKeysIn;

// ../../node_modules/lodash/_baseKeysIn.js
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result2 = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty10.call(object, key)))) {
      result2.push(key);
    }
  }
  return result2;
}
var baseKeysIn_default = baseKeysIn;

// ../../node_modules/lodash/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// ../../node_modules/lodash/assignIn.js
var assignIn = createAssigner_default(function(object, source) {
  copyObject_default(source, keysIn_default(source), object);
});
var assignIn_default = assignIn;

// ../../node_modules/lodash/assignInWith.js
var assignInWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object, customizer);
});
var assignInWith_default = assignInWith;

// ../../node_modules/lodash/assignWith.js
var assignWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keys_default(source), object, customizer);
});
var assignWith_default = assignWith;

// ../../node_modules/lodash/_isKey.js
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var reIsPlainProp = /^\w*$/;
function isKey(value, object) {
  if (isArray_default(value)) {
    return false;
  }
  var type = typeof value;
  if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_default(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}
var isKey_default = isKey;

// ../../node_modules/lodash/_nativeCreate.js
var nativeCreate = getNative_default(Object, "create");
var nativeCreate_default = nativeCreate;

// ../../node_modules/lodash/_hashClear.js
function hashClear() {
  this.__data__ = nativeCreate_default ? nativeCreate_default(null) : {};
  this.size = 0;
}
var hashClear_default = hashClear;

// ../../node_modules/lodash/_hashDelete.js
function hashDelete(key) {
  var result2 = this.has(key) && delete this.__data__[key];
  this.size -= result2 ? 1 : 0;
  return result2;
}
var hashDelete_default = hashDelete;

// ../../node_modules/lodash/_hashGet.js
var HASH_UNDEFINED = "__lodash_hash_undefined__";
var objectProto13 = Object.prototype;
var hasOwnProperty11 = objectProto13.hasOwnProperty;
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate_default) {
    var result2 = data[key];
    return result2 === HASH_UNDEFINED ? void 0 : result2;
  }
  return hasOwnProperty11.call(data, key) ? data[key] : void 0;
}
var hashGet_default = hashGet;

// ../../node_modules/lodash/_hashHas.js
var objectProto14 = Object.prototype;
var hasOwnProperty12 = objectProto14.hasOwnProperty;
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate_default ? data[key] !== void 0 : hasOwnProperty12.call(data, key);
}
var hashHas_default = hashHas;

// ../../node_modules/lodash/_hashSet.js
var HASH_UNDEFINED2 = "__lodash_hash_undefined__";
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = nativeCreate_default && value === void 0 ? HASH_UNDEFINED2 : value;
  return this;
}
var hashSet_default = hashSet;

// ../../node_modules/lodash/_Hash.js
function Hash(entries) {
  var index3 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index3 < length) {
    var entry = entries[index3];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear_default;
Hash.prototype["delete"] = hashDelete_default;
Hash.prototype.get = hashGet_default;
Hash.prototype.has = hashHas_default;
Hash.prototype.set = hashSet_default;
var Hash_default = Hash;

// ../../node_modules/lodash/_listCacheClear.js
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
var listCacheClear_default = listCacheClear;

// ../../node_modules/lodash/_assocIndexOf.js
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq_default(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}
var assocIndexOf_default = assocIndexOf;

// ../../node_modules/lodash/_listCacheDelete.js
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key) {
  var data = this.__data__, index3 = assocIndexOf_default(data, key);
  if (index3 < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index3 == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index3, 1);
  }
  --this.size;
  return true;
}
var listCacheDelete_default = listCacheDelete;

// ../../node_modules/lodash/_listCacheGet.js
function listCacheGet(key) {
  var data = this.__data__, index3 = assocIndexOf_default(data, key);
  return index3 < 0 ? void 0 : data[index3][1];
}
var listCacheGet_default = listCacheGet;

// ../../node_modules/lodash/_listCacheHas.js
function listCacheHas(key) {
  return assocIndexOf_default(this.__data__, key) > -1;
}
var listCacheHas_default = listCacheHas;

// ../../node_modules/lodash/_listCacheSet.js
function listCacheSet(key, value) {
  var data = this.__data__, index3 = assocIndexOf_default(data, key);
  if (index3 < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index3][1] = value;
  }
  return this;
}
var listCacheSet_default = listCacheSet;

// ../../node_modules/lodash/_ListCache.js
function ListCache(entries) {
  var index3 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index3 < length) {
    var entry = entries[index3];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear_default;
ListCache.prototype["delete"] = listCacheDelete_default;
ListCache.prototype.get = listCacheGet_default;
ListCache.prototype.has = listCacheHas_default;
ListCache.prototype.set = listCacheSet_default;
var ListCache_default = ListCache;

// ../../node_modules/lodash/_Map.js
var Map2 = getNative_default(root_default, "Map");
var Map_default = Map2;

// ../../node_modules/lodash/_mapCacheClear.js
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash_default(),
    "map": new (Map_default || ListCache_default)(),
    "string": new Hash_default()
  };
}
var mapCacheClear_default = mapCacheClear;

// ../../node_modules/lodash/_isKeyable.js
function isKeyable(value) {
  var type = typeof value;
  return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
}
var isKeyable_default = isKeyable;

// ../../node_modules/lodash/_getMapData.js
function getMapData(map2, key) {
  var data = map2.__data__;
  return isKeyable_default(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
}
var getMapData_default = getMapData;

// ../../node_modules/lodash/_mapCacheDelete.js
function mapCacheDelete(key) {
  var result2 = getMapData_default(this, key)["delete"](key);
  this.size -= result2 ? 1 : 0;
  return result2;
}
var mapCacheDelete_default = mapCacheDelete;

// ../../node_modules/lodash/_mapCacheGet.js
function mapCacheGet(key) {
  return getMapData_default(this, key).get(key);
}
var mapCacheGet_default = mapCacheGet;

// ../../node_modules/lodash/_mapCacheHas.js
function mapCacheHas(key) {
  return getMapData_default(this, key).has(key);
}
var mapCacheHas_default = mapCacheHas;

// ../../node_modules/lodash/_mapCacheSet.js
function mapCacheSet(key, value) {
  var data = getMapData_default(this, key), size2 = data.size;
  data.set(key, value);
  this.size += data.size == size2 ? 0 : 1;
  return this;
}
var mapCacheSet_default = mapCacheSet;

// ../../node_modules/lodash/_MapCache.js
function MapCache(entries) {
  var index3 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index3 < length) {
    var entry = entries[index3];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear_default;
MapCache.prototype["delete"] = mapCacheDelete_default;
MapCache.prototype.get = mapCacheGet_default;
MapCache.prototype.has = mapCacheHas_default;
MapCache.prototype.set = mapCacheSet_default;
var MapCache_default = MapCache;

// ../../node_modules/lodash/memoize.js
var FUNC_ERROR_TEXT3 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT3);
  }
  var memoized = function() {
    var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key)) {
      return cache.get(key);
    }
    var result2 = func.apply(this, args);
    memoized.cache = cache.set(key, result2) || cache;
    return result2;
  };
  memoized.cache = new (memoize.Cache || MapCache_default)();
  return memoized;
}
memoize.Cache = MapCache_default;
var memoize_default = memoize;

// ../../node_modules/lodash/_memoizeCapped.js
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result2 = memoize_default(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });
  var cache = result2.cache;
  return result2;
}
var memoizeCapped_default = memoizeCapped;

// ../../node_modules/lodash/_stringToPath.js
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped_default(function(string) {
  var result2 = [];
  if (string.charCodeAt(0) === 46) {
    result2.push("");
  }
  string.replace(rePropName, function(match2, number, quote, subString) {
    result2.push(quote ? subString.replace(reEscapeChar, "$1") : number || match2);
  });
  return result2;
});
var stringToPath_default = stringToPath;

// ../../node_modules/lodash/toString.js
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// ../../node_modules/lodash/_castPath.js
function castPath(value, object) {
  if (isArray_default(value)) {
    return value;
  }
  return isKey_default(value, object) ? [value] : stringToPath_default(toString_default(value));
}
var castPath_default = castPath;

// ../../node_modules/lodash/_toKey.js
var INFINITY3 = 1 / 0;
function toKey(value) {
  if (typeof value == "string" || isSymbol_default(value)) {
    return value;
  }
  var result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY3 ? "-0" : result2;
}
var toKey_default = toKey;

// ../../node_modules/lodash/_baseGet.js
function baseGet(object, path) {
  path = castPath_default(path, object);
  var index3 = 0, length = path.length;
  while (object != null && index3 < length) {
    object = object[toKey_default(path[index3++])];
  }
  return index3 && index3 == length ? object : void 0;
}
var baseGet_default = baseGet;

// ../../node_modules/lodash/get.js
function get(object, path, defaultValue) {
  var result2 = object == null ? void 0 : baseGet_default(object, path);
  return result2 === void 0 ? defaultValue : result2;
}
var get_default = get;

// ../../node_modules/lodash/_baseAt.js
function baseAt(object, paths) {
  var index3 = -1, length = paths.length, result2 = Array(length), skip = object == null;
  while (++index3 < length) {
    result2[index3] = skip ? void 0 : get_default(object, paths[index3]);
  }
  return result2;
}
var baseAt_default = baseAt;

// ../../node_modules/lodash/_arrayPush.js
function arrayPush(array, values2) {
  var index3 = -1, length = values2.length, offset = array.length;
  while (++index3 < length) {
    array[offset + index3] = values2[index3];
  }
  return array;
}
var arrayPush_default = arrayPush;

// ../../node_modules/lodash/_isFlattenable.js
var spreadableSymbol = Symbol_default ? Symbol_default.isConcatSpreadable : void 0;
function isFlattenable(value) {
  return isArray_default(value) || isArguments_default(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
var isFlattenable_default = isFlattenable;

// ../../node_modules/lodash/_baseFlatten.js
function baseFlatten(array, depth, predicate, isStrict, result2) {
  var index3 = -1, length = array.length;
  predicate || (predicate = isFlattenable_default);
  result2 || (result2 = []);
  while (++index3 < length) {
    var value = array[index3];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        baseFlatten(value, depth - 1, predicate, isStrict, result2);
      } else {
        arrayPush_default(result2, value);
      }
    } else if (!isStrict) {
      result2[result2.length] = value;
    }
  }
  return result2;
}
var baseFlatten_default = baseFlatten;

// ../../node_modules/lodash/flatten.js
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, 1) : [];
}
var flatten_default = flatten;

// ../../node_modules/lodash/_flatRest.js
function flatRest(func) {
  return setToString_default(overRest_default(func, void 0, flatten_default), func + "");
}
var flatRest_default = flatRest;

// ../../node_modules/lodash/at.js
var at = flatRest_default(baseAt_default);
var at_default = at;

// ../../node_modules/lodash/_getPrototype.js
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// ../../node_modules/lodash/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto15 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty13 = objectProto15.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag2) {
    return false;
  }
  var proto = getPrototype_default(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty13.call(proto, "constructor") && proto.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// ../../node_modules/lodash/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value) {
  if (!isObjectLike_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == errorTag2 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject_default(value);
}
var isError_default = isError;

// ../../node_modules/lodash/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e2) {
    return isError_default(e2) ? e2 : new Error(e2);
  }
});
var attempt_default = attempt;

// ../../node_modules/lodash/before.js
var FUNC_ERROR_TEXT4 = "Expected a function";
function before(n, func) {
  var result2;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT4);
  }
  n = toInteger_default(n);
  return function() {
    if (--n > 0) {
      result2 = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = void 0;
    }
    return result2;
  };
}
var before_default = before;

// ../../node_modules/lodash/bind.js
var WRAP_BIND_FLAG8 = 1;
var WRAP_PARTIAL_FLAG4 = 32;
var bind = baseRest_default(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG8;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bind));
    bitmask |= WRAP_PARTIAL_FLAG4;
  }
  return createWrap_default(func, bitmask, thisArg, partials, holders);
});
bind.placeholder = {};
var bind_default = bind;

// ../../node_modules/lodash/bindAll.js
var bindAll = flatRest_default(function(object, methodNames) {
  arrayEach_default(methodNames, function(key) {
    key = toKey_default(key);
    baseAssignValue_default(object, key, bind_default(object[key], object));
  });
  return object;
});
var bindAll_default = bindAll;

// ../../node_modules/lodash/bindKey.js
var WRAP_BIND_FLAG9 = 1;
var WRAP_BIND_KEY_FLAG6 = 2;
var WRAP_PARTIAL_FLAG5 = 32;
var bindKey = baseRest_default(function(object, key, partials) {
  var bitmask = WRAP_BIND_FLAG9 | WRAP_BIND_KEY_FLAG6;
  if (partials.length) {
    var holders = replaceHolders_default(partials, getHolder_default(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG5;
  }
  return createWrap_default(key, bitmask, object, partials, holders);
});
bindKey.placeholder = {};
var bindKey_default = bindKey;

// ../../node_modules/lodash/_baseSlice.js
function baseSlice(array, start, end) {
  var index3 = -1, length = array.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result2 = Array(length);
  while (++index3 < length) {
    result2[index3] = array[index3 + start];
  }
  return result2;
}
var baseSlice_default = baseSlice;

// ../../node_modules/lodash/_castSlice.js
function castSlice(array, start, end) {
  var length = array.length;
  end = end === void 0 ? length : end;
  return !start && end >= length ? array : baseSlice_default(array, start, end);
}
var castSlice_default = castSlice;

// ../../node_modules/lodash/_hasUnicode.js
var rsAstralRange = "\\ud800-\\udfff";
var rsComboMarksRange = "\\u0300-\\u036f";
var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange = "\\u20d0-\\u20ff";
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = "\\ufe0e\\ufe0f";
var rsZWJ = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
function hasUnicode(string) {
  return reHasUnicode.test(string);
}
var hasUnicode_default = hasUnicode;

// ../../node_modules/lodash/_asciiToArray.js
function asciiToArray(string) {
  return string.split("");
}
var asciiToArray_default = asciiToArray;

// ../../node_modules/lodash/_unicodeToArray.js
var rsAstralRange2 = "\\ud800-\\udfff";
var rsComboMarksRange2 = "\\u0300-\\u036f";
var reComboHalfMarksRange2 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange2 = "\\u20d0-\\u20ff";
var rsComboRange2 = rsComboMarksRange2 + reComboHalfMarksRange2 + rsComboSymbolsRange2;
var rsVarRange2 = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange2 + "]";
var rsCombo = "[" + rsComboRange2 + "]";
var rsFitz = "\\ud83c[\\udffb-\\udfff]";
var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
var rsNonAstral = "[^" + rsAstralRange2 + "]";
var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ2 = "\\u200d";
var reOptMod = rsModifier + "?";
var rsOptVar = "[" + rsVarRange2 + "]?";
var rsOptJoin = "(?:" + rsZWJ2 + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}
var unicodeToArray_default = unicodeToArray;

// ../../node_modules/lodash/_stringToArray.js
function stringToArray(string) {
  return hasUnicode_default(string) ? unicodeToArray_default(string) : asciiToArray_default(string);
}
var stringToArray_default = stringToArray;

// ../../node_modules/lodash/_createCaseFirst.js
function createCaseFirst(methodName) {
  return function(string) {
    string = toString_default(string);
    var strSymbols = hasUnicode_default(string) ? stringToArray_default(string) : void 0;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice_default(strSymbols, 1).join("") : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
var createCaseFirst_default = createCaseFirst;

// ../../node_modules/lodash/upperFirst.js
var upperFirst = createCaseFirst_default("toUpperCase");
var upperFirst_default = upperFirst;

// ../../node_modules/lodash/capitalize.js
function capitalize(string) {
  return upperFirst_default(toString_default(string).toLowerCase());
}
var capitalize_default = capitalize;

// ../../node_modules/lodash/_arrayReduce.js
function arrayReduce(array, iteratee2, accumulator, initAccum) {
  var index3 = -1, length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[++index3];
  }
  while (++index3 < length) {
    accumulator = iteratee2(accumulator, array[index3], index3, array);
  }
  return accumulator;
}
var arrayReduce_default = arrayReduce;

// ../../node_modules/lodash/_basePropertyOf.js
function basePropertyOf(object) {
  return function(key) {
    return object == null ? void 0 : object[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// ../../node_modules/lodash/_deburrLetter.js
var deburredLetters = {
  // Latin-1 Supplement block.
  "À": "A",
  "Á": "A",
  "Â": "A",
  "Ã": "A",
  "Ä": "A",
  "Å": "A",
  "à": "a",
  "á": "a",
  "â": "a",
  "ã": "a",
  "ä": "a",
  "å": "a",
  "Ç": "C",
  "ç": "c",
  "Ð": "D",
  "ð": "d",
  "È": "E",
  "É": "E",
  "Ê": "E",
  "Ë": "E",
  "è": "e",
  "é": "e",
  "ê": "e",
  "ë": "e",
  "Ì": "I",
  "Í": "I",
  "Î": "I",
  "Ï": "I",
  "ì": "i",
  "í": "i",
  "î": "i",
  "ï": "i",
  "Ñ": "N",
  "ñ": "n",
  "Ò": "O",
  "Ó": "O",
  "Ô": "O",
  "Õ": "O",
  "Ö": "O",
  "Ø": "O",
  "ò": "o",
  "ó": "o",
  "ô": "o",
  "õ": "o",
  "ö": "o",
  "ø": "o",
  "Ù": "U",
  "Ú": "U",
  "Û": "U",
  "Ü": "U",
  "ù": "u",
  "ú": "u",
  "û": "u",
  "ü": "u",
  "Ý": "Y",
  "ý": "y",
  "ÿ": "y",
  "Æ": "Ae",
  "æ": "ae",
  "Þ": "Th",
  "þ": "th",
  "ß": "ss",
  // Latin Extended-A block.
  "Ā": "A",
  "Ă": "A",
  "Ą": "A",
  "ā": "a",
  "ă": "a",
  "ą": "a",
  "Ć": "C",
  "Ĉ": "C",
  "Ċ": "C",
  "Č": "C",
  "ć": "c",
  "ĉ": "c",
  "ċ": "c",
  "č": "c",
  "Ď": "D",
  "Đ": "D",
  "ď": "d",
  "đ": "d",
  "Ē": "E",
  "Ĕ": "E",
  "Ė": "E",
  "Ę": "E",
  "Ě": "E",
  "ē": "e",
  "ĕ": "e",
  "ė": "e",
  "ę": "e",
  "ě": "e",
  "Ĝ": "G",
  "Ğ": "G",
  "Ġ": "G",
  "Ģ": "G",
  "ĝ": "g",
  "ğ": "g",
  "ġ": "g",
  "ģ": "g",
  "Ĥ": "H",
  "Ħ": "H",
  "ĥ": "h",
  "ħ": "h",
  "Ĩ": "I",
  "Ī": "I",
  "Ĭ": "I",
  "Į": "I",
  "İ": "I",
  "ĩ": "i",
  "ī": "i",
  "ĭ": "i",
  "į": "i",
  "ı": "i",
  "Ĵ": "J",
  "ĵ": "j",
  "Ķ": "K",
  "ķ": "k",
  "ĸ": "k",
  "Ĺ": "L",
  "Ļ": "L",
  "Ľ": "L",
  "Ŀ": "L",
  "Ł": "L",
  "ĺ": "l",
  "ļ": "l",
  "ľ": "l",
  "ŀ": "l",
  "ł": "l",
  "Ń": "N",
  "Ņ": "N",
  "Ň": "N",
  "Ŋ": "N",
  "ń": "n",
  "ņ": "n",
  "ň": "n",
  "ŋ": "n",
  "Ō": "O",
  "Ŏ": "O",
  "Ő": "O",
  "ō": "o",
  "ŏ": "o",
  "ő": "o",
  "Ŕ": "R",
  "Ŗ": "R",
  "Ř": "R",
  "ŕ": "r",
  "ŗ": "r",
  "ř": "r",
  "Ś": "S",
  "Ŝ": "S",
  "Ş": "S",
  "Š": "S",
  "ś": "s",
  "ŝ": "s",
  "ş": "s",
  "š": "s",
  "Ţ": "T",
  "Ť": "T",
  "Ŧ": "T",
  "ţ": "t",
  "ť": "t",
  "ŧ": "t",
  "Ũ": "U",
  "Ū": "U",
  "Ŭ": "U",
  "Ů": "U",
  "Ű": "U",
  "Ų": "U",
  "ũ": "u",
  "ū": "u",
  "ŭ": "u",
  "ů": "u",
  "ű": "u",
  "ų": "u",
  "Ŵ": "W",
  "ŵ": "w",
  "Ŷ": "Y",
  "ŷ": "y",
  "Ÿ": "Y",
  "Ź": "Z",
  "Ż": "Z",
  "Ž": "Z",
  "ź": "z",
  "ż": "z",
  "ž": "z",
  "Ĳ": "IJ",
  "ĳ": "ij",
  "Œ": "Oe",
  "œ": "oe",
  "ŉ": "'n",
  "ſ": "s"
};
var deburrLetter = basePropertyOf_default(deburredLetters);
var deburrLetter_default = deburrLetter;

// ../../node_modules/lodash/deburr.js
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
var rsComboMarksRange3 = "\\u0300-\\u036f";
var reComboHalfMarksRange3 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange3 = "\\u20d0-\\u20ff";
var rsComboRange3 = rsComboMarksRange3 + reComboHalfMarksRange3 + rsComboSymbolsRange3;
var rsCombo2 = "[" + rsComboRange3 + "]";
var reComboMark = RegExp(rsCombo2, "g");
function deburr(string) {
  string = toString_default(string);
  return string && string.replace(reLatin, deburrLetter_default).replace(reComboMark, "");
}
var deburr_default = deburr;

// ../../node_modules/lodash/_asciiWords.js
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}
var asciiWords_default = asciiWords;

// ../../node_modules/lodash/_hasUnicodeWord.js
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}
var hasUnicodeWord_default = hasUnicodeWord;

// ../../node_modules/lodash/_unicodeWords.js
var rsAstralRange3 = "\\ud800-\\udfff";
var rsComboMarksRange4 = "\\u0300-\\u036f";
var reComboHalfMarksRange4 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange4 = "\\u20d0-\\u20ff";
var rsComboRange4 = rsComboMarksRange4 + reComboHalfMarksRange4 + rsComboSymbolsRange4;
var rsDingbatRange = "\\u2700-\\u27bf";
var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
var rsPunctuationRange = "\\u2000-\\u206f";
var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
var rsVarRange3 = "\\ufe0e\\ufe0f";
var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
var rsApos = "['’]";
var rsBreak = "[" + rsBreakRange + "]";
var rsCombo3 = "[" + rsComboRange4 + "]";
var rsDigits = "\\d+";
var rsDingbat = "[" + rsDingbatRange + "]";
var rsLower = "[" + rsLowerRange + "]";
var rsMisc = "[^" + rsAstralRange3 + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
var rsFitz2 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier2 = "(?:" + rsCombo3 + "|" + rsFitz2 + ")";
var rsNonAstral2 = "[^" + rsAstralRange3 + "]";
var rsRegional2 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair2 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsUpper = "[" + rsUpperRange + "]";
var rsZWJ3 = "\\u200d";
var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
var reOptMod2 = rsModifier2 + "?";
var rsOptVar2 = "[" + rsVarRange3 + "]?";
var rsOptJoin2 = "(?:" + rsZWJ3 + "(?:" + [rsNonAstral2, rsRegional2, rsSurrPair2].join("|") + ")" + rsOptVar2 + reOptMod2 + ")*";
var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
var rsSeq2 = rsOptVar2 + reOptMod2 + rsOptJoin2;
var rsEmoji = "(?:" + [rsDingbat, rsRegional2, rsSurrPair2].join("|") + ")" + rsSeq2;
var reUnicodeWord = RegExp([
  rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
  rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
  rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
  rsUpper + "+" + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join("|"), "g");
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}
var unicodeWords_default = unicodeWords;

// ../../node_modules/lodash/words.js
function words(string, pattern, guard) {
  string = toString_default(string);
  pattern = guard ? void 0 : pattern;
  if (pattern === void 0) {
    return hasUnicodeWord_default(string) ? unicodeWords_default(string) : asciiWords_default(string);
  }
  return string.match(pattern) || [];
}
var words_default = words;

// ../../node_modules/lodash/_createCompounder.js
var rsApos2 = "['’]";
var reApos = RegExp(rsApos2, "g");
function createCompounder(callback) {
  return function(string) {
    return arrayReduce_default(words_default(deburr_default(string).replace(reApos, "")), callback, "");
  };
}
var createCompounder_default = createCompounder;

// ../../node_modules/lodash/camelCase.js
var camelCase = createCompounder_default(function(result2, word, index3) {
  word = word.toLowerCase();
  return result2 + (index3 ? capitalize_default(word) : word);
});
var camelCase_default = camelCase;

// ../../node_modules/lodash/castArray.js
function castArray() {
  if (!arguments.length) {
    return [];
  }
  var value = arguments[0];
  return isArray_default(value) ? value : [value];
}
var castArray_default = castArray;

// ../../node_modules/lodash/_createRound.js
var nativeIsFinite = root_default.isFinite;
var nativeMin3 = Math.min;
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = toNumber_default(number);
    precision = precision == null ? 0 : nativeMin3(toInteger_default(precision), 292);
    if (precision && nativeIsFinite(number)) {
      var pair = (toString_default(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
      pair = (toString_default(value) + "e").split("e");
      return +(pair[0] + "e" + (+pair[1] - precision));
    }
    return func(number);
  };
}
var createRound_default = createRound;

// ../../node_modules/lodash/ceil.js
var ceil = createRound_default("ceil");
var ceil_default = ceil;

// ../../node_modules/lodash/chain.js
function chain(value) {
  var result2 = wrapperLodash_default(value);
  result2.__chain__ = true;
  return result2;
}
var chain_default = chain;

// ../../node_modules/lodash/chunk.js
var nativeCeil = Math.ceil;
var nativeMax5 = Math.max;
function chunk(array, size2, guard) {
  if (guard ? isIterateeCall_default(array, size2, guard) : size2 === void 0) {
    size2 = 1;
  } else {
    size2 = nativeMax5(toInteger_default(size2), 0);
  }
  var length = array == null ? 0 : array.length;
  if (!length || size2 < 1) {
    return [];
  }
  var index3 = 0, resIndex = 0, result2 = Array(nativeCeil(length / size2));
  while (index3 < length) {
    result2[resIndex++] = baseSlice_default(array, index3, index3 += size2);
  }
  return result2;
}
var chunk_default = chunk;

// ../../node_modules/lodash/_baseClamp.js
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== void 0) {
      number = number <= upper ? number : upper;
    }
    if (lower !== void 0) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}
var baseClamp_default = baseClamp;

// ../../node_modules/lodash/clamp.js
function clamp(number, lower, upper) {
  if (upper === void 0) {
    upper = lower;
    lower = void 0;
  }
  if (upper !== void 0) {
    upper = toNumber_default(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== void 0) {
    lower = toNumber_default(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp_default(toNumber_default(number), lower, upper);
}
var clamp_default = clamp;

// ../../node_modules/lodash/_stackClear.js
function stackClear() {
  this.__data__ = new ListCache_default();
  this.size = 0;
}
var stackClear_default = stackClear;

// ../../node_modules/lodash/_stackDelete.js
function stackDelete(key) {
  var data = this.__data__, result2 = data["delete"](key);
  this.size = data.size;
  return result2;
}
var stackDelete_default = stackDelete;

// ../../node_modules/lodash/_stackGet.js
function stackGet(key) {
  return this.__data__.get(key);
}
var stackGet_default = stackGet;

// ../../node_modules/lodash/_stackHas.js
function stackHas(key) {
  return this.__data__.has(key);
}
var stackHas_default = stackHas;

// ../../node_modules/lodash/_stackSet.js
var LARGE_ARRAY_SIZE = 200;
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache_default) {
    var pairs = data.__data__;
    if (!Map_default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache_default(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}
var stackSet_default = stackSet;

// ../../node_modules/lodash/_Stack.js
function Stack(entries) {
  var data = this.__data__ = new ListCache_default(entries);
  this.size = data.size;
}
Stack.prototype.clear = stackClear_default;
Stack.prototype["delete"] = stackDelete_default;
Stack.prototype.get = stackGet_default;
Stack.prototype.has = stackHas_default;
Stack.prototype.set = stackSet_default;
var Stack_default = Stack;

// ../../node_modules/lodash/_baseAssign.js
function baseAssign(object, source) {
  return object && copyObject_default(source, keys_default(source), object);
}
var baseAssign_default = baseAssign;

// ../../node_modules/lodash/_baseAssignIn.js
function baseAssignIn(object, source) {
  return object && copyObject_default(source, keysIn_default(source), object);
}
var baseAssignIn_default = baseAssignIn;

// ../../node_modules/lodash/_cloneBuffer.js
var freeExports3 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule3 = freeExports3 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports3 = freeModule3 && freeModule3.exports === freeExports3;
var Buffer3 = moduleExports3 ? root_default.Buffer : void 0;
var allocUnsafe = Buffer3 ? Buffer3.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result2);
  return result2;
}
var cloneBuffer_default = cloneBuffer;

// ../../node_modules/lodash/_arrayFilter.js
function arrayFilter(array, predicate) {
  var index3 = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index3 < length) {
    var value = array[index3];
    if (predicate(value, index3, array)) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var arrayFilter_default = arrayFilter;

// ../../node_modules/lodash/stubArray.js
function stubArray() {
  return [];
}
var stubArray_default = stubArray;

// ../../node_modules/lodash/_getSymbols.js
var objectProto16 = Object.prototype;
var propertyIsEnumerable2 = objectProto16.propertyIsEnumerable;
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols ? stubArray_default : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter_default(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable2.call(object, symbol);
  });
};
var getSymbols_default = getSymbols;

// ../../node_modules/lodash/_copySymbols.js
function copySymbols(source, object) {
  return copyObject_default(source, getSymbols_default(source), object);
}
var copySymbols_default = copySymbols;

// ../../node_modules/lodash/_getSymbolsIn.js
var nativeGetSymbols2 = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols2 ? stubArray_default : function(object) {
  var result2 = [];
  while (object) {
    arrayPush_default(result2, getSymbols_default(object));
    object = getPrototype_default(object);
  }
  return result2;
};
var getSymbolsIn_default = getSymbolsIn;

// ../../node_modules/lodash/_copySymbolsIn.js
function copySymbolsIn(source, object) {
  return copyObject_default(source, getSymbolsIn_default(source), object);
}
var copySymbolsIn_default = copySymbolsIn;

// ../../node_modules/lodash/_baseGetAllKeys.js
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result2 = keysFunc(object);
  return isArray_default(object) ? result2 : arrayPush_default(result2, symbolsFunc(object));
}
var baseGetAllKeys_default = baseGetAllKeys;

// ../../node_modules/lodash/_getAllKeys.js
function getAllKeys(object) {
  return baseGetAllKeys_default(object, keys_default, getSymbols_default);
}
var getAllKeys_default = getAllKeys;

// ../../node_modules/lodash/_getAllKeysIn.js
function getAllKeysIn(object) {
  return baseGetAllKeys_default(object, keysIn_default, getSymbolsIn_default);
}
var getAllKeysIn_default = getAllKeysIn;

// ../../node_modules/lodash/_DataView.js
var DataView = getNative_default(root_default, "DataView");
var DataView_default = DataView;

// ../../node_modules/lodash/_Promise.js
var Promise2 = getNative_default(root_default, "Promise");
var Promise_default = Promise2;

// ../../node_modules/lodash/_Set.js
var Set2 = getNative_default(root_default, "Set");
var Set_default = Set2;

// ../../node_modules/lodash/_getTag.js
var mapTag2 = "[object Map]";
var objectTag3 = "[object Object]";
var promiseTag = "[object Promise]";
var setTag2 = "[object Set]";
var weakMapTag2 = "[object WeakMap]";
var dataViewTag2 = "[object DataView]";
var dataViewCtorString = toSource_default(DataView_default);
var mapCtorString = toSource_default(Map_default);
var promiseCtorString = toSource_default(Promise_default);
var setCtorString = toSource_default(Set_default);
var weakMapCtorString = toSource_default(WeakMap_default);
var getTag = baseGetTag_default;
if (DataView_default && getTag(new DataView_default(new ArrayBuffer(1))) != dataViewTag2 || Map_default && getTag(new Map_default()) != mapTag2 || Promise_default && getTag(Promise_default.resolve()) != promiseTag || Set_default && getTag(new Set_default()) != setTag2 || WeakMap_default && getTag(new WeakMap_default()) != weakMapTag2) {
  getTag = function(value) {
    var result2 = baseGetTag_default(value), Ctor = result2 == objectTag3 ? value.constructor : void 0, ctorString = Ctor ? toSource_default(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag2;
        case mapCtorString:
          return mapTag2;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag2;
        case weakMapCtorString:
          return weakMapTag2;
      }
    }
    return result2;
  };
}
var getTag_default = getTag;

// ../../node_modules/lodash/_initCloneArray.js
var objectProto17 = Object.prototype;
var hasOwnProperty14 = objectProto17.hasOwnProperty;
function initCloneArray(array) {
  var length = array.length, result2 = new array.constructor(length);
  if (length && typeof array[0] == "string" && hasOwnProperty14.call(array, "index")) {
    result2.index = array.index;
    result2.input = array.input;
  }
  return result2;
}
var initCloneArray_default = initCloneArray;

// ../../node_modules/lodash/_Uint8Array.js
var Uint8Array2 = root_default.Uint8Array;
var Uint8Array_default = Uint8Array2;

// ../../node_modules/lodash/_cloneArrayBuffer.js
function cloneArrayBuffer(arrayBuffer) {
  var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array_default(result2).set(new Uint8Array_default(arrayBuffer));
  return result2;
}
var cloneArrayBuffer_default = cloneArrayBuffer;

// ../../node_modules/lodash/_cloneDataView.js
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var cloneDataView_default = cloneDataView;

// ../../node_modules/lodash/_cloneRegExp.js
var reFlags = /\w*$/;
function cloneRegExp(regexp) {
  var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result2.lastIndex = regexp.lastIndex;
  return result2;
}
var cloneRegExp_default = cloneRegExp;

// ../../node_modules/lodash/_cloneSymbol.js
var symbolProto2 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf = symbolProto2 ? symbolProto2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}
var cloneSymbol_default = cloneSymbol;

// ../../node_modules/lodash/_cloneTypedArray.js
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer_default(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var cloneTypedArray_default = cloneTypedArray;

// ../../node_modules/lodash/_initCloneByTag.js
var boolTag2 = "[object Boolean]";
var dateTag2 = "[object Date]";
var mapTag3 = "[object Map]";
var numberTag2 = "[object Number]";
var regexpTag2 = "[object RegExp]";
var setTag3 = "[object Set]";
var stringTag2 = "[object String]";
var symbolTag2 = "[object Symbol]";
var arrayBufferTag2 = "[object ArrayBuffer]";
var dataViewTag3 = "[object DataView]";
var float32Tag2 = "[object Float32Array]";
var float64Tag2 = "[object Float64Array]";
var int8Tag2 = "[object Int8Array]";
var int16Tag2 = "[object Int16Array]";
var int32Tag2 = "[object Int32Array]";
var uint8Tag2 = "[object Uint8Array]";
var uint8ClampedTag2 = "[object Uint8ClampedArray]";
var uint16Tag2 = "[object Uint16Array]";
var uint32Tag2 = "[object Uint32Array]";
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag2:
      return cloneArrayBuffer_default(object);
    case boolTag2:
    case dateTag2:
      return new Ctor(+object);
    case dataViewTag3:
      return cloneDataView_default(object, isDeep);
    case float32Tag2:
    case float64Tag2:
    case int8Tag2:
    case int16Tag2:
    case int32Tag2:
    case uint8Tag2:
    case uint8ClampedTag2:
    case uint16Tag2:
    case uint32Tag2:
      return cloneTypedArray_default(object, isDeep);
    case mapTag3:
      return new Ctor();
    case numberTag2:
    case stringTag2:
      return new Ctor(object);
    case regexpTag2:
      return cloneRegExp_default(object);
    case setTag3:
      return new Ctor();
    case symbolTag2:
      return cloneSymbol_default(object);
  }
}
var initCloneByTag_default = initCloneByTag;

// ../../node_modules/lodash/_initCloneObject.js
function initCloneObject(object) {
  return typeof object.constructor == "function" && !isPrototype_default(object) ? baseCreate_default(getPrototype_default(object)) : {};
}
var initCloneObject_default = initCloneObject;

// ../../node_modules/lodash/_baseIsMap.js
var mapTag4 = "[object Map]";
function baseIsMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == mapTag4;
}
var baseIsMap_default = baseIsMap;

// ../../node_modules/lodash/isMap.js
var nodeIsMap = nodeUtil_default && nodeUtil_default.isMap;
var isMap = nodeIsMap ? baseUnary_default(nodeIsMap) : baseIsMap_default;
var isMap_default = isMap;

// ../../node_modules/lodash/_baseIsSet.js
var setTag4 = "[object Set]";
function baseIsSet(value) {
  return isObjectLike_default(value) && getTag_default(value) == setTag4;
}
var baseIsSet_default = baseIsSet;

// ../../node_modules/lodash/isSet.js
var nodeIsSet = nodeUtil_default && nodeUtil_default.isSet;
var isSet = nodeIsSet ? baseUnary_default(nodeIsSet) : baseIsSet_default;
var isSet_default = isSet;

// ../../node_modules/lodash/_baseClone.js
var CLONE_DEEP_FLAG = 1;
var CLONE_FLAT_FLAG = 2;
var CLONE_SYMBOLS_FLAG = 4;
var argsTag3 = "[object Arguments]";
var arrayTag2 = "[object Array]";
var boolTag3 = "[object Boolean]";
var dateTag3 = "[object Date]";
var errorTag3 = "[object Error]";
var funcTag3 = "[object Function]";
var genTag2 = "[object GeneratorFunction]";
var mapTag5 = "[object Map]";
var numberTag3 = "[object Number]";
var objectTag4 = "[object Object]";
var regexpTag3 = "[object RegExp]";
var setTag5 = "[object Set]";
var stringTag3 = "[object String]";
var symbolTag3 = "[object Symbol]";
var weakMapTag3 = "[object WeakMap]";
var arrayBufferTag3 = "[object ArrayBuffer]";
var dataViewTag4 = "[object DataView]";
var float32Tag3 = "[object Float32Array]";
var float64Tag3 = "[object Float64Array]";
var int8Tag3 = "[object Int8Array]";
var int16Tag3 = "[object Int16Array]";
var int32Tag3 = "[object Int32Array]";
var uint8Tag3 = "[object Uint8Array]";
var uint8ClampedTag3 = "[object Uint8ClampedArray]";
var uint16Tag3 = "[object Uint16Array]";
var uint32Tag3 = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag3] = cloneableTags[arrayTag2] = cloneableTags[arrayBufferTag3] = cloneableTags[dataViewTag4] = cloneableTags[boolTag3] = cloneableTags[dateTag3] = cloneableTags[float32Tag3] = cloneableTags[float64Tag3] = cloneableTags[int8Tag3] = cloneableTags[int16Tag3] = cloneableTags[int32Tag3] = cloneableTags[mapTag5] = cloneableTags[numberTag3] = cloneableTags[objectTag4] = cloneableTags[regexpTag3] = cloneableTags[setTag5] = cloneableTags[stringTag3] = cloneableTags[symbolTag3] = cloneableTags[uint8Tag3] = cloneableTags[uint8ClampedTag3] = cloneableTags[uint16Tag3] = cloneableTags[uint32Tag3] = true;
cloneableTags[errorTag3] = cloneableTags[funcTag3] = cloneableTags[weakMapTag3] = false;
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
  if (customizer) {
    result2 = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result2 !== void 0) {
    return result2;
  }
  if (!isObject_default(value)) {
    return value;
  }
  var isArr = isArray_default(value);
  if (isArr) {
    result2 = initCloneArray_default(value);
    if (!isDeep) {
      return copyArray_default(value, result2);
    }
  } else {
    var tag = getTag_default(value), isFunc = tag == funcTag3 || tag == genTag2;
    if (isBuffer_default(value)) {
      return cloneBuffer_default(value, isDeep);
    }
    if (tag == objectTag4 || tag == argsTag3 || isFunc && !object) {
      result2 = isFlat || isFunc ? {} : initCloneObject_default(value);
      if (!isDeep) {
        return isFlat ? copySymbolsIn_default(value, baseAssignIn_default(result2, value)) : copySymbols_default(value, baseAssign_default(result2, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result2 = initCloneByTag_default(value, tag, isDeep);
    }
  }
  stack || (stack = new Stack_default());
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result2);
  if (isSet_default(value)) {
    value.forEach(function(subValue) {
      result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap_default(value)) {
    value.forEach(function(subValue, key2) {
      result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn_default : getAllKeys_default : isFlat ? keysIn_default : keys_default;
  var props = isArr ? void 0 : keysFunc(value);
  arrayEach_default(props || value, function(subValue, key2) {
    if (props) {
      key2 = subValue;
      subValue = value[key2];
    }
    assignValue_default(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
  });
  return result2;
}
var baseClone_default = baseClone;

// ../../node_modules/lodash/clone.js
var CLONE_SYMBOLS_FLAG2 = 4;
function clone(value) {
  return baseClone_default(value, CLONE_SYMBOLS_FLAG2);
}
var clone_default = clone;

// ../../node_modules/lodash/cloneDeep.js
var CLONE_DEEP_FLAG2 = 1;
var CLONE_SYMBOLS_FLAG3 = 4;
function cloneDeep(value) {
  return baseClone_default(value, CLONE_DEEP_FLAG2 | CLONE_SYMBOLS_FLAG3);
}
var cloneDeep_default = cloneDeep;

// ../../node_modules/lodash/cloneDeepWith.js
var CLONE_DEEP_FLAG3 = 1;
var CLONE_SYMBOLS_FLAG4 = 4;
function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_DEEP_FLAG3 | CLONE_SYMBOLS_FLAG4, customizer);
}
var cloneDeepWith_default = cloneDeepWith;

// ../../node_modules/lodash/cloneWith.js
var CLONE_SYMBOLS_FLAG5 = 4;
function cloneWith(value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseClone_default(value, CLONE_SYMBOLS_FLAG5, customizer);
}
var cloneWith_default = cloneWith;

// ../../node_modules/lodash/commit.js
function wrapperCommit() {
  return new LodashWrapper_default(this.value(), this.__chain__);
}
var commit_default = wrapperCommit;

// ../../node_modules/lodash/compact.js
function compact(array) {
  var index3 = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = [];
  while (++index3 < length) {
    var value = array[index3];
    if (value) {
      result2[resIndex++] = value;
    }
  }
  return result2;
}
var compact_default = compact;

// ../../node_modules/lodash/concat.js
function concat() {
  var length = arguments.length;
  if (!length) {
    return [];
  }
  var args = Array(length - 1), array = arguments[0], index3 = length;
  while (index3--) {
    args[index3 - 1] = arguments[index3];
  }
  return arrayPush_default(isArray_default(array) ? copyArray_default(array) : [array], baseFlatten_default(args, 1));
}
var concat_default = concat;

// ../../node_modules/lodash/_setCacheAdd.js
var HASH_UNDEFINED3 = "__lodash_hash_undefined__";
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED3);
  return this;
}
var setCacheAdd_default = setCacheAdd;

// ../../node_modules/lodash/_setCacheHas.js
function setCacheHas(value) {
  return this.__data__.has(value);
}
var setCacheHas_default = setCacheHas;

// ../../node_modules/lodash/_SetCache.js
function SetCache(values2) {
  var index3 = -1, length = values2 == null ? 0 : values2.length;
  this.__data__ = new MapCache_default();
  while (++index3 < length) {
    this.add(values2[index3]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd_default;
SetCache.prototype.has = setCacheHas_default;
var SetCache_default = SetCache;

// ../../node_modules/lodash/_arraySome.js
function arraySome(array, predicate) {
  var index3 = -1, length = array == null ? 0 : array.length;
  while (++index3 < length) {
    if (predicate(array[index3], index3, array)) {
      return true;
    }
  }
  return false;
}
var arraySome_default = arraySome;

// ../../node_modules/lodash/_cacheHas.js
function cacheHas(cache, key) {
  return cache.has(key);
}
var cacheHas_default = cacheHas;

// ../../node_modules/lodash/_equalArrays.js
var COMPARE_PARTIAL_FLAG = 1;
var COMPARE_UNORDERED_FLAG = 2;
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index3 = -1, result2 = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache_default() : void 0;
  stack.set(array, other);
  stack.set(other, array);
  while (++index3 < arrLength) {
    var arrValue = array[index3], othValue = other[index3];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index3, other, array, stack) : customizer(arrValue, othValue, index3, array, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result2 = false;
      break;
    }
    if (seen) {
      if (!arraySome_default(other, function(othValue2, othIndex) {
        if (!cacheHas_default(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result2 = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result2 = false;
      break;
    }
  }
  stack["delete"](array);
  stack["delete"](other);
  return result2;
}
var equalArrays_default = equalArrays;

// ../../node_modules/lodash/_mapToArray.js
function mapToArray(map2) {
  var index3 = -1, result2 = Array(map2.size);
  map2.forEach(function(value, key) {
    result2[++index3] = [key, value];
  });
  return result2;
}
var mapToArray_default = mapToArray;

// ../../node_modules/lodash/_setToArray.js
function setToArray(set2) {
  var index3 = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index3] = value;
  });
  return result2;
}
var setToArray_default = setToArray;

// ../../node_modules/lodash/_equalByTag.js
var COMPARE_PARTIAL_FLAG2 = 1;
var COMPARE_UNORDERED_FLAG2 = 2;
var boolTag4 = "[object Boolean]";
var dateTag4 = "[object Date]";
var errorTag4 = "[object Error]";
var mapTag6 = "[object Map]";
var numberTag4 = "[object Number]";
var regexpTag4 = "[object RegExp]";
var setTag6 = "[object Set]";
var stringTag4 = "[object String]";
var symbolTag4 = "[object Symbol]";
var arrayBufferTag4 = "[object ArrayBuffer]";
var dataViewTag5 = "[object DataView]";
var symbolProto3 = Symbol_default ? Symbol_default.prototype : void 0;
var symbolValueOf2 = symbolProto3 ? symbolProto3.valueOf : void 0;
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag5:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;
    case arrayBufferTag4:
      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array_default(object), new Uint8Array_default(other))) {
        return false;
      }
      return true;
    case boolTag4:
    case dateTag4:
    case numberTag4:
      return eq_default(+object, +other);
    case errorTag4:
      return object.name == other.name && object.message == other.message;
    case regexpTag4:
    case stringTag4:
      return object == other + "";
    case mapTag6:
      var convert = mapToArray_default;
    case setTag6:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG2;
      convert || (convert = setToArray_default);
      if (object.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG2;
      stack.set(object, other);
      var result2 = equalArrays_default(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object);
      return result2;
    case symbolTag4:
      if (symbolValueOf2) {
        return symbolValueOf2.call(object) == symbolValueOf2.call(other);
      }
  }
  return false;
}
var equalByTag_default = equalByTag;

// ../../node_modules/lodash/_equalObjects.js
var COMPARE_PARTIAL_FLAG3 = 1;
var objectProto18 = Object.prototype;
var hasOwnProperty15 = objectProto18.hasOwnProperty;
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG3, objProps = getAllKeys_default(object), objLength = objProps.length, othProps = getAllKeys_default(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index3 = objLength;
  while (index3--) {
    var key = objProps[index3];
    if (!(isPartial ? key in other : hasOwnProperty15.call(other, key))) {
      return false;
    }
  }
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result2 = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;
  while (++index3 < objLength) {
    key = objProps[index3];
    var objValue = object[key], othValue = other[key];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result2 = false;
      break;
    }
    skipCtor || (skipCtor = key == "constructor");
  }
  if (result2 && !skipCtor) {
    var objCtor = object.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result2 = false;
    }
  }
  stack["delete"](object);
  stack["delete"](other);
  return result2;
}
var equalObjects_default = equalObjects;

// ../../node_modules/lodash/_baseIsEqualDeep.js
var COMPARE_PARTIAL_FLAG4 = 1;
var argsTag4 = "[object Arguments]";
var arrayTag3 = "[object Array]";
var objectTag5 = "[object Object]";
var objectProto19 = Object.prototype;
var hasOwnProperty16 = objectProto19.hasOwnProperty;
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray_default(object), othIsArr = isArray_default(other), objTag = objIsArr ? arrayTag3 : getTag_default(object), othTag = othIsArr ? arrayTag3 : getTag_default(other);
  objTag = objTag == argsTag4 ? objectTag5 : objTag;
  othTag = othTag == argsTag4 ? objectTag5 : othTag;
  var objIsObj = objTag == objectTag5, othIsObj = othTag == objectTag5, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer_default(object)) {
    if (!isBuffer_default(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack_default());
    return objIsArr || isTypedArray_default(object) ? equalArrays_default(object, other, bitmask, customizer, equalFunc, stack) : equalByTag_default(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG4)) {
    var objIsWrapped = objIsObj && hasOwnProperty16.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty16.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack_default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack_default());
  return equalObjects_default(object, other, bitmask, customizer, equalFunc, stack);
}
var baseIsEqualDeep_default = baseIsEqualDeep;

// ../../node_modules/lodash/_baseIsEqual.js
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || !isObjectLike_default(value) && !isObjectLike_default(other)) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep_default(value, other, bitmask, customizer, baseIsEqual, stack);
}
var baseIsEqual_default = baseIsEqual;

// ../../node_modules/lodash/_baseIsMatch.js
var COMPARE_PARTIAL_FLAG5 = 1;
var COMPARE_UNORDERED_FLAG3 = 2;
function baseIsMatch(object, source, matchData, customizer) {
  var index3 = matchData.length, length = index3, noCustomizer = !customizer;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index3--) {
    var data = matchData[index3];
    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }
  while (++index3 < length) {
    data = matchData[index3];
    var key = data[0], objValue = object[key], srcValue = data[1];
    if (noCustomizer && data[2]) {
      if (objValue === void 0 && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack_default();
      if (customizer) {
        var result2 = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result2 === void 0 ? baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG5 | COMPARE_UNORDERED_FLAG3, customizer, stack) : result2)) {
        return false;
      }
    }
  }
  return true;
}
var baseIsMatch_default = baseIsMatch;

// ../../node_modules/lodash/_isStrictComparable.js
function isStrictComparable(value) {
  return value === value && !isObject_default(value);
}
var isStrictComparable_default = isStrictComparable;

// ../../node_modules/lodash/_getMatchData.js
function getMatchData(object) {
  var result2 = keys_default(object), length = result2.length;
  while (length--) {
    var key = result2[length], value = object[key];
    result2[length] = [key, value, isStrictComparable_default(value)];
  }
  return result2;
}
var getMatchData_default = getMatchData;

// ../../node_modules/lodash/_matchesStrictComparable.js
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
  };
}
var matchesStrictComparable_default = matchesStrictComparable;

// ../../node_modules/lodash/_baseMatches.js
function baseMatches(source) {
  var matchData = getMatchData_default(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable_default(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch_default(object, source, matchData);
  };
}
var baseMatches_default = baseMatches;

// ../../node_modules/lodash/_baseHasIn.js
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}
var baseHasIn_default = baseHasIn;

// ../../node_modules/lodash/_hasPath.js
function hasPath(object, path, hasFunc) {
  path = castPath_default(path, object);
  var index3 = -1, length = path.length, result2 = false;
  while (++index3 < length) {
    var key = toKey_default(path[index3]);
    if (!(result2 = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result2 || ++index3 != length) {
    return result2;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength_default(length) && isIndex_default(key, length) && (isArray_default(object) || isArguments_default(object));
}
var hasPath_default = hasPath;

// ../../node_modules/lodash/hasIn.js
function hasIn(object, path) {
  return object != null && hasPath_default(object, path, baseHasIn_default);
}
var hasIn_default = hasIn;

// ../../node_modules/lodash/_baseMatchesProperty.js
var COMPARE_PARTIAL_FLAG6 = 1;
var COMPARE_UNORDERED_FLAG4 = 2;
function baseMatchesProperty(path, srcValue) {
  if (isKey_default(path) && isStrictComparable_default(srcValue)) {
    return matchesStrictComparable_default(toKey_default(path), srcValue);
  }
  return function(object) {
    var objValue = get_default(object, path);
    return objValue === void 0 && objValue === srcValue ? hasIn_default(object, path) : baseIsEqual_default(srcValue, objValue, COMPARE_PARTIAL_FLAG6 | COMPARE_UNORDERED_FLAG4);
  };
}
var baseMatchesProperty_default = baseMatchesProperty;

// ../../node_modules/lodash/_baseProperty.js
function baseProperty(key) {
  return function(object) {
    return object == null ? void 0 : object[key];
  };
}
var baseProperty_default = baseProperty;

// ../../node_modules/lodash/_basePropertyDeep.js
function basePropertyDeep(path) {
  return function(object) {
    return baseGet_default(object, path);
  };
}
var basePropertyDeep_default = basePropertyDeep;

// ../../node_modules/lodash/property.js
function property(path) {
  return isKey_default(path) ? baseProperty_default(toKey_default(path)) : basePropertyDeep_default(path);
}
var property_default = property;

// ../../node_modules/lodash/_baseIteratee.js
function baseIteratee(value) {
  if (typeof value == "function") {
    return value;
  }
  if (value == null) {
    return identity_default;
  }
  if (typeof value == "object") {
    return isArray_default(value) ? baseMatchesProperty_default(value[0], value[1]) : baseMatches_default(value);
  }
  return property_default(value);
}
var baseIteratee_default = baseIteratee;

// ../../node_modules/lodash/cond.js
var FUNC_ERROR_TEXT5 = "Expected a function";
function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length, toIteratee = baseIteratee_default;
  pairs = !length ? [] : arrayMap_default(pairs, function(pair) {
    if (typeof pair[1] != "function") {
      throw new TypeError(FUNC_ERROR_TEXT5);
    }
    return [toIteratee(pair[0]), pair[1]];
  });
  return baseRest_default(function(args) {
    var index3 = -1;
    while (++index3 < length) {
      var pair = pairs[index3];
      if (apply_default(pair[0], this, args)) {
        return apply_default(pair[1], this, args);
      }
    }
  });
}
var cond_default = cond;

// ../../node_modules/lodash/_baseConformsTo.js
function baseConformsTo(object, source, props) {
  var length = props.length;
  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (length--) {
    var key = props[length], predicate = source[key], value = object[key];
    if (value === void 0 && !(key in object) || !predicate(value)) {
      return false;
    }
  }
  return true;
}
var baseConformsTo_default = baseConformsTo;

// ../../node_modules/lodash/_baseConforms.js
function baseConforms(source) {
  var props = keys_default(source);
  return function(object) {
    return baseConformsTo_default(object, source, props);
  };
}
var baseConforms_default = baseConforms;

// ../../node_modules/lodash/conforms.js
var CLONE_DEEP_FLAG4 = 1;
function conforms(source) {
  return baseConforms_default(baseClone_default(source, CLONE_DEEP_FLAG4));
}
var conforms_default = conforms;

// ../../node_modules/lodash/conformsTo.js
function conformsTo(object, source) {
  return source == null || baseConformsTo_default(object, source, keys_default(source));
}
var conformsTo_default = conformsTo;

// ../../node_modules/lodash/_arrayAggregator.js
function arrayAggregator(array, setter, iteratee2, accumulator) {
  var index3 = -1, length = array == null ? 0 : array.length;
  while (++index3 < length) {
    var value = array[index3];
    setter(accumulator, value, iteratee2(value), array);
  }
  return accumulator;
}
var arrayAggregator_default = arrayAggregator;

// ../../node_modules/lodash/_createBaseFor.js
function createBaseFor(fromRight) {
  return function(object, iteratee2, keysFunc) {
    var index3 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
    while (length--) {
      var key = props[fromRight ? length : ++index3];
      if (iteratee2(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}
var createBaseFor_default = createBaseFor;

// ../../node_modules/lodash/_baseFor.js
var baseFor = createBaseFor_default();
var baseFor_default = baseFor;

// ../../node_modules/lodash/_baseForOwn.js
function baseForOwn(object, iteratee2) {
  return object && baseFor_default(object, iteratee2, keys_default);
}
var baseForOwn_default = baseForOwn;

// ../../node_modules/lodash/_createBaseEach.js
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee2) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike_default(collection)) {
      return eachFunc(collection, iteratee2);
    }
    var length = collection.length, index3 = fromRight ? length : -1, iterable = Object(collection);
    while (fromRight ? index3-- : ++index3 < length) {
      if (iteratee2(iterable[index3], index3, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var createBaseEach_default = createBaseEach;

// ../../node_modules/lodash/_baseEach.js
var baseEach = createBaseEach_default(baseForOwn_default);
var baseEach_default = baseEach;

// ../../node_modules/lodash/_baseAggregator.js
function baseAggregator(collection, setter, iteratee2, accumulator) {
  baseEach_default(collection, function(value, key, collection2) {
    setter(accumulator, value, iteratee2(value), collection2);
  });
  return accumulator;
}
var baseAggregator_default = baseAggregator;

// ../../node_modules/lodash/_createAggregator.js
function createAggregator(setter, initializer) {
  return function(collection, iteratee2) {
    var func = isArray_default(collection) ? arrayAggregator_default : baseAggregator_default, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee_default(iteratee2, 2), accumulator);
  };
}
var createAggregator_default = createAggregator;

// ../../node_modules/lodash/countBy.js
var objectProto20 = Object.prototype;
var hasOwnProperty17 = objectProto20.hasOwnProperty;
var countBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty17.call(result2, key)) {
    ++result2[key];
  } else {
    baseAssignValue_default(result2, key, 1);
  }
});
var countBy_default = countBy;

// ../../node_modules/lodash/create.js
function create(prototype3, properties) {
  var result2 = baseCreate_default(prototype3);
  return properties == null ? result2 : baseAssign_default(result2, properties);
}
var create_default = create;

// ../../node_modules/lodash/curry.js
var WRAP_CURRY_FLAG6 = 8;
function curry(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_FLAG6, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curry.placeholder;
  return result2;
}
curry.placeholder = {};
var curry_default = curry;

// ../../node_modules/lodash/curryRight.js
var WRAP_CURRY_RIGHT_FLAG4 = 16;
function curryRight(func, arity, guard) {
  arity = guard ? void 0 : arity;
  var result2 = createWrap_default(func, WRAP_CURRY_RIGHT_FLAG4, void 0, void 0, void 0, void 0, void 0, arity);
  result2.placeholder = curryRight.placeholder;
  return result2;
}
curryRight.placeholder = {};
var curryRight_default = curryRight;

// ../../node_modules/lodash/now.js
var now = function() {
  return root_default.Date.now();
};
var now_default = now;

// ../../node_modules/lodash/debounce.js
var FUNC_ERROR_TEXT6 = "Expected a function";
var nativeMax6 = Math.max;
var nativeMin4 = Math.min;
function debounce(func, wait, options) {
  var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT6);
  }
  wait = toNumber_default(wait) || 0;
  if (isObject_default(options)) {
    leading = !!options.leading;
    maxing = "maxWait" in options;
    maxWait = maxing ? nativeMax6(toNumber_default(options.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result2 = func.apply(thisArg, args);
    return result2;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result2;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin4(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now_default();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result2;
  }
  function cancel() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result2 : trailingEdge(now_default());
  }
  function debounced() {
    var time = now_default(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result2;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
var debounce_default = debounce;

// ../../node_modules/lodash/defaultTo.js
function defaultTo(value, defaultValue) {
  return value == null || value !== value ? defaultValue : value;
}
var defaultTo_default = defaultTo;

// ../../node_modules/lodash/defaults.js
var objectProto21 = Object.prototype;
var hasOwnProperty18 = objectProto21.hasOwnProperty;
var defaults = baseRest_default(function(object, sources) {
  object = Object(object);
  var index3 = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : void 0;
  if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
    length = 1;
  }
  while (++index3 < length) {
    var source = sources[index3];
    var props = keysIn_default(source);
    var propsIndex = -1;
    var propsLength = props.length;
    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];
      if (value === void 0 || eq_default(value, objectProto21[key]) && !hasOwnProperty18.call(object, key)) {
        object[key] = source[key];
      }
    }
  }
  return object;
});
var defaults_default = defaults;

// ../../node_modules/lodash/_assignMergeValue.js
function assignMergeValue(object, key, value) {
  if (value !== void 0 && !eq_default(object[key], value) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignMergeValue_default = assignMergeValue;

// ../../node_modules/lodash/isArrayLikeObject.js
function isArrayLikeObject(value) {
  return isObjectLike_default(value) && isArrayLike_default(value);
}
var isArrayLikeObject_default = isArrayLikeObject;

// ../../node_modules/lodash/_safeGet.js
function safeGet(object, key) {
  if (key === "constructor" && typeof object[key] === "function") {
    return;
  }
  if (key == "__proto__") {
    return;
  }
  return object[key];
}
var safeGet_default = safeGet;

// ../../node_modules/lodash/toPlainObject.js
function toPlainObject(value) {
  return copyObject_default(value, keysIn_default(value));
}
var toPlainObject_default = toPlainObject;

// ../../node_modules/lodash/_baseMergeDeep.js
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet_default(object, key), srcValue = safeGet_default(source, key), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue_default(object, key, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray_default(srcValue), isBuff = !isArr && isBuffer_default(srcValue), isTyped = !isArr && !isBuff && isTypedArray_default(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray_default(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject_default(objValue)) {
        newValue = copyArray_default(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer_default(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray_default(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject_default(srcValue) || isArguments_default(srcValue)) {
      newValue = objValue;
      if (isArguments_default(objValue)) {
        newValue = toPlainObject_default(objValue);
      } else if (!isObject_default(objValue) || isFunction_default(objValue)) {
        newValue = initCloneObject_default(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue_default(object, key, newValue);
}
var baseMergeDeep_default = baseMergeDeep;

// ../../node_modules/lodash/_baseMerge.js
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor_default(source, function(srcValue, key) {
    stack || (stack = new Stack_default());
    if (isObject_default(srcValue)) {
      baseMergeDeep_default(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet_default(object, key), srcValue, key + "", object, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue_default(object, key, newValue);
    }
  }, keysIn_default);
}
var baseMerge_default = baseMerge;

// ../../node_modules/lodash/_customDefaultsMerge.js
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if (isObject_default(objValue) && isObject_default(srcValue)) {
    stack.set(srcValue, objValue);
    baseMerge_default(objValue, srcValue, void 0, customDefaultsMerge, stack);
    stack["delete"](srcValue);
  }
  return objValue;
}
var customDefaultsMerge_default = customDefaultsMerge;

// ../../node_modules/lodash/mergeWith.js
var mergeWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  baseMerge_default(object, source, srcIndex, customizer);
});
var mergeWith_default = mergeWith;

// ../../node_modules/lodash/defaultsDeep.js
var defaultsDeep = baseRest_default(function(args) {
  args.push(void 0, customDefaultsMerge_default);
  return apply_default(mergeWith_default, void 0, args);
});
var defaultsDeep_default = defaultsDeep;

// ../../node_modules/lodash/_baseDelay.js
var FUNC_ERROR_TEXT7 = "Expected a function";
function baseDelay(func, wait, args) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT7);
  }
  return setTimeout(function() {
    func.apply(void 0, args);
  }, wait);
}
var baseDelay_default = baseDelay;

// ../../node_modules/lodash/defer.js
var defer = baseRest_default(function(func, args) {
  return baseDelay_default(func, 1, args);
});
var defer_default = defer;

// ../../node_modules/lodash/delay.js
var delay = baseRest_default(function(func, wait, args) {
  return baseDelay_default(func, toNumber_default(wait) || 0, args);
});
var delay_default = delay;

// ../../node_modules/lodash/_arrayIncludesWith.js
function arrayIncludesWith(array, value, comparator) {
  var index3 = -1, length = array == null ? 0 : array.length;
  while (++index3 < length) {
    if (comparator(value, array[index3])) {
      return true;
    }
  }
  return false;
}
var arrayIncludesWith_default = arrayIncludesWith;

// ../../node_modules/lodash/_baseDifference.js
var LARGE_ARRAY_SIZE2 = 200;
function baseDifference(array, values2, iteratee2, comparator) {
  var index3 = -1, includes2 = arrayIncludes_default, isCommon = true, length = array.length, result2 = [], valuesLength = values2.length;
  if (!length) {
    return result2;
  }
  if (iteratee2) {
    values2 = arrayMap_default(values2, baseUnary_default(iteratee2));
  }
  if (comparator) {
    includes2 = arrayIncludesWith_default;
    isCommon = false;
  } else if (values2.length >= LARGE_ARRAY_SIZE2) {
    includes2 = cacheHas_default;
    isCommon = false;
    values2 = new SetCache_default(values2);
  }
  outer:
    while (++index3 < length) {
      var value = array[index3], computed = iteratee2 == null ? value : iteratee2(value);
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values2[valuesIndex] === computed) {
            continue outer;
          }
        }
        result2.push(value);
      } else if (!includes2(values2, computed, comparator)) {
        result2.push(value);
      }
    }
  return result2;
}
var baseDifference_default = baseDifference;

// ../../node_modules/lodash/difference.js
var difference = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true)) : [];
});
var difference_default = difference;

// ../../node_modules/lodash/last.js
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : void 0;
}
var last_default = last;

// ../../node_modules/lodash/differenceBy.js
var differenceBy = baseRest_default(function(array, values2) {
  var iteratee2 = last_default(values2);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2)) : [];
});
var differenceBy_default = differenceBy;

// ../../node_modules/lodash/differenceWith.js
var differenceWith = baseRest_default(function(array, values2) {
  var comparator = last_default(values2);
  if (isArrayLikeObject_default(comparator)) {
    comparator = void 0;
  }
  return isArrayLikeObject_default(array) ? baseDifference_default(array, baseFlatten_default(values2, 1, isArrayLikeObject_default, true), void 0, comparator) : [];
});
var differenceWith_default = differenceWith;

// ../../node_modules/lodash/divide.js
var divide = createMathOperation_default(function(dividend, divisor) {
  return dividend / divisor;
}, 1);
var divide_default = divide;

// ../../node_modules/lodash/drop.js
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var drop_default = drop;

// ../../node_modules/lodash/dropRight.js
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var dropRight_default = dropRight;

// ../../node_modules/lodash/_baseWhile.js
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length, index3 = fromRight ? length : -1;
  while ((fromRight ? index3-- : ++index3 < length) && predicate(array[index3], index3, array)) {
  }
  return isDrop ? baseSlice_default(array, fromRight ? 0 : index3, fromRight ? index3 + 1 : length) : baseSlice_default(array, fromRight ? index3 + 1 : 0, fromRight ? length : index3);
}
var baseWhile_default = baseWhile;

// ../../node_modules/lodash/dropRightWhile.js
function dropRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true, true) : [];
}
var dropRightWhile_default = dropRightWhile;

// ../../node_modules/lodash/dropWhile.js
function dropWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), true) : [];
}
var dropWhile_default = dropWhile;

// ../../node_modules/lodash/_castFunction.js
function castFunction(value) {
  return typeof value == "function" ? value : identity_default;
}
var castFunction_default = castFunction;

// ../../node_modules/lodash/forEach.js
function forEach(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEach_default : baseEach_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEach_default = forEach;

// ../../node_modules/lodash/_arrayEachRight.js
function arrayEachRight(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  while (length--) {
    if (iteratee2(array[length], length, array) === false) {
      break;
    }
  }
  return array;
}
var arrayEachRight_default = arrayEachRight;

// ../../node_modules/lodash/_baseForRight.js
var baseForRight = createBaseFor_default(true);
var baseForRight_default = baseForRight;

// ../../node_modules/lodash/_baseForOwnRight.js
function baseForOwnRight(object, iteratee2) {
  return object && baseForRight_default(object, iteratee2, keys_default);
}
var baseForOwnRight_default = baseForOwnRight;

// ../../node_modules/lodash/_baseEachRight.js
var baseEachRight = createBaseEach_default(baseForOwnRight_default, true);
var baseEachRight_default = baseEachRight;

// ../../node_modules/lodash/forEachRight.js
function forEachRight(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayEachRight_default : baseEachRight_default;
  return func(collection, castFunction_default(iteratee2));
}
var forEachRight_default = forEachRight;

// ../../node_modules/lodash/endsWith.js
function endsWith(string, target, position) {
  string = toString_default(string);
  target = baseToString_default(target);
  var length = string.length;
  position = position === void 0 ? length : baseClamp_default(toInteger_default(position), 0, length);
  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}
var endsWith_default = endsWith;

// ../../node_modules/lodash/_baseToPairs.js
function baseToPairs(object, props) {
  return arrayMap_default(props, function(key) {
    return [key, object[key]];
  });
}
var baseToPairs_default = baseToPairs;

// ../../node_modules/lodash/_setToPairs.js
function setToPairs(set2) {
  var index3 = -1, result2 = Array(set2.size);
  set2.forEach(function(value) {
    result2[++index3] = [value, value];
  });
  return result2;
}
var setToPairs_default = setToPairs;

// ../../node_modules/lodash/_createToPairs.js
var mapTag7 = "[object Map]";
var setTag7 = "[object Set]";
function createToPairs(keysFunc) {
  return function(object) {
    var tag = getTag_default(object);
    if (tag == mapTag7) {
      return mapToArray_default(object);
    }
    if (tag == setTag7) {
      return setToPairs_default(object);
    }
    return baseToPairs_default(object, keysFunc(object));
  };
}
var createToPairs_default = createToPairs;

// ../../node_modules/lodash/toPairs.js
var toPairs = createToPairs_default(keys_default);
var toPairs_default = toPairs;

// ../../node_modules/lodash/toPairsIn.js
var toPairsIn = createToPairs_default(keysIn_default);
var toPairsIn_default = toPairsIn;

// ../../node_modules/lodash/_escapeHtmlChar.js
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// ../../node_modules/lodash/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape2(string) {
  string = toString_default(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar_default) : string;
}
var escape_default = escape2;

// ../../node_modules/lodash/escapeRegExp.js
var reRegExpChar2 = /[\\^$.*+?()[\]{}|]/g;
var reHasRegExpChar = RegExp(reRegExpChar2.source);
function escapeRegExp(string) {
  string = toString_default(string);
  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar2, "\\$&") : string;
}
var escapeRegExp_default = escapeRegExp;

// ../../node_modules/lodash/_arrayEvery.js
function arrayEvery(array, predicate) {
  var index3 = -1, length = array == null ? 0 : array.length;
  while (++index3 < length) {
    if (!predicate(array[index3], index3, array)) {
      return false;
    }
  }
  return true;
}
var arrayEvery_default = arrayEvery;

// ../../node_modules/lodash/_baseEvery.js
function baseEvery(collection, predicate) {
  var result2 = true;
  baseEach_default(collection, function(value, index3, collection2) {
    result2 = !!predicate(value, index3, collection2);
    return result2;
  });
  return result2;
}
var baseEvery_default = baseEvery;

// ../../node_modules/lodash/every.js
function every(collection, predicate, guard) {
  var func = isArray_default(collection) ? arrayEvery_default : baseEvery_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var every_default = every;

// ../../node_modules/lodash/toLength.js
var MAX_ARRAY_LENGTH2 = 4294967295;
function toLength(value) {
  return value ? baseClamp_default(toInteger_default(value), 0, MAX_ARRAY_LENGTH2) : 0;
}
var toLength_default = toLength;

// ../../node_modules/lodash/_baseFill.js
function baseFill(array, value, start, end) {
  var length = array.length;
  start = toInteger_default(start);
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end === void 0 || end > length ? length : toInteger_default(end);
  if (end < 0) {
    end += length;
  }
  end = start > end ? 0 : toLength_default(end);
  while (start < end) {
    array[start++] = value;
  }
  return array;
}
var baseFill_default = baseFill;

// ../../node_modules/lodash/fill.js
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (start && typeof start != "number" && isIterateeCall_default(array, value, start)) {
    start = 0;
    end = length;
  }
  return baseFill_default(array, value, start, end);
}
var fill_default = fill;

// ../../node_modules/lodash/_baseFilter.js
function baseFilter(collection, predicate) {
  var result2 = [];
  baseEach_default(collection, function(value, index3, collection2) {
    if (predicate(value, index3, collection2)) {
      result2.push(value);
    }
  });
  return result2;
}
var baseFilter_default = baseFilter;

// ../../node_modules/lodash/filter.js
function filter(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, baseIteratee_default(predicate, 3));
}
var filter_default = filter;

// ../../node_modules/lodash/_createFind.js
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike_default(collection)) {
      var iteratee2 = baseIteratee_default(predicate, 3);
      collection = keys_default(collection);
      predicate = function(key) {
        return iteratee2(iterable[key], key, iterable);
      };
    }
    var index3 = findIndexFunc(collection, predicate, fromIndex);
    return index3 > -1 ? iterable[iteratee2 ? collection[index3] : index3] : void 0;
  };
}
var createFind_default = createFind;

// ../../node_modules/lodash/findIndex.js
var nativeMax7 = Math.max;
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index3 = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index3 < 0) {
    index3 = nativeMax7(length + index3, 0);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index3);
}
var findIndex_default = findIndex;

// ../../node_modules/lodash/find.js
var find = createFind_default(findIndex_default);
var find_default = find;

// ../../node_modules/lodash/_baseFindKey.js
function baseFindKey(collection, predicate, eachFunc) {
  var result2;
  eachFunc(collection, function(value, key, collection2) {
    if (predicate(value, key, collection2)) {
      result2 = key;
      return false;
    }
  });
  return result2;
}
var baseFindKey_default = baseFindKey;

// ../../node_modules/lodash/findKey.js
function findKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwn_default);
}
var findKey_default = findKey;

// ../../node_modules/lodash/findLastIndex.js
var nativeMax8 = Math.max;
var nativeMin5 = Math.min;
function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index3 = length - 1;
  if (fromIndex !== void 0) {
    index3 = toInteger_default(fromIndex);
    index3 = fromIndex < 0 ? nativeMax8(length + index3, 0) : nativeMin5(index3, length - 1);
  }
  return baseFindIndex_default(array, baseIteratee_default(predicate, 3), index3, true);
}
var findLastIndex_default = findLastIndex;

// ../../node_modules/lodash/findLast.js
var findLast = createFind_default(findLastIndex_default);
var findLast_default = findLast;

// ../../node_modules/lodash/findLastKey.js
function findLastKey(object, predicate) {
  return baseFindKey_default(object, baseIteratee_default(predicate, 3), baseForOwnRight_default);
}
var findLastKey_default = findLastKey;

// ../../node_modules/lodash/head.js
function head(array) {
  return array && array.length ? array[0] : void 0;
}
var head_default = head;

// ../../node_modules/lodash/_baseMap.js
function baseMap(collection, iteratee2) {
  var index3 = -1, result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value, key, collection2) {
    result2[++index3] = iteratee2(value, key, collection2);
  });
  return result2;
}
var baseMap_default = baseMap;

// ../../node_modules/lodash/map.js
function map(collection, iteratee2) {
  var func = isArray_default(collection) ? arrayMap_default : baseMap_default;
  return func(collection, baseIteratee_default(iteratee2, 3));
}
var map_default = map;

// ../../node_modules/lodash/flatMap.js
function flatMap(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), 1);
}
var flatMap_default = flatMap;

// ../../node_modules/lodash/flatMapDeep.js
var INFINITY4 = 1 / 0;
function flatMapDeep(collection, iteratee2) {
  return baseFlatten_default(map_default(collection, iteratee2), INFINITY4);
}
var flatMapDeep_default = flatMapDeep;

// ../../node_modules/lodash/flatMapDepth.js
function flatMapDepth(collection, iteratee2, depth) {
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(map_default(collection, iteratee2), depth);
}
var flatMapDepth_default = flatMapDepth;

// ../../node_modules/lodash/flattenDeep.js
var INFINITY5 = 1 / 0;
function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten_default(array, INFINITY5) : [];
}
var flattenDeep_default = flattenDeep;

// ../../node_modules/lodash/flattenDepth.js
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  depth = depth === void 0 ? 1 : toInteger_default(depth);
  return baseFlatten_default(array, depth);
}
var flattenDepth_default = flattenDepth;

// ../../node_modules/lodash/flip.js
var WRAP_FLIP_FLAG3 = 512;
function flip(func) {
  return createWrap_default(func, WRAP_FLIP_FLAG3);
}
var flip_default = flip;

// ../../node_modules/lodash/floor.js
var floor = createRound_default("floor");
var floor_default = floor;

// ../../node_modules/lodash/_createFlow.js
var FUNC_ERROR_TEXT8 = "Expected a function";
var WRAP_CURRY_FLAG7 = 8;
var WRAP_PARTIAL_FLAG6 = 32;
var WRAP_ARY_FLAG5 = 128;
var WRAP_REARG_FLAG3 = 256;
function createFlow(fromRight) {
  return flatRest_default(function(funcs) {
    var length = funcs.length, index3 = length, prereq = LodashWrapper_default.prototype.thru;
    if (fromRight) {
      funcs.reverse();
    }
    while (index3--) {
      var func = funcs[index3];
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT8);
      }
      if (prereq && !wrapper && getFuncName_default(func) == "wrapper") {
        var wrapper = new LodashWrapper_default([], true);
      }
    }
    index3 = wrapper ? index3 : length;
    while (++index3 < length) {
      func = funcs[index3];
      var funcName = getFuncName_default(func), data = funcName == "wrapper" ? getData_default(func) : void 0;
      if (data && isLaziable_default(data[0]) && data[1] == (WRAP_ARY_FLAG5 | WRAP_CURRY_FLAG7 | WRAP_PARTIAL_FLAG6 | WRAP_REARG_FLAG3) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[getFuncName_default(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && isLaziable_default(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments, value = args[0];
      if (wrapper && args.length == 1 && isArray_default(value)) {
        return wrapper.plant(value).value();
      }
      var index4 = 0, result2 = length ? funcs[index4].apply(this, args) : value;
      while (++index4 < length) {
        result2 = funcs[index4].call(this, result2);
      }
      return result2;
    };
  });
}
var createFlow_default = createFlow;

// ../../node_modules/lodash/flow.js
var flow = createFlow_default();
var flow_default = flow;

// ../../node_modules/lodash/flowRight.js
var flowRight = createFlow_default(true);
var flowRight_default = flowRight;

// ../../node_modules/lodash/forIn.js
function forIn(object, iteratee2) {
  return object == null ? object : baseFor_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forIn_default = forIn;

// ../../node_modules/lodash/forInRight.js
function forInRight(object, iteratee2) {
  return object == null ? object : baseForRight_default(object, castFunction_default(iteratee2), keysIn_default);
}
var forInRight_default = forInRight;

// ../../node_modules/lodash/forOwn.js
function forOwn(object, iteratee2) {
  return object && baseForOwn_default(object, castFunction_default(iteratee2));
}
var forOwn_default = forOwn;

// ../../node_modules/lodash/forOwnRight.js
function forOwnRight(object, iteratee2) {
  return object && baseForOwnRight_default(object, castFunction_default(iteratee2));
}
var forOwnRight_default = forOwnRight;

// ../../node_modules/lodash/fromPairs.js
function fromPairs(pairs) {
  var index3 = -1, length = pairs == null ? 0 : pairs.length, result2 = {};
  while (++index3 < length) {
    var pair = pairs[index3];
    result2[pair[0]] = pair[1];
  }
  return result2;
}
var fromPairs_default = fromPairs;

// ../../node_modules/lodash/_baseFunctions.js
function baseFunctions(object, props) {
  return arrayFilter_default(props, function(key) {
    return isFunction_default(object[key]);
  });
}
var baseFunctions_default = baseFunctions;

// ../../node_modules/lodash/functions.js
function functions(object) {
  return object == null ? [] : baseFunctions_default(object, keys_default(object));
}
var functions_default = functions;

// ../../node_modules/lodash/functionsIn.js
function functionsIn(object) {
  return object == null ? [] : baseFunctions_default(object, keysIn_default(object));
}
var functionsIn_default = functionsIn;

// ../../node_modules/lodash/groupBy.js
var objectProto22 = Object.prototype;
var hasOwnProperty19 = objectProto22.hasOwnProperty;
var groupBy = createAggregator_default(function(result2, value, key) {
  if (hasOwnProperty19.call(result2, key)) {
    result2[key].push(value);
  } else {
    baseAssignValue_default(result2, key, [value]);
  }
});
var groupBy_default = groupBy;

// ../../node_modules/lodash/_baseGt.js
function baseGt(value, other) {
  return value > other;
}
var baseGt_default = baseGt;

// ../../node_modules/lodash/_createRelationalOperation.js
function createRelationalOperation(operator) {
  return function(value, other) {
    if (!(typeof value == "string" && typeof other == "string")) {
      value = toNumber_default(value);
      other = toNumber_default(other);
    }
    return operator(value, other);
  };
}
var createRelationalOperation_default = createRelationalOperation;

// ../../node_modules/lodash/gt.js
var gt = createRelationalOperation_default(baseGt_default);
var gt_default = gt;

// ../../node_modules/lodash/gte.js
var gte = createRelationalOperation_default(function(value, other) {
  return value >= other;
});
var gte_default = gte;

// ../../node_modules/lodash/_baseHas.js
var objectProto23 = Object.prototype;
var hasOwnProperty20 = objectProto23.hasOwnProperty;
function baseHas(object, key) {
  return object != null && hasOwnProperty20.call(object, key);
}
var baseHas_default = baseHas;

// ../../node_modules/lodash/has.js
function has(object, path) {
  return object != null && hasPath_default(object, path, baseHas_default);
}
var has_default = has;

// ../../node_modules/lodash/_baseInRange.js
var nativeMax9 = Math.max;
var nativeMin6 = Math.min;
function baseInRange(number, start, end) {
  return number >= nativeMin6(start, end) && number < nativeMax9(start, end);
}
var baseInRange_default = baseInRange;

// ../../node_modules/lodash/inRange.js
function inRange(number, start, end) {
  start = toFinite_default(start);
  if (end === void 0) {
    end = start;
    start = 0;
  } else {
    end = toFinite_default(end);
  }
  number = toNumber_default(number);
  return baseInRange_default(number, start, end);
}
var inRange_default = inRange;

// ../../node_modules/lodash/isString.js
var stringTag5 = "[object String]";
function isString(value) {
  return typeof value == "string" || !isArray_default(value) && isObjectLike_default(value) && baseGetTag_default(value) == stringTag5;
}
var isString_default = isString;

// ../../node_modules/lodash/_baseValues.js
function baseValues(object, props) {
  return arrayMap_default(props, function(key) {
    return object[key];
  });
}
var baseValues_default = baseValues;

// ../../node_modules/lodash/values.js
function values(object) {
  return object == null ? [] : baseValues_default(object, keys_default(object));
}
var values_default = values;

// ../../node_modules/lodash/includes.js
var nativeMax10 = Math.max;
function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike_default(collection) ? collection : values_default(collection);
  fromIndex = fromIndex && !guard ? toInteger_default(fromIndex) : 0;
  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax10(length + fromIndex, 0);
  }
  return isString_default(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf_default(collection, value, fromIndex) > -1;
}
var includes_default = includes;

// ../../node_modules/lodash/indexOf.js
var nativeMax11 = Math.max;
function indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index3 = fromIndex == null ? 0 : toInteger_default(fromIndex);
  if (index3 < 0) {
    index3 = nativeMax11(length + index3, 0);
  }
  return baseIndexOf_default(array, value, index3);
}
var indexOf_default = indexOf;

// ../../node_modules/lodash/initial.js
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 0, -1) : [];
}
var initial_default = initial;

// ../../node_modules/lodash/_baseIntersection.js
var nativeMin7 = Math.min;
function baseIntersection(arrays, iteratee2, comparator) {
  var includes2 = comparator ? arrayIncludesWith_default : arrayIncludes_default, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result2 = [];
  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee2) {
      array = arrayMap_default(array, baseUnary_default(iteratee2));
    }
    maxLength = nativeMin7(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache_default(othIndex && array) : void 0;
  }
  array = arrays[0];
  var index3 = -1, seen = caches[0];
  outer:
    while (++index3 < length && result2.length < maxLength) {
      var value = array[index3], computed = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (!(seen ? cacheHas_default(seen, computed) : includes2(result2, computed, comparator))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas_default(cache, computed) : includes2(arrays[othIndex], computed, comparator))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseIntersection_default = baseIntersection;

// ../../node_modules/lodash/_castArrayLikeObject.js
function castArrayLikeObject(value) {
  return isArrayLikeObject_default(value) ? value : [];
}
var castArrayLikeObject_default = castArrayLikeObject;

// ../../node_modules/lodash/intersection.js
var intersection = baseRest_default(function(arrays) {
  var mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped) : [];
});
var intersection_default = intersection;

// ../../node_modules/lodash/intersectionBy.js
var intersectionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  if (iteratee2 === last_default(mapped)) {
    iteratee2 = void 0;
  } else {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, baseIteratee_default(iteratee2, 2)) : [];
});
var intersectionBy_default = intersectionBy;

// ../../node_modules/lodash/intersectionWith.js
var intersectionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays), mapped = arrayMap_default(arrays, castArrayLikeObject_default);
  comparator = typeof comparator == "function" ? comparator : void 0;
  if (comparator) {
    mapped.pop();
  }
  return mapped.length && mapped[0] === arrays[0] ? baseIntersection_default(mapped, void 0, comparator) : [];
});
var intersectionWith_default = intersectionWith;

// ../../node_modules/lodash/_baseInverter.js
function baseInverter(object, setter, iteratee2, accumulator) {
  baseForOwn_default(object, function(value, key, object2) {
    setter(accumulator, iteratee2(value), key, object2);
  });
  return accumulator;
}
var baseInverter_default = baseInverter;

// ../../node_modules/lodash/_createInverter.js
function createInverter(setter, toIteratee) {
  return function(object, iteratee2) {
    return baseInverter_default(object, setter, toIteratee(iteratee2), {});
  };
}
var createInverter_default = createInverter;

// ../../node_modules/lodash/invert.js
var objectProto24 = Object.prototype;
var nativeObjectToString3 = objectProto24.toString;
var invert = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString3.call(value);
  }
  result2[value] = key;
}, constant_default(identity_default));
var invert_default = invert;

// ../../node_modules/lodash/invertBy.js
var objectProto25 = Object.prototype;
var hasOwnProperty21 = objectProto25.hasOwnProperty;
var nativeObjectToString4 = objectProto25.toString;
var invertBy = createInverter_default(function(result2, value, key) {
  if (value != null && typeof value.toString != "function") {
    value = nativeObjectToString4.call(value);
  }
  if (hasOwnProperty21.call(result2, value)) {
    result2[value].push(key);
  } else {
    result2[value] = [key];
  }
}, baseIteratee_default);
var invertBy_default = invertBy;

// ../../node_modules/lodash/_parent.js
function parent(object, path) {
  return path.length < 2 ? object : baseGet_default(object, baseSlice_default(path, 0, -1));
}
var parent_default = parent;

// ../../node_modules/lodash/_baseInvoke.js
function baseInvoke(object, path, args) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  var func = object == null ? object : object[toKey_default(last_default(path))];
  return func == null ? void 0 : apply_default(func, object, args);
}
var baseInvoke_default = baseInvoke;

// ../../node_modules/lodash/invoke.js
var invoke = baseRest_default(baseInvoke_default);
var invoke_default = invoke;

// ../../node_modules/lodash/invokeMap.js
var invokeMap = baseRest_default(function(collection, path, args) {
  var index3 = -1, isFunc = typeof path == "function", result2 = isArrayLike_default(collection) ? Array(collection.length) : [];
  baseEach_default(collection, function(value) {
    result2[++index3] = isFunc ? apply_default(path, value, args) : baseInvoke_default(value, path, args);
  });
  return result2;
});
var invokeMap_default = invokeMap;

// ../../node_modules/lodash/_baseIsArrayBuffer.js
var arrayBufferTag5 = "[object ArrayBuffer]";
function baseIsArrayBuffer(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == arrayBufferTag5;
}
var baseIsArrayBuffer_default = baseIsArrayBuffer;

// ../../node_modules/lodash/isArrayBuffer.js
var nodeIsArrayBuffer = nodeUtil_default && nodeUtil_default.isArrayBuffer;
var isArrayBuffer = nodeIsArrayBuffer ? baseUnary_default(nodeIsArrayBuffer) : baseIsArrayBuffer_default;
var isArrayBuffer_default = isArrayBuffer;

// ../../node_modules/lodash/isBoolean.js
var boolTag5 = "[object Boolean]";
function isBoolean(value) {
  return value === true || value === false || isObjectLike_default(value) && baseGetTag_default(value) == boolTag5;
}
var isBoolean_default = isBoolean;

// ../../node_modules/lodash/_baseIsDate.js
var dateTag5 = "[object Date]";
function baseIsDate(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == dateTag5;
}
var baseIsDate_default = baseIsDate;

// ../../node_modules/lodash/isDate.js
var nodeIsDate = nodeUtil_default && nodeUtil_default.isDate;
var isDate = nodeIsDate ? baseUnary_default(nodeIsDate) : baseIsDate_default;
var isDate_default = isDate;

// ../../node_modules/lodash/isElement.js
function isElement(value) {
  return isObjectLike_default(value) && value.nodeType === 1 && !isPlainObject_default(value);
}
var isElement_default = isElement;

// ../../node_modules/lodash/isEmpty.js
var mapTag8 = "[object Map]";
var setTag8 = "[object Set]";
var objectProto26 = Object.prototype;
var hasOwnProperty22 = objectProto26.hasOwnProperty;
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike_default(value) && (isArray_default(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer_default(value) || isTypedArray_default(value) || isArguments_default(value))) {
    return !value.length;
  }
  var tag = getTag_default(value);
  if (tag == mapTag8 || tag == setTag8) {
    return !value.size;
  }
  if (isPrototype_default(value)) {
    return !baseKeys_default(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty22.call(value, key)) {
      return false;
    }
  }
  return true;
}
var isEmpty_default = isEmpty;

// ../../node_modules/lodash/isEqual.js
function isEqual(value, other) {
  return baseIsEqual_default(value, other);
}
var isEqual_default = isEqual;

// ../../node_modules/lodash/isEqualWith.js
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  var result2 = customizer ? customizer(value, other) : void 0;
  return result2 === void 0 ? baseIsEqual_default(value, other, void 0, customizer) : !!result2;
}
var isEqualWith_default = isEqualWith;

// ../../node_modules/lodash/isFinite.js
var nativeIsFinite2 = root_default.isFinite;
function isFinite2(value) {
  return typeof value == "number" && nativeIsFinite2(value);
}
var isFinite_default = isFinite2;

// ../../node_modules/lodash/isInteger.js
function isInteger(value) {
  return typeof value == "number" && value == toInteger_default(value);
}
var isInteger_default = isInteger;

// ../../node_modules/lodash/isMatch.js
function isMatch(object, source) {
  return object === source || baseIsMatch_default(object, source, getMatchData_default(source));
}
var isMatch_default = isMatch;

// ../../node_modules/lodash/isMatchWith.js
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return baseIsMatch_default(object, source, getMatchData_default(source), customizer);
}
var isMatchWith_default = isMatchWith;

// ../../node_modules/lodash/isNumber.js
var numberTag5 = "[object Number]";
function isNumber(value) {
  return typeof value == "number" || isObjectLike_default(value) && baseGetTag_default(value) == numberTag5;
}
var isNumber_default = isNumber;

// ../../node_modules/lodash/isNaN.js
function isNaN2(value) {
  return isNumber_default(value) && value != +value;
}
var isNaN_default = isNaN2;

// ../../node_modules/lodash/_isMaskable.js
var isMaskable = coreJsData_default ? isFunction_default : stubFalse_default;
var isMaskable_default = isMaskable;

// ../../node_modules/lodash/isNative.js
var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function isNative(value) {
  if (isMaskable_default(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }
  return baseIsNative_default(value);
}
var isNative_default = isNative;

// ../../node_modules/lodash/isNil.js
function isNil(value) {
  return value == null;
}
var isNil_default = isNil;

// ../../node_modules/lodash/isNull.js
function isNull(value) {
  return value === null;
}
var isNull_default = isNull;

// ../../node_modules/lodash/_baseIsRegExp.js
var regexpTag5 = "[object RegExp]";
function baseIsRegExp(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == regexpTag5;
}
var baseIsRegExp_default = baseIsRegExp;

// ../../node_modules/lodash/isRegExp.js
var nodeIsRegExp = nodeUtil_default && nodeUtil_default.isRegExp;
var isRegExp = nodeIsRegExp ? baseUnary_default(nodeIsRegExp) : baseIsRegExp_default;
var isRegExp_default = isRegExp;

// ../../node_modules/lodash/isSafeInteger.js
var MAX_SAFE_INTEGER3 = 9007199254740991;
function isSafeInteger(value) {
  return isInteger_default(value) && value >= -MAX_SAFE_INTEGER3 && value <= MAX_SAFE_INTEGER3;
}
var isSafeInteger_default = isSafeInteger;

// ../../node_modules/lodash/isUndefined.js
function isUndefined(value) {
  return value === void 0;
}
var isUndefined_default = isUndefined;

// ../../node_modules/lodash/isWeakMap.js
var weakMapTag4 = "[object WeakMap]";
function isWeakMap(value) {
  return isObjectLike_default(value) && getTag_default(value) == weakMapTag4;
}
var isWeakMap_default = isWeakMap;

// ../../node_modules/lodash/isWeakSet.js
var weakSetTag = "[object WeakSet]";
function isWeakSet(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == weakSetTag;
}
var isWeakSet_default = isWeakSet;

// ../../node_modules/lodash/iteratee.js
var CLONE_DEEP_FLAG5 = 1;
function iteratee(func) {
  return baseIteratee_default(typeof func == "function" ? func : baseClone_default(func, CLONE_DEEP_FLAG5));
}
var iteratee_default = iteratee;

// ../../node_modules/lodash/join.js
var arrayProto2 = Array.prototype;
var nativeJoin = arrayProto2.join;
function join(array, separator) {
  return array == null ? "" : nativeJoin.call(array, separator);
}
var join_default = join;

// ../../node_modules/lodash/kebabCase.js
var kebabCase = createCompounder_default(function(result2, word, index3) {
  return result2 + (index3 ? "-" : "") + word.toLowerCase();
});
var kebabCase_default = kebabCase;

// ../../node_modules/lodash/keyBy.js
var keyBy = createAggregator_default(function(result2, value, key) {
  baseAssignValue_default(result2, key, value);
});
var keyBy_default = keyBy;

// ../../node_modules/lodash/_strictLastIndexOf.js
function strictLastIndexOf(array, value, fromIndex) {
  var index3 = fromIndex + 1;
  while (index3--) {
    if (array[index3] === value) {
      return index3;
    }
  }
  return index3;
}
var strictLastIndexOf_default = strictLastIndexOf;

// ../../node_modules/lodash/lastIndexOf.js
var nativeMax12 = Math.max;
var nativeMin8 = Math.min;
function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index3 = length;
  if (fromIndex !== void 0) {
    index3 = toInteger_default(fromIndex);
    index3 = index3 < 0 ? nativeMax12(length + index3, 0) : nativeMin8(index3, length - 1);
  }
  return value === value ? strictLastIndexOf_default(array, value, index3) : baseFindIndex_default(array, baseIsNaN_default, index3, true);
}
var lastIndexOf_default = lastIndexOf;

// ../../node_modules/lodash/lowerCase.js
var lowerCase = createCompounder_default(function(result2, word, index3) {
  return result2 + (index3 ? " " : "") + word.toLowerCase();
});
var lowerCase_default = lowerCase;

// ../../node_modules/lodash/lowerFirst.js
var lowerFirst = createCaseFirst_default("toLowerCase");
var lowerFirst_default = lowerFirst;

// ../../node_modules/lodash/_baseLt.js
function baseLt(value, other) {
  return value < other;
}
var baseLt_default = baseLt;

// ../../node_modules/lodash/lt.js
var lt = createRelationalOperation_default(baseLt_default);
var lt_default = lt;

// ../../node_modules/lodash/lte.js
var lte = createRelationalOperation_default(function(value, other) {
  return value <= other;
});
var lte_default = lte;

// ../../node_modules/lodash/mapKeys.js
function mapKeys(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, iteratee2(value, key, object2), value);
  });
  return result2;
}
var mapKeys_default = mapKeys;

// ../../node_modules/lodash/mapValues.js
function mapValues(object, iteratee2) {
  var result2 = {};
  iteratee2 = baseIteratee_default(iteratee2, 3);
  baseForOwn_default(object, function(value, key, object2) {
    baseAssignValue_default(result2, key, iteratee2(value, key, object2));
  });
  return result2;
}
var mapValues_default = mapValues;

// ../../node_modules/lodash/matches.js
var CLONE_DEEP_FLAG6 = 1;
function matches(source) {
  return baseMatches_default(baseClone_default(source, CLONE_DEEP_FLAG6));
}
var matches_default = matches;

// ../../node_modules/lodash/matchesProperty.js
var CLONE_DEEP_FLAG7 = 1;
function matchesProperty(path, srcValue) {
  return baseMatchesProperty_default(path, baseClone_default(srcValue, CLONE_DEEP_FLAG7));
}
var matchesProperty_default = matchesProperty;

// ../../node_modules/lodash/_baseExtremum.js
function baseExtremum(array, iteratee2, comparator) {
  var index3 = -1, length = array.length;
  while (++index3 < length) {
    var value = array[index3], current = iteratee2(value);
    if (current != null && (computed === void 0 ? current === current && !isSymbol_default(current) : comparator(current, computed))) {
      var computed = current, result2 = value;
    }
  }
  return result2;
}
var baseExtremum_default = baseExtremum;

// ../../node_modules/lodash/max.js
function max(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseGt_default) : void 0;
}
var max_default = max;

// ../../node_modules/lodash/maxBy.js
function maxBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseGt_default) : void 0;
}
var maxBy_default = maxBy;

// ../../node_modules/lodash/_baseSum.js
function baseSum(array, iteratee2) {
  var result2, index3 = -1, length = array.length;
  while (++index3 < length) {
    var current = iteratee2(array[index3]);
    if (current !== void 0) {
      result2 = result2 === void 0 ? current : result2 + current;
    }
  }
  return result2;
}
var baseSum_default = baseSum;

// ../../node_modules/lodash/_baseMean.js
var NAN3 = 0 / 0;
function baseMean(array, iteratee2) {
  var length = array == null ? 0 : array.length;
  return length ? baseSum_default(array, iteratee2) / length : NAN3;
}
var baseMean_default = baseMean;

// ../../node_modules/lodash/mean.js
function mean(array) {
  return baseMean_default(array, identity_default);
}
var mean_default = mean;

// ../../node_modules/lodash/meanBy.js
function meanBy(array, iteratee2) {
  return baseMean_default(array, baseIteratee_default(iteratee2, 2));
}
var meanBy_default = meanBy;

// ../../node_modules/lodash/merge.js
var merge = createAssigner_default(function(object, source, srcIndex) {
  baseMerge_default(object, source, srcIndex);
});
var merge_default = merge;

// ../../node_modules/lodash/method.js
var method = baseRest_default(function(path, args) {
  return function(object) {
    return baseInvoke_default(object, path, args);
  };
});
var method_default = method;

// ../../node_modules/lodash/methodOf.js
var methodOf = baseRest_default(function(object, args) {
  return function(path) {
    return baseInvoke_default(object, path, args);
  };
});
var methodOf_default = methodOf;

// ../../node_modules/lodash/min.js
function min(array) {
  return array && array.length ? baseExtremum_default(array, identity_default, baseLt_default) : void 0;
}
var min_default = min;

// ../../node_modules/lodash/minBy.js
function minBy(array, iteratee2) {
  return array && array.length ? baseExtremum_default(array, baseIteratee_default(iteratee2, 2), baseLt_default) : void 0;
}
var minBy_default = minBy;

// ../../node_modules/lodash/mixin.js
function mixin(object, source, options) {
  var props = keys_default(source), methodNames = baseFunctions_default(source, props);
  var chain2 = !(isObject_default(options) && "chain" in options) || !!options.chain, isFunc = isFunction_default(object);
  arrayEach_default(methodNames, function(methodName) {
    var func = source[methodName];
    object[methodName] = func;
    if (isFunc) {
      object.prototype[methodName] = function() {
        var chainAll = this.__chain__;
        if (chain2 || chainAll) {
          var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray_default(this.__actions__);
          actions.push({ "func": func, "args": arguments, "thisArg": object });
          result2.__chain__ = chainAll;
          return result2;
        }
        return func.apply(object, arrayPush_default([this.value()], arguments));
      };
    }
  });
  return object;
}
var mixin_default = mixin;

// ../../node_modules/lodash/multiply.js
var multiply = createMathOperation_default(function(multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var multiply_default = multiply;

// ../../node_modules/lodash/negate.js
var FUNC_ERROR_TEXT9 = "Expected a function";
function negate(predicate) {
  if (typeof predicate != "function") {
    throw new TypeError(FUNC_ERROR_TEXT9);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0:
        return !predicate.call(this);
      case 1:
        return !predicate.call(this, args[0]);
      case 2:
        return !predicate.call(this, args[0], args[1]);
      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}
var negate_default = negate;

// ../../node_modules/lodash/_iteratorToArray.js
function iteratorToArray(iterator2) {
  var data, result2 = [];
  while (!(data = iterator2.next()).done) {
    result2.push(data.value);
  }
  return result2;
}
var iteratorToArray_default = iteratorToArray;

// ../../node_modules/lodash/toArray.js
var mapTag9 = "[object Map]";
var setTag9 = "[object Set]";
var symIterator = Symbol_default ? Symbol_default.iterator : void 0;
function toArray(value) {
  if (!value) {
    return [];
  }
  if (isArrayLike_default(value)) {
    return isString_default(value) ? stringToArray_default(value) : copyArray_default(value);
  }
  if (symIterator && value[symIterator]) {
    return iteratorToArray_default(value[symIterator]());
  }
  var tag = getTag_default(value), func = tag == mapTag9 ? mapToArray_default : tag == setTag9 ? setToArray_default : values_default;
  return func(value);
}
var toArray_default = toArray;

// ../../node_modules/lodash/next.js
function wrapperNext() {
  if (this.__values__ === void 0) {
    this.__values__ = toArray_default(this.value());
  }
  var done = this.__index__ >= this.__values__.length, value = done ? void 0 : this.__values__[this.__index__++];
  return { "done": done, "value": value };
}
var next_default = wrapperNext;

// ../../node_modules/lodash/_baseNth.js
function baseNth(array, n) {
  var length = array.length;
  if (!length) {
    return;
  }
  n += n < 0 ? length : 0;
  return isIndex_default(n, length) ? array[n] : void 0;
}
var baseNth_default = baseNth;

// ../../node_modules/lodash/nth.js
function nth(array, n) {
  return array && array.length ? baseNth_default(array, toInteger_default(n)) : void 0;
}
var nth_default = nth;

// ../../node_modules/lodash/nthArg.js
function nthArg(n) {
  n = toInteger_default(n);
  return baseRest_default(function(args) {
    return baseNth_default(args, n);
  });
}
var nthArg_default = nthArg;

// ../../node_modules/lodash/_baseUnset.js
function baseUnset(object, path) {
  path = castPath_default(path, object);
  object = parent_default(object, path);
  return object == null || delete object[toKey_default(last_default(path))];
}
var baseUnset_default = baseUnset;

// ../../node_modules/lodash/_customOmitClone.js
function customOmitClone(value) {
  return isPlainObject_default(value) ? void 0 : value;
}
var customOmitClone_default = customOmitClone;

// ../../node_modules/lodash/omit.js
var CLONE_DEEP_FLAG8 = 1;
var CLONE_FLAT_FLAG2 = 2;
var CLONE_SYMBOLS_FLAG6 = 4;
var omit = flatRest_default(function(object, paths) {
  var result2 = {};
  if (object == null) {
    return result2;
  }
  var isDeep = false;
  paths = arrayMap_default(paths, function(path) {
    path = castPath_default(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  copyObject_default(object, getAllKeysIn_default(object), result2);
  if (isDeep) {
    result2 = baseClone_default(result2, CLONE_DEEP_FLAG8 | CLONE_FLAT_FLAG2 | CLONE_SYMBOLS_FLAG6, customOmitClone_default);
  }
  var length = paths.length;
  while (length--) {
    baseUnset_default(result2, paths[length]);
  }
  return result2;
});
var omit_default = omit;

// ../../node_modules/lodash/_baseSet.js
function baseSet(object, path, value, customizer) {
  if (!isObject_default(object)) {
    return object;
  }
  path = castPath_default(path, object);
  var index3 = -1, length = path.length, lastIndex = length - 1, nested = object;
  while (nested != null && ++index3 < length) {
    var key = toKey_default(path[index3]), newValue = value;
    if (key === "__proto__" || key === "constructor" || key === "prototype") {
      return object;
    }
    if (index3 != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : void 0;
      if (newValue === void 0) {
        newValue = isObject_default(objValue) ? objValue : isIndex_default(path[index3 + 1]) ? [] : {};
      }
    }
    assignValue_default(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}
var baseSet_default = baseSet;

// ../../node_modules/lodash/_basePickBy.js
function basePickBy(object, paths, predicate) {
  var index3 = -1, length = paths.length, result2 = {};
  while (++index3 < length) {
    var path = paths[index3], value = baseGet_default(object, path);
    if (predicate(value, path)) {
      baseSet_default(result2, castPath_default(path, object), value);
    }
  }
  return result2;
}
var basePickBy_default = basePickBy;

// ../../node_modules/lodash/pickBy.js
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap_default(getAllKeysIn_default(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee_default(predicate);
  return basePickBy_default(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}
var pickBy_default = pickBy;

// ../../node_modules/lodash/omitBy.js
function omitBy(object, predicate) {
  return pickBy_default(object, negate_default(baseIteratee_default(predicate)));
}
var omitBy_default = omitBy;

// ../../node_modules/lodash/once.js
function once(func) {
  return before_default(2, func);
}
var once_default = once;

// ../../node_modules/lodash/_baseSortBy.js
function baseSortBy(array, comparer) {
  var length = array.length;
  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}
var baseSortBy_default = baseSortBy;

// ../../node_modules/lodash/_compareAscending.js
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol_default(value);
    var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol_default(other);
    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }
    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}
var compareAscending_default = compareAscending;

// ../../node_modules/lodash/_compareMultiple.js
function compareMultiple(object, other, orders) {
  var index3 = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
  while (++index3 < length) {
    var result2 = compareAscending_default(objCriteria[index3], othCriteria[index3]);
    if (result2) {
      if (index3 >= ordersLength) {
        return result2;
      }
      var order = orders[index3];
      return result2 * (order == "desc" ? -1 : 1);
    }
  }
  return object.index - other.index;
}
var compareMultiple_default = compareMultiple;

// ../../node_modules/lodash/_baseOrderBy.js
function baseOrderBy(collection, iteratees, orders) {
  if (iteratees.length) {
    iteratees = arrayMap_default(iteratees, function(iteratee2) {
      if (isArray_default(iteratee2)) {
        return function(value) {
          return baseGet_default(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);
        };
      }
      return iteratee2;
    });
  } else {
    iteratees = [identity_default];
  }
  var index3 = -1;
  iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
  var result2 = baseMap_default(collection, function(value, key, collection2) {
    var criteria = arrayMap_default(iteratees, function(iteratee2) {
      return iteratee2(value);
    });
    return { "criteria": criteria, "index": ++index3, "value": value };
  });
  return baseSortBy_default(result2, function(object, other) {
    return compareMultiple_default(object, other, orders);
  });
}
var baseOrderBy_default = baseOrderBy;

// ../../node_modules/lodash/orderBy.js
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }
  if (!isArray_default(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }
  orders = guard ? void 0 : orders;
  if (!isArray_default(orders)) {
    orders = orders == null ? [] : [orders];
  }
  return baseOrderBy_default(collection, iteratees, orders);
}
var orderBy_default = orderBy;

// ../../node_modules/lodash/_createOver.js
function createOver(arrayFunc) {
  return flatRest_default(function(iteratees) {
    iteratees = arrayMap_default(iteratees, baseUnary_default(baseIteratee_default));
    return baseRest_default(function(args) {
      var thisArg = this;
      return arrayFunc(iteratees, function(iteratee2) {
        return apply_default(iteratee2, thisArg, args);
      });
    });
  });
}
var createOver_default = createOver;

// ../../node_modules/lodash/over.js
var over = createOver_default(arrayMap_default);
var over_default = over;

// ../../node_modules/lodash/_castRest.js
var castRest = baseRest_default;
var castRest_default = castRest;

// ../../node_modules/lodash/overArgs.js
var nativeMin9 = Math.min;
var overArgs = castRest_default(function(func, transforms) {
  transforms = transforms.length == 1 && isArray_default(transforms[0]) ? arrayMap_default(transforms[0], baseUnary_default(baseIteratee_default)) : arrayMap_default(baseFlatten_default(transforms, 1), baseUnary_default(baseIteratee_default));
  var funcsLength = transforms.length;
  return baseRest_default(function(args) {
    var index3 = -1, length = nativeMin9(args.length, funcsLength);
    while (++index3 < length) {
      args[index3] = transforms[index3].call(this, args[index3]);
    }
    return apply_default(func, this, args);
  });
});
var overArgs_default = overArgs;

// ../../node_modules/lodash/overEvery.js
var overEvery = createOver_default(arrayEvery_default);
var overEvery_default = overEvery;

// ../../node_modules/lodash/overSome.js
var overSome = createOver_default(arraySome_default);
var overSome_default = overSome;

// ../../node_modules/lodash/_baseRepeat.js
var MAX_SAFE_INTEGER4 = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string, n) {
  var result2 = "";
  if (!string || n < 1 || n > MAX_SAFE_INTEGER4) {
    return result2;
  }
  do {
    if (n % 2) {
      result2 += string;
    }
    n = nativeFloor(n / 2);
    if (n) {
      string += string;
    }
  } while (n);
  return result2;
}
var baseRepeat_default = baseRepeat;

// ../../node_modules/lodash/_asciiSize.js
var asciiSize = baseProperty_default("length");
var asciiSize_default = asciiSize;

// ../../node_modules/lodash/_unicodeSize.js
var rsAstralRange4 = "\\ud800-\\udfff";
var rsComboMarksRange5 = "\\u0300-\\u036f";
var reComboHalfMarksRange5 = "\\ufe20-\\ufe2f";
var rsComboSymbolsRange5 = "\\u20d0-\\u20ff";
var rsComboRange5 = rsComboMarksRange5 + reComboHalfMarksRange5 + rsComboSymbolsRange5;
var rsVarRange4 = "\\ufe0e\\ufe0f";
var rsAstral2 = "[" + rsAstralRange4 + "]";
var rsCombo4 = "[" + rsComboRange5 + "]";
var rsFitz3 = "\\ud83c[\\udffb-\\udfff]";
var rsModifier3 = "(?:" + rsCombo4 + "|" + rsFitz3 + ")";
var rsNonAstral3 = "[^" + rsAstralRange4 + "]";
var rsRegional3 = "(?:\\ud83c[\\udde6-\\uddff]){2}";
var rsSurrPair3 = "[\\ud800-\\udbff][\\udc00-\\udfff]";
var rsZWJ4 = "\\u200d";
var reOptMod3 = rsModifier3 + "?";
var rsOptVar3 = "[" + rsVarRange4 + "]?";
var rsOptJoin3 = "(?:" + rsZWJ4 + "(?:" + [rsNonAstral3, rsRegional3, rsSurrPair3].join("|") + ")" + rsOptVar3 + reOptMod3 + ")*";
var rsSeq3 = rsOptVar3 + reOptMod3 + rsOptJoin3;
var rsSymbol2 = "(?:" + [rsNonAstral3 + rsCombo4 + "?", rsCombo4, rsRegional3, rsSurrPair3, rsAstral2].join("|") + ")";
var reUnicode2 = RegExp(rsFitz3 + "(?=" + rsFitz3 + ")|" + rsSymbol2 + rsSeq3, "g");
function unicodeSize(string) {
  var result2 = reUnicode2.lastIndex = 0;
  while (reUnicode2.test(string)) {
    ++result2;
  }
  return result2;
}
var unicodeSize_default = unicodeSize;

// ../../node_modules/lodash/_stringSize.js
function stringSize(string) {
  return hasUnicode_default(string) ? unicodeSize_default(string) : asciiSize_default(string);
}
var stringSize_default = stringSize;

// ../../node_modules/lodash/_createPadding.js
var nativeCeil2 = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString_default(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat_default(chars, length) : chars;
  }
  var result2 = baseRepeat_default(chars, nativeCeil2(length / stringSize_default(chars)));
  return hasUnicode_default(chars) ? castSlice_default(stringToArray_default(result2), 0, length).join("") : result2.slice(0, length);
}
var createPadding_default = createPadding;

// ../../node_modules/lodash/pad.js
var nativeCeil3 = Math.ceil;
var nativeFloor2 = Math.floor;
function pad(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  if (!length || strLength >= length) {
    return string;
  }
  var mid = (length - strLength) / 2;
  return createPadding_default(nativeFloor2(mid), chars) + string + createPadding_default(nativeCeil3(mid), chars);
}
var pad_default = pad;

// ../../node_modules/lodash/padEnd.js
function padEnd(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? string + createPadding_default(length - strLength, chars) : string;
}
var padEnd_default = padEnd;

// ../../node_modules/lodash/padStart.js
function padStart(string, length, chars) {
  string = toString_default(string);
  length = toInteger_default(length);
  var strLength = length ? stringSize_default(string) : 0;
  return length && strLength < length ? createPadding_default(length - strLength, chars) + string : string;
}
var padStart_default = padStart;

// ../../node_modules/lodash/parseInt.js
var reTrimStart2 = /^\s+/;
var nativeParseInt = root_default.parseInt;
function parseInt2(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }
  return nativeParseInt(toString_default(string).replace(reTrimStart2, ""), radix || 0);
}
var parseInt_default = parseInt2;

// ../../node_modules/lodash/partial.js
var WRAP_PARTIAL_FLAG7 = 32;
var partial = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partial));
  return createWrap_default(func, WRAP_PARTIAL_FLAG7, void 0, partials, holders);
});
partial.placeholder = {};
var partial_default = partial;

// ../../node_modules/lodash/partialRight.js
var WRAP_PARTIAL_RIGHT_FLAG4 = 64;
var partialRight = baseRest_default(function(func, partials) {
  var holders = replaceHolders_default(partials, getHolder_default(partialRight));
  return createWrap_default(func, WRAP_PARTIAL_RIGHT_FLAG4, void 0, partials, holders);
});
partialRight.placeholder = {};
var partialRight_default = partialRight;

// ../../node_modules/lodash/partition.js
var partition = createAggregator_default(function(result2, value, key) {
  result2[key ? 0 : 1].push(value);
}, function() {
  return [[], []];
});
var partition_default = partition;

// ../../node_modules/lodash/_basePick.js
function basePick(object, paths) {
  return basePickBy_default(object, paths, function(value, path) {
    return hasIn_default(object, path);
  });
}
var basePick_default = basePick;

// ../../node_modules/lodash/pick.js
var pick = flatRest_default(function(object, paths) {
  return object == null ? {} : basePick_default(object, paths);
});
var pick_default = pick;

// ../../node_modules/lodash/plant.js
function wrapperPlant(value) {
  var result2, parent2 = this;
  while (parent2 instanceof baseLodash_default) {
    var clone2 = wrapperClone_default(parent2);
    clone2.__index__ = 0;
    clone2.__values__ = void 0;
    if (result2) {
      previous.__wrapped__ = clone2;
    } else {
      result2 = clone2;
    }
    var previous = clone2;
    parent2 = parent2.__wrapped__;
  }
  previous.__wrapped__ = value;
  return result2;
}
var plant_default = wrapperPlant;

// ../../node_modules/lodash/propertyOf.js
function propertyOf(object) {
  return function(path) {
    return object == null ? void 0 : baseGet_default(object, path);
  };
}
var propertyOf_default = propertyOf;

// ../../node_modules/lodash/_baseIndexOfWith.js
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index3 = fromIndex - 1, length = array.length;
  while (++index3 < length) {
    if (comparator(array[index3], value)) {
      return index3;
    }
  }
  return -1;
}
var baseIndexOfWith_default = baseIndexOfWith;

// ../../node_modules/lodash/_basePullAll.js
var arrayProto3 = Array.prototype;
var splice2 = arrayProto3.splice;
function basePullAll(array, values2, iteratee2, comparator) {
  var indexOf2 = comparator ? baseIndexOfWith_default : baseIndexOf_default, index3 = -1, length = values2.length, seen = array;
  if (array === values2) {
    values2 = copyArray_default(values2);
  }
  if (iteratee2) {
    seen = arrayMap_default(array, baseUnary_default(iteratee2));
  }
  while (++index3 < length) {
    var fromIndex = 0, value = values2[index3], computed = iteratee2 ? iteratee2(value) : value;
    while ((fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice2.call(seen, fromIndex, 1);
      }
      splice2.call(array, fromIndex, 1);
    }
  }
  return array;
}
var basePullAll_default = basePullAll;

// ../../node_modules/lodash/pullAll.js
function pullAll(array, values2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2) : array;
}
var pullAll_default = pullAll;

// ../../node_modules/lodash/pull.js
var pull = baseRest_default(pullAll_default);
var pull_default = pull;

// ../../node_modules/lodash/pullAllBy.js
function pullAllBy(array, values2, iteratee2) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, baseIteratee_default(iteratee2, 2)) : array;
}
var pullAllBy_default = pullAllBy;

// ../../node_modules/lodash/pullAllWith.js
function pullAllWith(array, values2, comparator) {
  return array && array.length && values2 && values2.length ? basePullAll_default(array, values2, void 0, comparator) : array;
}
var pullAllWith_default = pullAllWith;

// ../../node_modules/lodash/_basePullAt.js
var arrayProto4 = Array.prototype;
var splice3 = arrayProto4.splice;
function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0, lastIndex = length - 1;
  while (length--) {
    var index3 = indexes[length];
    if (length == lastIndex || index3 !== previous) {
      var previous = index3;
      if (isIndex_default(index3)) {
        splice3.call(array, index3, 1);
      } else {
        baseUnset_default(array, index3);
      }
    }
  }
  return array;
}
var basePullAt_default = basePullAt;

// ../../node_modules/lodash/pullAt.js
var pullAt = flatRest_default(function(array, indexes) {
  var length = array == null ? 0 : array.length, result2 = baseAt_default(array, indexes);
  basePullAt_default(array, arrayMap_default(indexes, function(index3) {
    return isIndex_default(index3, length) ? +index3 : index3;
  }).sort(compareAscending_default));
  return result2;
});
var pullAt_default = pullAt;

// ../../node_modules/lodash/_baseRandom.js
var nativeFloor3 = Math.floor;
var nativeRandom = Math.random;
function baseRandom(lower, upper) {
  return lower + nativeFloor3(nativeRandom() * (upper - lower + 1));
}
var baseRandom_default = baseRandom;

// ../../node_modules/lodash/random.js
var freeParseFloat = parseFloat;
var nativeMin10 = Math.min;
var nativeRandom2 = Math.random;
function random(lower, upper, floating) {
  if (floating && typeof floating != "boolean" && isIterateeCall_default(lower, upper, floating)) {
    upper = floating = void 0;
  }
  if (floating === void 0) {
    if (typeof upper == "boolean") {
      floating = upper;
      upper = void 0;
    } else if (typeof lower == "boolean") {
      floating = lower;
      lower = void 0;
    }
  }
  if (lower === void 0 && upper === void 0) {
    lower = 0;
    upper = 1;
  } else {
    lower = toFinite_default(lower);
    if (upper === void 0) {
      upper = lower;
      lower = 0;
    } else {
      upper = toFinite_default(upper);
    }
  }
  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }
  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom2();
    return nativeMin10(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
  }
  return baseRandom_default(lower, upper);
}
var random_default = random;

// ../../node_modules/lodash/_baseRange.js
var nativeCeil4 = Math.ceil;
var nativeMax13 = Math.max;
function baseRange(start, end, step, fromRight) {
  var index3 = -1, length = nativeMax13(nativeCeil4((end - start) / (step || 1)), 0), result2 = Array(length);
  while (length--) {
    result2[fromRight ? length : ++index3] = start;
    start += step;
  }
  return result2;
}
var baseRange_default = baseRange;

// ../../node_modules/lodash/_createRange.js
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != "number" && isIterateeCall_default(start, end, step)) {
      end = step = void 0;
    }
    start = toFinite_default(start);
    if (end === void 0) {
      end = start;
      start = 0;
    } else {
      end = toFinite_default(end);
    }
    step = step === void 0 ? start < end ? 1 : -1 : toFinite_default(step);
    return baseRange_default(start, end, step, fromRight);
  };
}
var createRange_default = createRange;

// ../../node_modules/lodash/range.js
var range = createRange_default();
var range_default = range;

// ../../node_modules/lodash/rangeRight.js
var rangeRight = createRange_default(true);
var rangeRight_default = rangeRight;

// ../../node_modules/lodash/rearg.js
var WRAP_REARG_FLAG4 = 256;
var rearg = flatRest_default(function(func, indexes) {
  return createWrap_default(func, WRAP_REARG_FLAG4, void 0, void 0, void 0, indexes);
});
var rearg_default = rearg;

// ../../node_modules/lodash/_baseReduce.js
function baseReduce(collection, iteratee2, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index3, collection2) {
    accumulator = initAccum ? (initAccum = false, value) : iteratee2(accumulator, value, index3, collection2);
  });
  return accumulator;
}
var baseReduce_default = baseReduce;

// ../../node_modules/lodash/reduce.js
function reduce(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduce_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEach_default);
}
var reduce_default = reduce;

// ../../node_modules/lodash/_arrayReduceRight.js
function arrayReduceRight(array, iteratee2, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;
  if (initAccum && length) {
    accumulator = array[--length];
  }
  while (length--) {
    accumulator = iteratee2(accumulator, array[length], length, array);
  }
  return accumulator;
}
var arrayReduceRight_default = arrayReduceRight;

// ../../node_modules/lodash/reduceRight.js
function reduceRight(collection, iteratee2, accumulator) {
  var func = isArray_default(collection) ? arrayReduceRight_default : baseReduce_default, initAccum = arguments.length < 3;
  return func(collection, baseIteratee_default(iteratee2, 4), accumulator, initAccum, baseEachRight_default);
}
var reduceRight_default = reduceRight;

// ../../node_modules/lodash/reject.js
function reject(collection, predicate) {
  var func = isArray_default(collection) ? arrayFilter_default : baseFilter_default;
  return func(collection, negate_default(baseIteratee_default(predicate, 3)));
}
var reject_default = reject;

// ../../node_modules/lodash/remove.js
function remove(array, predicate) {
  var result2 = [];
  if (!(array && array.length)) {
    return result2;
  }
  var index3 = -1, indexes = [], length = array.length;
  predicate = baseIteratee_default(predicate, 3);
  while (++index3 < length) {
    var value = array[index3];
    if (predicate(value, index3, array)) {
      result2.push(value);
      indexes.push(index3);
    }
  }
  basePullAt_default(array, indexes);
  return result2;
}
var remove_default = remove;

// ../../node_modules/lodash/repeat.js
function repeat(string, n, guard) {
  if (guard ? isIterateeCall_default(string, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  return baseRepeat_default(toString_default(string), n);
}
var repeat_default = repeat;

// ../../node_modules/lodash/replace.js
function replace() {
  var args = arguments, string = toString_default(args[0]);
  return args.length < 3 ? string : string.replace(args[1], args[2]);
}
var replace_default = replace;

// ../../node_modules/lodash/rest.js
var FUNC_ERROR_TEXT10 = "Expected a function";
function rest(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT10);
  }
  start = start === void 0 ? start : toInteger_default(start);
  return baseRest_default(func, start);
}
var rest_default = rest;

// ../../node_modules/lodash/result.js
function result(object, path, defaultValue) {
  path = castPath_default(path, object);
  var index3 = -1, length = path.length;
  if (!length) {
    length = 1;
    object = void 0;
  }
  while (++index3 < length) {
    var value = object == null ? void 0 : object[toKey_default(path[index3])];
    if (value === void 0) {
      index3 = length;
      value = defaultValue;
    }
    object = isFunction_default(value) ? value.call(object) : value;
  }
  return object;
}
var result_default = result;

// ../../node_modules/lodash/reverse.js
var arrayProto5 = Array.prototype;
var nativeReverse = arrayProto5.reverse;
function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}
var reverse_default = reverse;

// ../../node_modules/lodash/round.js
var round = createRound_default("round");
var round_default = round;

// ../../node_modules/lodash/_arraySample.js
function arraySample(array) {
  var length = array.length;
  return length ? array[baseRandom_default(0, length - 1)] : void 0;
}
var arraySample_default = arraySample;

// ../../node_modules/lodash/_baseSample.js
function baseSample(collection) {
  return arraySample_default(values_default(collection));
}
var baseSample_default = baseSample;

// ../../node_modules/lodash/sample.js
function sample(collection) {
  var func = isArray_default(collection) ? arraySample_default : baseSample_default;
  return func(collection);
}
var sample_default = sample;

// ../../node_modules/lodash/_shuffleSelf.js
function shuffleSelf(array, size2) {
  var index3 = -1, length = array.length, lastIndex = length - 1;
  size2 = size2 === void 0 ? length : size2;
  while (++index3 < size2) {
    var rand = baseRandom_default(index3, lastIndex), value = array[rand];
    array[rand] = array[index3];
    array[index3] = value;
  }
  array.length = size2;
  return array;
}
var shuffleSelf_default = shuffleSelf;

// ../../node_modules/lodash/_arraySampleSize.js
function arraySampleSize(array, n) {
  return shuffleSelf_default(copyArray_default(array), baseClamp_default(n, 0, array.length));
}
var arraySampleSize_default = arraySampleSize;

// ../../node_modules/lodash/_baseSampleSize.js
function baseSampleSize(collection, n) {
  var array = values_default(collection);
  return shuffleSelf_default(array, baseClamp_default(n, 0, array.length));
}
var baseSampleSize_default = baseSampleSize;

// ../../node_modules/lodash/sampleSize.js
function sampleSize(collection, n, guard) {
  if (guard ? isIterateeCall_default(collection, n, guard) : n === void 0) {
    n = 1;
  } else {
    n = toInteger_default(n);
  }
  var func = isArray_default(collection) ? arraySampleSize_default : baseSampleSize_default;
  return func(collection, n);
}
var sampleSize_default = sampleSize;

// ../../node_modules/lodash/set.js
function set(object, path, value) {
  return object == null ? object : baseSet_default(object, path, value);
}
var set_default = set;

// ../../node_modules/lodash/setWith.js
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseSet_default(object, path, value, customizer);
}
var setWith_default = setWith;

// ../../node_modules/lodash/_arrayShuffle.js
function arrayShuffle(array) {
  return shuffleSelf_default(copyArray_default(array));
}
var arrayShuffle_default = arrayShuffle;

// ../../node_modules/lodash/_baseShuffle.js
function baseShuffle(collection) {
  return shuffleSelf_default(values_default(collection));
}
var baseShuffle_default = baseShuffle;

// ../../node_modules/lodash/shuffle.js
function shuffle(collection) {
  var func = isArray_default(collection) ? arrayShuffle_default : baseShuffle_default;
  return func(collection);
}
var shuffle_default = shuffle;

// ../../node_modules/lodash/size.js
var mapTag10 = "[object Map]";
var setTag10 = "[object Set]";
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike_default(collection)) {
    return isString_default(collection) ? stringSize_default(collection) : collection.length;
  }
  var tag = getTag_default(collection);
  if (tag == mapTag10 || tag == setTag10) {
    return collection.size;
  }
  return baseKeys_default(collection).length;
}
var size_default = size;

// ../../node_modules/lodash/slice.js
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  if (end && typeof end != "number" && isIterateeCall_default(array, start, end)) {
    start = 0;
    end = length;
  } else {
    start = start == null ? 0 : toInteger_default(start);
    end = end === void 0 ? length : toInteger_default(end);
  }
  return baseSlice_default(array, start, end);
}
var slice_default = slice;

// ../../node_modules/lodash/snakeCase.js
var snakeCase = createCompounder_default(function(result2, word, index3) {
  return result2 + (index3 ? "_" : "") + word.toLowerCase();
});
var snakeCase_default = snakeCase;

// ../../node_modules/lodash/_baseSome.js
function baseSome(collection, predicate) {
  var result2;
  baseEach_default(collection, function(value, index3, collection2) {
    result2 = predicate(value, index3, collection2);
    return !result2;
  });
  return !!result2;
}
var baseSome_default = baseSome;

// ../../node_modules/lodash/some.js
function some(collection, predicate, guard) {
  var func = isArray_default(collection) ? arraySome_default : baseSome_default;
  if (guard && isIterateeCall_default(collection, predicate, guard)) {
    predicate = void 0;
  }
  return func(collection, baseIteratee_default(predicate, 3));
}
var some_default = some;

// ../../node_modules/lodash/sortBy.js
var sortBy = baseRest_default(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall_default(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall_default(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy_default(collection, baseFlatten_default(iteratees, 1), []);
});
var sortBy_default = sortBy;

// ../../node_modules/lodash/_baseSortedIndexBy.js
var MAX_ARRAY_LENGTH3 = 4294967295;
var MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH3 - 1;
var nativeFloor4 = Math.floor;
var nativeMin11 = Math.min;
function baseSortedIndexBy(array, value, iteratee2, retHighest) {
  var low = 0, high = array == null ? 0 : array.length;
  if (high === 0) {
    return 0;
  }
  value = iteratee2(value);
  var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol_default(value), valIsUndefined = value === void 0;
  while (low < high) {
    var mid = nativeFloor4((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== void 0, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol_default(computed);
    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed <= value : computed < value;
    }
    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }
  return nativeMin11(high, MAX_ARRAY_INDEX);
}
var baseSortedIndexBy_default = baseSortedIndexBy;

// ../../node_modules/lodash/_baseSortedIndex.js
var MAX_ARRAY_LENGTH4 = 4294967295;
var HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH4 >>> 1;
function baseSortedIndex(array, value, retHighest) {
  var low = 0, high = array == null ? low : array.length;
  if (typeof value == "number" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1, computed = array[mid];
      if (computed !== null && !isSymbol_default(computed) && (retHighest ? computed <= value : computed < value)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }
    return high;
  }
  return baseSortedIndexBy_default(array, value, identity_default, retHighest);
}
var baseSortedIndex_default = baseSortedIndex;

// ../../node_modules/lodash/sortedIndex.js
function sortedIndex(array, value) {
  return baseSortedIndex_default(array, value);
}
var sortedIndex_default = sortedIndex;

// ../../node_modules/lodash/sortedIndexBy.js
function sortedIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2));
}
var sortedIndexBy_default = sortedIndexBy;

// ../../node_modules/lodash/sortedIndexOf.js
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index3 = baseSortedIndex_default(array, value);
    if (index3 < length && eq_default(array[index3], value)) {
      return index3;
    }
  }
  return -1;
}
var sortedIndexOf_default = sortedIndexOf;

// ../../node_modules/lodash/sortedLastIndex.js
function sortedLastIndex(array, value) {
  return baseSortedIndex_default(array, value, true);
}
var sortedLastIndex_default = sortedLastIndex;

// ../../node_modules/lodash/sortedLastIndexBy.js
function sortedLastIndexBy(array, value, iteratee2) {
  return baseSortedIndexBy_default(array, value, baseIteratee_default(iteratee2, 2), true);
}
var sortedLastIndexBy_default = sortedLastIndexBy;

// ../../node_modules/lodash/sortedLastIndexOf.js
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;
  if (length) {
    var index3 = baseSortedIndex_default(array, value, true) - 1;
    if (eq_default(array[index3], value)) {
      return index3;
    }
  }
  return -1;
}
var sortedLastIndexOf_default = sortedLastIndexOf;

// ../../node_modules/lodash/_baseSortedUniq.js
function baseSortedUniq(array, iteratee2) {
  var index3 = -1, length = array.length, resIndex = 0, result2 = [];
  while (++index3 < length) {
    var value = array[index3], computed = iteratee2 ? iteratee2(value) : value;
    if (!index3 || !eq_default(computed, seen)) {
      var seen = computed;
      result2[resIndex++] = value === 0 ? 0 : value;
    }
  }
  return result2;
}
var baseSortedUniq_default = baseSortedUniq;

// ../../node_modules/lodash/sortedUniq.js
function sortedUniq(array) {
  return array && array.length ? baseSortedUniq_default(array) : [];
}
var sortedUniq_default = sortedUniq;

// ../../node_modules/lodash/sortedUniqBy.js
function sortedUniqBy(array, iteratee2) {
  return array && array.length ? baseSortedUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var sortedUniqBy_default = sortedUniqBy;

// ../../node_modules/lodash/split.js
var MAX_ARRAY_LENGTH5 = 4294967295;
function split(string, separator, limit) {
  if (limit && typeof limit != "number" && isIterateeCall_default(string, separator, limit)) {
    separator = limit = void 0;
  }
  limit = limit === void 0 ? MAX_ARRAY_LENGTH5 : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = toString_default(string);
  if (string && (typeof separator == "string" || separator != null && !isRegExp_default(separator))) {
    separator = baseToString_default(separator);
    if (!separator && hasUnicode_default(string)) {
      return castSlice_default(stringToArray_default(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}
var split_default = split;

// ../../node_modules/lodash/spread.js
var FUNC_ERROR_TEXT11 = "Expected a function";
var nativeMax14 = Math.max;
function spread(func, start) {
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT11);
  }
  start = start == null ? 0 : nativeMax14(toInteger_default(start), 0);
  return baseRest_default(function(args) {
    var array = args[start], otherArgs = castSlice_default(args, 0, start);
    if (array) {
      arrayPush_default(otherArgs, array);
    }
    return apply_default(func, this, otherArgs);
  });
}
var spread_default = spread;

// ../../node_modules/lodash/startCase.js
var startCase = createCompounder_default(function(result2, word, index3) {
  return result2 + (index3 ? " " : "") + upperFirst_default(word);
});
var startCase_default = startCase;

// ../../node_modules/lodash/startsWith.js
function startsWith(string, target, position) {
  string = toString_default(string);
  position = position == null ? 0 : baseClamp_default(toInteger_default(position), 0, string.length);
  target = baseToString_default(target);
  return string.slice(position, position + target.length) == target;
}
var startsWith_default = startsWith;

// ../../node_modules/lodash/stubObject.js
function stubObject() {
  return {};
}
var stubObject_default = stubObject;

// ../../node_modules/lodash/stubString.js
function stubString() {
  return "";
}
var stubString_default = stubString;

// ../../node_modules/lodash/stubTrue.js
function stubTrue() {
  return true;
}
var stubTrue_default = stubTrue;

// ../../node_modules/lodash/subtract.js
var subtract = createMathOperation_default(function(minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var subtract_default = subtract;

// ../../node_modules/lodash/sum.js
function sum(array) {
  return array && array.length ? baseSum_default(array, identity_default) : 0;
}
var sum_default = sum;

// ../../node_modules/lodash/sumBy.js
function sumBy(array, iteratee2) {
  return array && array.length ? baseSum_default(array, baseIteratee_default(iteratee2, 2)) : 0;
}
var sumBy_default = sumBy;

// ../../node_modules/lodash/tail.js
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseSlice_default(array, 1, length) : [];
}
var tail_default = tail;

// ../../node_modules/lodash/take.js
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  return baseSlice_default(array, 0, n < 0 ? 0 : n);
}
var take_default = take;

// ../../node_modules/lodash/takeRight.js
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = guard || n === void 0 ? 1 : toInteger_default(n);
  n = length - n;
  return baseSlice_default(array, n < 0 ? 0 : n, length);
}
var takeRight_default = takeRight;

// ../../node_modules/lodash/takeRightWhile.js
function takeRightWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3), false, true) : [];
}
var takeRightWhile_default = takeRightWhile;

// ../../node_modules/lodash/takeWhile.js
function takeWhile(array, predicate) {
  return array && array.length ? baseWhile_default(array, baseIteratee_default(predicate, 3)) : [];
}
var takeWhile_default = takeWhile;

// ../../node_modules/lodash/tap.js
function tap(value, interceptor) {
  interceptor(value);
  return value;
}
var tap_default = tap;

// ../../node_modules/lodash/_customDefaultsAssignIn.js
var objectProto27 = Object.prototype;
var hasOwnProperty23 = objectProto27.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === void 0 || eq_default(objValue, objectProto27[key]) && !hasOwnProperty23.call(object, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// ../../node_modules/lodash/_escapeStringChar.js
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// ../../node_modules/lodash/_reInterpolate.js
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// ../../node_modules/lodash/_reEscape.js
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// ../../node_modules/lodash/_reEvaluate.js
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// ../../node_modules/lodash/templateSettings.js
var templateSettings = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "escape": reEscape_default,
  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "evaluate": reEvaluate_default,
  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  "interpolate": reInterpolate_default,
  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  "variable": "",
  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  "imports": {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// ../../node_modules/lodash/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto28 = Object.prototype;
var hasOwnProperty24 = objectProto28.hasOwnProperty;
function template(string, options, guard) {
  var settings = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string, options, guard)) {
    options = void 0;
  }
  string = toString_default(string);
  options = assignInWith_default({}, options, settings, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options.imports, settings.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index3 = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp(
    (options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$",
    "g"
  );
  var sourceURL = hasOwnProperty24.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match2, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index3, offset).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index3 = offset + match2.length;
    return match2;
  });
  source += "';\n";
  var variable = hasOwnProperty24.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result2 = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result2.source = source;
  if (isError_default(result2)) {
    throw result2;
  }
  return result2;
}
var template_default = template;

// ../../node_modules/lodash/throttle.js
var FUNC_ERROR_TEXT12 = "Expected a function";
function throttle(func, wait, options) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT12);
  }
  if (isObject_default(options)) {
    leading = "leading" in options ? !!options.leading : leading;
    trailing = "trailing" in options ? !!options.trailing : trailing;
  }
  return debounce_default(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var throttle_default = throttle;

// ../../node_modules/lodash/thru.js
function thru(value, interceptor) {
  return interceptor(value);
}
var thru_default = thru;

// ../../node_modules/lodash/times.js
var MAX_SAFE_INTEGER5 = 9007199254740991;
var MAX_ARRAY_LENGTH6 = 4294967295;
var nativeMin12 = Math.min;
function times(n, iteratee2) {
  n = toInteger_default(n);
  if (n < 1 || n > MAX_SAFE_INTEGER5) {
    return [];
  }
  var index3 = MAX_ARRAY_LENGTH6, length = nativeMin12(n, MAX_ARRAY_LENGTH6);
  iteratee2 = castFunction_default(iteratee2);
  n -= MAX_ARRAY_LENGTH6;
  var result2 = baseTimes_default(length, iteratee2);
  while (++index3 < n) {
    iteratee2(index3);
  }
  return result2;
}
var times_default = times;

// ../../node_modules/lodash/toIterator.js
function wrapperToIterator() {
  return this;
}
var toIterator_default = wrapperToIterator;

// ../../node_modules/lodash/_baseWrapperValue.js
function baseWrapperValue(value, actions) {
  var result2 = value;
  if (result2 instanceof LazyWrapper_default) {
    result2 = result2.value();
  }
  return arrayReduce_default(actions, function(result3, action) {
    return action.func.apply(action.thisArg, arrayPush_default([result3], action.args));
  }, result2);
}
var baseWrapperValue_default = baseWrapperValue;

// ../../node_modules/lodash/wrapperValue.js
function wrapperValue() {
  return baseWrapperValue_default(this.__wrapped__, this.__actions__);
}
var wrapperValue_default = wrapperValue;

// ../../node_modules/lodash/toLower.js
function toLower(value) {
  return toString_default(value).toLowerCase();
}
var toLower_default = toLower;

// ../../node_modules/lodash/toPath.js
function toPath(value) {
  if (isArray_default(value)) {
    return arrayMap_default(value, toKey_default);
  }
  return isSymbol_default(value) ? [value] : copyArray_default(stringToPath_default(toString_default(value)));
}
var toPath_default = toPath;

// ../../node_modules/lodash/toSafeInteger.js
var MAX_SAFE_INTEGER6 = 9007199254740991;
function toSafeInteger(value) {
  return value ? baseClamp_default(toInteger_default(value), -MAX_SAFE_INTEGER6, MAX_SAFE_INTEGER6) : value === 0 ? value : 0;
}
var toSafeInteger_default = toSafeInteger;

// ../../node_modules/lodash/toUpper.js
function toUpper(value) {
  return toString_default(value).toUpperCase();
}
var toUpper_default = toUpper;

// ../../node_modules/lodash/transform.js
function transform(object, iteratee2, accumulator) {
  var isArr = isArray_default(object), isArrLike = isArr || isBuffer_default(object) || isTypedArray_default(object);
  iteratee2 = baseIteratee_default(iteratee2, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if (isObject_default(object)) {
      accumulator = isFunction_default(Ctor) ? baseCreate_default(getPrototype_default(object)) : {};
    } else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach_default : baseForOwn_default)(object, function(value, index3, object2) {
    return iteratee2(accumulator, value, index3, object2);
  });
  return accumulator;
}
var transform_default = transform;

// ../../node_modules/lodash/_charsEndIndex.js
function charsEndIndex(strSymbols, chrSymbols) {
  var index3 = strSymbols.length;
  while (index3-- && baseIndexOf_default(chrSymbols, strSymbols[index3], 0) > -1) {
  }
  return index3;
}
var charsEndIndex_default = charsEndIndex;

// ../../node_modules/lodash/_charsStartIndex.js
function charsStartIndex(strSymbols, chrSymbols) {
  var index3 = -1, length = strSymbols.length;
  while (++index3 < length && baseIndexOf_default(chrSymbols, strSymbols[index3], 0) > -1) {
  }
  return index3;
}
var charsStartIndex_default = charsStartIndex;

// ../../node_modules/lodash/trim.js
function trim(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return baseTrim_default(string);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), chrSymbols = stringToArray_default(chars), start = charsStartIndex_default(strSymbols, chrSymbols), end = charsEndIndex_default(strSymbols, chrSymbols) + 1;
  return castSlice_default(strSymbols, start, end).join("");
}
var trim_default = trim;

// ../../node_modules/lodash/trimEnd.js
function trimEnd(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.slice(0, trimmedEndIndex_default(string) + 1);
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), end = charsEndIndex_default(strSymbols, stringToArray_default(chars)) + 1;
  return castSlice_default(strSymbols, 0, end).join("");
}
var trimEnd_default = trimEnd;

// ../../node_modules/lodash/trimStart.js
var reTrimStart3 = /^\s+/;
function trimStart(string, chars, guard) {
  string = toString_default(string);
  if (string && (guard || chars === void 0)) {
    return string.replace(reTrimStart3, "");
  }
  if (!string || !(chars = baseToString_default(chars))) {
    return string;
  }
  var strSymbols = stringToArray_default(string), start = charsStartIndex_default(strSymbols, stringToArray_default(chars));
  return castSlice_default(strSymbols, start).join("");
}
var trimStart_default = trimStart;

// ../../node_modules/lodash/truncate.js
var DEFAULT_TRUNC_LENGTH = 30;
var DEFAULT_TRUNC_OMISSION = "...";
var reFlags2 = /\w*$/;
function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
  if (isObject_default(options)) {
    var separator = "separator" in options ? options.separator : separator;
    length = "length" in options ? toInteger_default(options.length) : length;
    omission = "omission" in options ? baseToString_default(options.omission) : omission;
  }
  string = toString_default(string);
  var strLength = string.length;
  if (hasUnicode_default(string)) {
    var strSymbols = stringToArray_default(string);
    strLength = strSymbols.length;
  }
  if (length >= strLength) {
    return string;
  }
  var end = length - stringSize_default(omission);
  if (end < 1) {
    return omission;
  }
  var result2 = strSymbols ? castSlice_default(strSymbols, 0, end).join("") : string.slice(0, end);
  if (separator === void 0) {
    return result2 + omission;
  }
  if (strSymbols) {
    end += result2.length - end;
  }
  if (isRegExp_default(separator)) {
    if (string.slice(end).search(separator)) {
      var match2, substring = result2;
      if (!separator.global) {
        separator = RegExp(separator.source, toString_default(reFlags2.exec(separator)) + "g");
      }
      separator.lastIndex = 0;
      while (match2 = separator.exec(substring)) {
        var newEnd = match2.index;
      }
      result2 = result2.slice(0, newEnd === void 0 ? end : newEnd);
    }
  } else if (string.indexOf(baseToString_default(separator), end) != end) {
    var index3 = result2.lastIndexOf(separator);
    if (index3 > -1) {
      result2 = result2.slice(0, index3);
    }
  }
  return result2 + omission;
}
var truncate_default = truncate;

// ../../node_modules/lodash/unary.js
function unary(func) {
  return ary_default(func, 1);
}
var unary_default = unary;

// ../../node_modules/lodash/_unescapeHtmlChar.js
var htmlUnescapes = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
};
var unescapeHtmlChar = basePropertyOf_default(htmlUnescapes);
var unescapeHtmlChar_default = unescapeHtmlChar;

// ../../node_modules/lodash/unescape.js
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;
var reHasEscapedHtml = RegExp(reEscapedHtml.source);
function unescape2(string) {
  string = toString_default(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar_default) : string;
}
var unescape_default = unescape2;

// ../../node_modules/lodash/_createSet.js
var INFINITY6 = 1 / 0;
var createSet = !(Set_default && 1 / setToArray_default(new Set_default([, -0]))[1] == INFINITY6) ? noop_default : function(values2) {
  return new Set_default(values2);
};
var createSet_default = createSet;

// ../../node_modules/lodash/_baseUniq.js
var LARGE_ARRAY_SIZE3 = 200;
function baseUniq(array, iteratee2, comparator) {
  var index3 = -1, includes2 = arrayIncludes_default, length = array.length, isCommon = true, result2 = [], seen = result2;
  if (comparator) {
    isCommon = false;
    includes2 = arrayIncludesWith_default;
  } else if (length >= LARGE_ARRAY_SIZE3) {
    var set2 = iteratee2 ? null : createSet_default(array);
    if (set2) {
      return setToArray_default(set2);
    }
    isCommon = false;
    includes2 = cacheHas_default;
    seen = new SetCache_default();
  } else {
    seen = iteratee2 ? [] : result2;
  }
  outer:
    while (++index3 < length) {
      var value = array[index3], computed = iteratee2 ? iteratee2(value) : value;
      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee2) {
          seen.push(computed);
        }
        result2.push(value);
      } else if (!includes2(seen, computed, comparator)) {
        if (seen !== result2) {
          seen.push(computed);
        }
        result2.push(value);
      }
    }
  return result2;
}
var baseUniq_default = baseUniq;

// ../../node_modules/lodash/union.js
var union = baseRest_default(function(arrays) {
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true));
});
var union_default = union;

// ../../node_modules/lodash/unionBy.js
var unionBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), baseIteratee_default(iteratee2, 2));
});
var unionBy_default = unionBy;

// ../../node_modules/lodash/unionWith.js
var unionWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseUniq_default(baseFlatten_default(arrays, 1, isArrayLikeObject_default, true), void 0, comparator);
});
var unionWith_default = unionWith;

// ../../node_modules/lodash/uniq.js
function uniq(array) {
  return array && array.length ? baseUniq_default(array) : [];
}
var uniq_default = uniq;

// ../../node_modules/lodash/uniqBy.js
function uniqBy(array, iteratee2) {
  return array && array.length ? baseUniq_default(array, baseIteratee_default(iteratee2, 2)) : [];
}
var uniqBy_default = uniqBy;

// ../../node_modules/lodash/uniqWith.js
function uniqWith(array, comparator) {
  comparator = typeof comparator == "function" ? comparator : void 0;
  return array && array.length ? baseUniq_default(array, void 0, comparator) : [];
}
var uniqWith_default = uniqWith;

// ../../node_modules/lodash/uniqueId.js
var idCounter = 0;
function uniqueId(prefix) {
  var id = ++idCounter;
  return toString_default(prefix) + id;
}
var uniqueId_default = uniqueId;

// ../../node_modules/lodash/unset.js
function unset(object, path) {
  return object == null ? true : baseUnset_default(object, path);
}
var unset_default = unset;

// ../../node_modules/lodash/unzip.js
var nativeMax15 = Math.max;
function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }
  var length = 0;
  array = arrayFilter_default(array, function(group) {
    if (isArrayLikeObject_default(group)) {
      length = nativeMax15(group.length, length);
      return true;
    }
  });
  return baseTimes_default(length, function(index3) {
    return arrayMap_default(array, baseProperty_default(index3));
  });
}
var unzip_default = unzip;

// ../../node_modules/lodash/unzipWith.js
function unzipWith(array, iteratee2) {
  if (!(array && array.length)) {
    return [];
  }
  var result2 = unzip_default(array);
  if (iteratee2 == null) {
    return result2;
  }
  return arrayMap_default(result2, function(group) {
    return apply_default(iteratee2, void 0, group);
  });
}
var unzipWith_default = unzipWith;

// ../../node_modules/lodash/_baseUpdate.js
function baseUpdate(object, path, updater, customizer) {
  return baseSet_default(object, path, updater(baseGet_default(object, path)), customizer);
}
var baseUpdate_default = baseUpdate;

// ../../node_modules/lodash/update.js
function update(object, path, updater) {
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater));
}
var update_default = update;

// ../../node_modules/lodash/updateWith.js
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == "function" ? customizer : void 0;
  return object == null ? object : baseUpdate_default(object, path, castFunction_default(updater), customizer);
}
var updateWith_default = updateWith;

// ../../node_modules/lodash/upperCase.js
var upperCase = createCompounder_default(function(result2, word, index3) {
  return result2 + (index3 ? " " : "") + word.toUpperCase();
});
var upperCase_default = upperCase;

// ../../node_modules/lodash/valuesIn.js
function valuesIn(object) {
  return object == null ? [] : baseValues_default(object, keysIn_default(object));
}
var valuesIn_default = valuesIn;

// ../../node_modules/lodash/without.js
var without = baseRest_default(function(array, values2) {
  return isArrayLikeObject_default(array) ? baseDifference_default(array, values2) : [];
});
var without_default = without;

// ../../node_modules/lodash/wrap.js
function wrap(value, wrapper) {
  return partial_default(castFunction_default(wrapper), value);
}
var wrap_default = wrap;

// ../../node_modules/lodash/wrapperAt.js
var wrapperAt = flatRest_default(function(paths) {
  var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
    return baseAt_default(object, paths);
  };
  if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper_default) || !isIndex_default(start)) {
    return this.thru(interceptor);
  }
  value = value.slice(start, +start + (length ? 1 : 0));
  value.__actions__.push({
    "func": thru_default,
    "args": [interceptor],
    "thisArg": void 0
  });
  return new LodashWrapper_default(value, this.__chain__).thru(function(array) {
    if (length && !array.length) {
      array.push(void 0);
    }
    return array;
  });
});
var wrapperAt_default = wrapperAt;

// ../../node_modules/lodash/wrapperChain.js
function wrapperChain() {
  return chain_default(this);
}
var wrapperChain_default = wrapperChain;

// ../../node_modules/lodash/wrapperReverse.js
function wrapperReverse() {
  var value = this.__wrapped__;
  if (value instanceof LazyWrapper_default) {
    var wrapped = value;
    if (this.__actions__.length) {
      wrapped = new LazyWrapper_default(this);
    }
    wrapped = wrapped.reverse();
    wrapped.__actions__.push({
      "func": thru_default,
      "args": [reverse_default],
      "thisArg": void 0
    });
    return new LodashWrapper_default(wrapped, this.__chain__);
  }
  return this.thru(reverse_default);
}
var wrapperReverse_default = wrapperReverse;

// ../../node_modules/lodash/_baseXor.js
function baseXor(arrays, iteratee2, comparator) {
  var length = arrays.length;
  if (length < 2) {
    return length ? baseUniq_default(arrays[0]) : [];
  }
  var index3 = -1, result2 = Array(length);
  while (++index3 < length) {
    var array = arrays[index3], othIndex = -1;
    while (++othIndex < length) {
      if (othIndex != index3) {
        result2[index3] = baseDifference_default(result2[index3] || array, arrays[othIndex], iteratee2, comparator);
      }
    }
  }
  return baseUniq_default(baseFlatten_default(result2, 1), iteratee2, comparator);
}
var baseXor_default = baseXor;

// ../../node_modules/lodash/xor.js
var xor = baseRest_default(function(arrays) {
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default));
});
var xor_default = xor;

// ../../node_modules/lodash/xorBy.js
var xorBy = baseRest_default(function(arrays) {
  var iteratee2 = last_default(arrays);
  if (isArrayLikeObject_default(iteratee2)) {
    iteratee2 = void 0;
  }
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), baseIteratee_default(iteratee2, 2));
});
var xorBy_default = xorBy;

// ../../node_modules/lodash/xorWith.js
var xorWith = baseRest_default(function(arrays) {
  var comparator = last_default(arrays);
  comparator = typeof comparator == "function" ? comparator : void 0;
  return baseXor_default(arrayFilter_default(arrays, isArrayLikeObject_default), void 0, comparator);
});
var xorWith_default = xorWith;

// ../../node_modules/lodash/zip.js
var zip = baseRest_default(unzip_default);
var zip_default = zip;

// ../../node_modules/lodash/_baseZipObject.js
function baseZipObject(props, values2, assignFunc) {
  var index3 = -1, length = props.length, valsLength = values2.length, result2 = {};
  while (++index3 < length) {
    var value = index3 < valsLength ? values2[index3] : void 0;
    assignFunc(result2, props[index3], value);
  }
  return result2;
}
var baseZipObject_default = baseZipObject;

// ../../node_modules/lodash/zipObject.js
function zipObject(props, values2) {
  return baseZipObject_default(props || [], values2 || [], assignValue_default);
}
var zipObject_default = zipObject;

// ../../node_modules/lodash/zipObjectDeep.js
function zipObjectDeep(props, values2) {
  return baseZipObject_default(props || [], values2 || [], baseSet_default);
}
var zipObjectDeep_default = zipObjectDeep;

// ../../node_modules/lodash/zipWith.js
var zipWith = baseRest_default(function(arrays) {
  var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : void 0;
  iteratee2 = typeof iteratee2 == "function" ? (arrays.pop(), iteratee2) : void 0;
  return unzipWith_default(arrays, iteratee2);
});
var zipWith_default = zipWith;

// ../../node_modules/lodash/array.default.js
var array_default_default = {
  chunk: chunk_default,
  compact: compact_default,
  concat: concat_default,
  difference: difference_default,
  differenceBy: differenceBy_default,
  differenceWith: differenceWith_default,
  drop: drop_default,
  dropRight: dropRight_default,
  dropRightWhile: dropRightWhile_default,
  dropWhile: dropWhile_default,
  fill: fill_default,
  findIndex: findIndex_default,
  findLastIndex: findLastIndex_default,
  first: head_default,
  flatten: flatten_default,
  flattenDeep: flattenDeep_default,
  flattenDepth: flattenDepth_default,
  fromPairs: fromPairs_default,
  head: head_default,
  indexOf: indexOf_default,
  initial: initial_default,
  intersection: intersection_default,
  intersectionBy: intersectionBy_default,
  intersectionWith: intersectionWith_default,
  join: join_default,
  last: last_default,
  lastIndexOf: lastIndexOf_default,
  nth: nth_default,
  pull: pull_default,
  pullAll: pullAll_default,
  pullAllBy: pullAllBy_default,
  pullAllWith: pullAllWith_default,
  pullAt: pullAt_default,
  remove: remove_default,
  reverse: reverse_default,
  slice: slice_default,
  sortedIndex: sortedIndex_default,
  sortedIndexBy: sortedIndexBy_default,
  sortedIndexOf: sortedIndexOf_default,
  sortedLastIndex: sortedLastIndex_default,
  sortedLastIndexBy: sortedLastIndexBy_default,
  sortedLastIndexOf: sortedLastIndexOf_default,
  sortedUniq: sortedUniq_default,
  sortedUniqBy: sortedUniqBy_default,
  tail: tail_default,
  take: take_default,
  takeRight: takeRight_default,
  takeRightWhile: takeRightWhile_default,
  takeWhile: takeWhile_default,
  union: union_default,
  unionBy: unionBy_default,
  unionWith: unionWith_default,
  uniq: uniq_default,
  uniqBy: uniqBy_default,
  uniqWith: uniqWith_default,
  unzip: unzip_default,
  unzipWith: unzipWith_default,
  without: without_default,
  xor: xor_default,
  xorBy: xorBy_default,
  xorWith: xorWith_default,
  zip: zip_default,
  zipObject: zipObject_default,
  zipObjectDeep: zipObjectDeep_default,
  zipWith: zipWith_default
};

// ../../node_modules/lodash/collection.default.js
var collection_default_default = {
  countBy: countBy_default,
  each: forEach_default,
  eachRight: forEachRight_default,
  every: every_default,
  filter: filter_default,
  find: find_default,
  findLast: findLast_default,
  flatMap: flatMap_default,
  flatMapDeep: flatMapDeep_default,
  flatMapDepth: flatMapDepth_default,
  forEach: forEach_default,
  forEachRight: forEachRight_default,
  groupBy: groupBy_default,
  includes: includes_default,
  invokeMap: invokeMap_default,
  keyBy: keyBy_default,
  map: map_default,
  orderBy: orderBy_default,
  partition: partition_default,
  reduce: reduce_default,
  reduceRight: reduceRight_default,
  reject: reject_default,
  sample: sample_default,
  sampleSize: sampleSize_default,
  shuffle: shuffle_default,
  size: size_default,
  some: some_default,
  sortBy: sortBy_default
};

// ../../node_modules/lodash/date.default.js
var date_default_default = {
  now: now_default
};

// ../../node_modules/lodash/function.default.js
var function_default_default = {
  after: after_default,
  ary: ary_default,
  before: before_default,
  bind: bind_default,
  bindKey: bindKey_default,
  curry: curry_default,
  curryRight: curryRight_default,
  debounce: debounce_default,
  defer: defer_default,
  delay: delay_default,
  flip: flip_default,
  memoize: memoize_default,
  negate: negate_default,
  once: once_default,
  overArgs: overArgs_default,
  partial: partial_default,
  partialRight: partialRight_default,
  rearg: rearg_default,
  rest: rest_default,
  spread: spread_default,
  throttle: throttle_default,
  unary: unary_default,
  wrap: wrap_default
};

// ../../node_modules/lodash/lang.default.js
var lang_default_default = {
  castArray: castArray_default,
  clone: clone_default,
  cloneDeep: cloneDeep_default,
  cloneDeepWith: cloneDeepWith_default,
  cloneWith: cloneWith_default,
  conformsTo: conformsTo_default,
  eq: eq_default,
  gt: gt_default,
  gte: gte_default,
  isArguments: isArguments_default,
  isArray: isArray_default,
  isArrayBuffer: isArrayBuffer_default,
  isArrayLike: isArrayLike_default,
  isArrayLikeObject: isArrayLikeObject_default,
  isBoolean: isBoolean_default,
  isBuffer: isBuffer_default,
  isDate: isDate_default,
  isElement: isElement_default,
  isEmpty: isEmpty_default,
  isEqual: isEqual_default,
  isEqualWith: isEqualWith_default,
  isError: isError_default,
  isFinite: isFinite_default,
  isFunction: isFunction_default,
  isInteger: isInteger_default,
  isLength: isLength_default,
  isMap: isMap_default,
  isMatch: isMatch_default,
  isMatchWith: isMatchWith_default,
  isNaN: isNaN_default,
  isNative: isNative_default,
  isNil: isNil_default,
  isNull: isNull_default,
  isNumber: isNumber_default,
  isObject: isObject_default,
  isObjectLike: isObjectLike_default,
  isPlainObject: isPlainObject_default,
  isRegExp: isRegExp_default,
  isSafeInteger: isSafeInteger_default,
  isSet: isSet_default,
  isString: isString_default,
  isSymbol: isSymbol_default,
  isTypedArray: isTypedArray_default,
  isUndefined: isUndefined_default,
  isWeakMap: isWeakMap_default,
  isWeakSet: isWeakSet_default,
  lt: lt_default,
  lte: lte_default,
  toArray: toArray_default,
  toFinite: toFinite_default,
  toInteger: toInteger_default,
  toLength: toLength_default,
  toNumber: toNumber_default,
  toPlainObject: toPlainObject_default,
  toSafeInteger: toSafeInteger_default,
  toString: toString_default
};

// ../../node_modules/lodash/math.default.js
var math_default_default = {
  add: add_default,
  ceil: ceil_default,
  divide: divide_default,
  floor: floor_default,
  max: max_default,
  maxBy: maxBy_default,
  mean: mean_default,
  meanBy: meanBy_default,
  min: min_default,
  minBy: minBy_default,
  multiply: multiply_default,
  round: round_default,
  subtract: subtract_default,
  sum: sum_default,
  sumBy: sumBy_default
};

// ../../node_modules/lodash/number.default.js
var number_default_default = {
  clamp: clamp_default,
  inRange: inRange_default,
  random: random_default
};

// ../../node_modules/lodash/object.default.js
var object_default_default = {
  assign: assign_default,
  assignIn: assignIn_default,
  assignInWith: assignInWith_default,
  assignWith: assignWith_default,
  at: at_default,
  create: create_default,
  defaults: defaults_default,
  defaultsDeep: defaultsDeep_default,
  entries: toPairs_default,
  entriesIn: toPairsIn_default,
  extend: assignIn_default,
  extendWith: assignInWith_default,
  findKey: findKey_default,
  findLastKey: findLastKey_default,
  forIn: forIn_default,
  forInRight: forInRight_default,
  forOwn: forOwn_default,
  forOwnRight: forOwnRight_default,
  functions: functions_default,
  functionsIn: functionsIn_default,
  get: get_default,
  has: has_default,
  hasIn: hasIn_default,
  invert: invert_default,
  invertBy: invertBy_default,
  invoke: invoke_default,
  keys: keys_default,
  keysIn: keysIn_default,
  mapKeys: mapKeys_default,
  mapValues: mapValues_default,
  merge: merge_default,
  mergeWith: mergeWith_default,
  omit: omit_default,
  omitBy: omitBy_default,
  pick: pick_default,
  pickBy: pickBy_default,
  result: result_default,
  set: set_default,
  setWith: setWith_default,
  toPairs: toPairs_default,
  toPairsIn: toPairsIn_default,
  transform: transform_default,
  unset: unset_default,
  update: update_default,
  updateWith: updateWith_default,
  values: values_default,
  valuesIn: valuesIn_default
};

// ../../node_modules/lodash/seq.default.js
var seq_default_default = {
  at: wrapperAt_default,
  chain: chain_default,
  commit: commit_default,
  lodash: wrapperLodash_default,
  next: next_default,
  plant: plant_default,
  reverse: wrapperReverse_default,
  tap: tap_default,
  thru: thru_default,
  toIterator: toIterator_default,
  toJSON: wrapperValue_default,
  value: wrapperValue_default,
  valueOf: wrapperValue_default,
  wrapperChain: wrapperChain_default
};

// ../../node_modules/lodash/string.default.js
var string_default_default = {
  camelCase: camelCase_default,
  capitalize: capitalize_default,
  deburr: deburr_default,
  endsWith: endsWith_default,
  escape: escape_default,
  escapeRegExp: escapeRegExp_default,
  kebabCase: kebabCase_default,
  lowerCase: lowerCase_default,
  lowerFirst: lowerFirst_default,
  pad: pad_default,
  padEnd: padEnd_default,
  padStart: padStart_default,
  parseInt: parseInt_default,
  repeat: repeat_default,
  replace: replace_default,
  snakeCase: snakeCase_default,
  split: split_default,
  startCase: startCase_default,
  startsWith: startsWith_default,
  template: template_default,
  templateSettings: templateSettings_default,
  toLower: toLower_default,
  toUpper: toUpper_default,
  trim: trim_default,
  trimEnd: trimEnd_default,
  trimStart: trimStart_default,
  truncate: truncate_default,
  unescape: unescape_default,
  upperCase: upperCase_default,
  upperFirst: upperFirst_default,
  words: words_default
};

// ../../node_modules/lodash/util.default.js
var util_default_default = {
  attempt: attempt_default,
  bindAll: bindAll_default,
  cond: cond_default,
  conforms: conforms_default,
  constant: constant_default,
  defaultTo: defaultTo_default,
  flow: flow_default,
  flowRight: flowRight_default,
  identity: identity_default,
  iteratee: iteratee_default,
  matches: matches_default,
  matchesProperty: matchesProperty_default,
  method: method_default,
  methodOf: methodOf_default,
  mixin: mixin_default,
  noop: noop_default,
  nthArg: nthArg_default,
  over: over_default,
  overEvery: overEvery_default,
  overSome: overSome_default,
  property: property_default,
  propertyOf: propertyOf_default,
  range: range_default,
  rangeRight: rangeRight_default,
  stubArray: stubArray_default,
  stubFalse: stubFalse_default,
  stubObject: stubObject_default,
  stubString: stubString_default,
  stubTrue: stubTrue_default,
  times: times_default,
  toPath: toPath_default,
  uniqueId: uniqueId_default
};

// ../../node_modules/lodash/_lazyClone.js
function lazyClone() {
  var result2 = new LazyWrapper_default(this.__wrapped__);
  result2.__actions__ = copyArray_default(this.__actions__);
  result2.__dir__ = this.__dir__;
  result2.__filtered__ = this.__filtered__;
  result2.__iteratees__ = copyArray_default(this.__iteratees__);
  result2.__takeCount__ = this.__takeCount__;
  result2.__views__ = copyArray_default(this.__views__);
  return result2;
}
var lazyClone_default = lazyClone;

// ../../node_modules/lodash/_lazyReverse.js
function lazyReverse() {
  if (this.__filtered__) {
    var result2 = new LazyWrapper_default(this);
    result2.__dir__ = -1;
    result2.__filtered__ = true;
  } else {
    result2 = this.clone();
    result2.__dir__ *= -1;
  }
  return result2;
}
var lazyReverse_default = lazyReverse;

// ../../node_modules/lodash/_getView.js
var nativeMax16 = Math.max;
var nativeMin13 = Math.min;
function getView(start, end, transforms) {
  var index3 = -1, length = transforms.length;
  while (++index3 < length) {
    var data = transforms[index3], size2 = data.size;
    switch (data.type) {
      case "drop":
        start += size2;
        break;
      case "dropRight":
        end -= size2;
        break;
      case "take":
        end = nativeMin13(end, start + size2);
        break;
      case "takeRight":
        start = nativeMax16(start, end - size2);
        break;
    }
  }
  return { "start": start, "end": end };
}
var getView_default = getView;

// ../../node_modules/lodash/_lazyValue.js
var LAZY_FILTER_FLAG = 1;
var LAZY_MAP_FLAG = 2;
var nativeMin14 = Math.min;
function lazyValue() {
  var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray_default(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView_default(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index3 = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin14(length, this.__takeCount__);
  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return baseWrapperValue_default(array, this.__actions__);
  }
  var result2 = [];
  outer:
    while (length-- && resIndex < takeCount) {
      index3 += dir;
      var iterIndex = -1, value = array[index3];
      while (++iterIndex < iterLength) {
        var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);
        if (type == LAZY_MAP_FLAG) {
          value = computed;
        } else if (!computed) {
          if (type == LAZY_FILTER_FLAG) {
            continue outer;
          } else {
            break outer;
          }
        }
      }
      result2[resIndex++] = value;
    }
  return result2;
}
var lazyValue_default = lazyValue;

// ../../node_modules/lodash/lodash.default.js
var VERSION = "4.17.21";
var WRAP_BIND_KEY_FLAG7 = 2;
var LAZY_FILTER_FLAG2 = 1;
var LAZY_WHILE_FLAG = 3;
var MAX_ARRAY_LENGTH7 = 4294967295;
var arrayProto6 = Array.prototype;
var objectProto29 = Object.prototype;
var hasOwnProperty25 = objectProto29.hasOwnProperty;
var symIterator2 = Symbol_default ? Symbol_default.iterator : void 0;
var nativeMax17 = Math.max;
var nativeMin15 = Math.min;
var mixin2 = /* @__PURE__ */ (function(func) {
  return function(object, source, options) {
    if (options == null) {
      var isObj = isObject_default(source), props = isObj && keys_default(source), methodNames = props && props.length && baseFunctions_default(source, props);
      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }
    return func(object, source, options);
  };
})(mixin_default);
wrapperLodash_default.after = function_default_default.after;
wrapperLodash_default.ary = function_default_default.ary;
wrapperLodash_default.assign = object_default_default.assign;
wrapperLodash_default.assignIn = object_default_default.assignIn;
wrapperLodash_default.assignInWith = object_default_default.assignInWith;
wrapperLodash_default.assignWith = object_default_default.assignWith;
wrapperLodash_default.at = object_default_default.at;
wrapperLodash_default.before = function_default_default.before;
wrapperLodash_default.bind = function_default_default.bind;
wrapperLodash_default.bindAll = util_default_default.bindAll;
wrapperLodash_default.bindKey = function_default_default.bindKey;
wrapperLodash_default.castArray = lang_default_default.castArray;
wrapperLodash_default.chain = seq_default_default.chain;
wrapperLodash_default.chunk = array_default_default.chunk;
wrapperLodash_default.compact = array_default_default.compact;
wrapperLodash_default.concat = array_default_default.concat;
wrapperLodash_default.cond = util_default_default.cond;
wrapperLodash_default.conforms = util_default_default.conforms;
wrapperLodash_default.constant = util_default_default.constant;
wrapperLodash_default.countBy = collection_default_default.countBy;
wrapperLodash_default.create = object_default_default.create;
wrapperLodash_default.curry = function_default_default.curry;
wrapperLodash_default.curryRight = function_default_default.curryRight;
wrapperLodash_default.debounce = function_default_default.debounce;
wrapperLodash_default.defaults = object_default_default.defaults;
wrapperLodash_default.defaultsDeep = object_default_default.defaultsDeep;
wrapperLodash_default.defer = function_default_default.defer;
wrapperLodash_default.delay = function_default_default.delay;
wrapperLodash_default.difference = array_default_default.difference;
wrapperLodash_default.differenceBy = array_default_default.differenceBy;
wrapperLodash_default.differenceWith = array_default_default.differenceWith;
wrapperLodash_default.drop = array_default_default.drop;
wrapperLodash_default.dropRight = array_default_default.dropRight;
wrapperLodash_default.dropRightWhile = array_default_default.dropRightWhile;
wrapperLodash_default.dropWhile = array_default_default.dropWhile;
wrapperLodash_default.fill = array_default_default.fill;
wrapperLodash_default.filter = collection_default_default.filter;
wrapperLodash_default.flatMap = collection_default_default.flatMap;
wrapperLodash_default.flatMapDeep = collection_default_default.flatMapDeep;
wrapperLodash_default.flatMapDepth = collection_default_default.flatMapDepth;
wrapperLodash_default.flatten = array_default_default.flatten;
wrapperLodash_default.flattenDeep = array_default_default.flattenDeep;
wrapperLodash_default.flattenDepth = array_default_default.flattenDepth;
wrapperLodash_default.flip = function_default_default.flip;
wrapperLodash_default.flow = util_default_default.flow;
wrapperLodash_default.flowRight = util_default_default.flowRight;
wrapperLodash_default.fromPairs = array_default_default.fromPairs;
wrapperLodash_default.functions = object_default_default.functions;
wrapperLodash_default.functionsIn = object_default_default.functionsIn;
wrapperLodash_default.groupBy = collection_default_default.groupBy;
wrapperLodash_default.initial = array_default_default.initial;
wrapperLodash_default.intersection = array_default_default.intersection;
wrapperLodash_default.intersectionBy = array_default_default.intersectionBy;
wrapperLodash_default.intersectionWith = array_default_default.intersectionWith;
wrapperLodash_default.invert = object_default_default.invert;
wrapperLodash_default.invertBy = object_default_default.invertBy;
wrapperLodash_default.invokeMap = collection_default_default.invokeMap;
wrapperLodash_default.iteratee = util_default_default.iteratee;
wrapperLodash_default.keyBy = collection_default_default.keyBy;
wrapperLodash_default.keys = keys_default;
wrapperLodash_default.keysIn = object_default_default.keysIn;
wrapperLodash_default.map = collection_default_default.map;
wrapperLodash_default.mapKeys = object_default_default.mapKeys;
wrapperLodash_default.mapValues = object_default_default.mapValues;
wrapperLodash_default.matches = util_default_default.matches;
wrapperLodash_default.matchesProperty = util_default_default.matchesProperty;
wrapperLodash_default.memoize = function_default_default.memoize;
wrapperLodash_default.merge = object_default_default.merge;
wrapperLodash_default.mergeWith = object_default_default.mergeWith;
wrapperLodash_default.method = util_default_default.method;
wrapperLodash_default.methodOf = util_default_default.methodOf;
wrapperLodash_default.mixin = mixin2;
wrapperLodash_default.negate = negate_default;
wrapperLodash_default.nthArg = util_default_default.nthArg;
wrapperLodash_default.omit = object_default_default.omit;
wrapperLodash_default.omitBy = object_default_default.omitBy;
wrapperLodash_default.once = function_default_default.once;
wrapperLodash_default.orderBy = collection_default_default.orderBy;
wrapperLodash_default.over = util_default_default.over;
wrapperLodash_default.overArgs = function_default_default.overArgs;
wrapperLodash_default.overEvery = util_default_default.overEvery;
wrapperLodash_default.overSome = util_default_default.overSome;
wrapperLodash_default.partial = function_default_default.partial;
wrapperLodash_default.partialRight = function_default_default.partialRight;
wrapperLodash_default.partition = collection_default_default.partition;
wrapperLodash_default.pick = object_default_default.pick;
wrapperLodash_default.pickBy = object_default_default.pickBy;
wrapperLodash_default.property = util_default_default.property;
wrapperLodash_default.propertyOf = util_default_default.propertyOf;
wrapperLodash_default.pull = array_default_default.pull;
wrapperLodash_default.pullAll = array_default_default.pullAll;
wrapperLodash_default.pullAllBy = array_default_default.pullAllBy;
wrapperLodash_default.pullAllWith = array_default_default.pullAllWith;
wrapperLodash_default.pullAt = array_default_default.pullAt;
wrapperLodash_default.range = util_default_default.range;
wrapperLodash_default.rangeRight = util_default_default.rangeRight;
wrapperLodash_default.rearg = function_default_default.rearg;
wrapperLodash_default.reject = collection_default_default.reject;
wrapperLodash_default.remove = array_default_default.remove;
wrapperLodash_default.rest = function_default_default.rest;
wrapperLodash_default.reverse = array_default_default.reverse;
wrapperLodash_default.sampleSize = collection_default_default.sampleSize;
wrapperLodash_default.set = object_default_default.set;
wrapperLodash_default.setWith = object_default_default.setWith;
wrapperLodash_default.shuffle = collection_default_default.shuffle;
wrapperLodash_default.slice = array_default_default.slice;
wrapperLodash_default.sortBy = collection_default_default.sortBy;
wrapperLodash_default.sortedUniq = array_default_default.sortedUniq;
wrapperLodash_default.sortedUniqBy = array_default_default.sortedUniqBy;
wrapperLodash_default.split = string_default_default.split;
wrapperLodash_default.spread = function_default_default.spread;
wrapperLodash_default.tail = array_default_default.tail;
wrapperLodash_default.take = array_default_default.take;
wrapperLodash_default.takeRight = array_default_default.takeRight;
wrapperLodash_default.takeRightWhile = array_default_default.takeRightWhile;
wrapperLodash_default.takeWhile = array_default_default.takeWhile;
wrapperLodash_default.tap = seq_default_default.tap;
wrapperLodash_default.throttle = function_default_default.throttle;
wrapperLodash_default.thru = thru_default;
wrapperLodash_default.toArray = lang_default_default.toArray;
wrapperLodash_default.toPairs = object_default_default.toPairs;
wrapperLodash_default.toPairsIn = object_default_default.toPairsIn;
wrapperLodash_default.toPath = util_default_default.toPath;
wrapperLodash_default.toPlainObject = lang_default_default.toPlainObject;
wrapperLodash_default.transform = object_default_default.transform;
wrapperLodash_default.unary = function_default_default.unary;
wrapperLodash_default.union = array_default_default.union;
wrapperLodash_default.unionBy = array_default_default.unionBy;
wrapperLodash_default.unionWith = array_default_default.unionWith;
wrapperLodash_default.uniq = array_default_default.uniq;
wrapperLodash_default.uniqBy = array_default_default.uniqBy;
wrapperLodash_default.uniqWith = array_default_default.uniqWith;
wrapperLodash_default.unset = object_default_default.unset;
wrapperLodash_default.unzip = array_default_default.unzip;
wrapperLodash_default.unzipWith = array_default_default.unzipWith;
wrapperLodash_default.update = object_default_default.update;
wrapperLodash_default.updateWith = object_default_default.updateWith;
wrapperLodash_default.values = object_default_default.values;
wrapperLodash_default.valuesIn = object_default_default.valuesIn;
wrapperLodash_default.without = array_default_default.without;
wrapperLodash_default.words = string_default_default.words;
wrapperLodash_default.wrap = function_default_default.wrap;
wrapperLodash_default.xor = array_default_default.xor;
wrapperLodash_default.xorBy = array_default_default.xorBy;
wrapperLodash_default.xorWith = array_default_default.xorWith;
wrapperLodash_default.zip = array_default_default.zip;
wrapperLodash_default.zipObject = array_default_default.zipObject;
wrapperLodash_default.zipObjectDeep = array_default_default.zipObjectDeep;
wrapperLodash_default.zipWith = array_default_default.zipWith;
wrapperLodash_default.entries = object_default_default.toPairs;
wrapperLodash_default.entriesIn = object_default_default.toPairsIn;
wrapperLodash_default.extend = object_default_default.assignIn;
wrapperLodash_default.extendWith = object_default_default.assignInWith;
mixin2(wrapperLodash_default, wrapperLodash_default);
wrapperLodash_default.add = math_default_default.add;
wrapperLodash_default.attempt = util_default_default.attempt;
wrapperLodash_default.camelCase = string_default_default.camelCase;
wrapperLodash_default.capitalize = string_default_default.capitalize;
wrapperLodash_default.ceil = math_default_default.ceil;
wrapperLodash_default.clamp = number_default_default.clamp;
wrapperLodash_default.clone = lang_default_default.clone;
wrapperLodash_default.cloneDeep = lang_default_default.cloneDeep;
wrapperLodash_default.cloneDeepWith = lang_default_default.cloneDeepWith;
wrapperLodash_default.cloneWith = lang_default_default.cloneWith;
wrapperLodash_default.conformsTo = lang_default_default.conformsTo;
wrapperLodash_default.deburr = string_default_default.deburr;
wrapperLodash_default.defaultTo = util_default_default.defaultTo;
wrapperLodash_default.divide = math_default_default.divide;
wrapperLodash_default.endsWith = string_default_default.endsWith;
wrapperLodash_default.eq = lang_default_default.eq;
wrapperLodash_default.escape = string_default_default.escape;
wrapperLodash_default.escapeRegExp = string_default_default.escapeRegExp;
wrapperLodash_default.every = collection_default_default.every;
wrapperLodash_default.find = collection_default_default.find;
wrapperLodash_default.findIndex = array_default_default.findIndex;
wrapperLodash_default.findKey = object_default_default.findKey;
wrapperLodash_default.findLast = collection_default_default.findLast;
wrapperLodash_default.findLastIndex = array_default_default.findLastIndex;
wrapperLodash_default.findLastKey = object_default_default.findLastKey;
wrapperLodash_default.floor = math_default_default.floor;
wrapperLodash_default.forEach = collection_default_default.forEach;
wrapperLodash_default.forEachRight = collection_default_default.forEachRight;
wrapperLodash_default.forIn = object_default_default.forIn;
wrapperLodash_default.forInRight = object_default_default.forInRight;
wrapperLodash_default.forOwn = object_default_default.forOwn;
wrapperLodash_default.forOwnRight = object_default_default.forOwnRight;
wrapperLodash_default.get = object_default_default.get;
wrapperLodash_default.gt = lang_default_default.gt;
wrapperLodash_default.gte = lang_default_default.gte;
wrapperLodash_default.has = object_default_default.has;
wrapperLodash_default.hasIn = object_default_default.hasIn;
wrapperLodash_default.head = array_default_default.head;
wrapperLodash_default.identity = identity_default;
wrapperLodash_default.includes = collection_default_default.includes;
wrapperLodash_default.indexOf = array_default_default.indexOf;
wrapperLodash_default.inRange = number_default_default.inRange;
wrapperLodash_default.invoke = object_default_default.invoke;
wrapperLodash_default.isArguments = lang_default_default.isArguments;
wrapperLodash_default.isArray = isArray_default;
wrapperLodash_default.isArrayBuffer = lang_default_default.isArrayBuffer;
wrapperLodash_default.isArrayLike = lang_default_default.isArrayLike;
wrapperLodash_default.isArrayLikeObject = lang_default_default.isArrayLikeObject;
wrapperLodash_default.isBoolean = lang_default_default.isBoolean;
wrapperLodash_default.isBuffer = lang_default_default.isBuffer;
wrapperLodash_default.isDate = lang_default_default.isDate;
wrapperLodash_default.isElement = lang_default_default.isElement;
wrapperLodash_default.isEmpty = lang_default_default.isEmpty;
wrapperLodash_default.isEqual = lang_default_default.isEqual;
wrapperLodash_default.isEqualWith = lang_default_default.isEqualWith;
wrapperLodash_default.isError = lang_default_default.isError;
wrapperLodash_default.isFinite = lang_default_default.isFinite;
wrapperLodash_default.isFunction = lang_default_default.isFunction;
wrapperLodash_default.isInteger = lang_default_default.isInteger;
wrapperLodash_default.isLength = lang_default_default.isLength;
wrapperLodash_default.isMap = lang_default_default.isMap;
wrapperLodash_default.isMatch = lang_default_default.isMatch;
wrapperLodash_default.isMatchWith = lang_default_default.isMatchWith;
wrapperLodash_default.isNaN = lang_default_default.isNaN;
wrapperLodash_default.isNative = lang_default_default.isNative;
wrapperLodash_default.isNil = lang_default_default.isNil;
wrapperLodash_default.isNull = lang_default_default.isNull;
wrapperLodash_default.isNumber = lang_default_default.isNumber;
wrapperLodash_default.isObject = isObject_default;
wrapperLodash_default.isObjectLike = lang_default_default.isObjectLike;
wrapperLodash_default.isPlainObject = lang_default_default.isPlainObject;
wrapperLodash_default.isRegExp = lang_default_default.isRegExp;
wrapperLodash_default.isSafeInteger = lang_default_default.isSafeInteger;
wrapperLodash_default.isSet = lang_default_default.isSet;
wrapperLodash_default.isString = lang_default_default.isString;
wrapperLodash_default.isSymbol = lang_default_default.isSymbol;
wrapperLodash_default.isTypedArray = lang_default_default.isTypedArray;
wrapperLodash_default.isUndefined = lang_default_default.isUndefined;
wrapperLodash_default.isWeakMap = lang_default_default.isWeakMap;
wrapperLodash_default.isWeakSet = lang_default_default.isWeakSet;
wrapperLodash_default.join = array_default_default.join;
wrapperLodash_default.kebabCase = string_default_default.kebabCase;
wrapperLodash_default.last = last_default;
wrapperLodash_default.lastIndexOf = array_default_default.lastIndexOf;
wrapperLodash_default.lowerCase = string_default_default.lowerCase;
wrapperLodash_default.lowerFirst = string_default_default.lowerFirst;
wrapperLodash_default.lt = lang_default_default.lt;
wrapperLodash_default.lte = lang_default_default.lte;
wrapperLodash_default.max = math_default_default.max;
wrapperLodash_default.maxBy = math_default_default.maxBy;
wrapperLodash_default.mean = math_default_default.mean;
wrapperLodash_default.meanBy = math_default_default.meanBy;
wrapperLodash_default.min = math_default_default.min;
wrapperLodash_default.minBy = math_default_default.minBy;
wrapperLodash_default.stubArray = util_default_default.stubArray;
wrapperLodash_default.stubFalse = util_default_default.stubFalse;
wrapperLodash_default.stubObject = util_default_default.stubObject;
wrapperLodash_default.stubString = util_default_default.stubString;
wrapperLodash_default.stubTrue = util_default_default.stubTrue;
wrapperLodash_default.multiply = math_default_default.multiply;
wrapperLodash_default.nth = array_default_default.nth;
wrapperLodash_default.noop = util_default_default.noop;
wrapperLodash_default.now = date_default_default.now;
wrapperLodash_default.pad = string_default_default.pad;
wrapperLodash_default.padEnd = string_default_default.padEnd;
wrapperLodash_default.padStart = string_default_default.padStart;
wrapperLodash_default.parseInt = string_default_default.parseInt;
wrapperLodash_default.random = number_default_default.random;
wrapperLodash_default.reduce = collection_default_default.reduce;
wrapperLodash_default.reduceRight = collection_default_default.reduceRight;
wrapperLodash_default.repeat = string_default_default.repeat;
wrapperLodash_default.replace = string_default_default.replace;
wrapperLodash_default.result = object_default_default.result;
wrapperLodash_default.round = math_default_default.round;
wrapperLodash_default.sample = collection_default_default.sample;
wrapperLodash_default.size = collection_default_default.size;
wrapperLodash_default.snakeCase = string_default_default.snakeCase;
wrapperLodash_default.some = collection_default_default.some;
wrapperLodash_default.sortedIndex = array_default_default.sortedIndex;
wrapperLodash_default.sortedIndexBy = array_default_default.sortedIndexBy;
wrapperLodash_default.sortedIndexOf = array_default_default.sortedIndexOf;
wrapperLodash_default.sortedLastIndex = array_default_default.sortedLastIndex;
wrapperLodash_default.sortedLastIndexBy = array_default_default.sortedLastIndexBy;
wrapperLodash_default.sortedLastIndexOf = array_default_default.sortedLastIndexOf;
wrapperLodash_default.startCase = string_default_default.startCase;
wrapperLodash_default.startsWith = string_default_default.startsWith;
wrapperLodash_default.subtract = math_default_default.subtract;
wrapperLodash_default.sum = math_default_default.sum;
wrapperLodash_default.sumBy = math_default_default.sumBy;
wrapperLodash_default.template = string_default_default.template;
wrapperLodash_default.times = util_default_default.times;
wrapperLodash_default.toFinite = lang_default_default.toFinite;
wrapperLodash_default.toInteger = toInteger_default;
wrapperLodash_default.toLength = lang_default_default.toLength;
wrapperLodash_default.toLower = string_default_default.toLower;
wrapperLodash_default.toNumber = lang_default_default.toNumber;
wrapperLodash_default.toSafeInteger = lang_default_default.toSafeInteger;
wrapperLodash_default.toString = lang_default_default.toString;
wrapperLodash_default.toUpper = string_default_default.toUpper;
wrapperLodash_default.trim = string_default_default.trim;
wrapperLodash_default.trimEnd = string_default_default.trimEnd;
wrapperLodash_default.trimStart = string_default_default.trimStart;
wrapperLodash_default.truncate = string_default_default.truncate;
wrapperLodash_default.unescape = string_default_default.unescape;
wrapperLodash_default.uniqueId = util_default_default.uniqueId;
wrapperLodash_default.upperCase = string_default_default.upperCase;
wrapperLodash_default.upperFirst = string_default_default.upperFirst;
wrapperLodash_default.each = collection_default_default.forEach;
wrapperLodash_default.eachRight = collection_default_default.forEachRight;
wrapperLodash_default.first = array_default_default.head;
mixin2(wrapperLodash_default, (function() {
  var source = {};
  baseForOwn_default(wrapperLodash_default, function(func, methodName) {
    if (!hasOwnProperty25.call(wrapperLodash_default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
})(), { "chain": false });
wrapperLodash_default.VERSION = VERSION;
(wrapperLodash_default.templateSettings = string_default_default.templateSettings).imports._ = wrapperLodash_default;
arrayEach_default(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(methodName) {
  wrapperLodash_default[methodName].placeholder = wrapperLodash_default;
});
arrayEach_default(["drop", "take"], function(methodName, index3) {
  LazyWrapper_default.prototype[methodName] = function(n) {
    n = n === void 0 ? 1 : nativeMax17(toInteger_default(n), 0);
    var result2 = this.__filtered__ && !index3 ? new LazyWrapper_default(this) : this.clone();
    if (result2.__filtered__) {
      result2.__takeCount__ = nativeMin15(n, result2.__takeCount__);
    } else {
      result2.__views__.push({
        "size": nativeMin15(n, MAX_ARRAY_LENGTH7),
        "type": methodName + (result2.__dir__ < 0 ? "Right" : "")
      });
    }
    return result2;
  };
  LazyWrapper_default.prototype[methodName + "Right"] = function(n) {
    return this.reverse()[methodName](n).reverse();
  };
});
arrayEach_default(["filter", "map", "takeWhile"], function(methodName, index3) {
  var type = index3 + 1, isFilter = type == LAZY_FILTER_FLAG2 || type == LAZY_WHILE_FLAG;
  LazyWrapper_default.prototype[methodName] = function(iteratee2) {
    var result2 = this.clone();
    result2.__iteratees__.push({
      "iteratee": baseIteratee_default(iteratee2, 3),
      "type": type
    });
    result2.__filtered__ = result2.__filtered__ || isFilter;
    return result2;
  };
});
arrayEach_default(["head", "last"], function(methodName, index3) {
  var takeName = "take" + (index3 ? "Right" : "");
  LazyWrapper_default.prototype[methodName] = function() {
    return this[takeName](1).value()[0];
  };
});
arrayEach_default(["initial", "tail"], function(methodName, index3) {
  var dropName = "drop" + (index3 ? "" : "Right");
  LazyWrapper_default.prototype[methodName] = function() {
    return this.__filtered__ ? new LazyWrapper_default(this) : this[dropName](1);
  };
});
LazyWrapper_default.prototype.compact = function() {
  return this.filter(identity_default);
};
LazyWrapper_default.prototype.find = function(predicate) {
  return this.filter(predicate).head();
};
LazyWrapper_default.prototype.findLast = function(predicate) {
  return this.reverse().find(predicate);
};
LazyWrapper_default.prototype.invokeMap = baseRest_default(function(path, args) {
  if (typeof path == "function") {
    return new LazyWrapper_default(this);
  }
  return this.map(function(value) {
    return baseInvoke_default(value, path, args);
  });
});
LazyWrapper_default.prototype.reject = function(predicate) {
  return this.filter(negate_default(baseIteratee_default(predicate)));
};
LazyWrapper_default.prototype.slice = function(start, end) {
  start = toInteger_default(start);
  var result2 = this;
  if (result2.__filtered__ && (start > 0 || end < 0)) {
    return new LazyWrapper_default(result2);
  }
  if (start < 0) {
    result2 = result2.takeRight(-start);
  } else if (start) {
    result2 = result2.drop(start);
  }
  if (end !== void 0) {
    end = toInteger_default(end);
    result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start);
  }
  return result2;
};
LazyWrapper_default.prototype.takeRightWhile = function(predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};
LazyWrapper_default.prototype.toArray = function() {
  return this.take(MAX_ARRAY_LENGTH7);
};
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = wrapperLodash_default[isTaker ? "take" + (methodName == "last" ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
  if (!lodashFunc) {
    return;
  }
  wrapperLodash_default.prototype[methodName] = function() {
    var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper_default, iteratee2 = args[0], useLazy = isLazy || isArray_default(value);
    var interceptor = function(value2) {
      var result3 = lodashFunc.apply(wrapperLodash_default, arrayPush_default([value2], args));
      return isTaker && chainAll ? result3[0] : result3;
    };
    if (useLazy && checkIteratee && typeof iteratee2 == "function" && iteratee2.length != 1) {
      isLazy = useLazy = false;
    }
    var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new LazyWrapper_default(this);
      var result2 = func.apply(value, args);
      result2.__actions__.push({ "func": thru_default, "args": [interceptor], "thisArg": void 0 });
      return new LodashWrapper_default(result2, chainAll);
    }
    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }
    result2 = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2;
  };
});
arrayEach_default(["pop", "push", "shift", "sort", "splice", "unshift"], function(methodName) {
  var func = arrayProto6[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
  wrapperLodash_default.prototype[methodName] = function() {
    var args = arguments;
    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply(isArray_default(value) ? value : [], args);
    }
    return this[chainName](function(value2) {
      return func.apply(isArray_default(value2) ? value2 : [], args);
    });
  };
});
baseForOwn_default(LazyWrapper_default.prototype, function(func, methodName) {
  var lodashFunc = wrapperLodash_default[methodName];
  if (lodashFunc) {
    var key = lodashFunc.name + "";
    if (!hasOwnProperty25.call(realNames_default, key)) {
      realNames_default[key] = [];
    }
    realNames_default[key].push({ "name": methodName, "func": lodashFunc });
  }
});
realNames_default[createHybrid_default(void 0, WRAP_BIND_KEY_FLAG7).name] = [{
  "name": "wrapper",
  "func": void 0
}];
LazyWrapper_default.prototype.clone = lazyClone_default;
LazyWrapper_default.prototype.reverse = lazyReverse_default;
LazyWrapper_default.prototype.value = lazyValue_default;
wrapperLodash_default.prototype.at = seq_default_default.at;
wrapperLodash_default.prototype.chain = seq_default_default.wrapperChain;
wrapperLodash_default.prototype.commit = seq_default_default.commit;
wrapperLodash_default.prototype.next = seq_default_default.next;
wrapperLodash_default.prototype.plant = seq_default_default.plant;
wrapperLodash_default.prototype.reverse = seq_default_default.reverse;
wrapperLodash_default.prototype.toJSON = wrapperLodash_default.prototype.valueOf = wrapperLodash_default.prototype.value = seq_default_default.value;
wrapperLodash_default.prototype.first = wrapperLodash_default.prototype.head;
if (symIterator2) {
  wrapperLodash_default.prototype[symIterator2] = seq_default_default.toIterator;
}

// ../../packages/aitable/src/grid/core/Grid.tsx
var import_react206 = __toESM(require_react(), 1);

// ../../node_modules/react-use/esm/factory/createMemo.js
var import_react = __toESM(require_react());

// ../../node_modules/react-use/esm/factory/createReducerContext.js
var import_react2 = __toESM(require_react());

// ../../node_modules/react-use/esm/factory/createReducer.js
var import_react5 = __toESM(require_react());

// ../../node_modules/react-use/esm/useUpdateEffect.js
var import_react4 = __toESM(require_react());

// ../../node_modules/react-use/esm/useFirstMountState.js
var import_react3 = __toESM(require_react());
function useFirstMountState() {
  var isFirst = (0, import_react3.useRef)(true);
  if (isFirst.current) {
    isFirst.current = false;
    return true;
  }
  return isFirst.current;
}

// ../../node_modules/react-use/esm/useUpdateEffect.js
var useUpdateEffect = function(effect, deps) {
  var isFirstMount = useFirstMountState();
  (0, import_react4.useEffect)(function() {
    if (!isFirstMount) {
      return effect();
    }
  }, deps);
};
var useUpdateEffect_default = useUpdateEffect;

// ../../node_modules/react-use/esm/factory/createStateContext.js
var import_react6 = __toESM(require_react());

// ../../node_modules/react-use/esm/useAsync.js
var import_react9 = __toESM(require_react());

// ../../node_modules/react-use/esm/useAsyncFn.js
init_tslib_es6();
var import_react8 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMountedState.js
var import_react7 = __toESM(require_react());

// ../../node_modules/react-use/esm/useAsyncRetry.js
init_tslib_es6();
var import_react10 = __toESM(require_react());

// ../../node_modules/react-use/esm/factory/createHTMLMediaHook.js
init_tslib_es6();
var React = __toESM(require_react());
var import_react12 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSetState.js
var import_react11 = __toESM(require_react());
var useSetState = function(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }
  var _a = (0, import_react11.useState)(initialState), state = _a[0], set2 = _a[1];
  var setState = (0, import_react11.useCallback)(function(patch) {
    set2(function(prevState) {
      return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);
    });
  }, []);
  return [state, setState];
};
var useSetState_default = useSetState;

// ../../node_modules/react-use/esm/misc/parseTimeRanges.js
function parseTimeRanges(ranges) {
  var result2 = [];
  for (var i = 0; i < ranges.length; i++) {
    result2.push({
      start: ranges.start(i),
      end: ranges.end(i)
    });
  }
  return result2;
}

// ../../node_modules/react-use/esm/factory/createHTMLMediaHook.js
function createHTMLMediaHook(tag) {
  return function(elOrProps) {
    var element;
    var props;
    if (React.isValidElement(elOrProps)) {
      element = elOrProps;
      props = element.props;
    } else {
      props = elOrProps;
    }
    var _a = useSetState_default({
      buffered: [],
      time: 0,
      duration: 0,
      paused: true,
      muted: false,
      volume: 1,
      playing: false
    }), state = _a[0], setState = _a[1];
    var ref = (0, import_react12.useRef)(null);
    var wrapEvent = function(userEvent, proxyEvent) {
      return function(event) {
        try {
          proxyEvent && proxyEvent(event);
        } finally {
          userEvent && userEvent(event);
        }
      };
    };
    var onPlay = function() {
      return setState({ paused: false });
    };
    var onPlaying = function() {
      return setState({ playing: true });
    };
    var onWaiting = function() {
      return setState({ playing: false });
    };
    var onPause = function() {
      return setState({ paused: true, playing: false });
    };
    var onVolumeChange = function() {
      var el = ref.current;
      if (!el) {
        return;
      }
      setState({
        muted: el.muted,
        volume: el.volume
      });
    };
    var onDurationChange = function() {
      var el = ref.current;
      if (!el) {
        return;
      }
      var duration = el.duration, buffered = el.buffered;
      setState({
        duration,
        buffered: parseTimeRanges(buffered)
      });
    };
    var onTimeUpdate = function() {
      var el = ref.current;
      if (!el) {
        return;
      }
      setState({ time: el.currentTime });
    };
    var onProgress = function() {
      var el = ref.current;
      if (!el) {
        return;
      }
      setState({ buffered: parseTimeRanges(el.buffered) });
    };
    if (element) {
      element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));
    } else {
      element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));
    }
    var lockPlay = false;
    var controls = {
      play: function() {
        var el = ref.current;
        if (!el) {
          return void 0;
        }
        if (!lockPlay) {
          var promise = el.play();
          var isPromise = typeof promise === "object";
          if (isPromise) {
            lockPlay = true;
            var resetLock = function() {
              lockPlay = false;
            };
            promise.then(resetLock, resetLock);
          }
          return promise;
        }
        return void 0;
      },
      pause: function() {
        var el = ref.current;
        if (el && !lockPlay) {
          return el.pause();
        }
      },
      seek: function(time) {
        var el = ref.current;
        if (!el || state.duration === void 0) {
          return;
        }
        time = Math.min(state.duration, Math.max(0, time));
        el.currentTime = time;
      },
      volume: function(volume) {
        var el = ref.current;
        if (!el) {
          return;
        }
        volume = Math.min(1, Math.max(0, volume));
        el.volume = volume;
        setState({ volume });
      },
      mute: function() {
        var el = ref.current;
        if (!el) {
          return;
        }
        el.muted = true;
      },
      unmute: function() {
        var el = ref.current;
        if (!el) {
          return;
        }
        el.muted = false;
      }
    };
    (0, import_react12.useEffect)(function() {
      var el = ref.current;
      if (!el) {
        if (true) {
          if (tag === "audio") {
            console.error("useAudio() ref to <audio> element is empty at mount. It seem you have not rendered the audio element, which it returns as the first argument const [audio] = useAudio(...).");
          } else if (tag === "video") {
            console.error("useVideo() ref to <video> element is empty at mount. It seem you have not rendered the video element, which it returns as the first argument const [video] = useVideo(...).");
          }
        }
        return;
      }
      setState({
        volume: el.volume,
        muted: el.muted,
        paused: el.paused
      });
      if (props.autoPlay && el.paused) {
        controls.play();
      }
    }, [props.src]);
    return [element, state, controls, ref];
  };
}

// ../../node_modules/react-use/esm/useAudio.js
var useAudio = createHTMLMediaHook("audio");

// ../../node_modules/react-use/esm/useBattery.js
var import_react14 = __toESM(require_react());

// ../../node_modules/react-use/esm/misc/util.js
var noop2 = function() {
};
function on(obj) {
  var args = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }
  if (obj && obj.addEventListener) {
    obj.addEventListener.apply(obj, args);
  }
}
function off(obj) {
  var args = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }
  if (obj && obj.removeEventListener) {
    obj.removeEventListener.apply(obj, args);
  }
}
var isBrowser = typeof window !== "undefined";
var isNavigator = typeof navigator !== "undefined";

// ../../node_modules/react-use/esm/misc/isDeepEqual.js
var import_react13 = __toESM(require_react2());

// ../../node_modules/react-use/esm/useBattery.js
var nav = isNavigator ? navigator : void 0;
var isBatteryApiSupported = nav && typeof nav.getBattery === "function";

// ../../node_modules/react-use/esm/useBeforeUnload.js
var import_react15 = __toESM(require_react());

// ../../node_modules/react-use/esm/useToggle.js
var import_react16 = __toESM(require_react());

// ../../node_modules/react-use/esm/useClickAway.js
var import_react17 = __toESM(require_react());
var defaultEvents = ["mousedown", "touchstart"];
var useClickAway = function(ref, onClickAway, events) {
  if (events === void 0) {
    events = defaultEvents;
  }
  var savedCallback = (0, import_react17.useRef)(onClickAway);
  (0, import_react17.useEffect)(function() {
    savedCallback.current = onClickAway;
  }, [onClickAway]);
  (0, import_react17.useEffect)(function() {
    var handler = function(event) {
      var el = ref.current;
      el && !el.contains(event.target) && savedCallback.current(event);
    };
    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {
      var eventName = events_1[_i];
      on(document, eventName, handler);
    }
    return function() {
      for (var _i2 = 0, events_2 = events; _i2 < events_2.length; _i2++) {
        var eventName2 = events_2[_i2];
        off(document, eventName2, handler);
      }
    };
  }, [events, ref]);
};
var useClickAway_default = useClickAway;

// ../../node_modules/react-use/esm/useCookie.js
var import_react18 = __toESM(require_react());
var import_js_cookie = __toESM(require_js_cookie());

// ../../node_modules/react-use/esm/useCopyToClipboard.js
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard());
var import_react19 = __toESM(require_react());

// ../../node_modules/react-use/esm/useCounter.js
var import_react22 = __toESM(require_react());

// ../../node_modules/react-use/esm/useGetSet.js
var import_react21 = __toESM(require_react());

// ../../node_modules/react-use/esm/useUpdate.js
var import_react20 = __toESM(require_react());

// ../../node_modules/react-use/esm/useCss.js
var import_nano_css = __toESM(require_nano_css());
var import_cssom = __toESM(require_cssom());
var import_vcssom = __toESM(require_vcssom());
var import_cssToTree = __toESM(require_cssToTree());
var import_react24 = __toESM(require_react());

// ../../node_modules/react-use/esm/useIsomorphicLayoutEffect.js
var import_react23 = __toESM(require_react());
var useIsomorphicLayoutEffect = isBrowser ? import_react23.useLayoutEffect : import_react23.useEffect;
var useIsomorphicLayoutEffect_default = useIsomorphicLayoutEffect;

// ../../node_modules/react-use/esm/useCss.js
var nano = (0, import_nano_css.create)();
(0, import_cssom.addon)(nano);
(0, import_vcssom.addon)(nano);

// ../../node_modules/react-use/esm/useCustomCompareEffect.js
var import_react25 = __toESM(require_react());

// ../../node_modules/react-use/esm/useDebounce.js
var import_react27 = __toESM(require_react());

// ../../node_modules/react-use/esm/useTimeoutFn.js
var import_react26 = __toESM(require_react());

// ../../node_modules/react-use/esm/useDefault.js
var import_react28 = __toESM(require_react());

// ../../node_modules/react-use/esm/useDrop.js
init_tslib_es6();
var import_react29 = __toESM(require_react());

// ../../node_modules/react-use/esm/useDropArea.js
var import_react30 = __toESM(require_react());

// ../../node_modules/react-use/esm/useEffectOnce.js
var import_react31 = __toESM(require_react());
var useEffectOnce = function(effect) {
  (0, import_react31.useEffect)(effect, []);
};
var useEffectOnce_default = useEffectOnce;

// ../../node_modules/react-use/esm/useEnsuredForwardedRef.js
var import_react32 = __toESM(require_react());

// ../../node_modules/react-use/esm/useEvent.js
var import_react33 = __toESM(require_react());

// ../../node_modules/react-use/esm/useError.js
var import_react34 = __toESM(require_react());

// ../../node_modules/react-use/esm/useFavicon.js
var import_react35 = __toESM(require_react());

// ../../node_modules/react-use/esm/useFullscreen.js
var import_react36 = __toESM(require_react());
var import_screenfull = __toESM(require_screenfull());

// ../../node_modules/react-use/esm/useGeolocation.js
init_tslib_es6();
var import_react37 = __toESM(require_react());

// ../../node_modules/react-use/esm/useGetSetState.js
init_tslib_es6();
var import_react38 = __toESM(require_react());

// ../../node_modules/react-use/esm/useHarmonicIntervalFn.js
var import_react39 = __toESM(require_react());

// ../../node_modules/react-use/esm/useHover.js
var React2 = __toESM(require_react());

// ../../node_modules/react-use/esm/useHoverDirty.js
var import_react40 = __toESM(require_react());

// ../../node_modules/react-use/esm/useIdle.js
var import_react41 = __toESM(require_react());

// ../../node_modules/react-use/esm/useIntersection.js
var import_react42 = __toESM(require_react());

// ../../node_modules/react-use/esm/useInterval.js
var import_react43 = __toESM(require_react());

// ../../node_modules/react-use/esm/useKey.js
var import_react44 = __toESM(require_react());

// ../../node_modules/react-use/esm/factory/createBreakpoint.js
var import_react45 = __toESM(require_react());

// ../../node_modules/react-use/esm/useKeyPress.js
var import_react46 = __toESM(require_react());

// ../../node_modules/react-use/esm/useLatest.js
var import_react47 = __toESM(require_react());

// ../../node_modules/react-use/esm/useLifecycles.js
var import_react48 = __toESM(require_react());

// ../../node_modules/react-use/esm/useList.js
var import_react49 = __toESM(require_react());

// ../../node_modules/react-use/esm/useLocalStorage.js
var import_react50 = __toESM(require_react());

// ../../node_modules/react-use/esm/useLocation.js
var import_react51 = __toESM(require_react());
var patchHistoryMethod = function(method2) {
  var history = window.history;
  var original = history[method2];
  history[method2] = function(state) {
    var result2 = original.apply(this, arguments);
    var event = new Event(method2.toLowerCase());
    event.state = state;
    window.dispatchEvent(event);
    return result2;
  };
};
if (isBrowser) {
  patchHistoryMethod("pushState");
  patchHistoryMethod("replaceState");
}

// ../../node_modules/react-use/esm/useLockBodyScroll.js
var import_react52 = __toESM(require_react());
var isIosDevice = isBrowser && window.navigator && window.navigator.platform && /iP(ad|hone|od)/.test(window.navigator.platform);

// ../../node_modules/react-use/esm/useLogger.js
init_tslib_es6();

// ../../node_modules/react-use/esm/useLongPress.js
var import_react53 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMap.js
init_tslib_es6();
var import_react54 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMedia.js
var import_react55 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMediaDevices.js
var import_react56 = __toESM(require_react());
var useMediaDevices = function() {
  var _a = (0, import_react56.useState)({}), state = _a[0], setState = _a[1];
  (0, import_react56.useEffect)(function() {
    var mounted = true;
    var onChange = function() {
      navigator.mediaDevices.enumerateDevices().then(function(devices) {
        if (mounted) {
          setState({
            devices: devices.map(function(_a2) {
              var deviceId = _a2.deviceId, groupId = _a2.groupId, kind = _a2.kind, label = _a2.label;
              return {
                deviceId,
                groupId,
                kind,
                label
              };
            })
          });
        }
      }).catch(noop2);
    };
    on(navigator.mediaDevices, "devicechange", onChange);
    onChange();
    return function() {
      mounted = false;
      off(navigator.mediaDevices, "devicechange", onChange);
    };
  }, []);
  return state;
};
var useMediaDevicesMock = function() {
  return {};
};
var useMediaDevices_default = isNavigator && !!navigator.mediaDevices ? useMediaDevices : useMediaDevicesMock;

// ../../node_modules/react-use/esm/useMediatedState.js
var import_react57 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMethods.js
var import_react58 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMotion.js
var import_react59 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMouse.js
var import_react62 = __toESM(require_react());

// ../../node_modules/react-use/esm/useRafState.js
var import_react61 = __toESM(require_react());

// ../../node_modules/react-use/esm/useUnmount.js
var import_react60 = __toESM(require_react());
var useUnmount = function(fn) {
  var fnRef = (0, import_react60.useRef)(fn);
  fnRef.current = fn;
  useEffectOnce_default(function() {
    return function() {
      return fnRef.current();
    };
  });
};
var useUnmount_default = useUnmount;

// ../../node_modules/react-use/esm/useRafState.js
var useRafState = function(initialState) {
  var frame = (0, import_react61.useRef)(0);
  var _a = (0, import_react61.useState)(initialState), state = _a[0], setState = _a[1];
  var setRafState = (0, import_react61.useCallback)(function(value) {
    cancelAnimationFrame(frame.current);
    frame.current = requestAnimationFrame(function() {
      setState(value);
    });
  }, []);
  useUnmount_default(function() {
    cancelAnimationFrame(frame.current);
  });
  return [state, setRafState];
};
var useRafState_default = useRafState;

// ../../node_modules/react-use/esm/useMouse.js
var useMouse = function(ref) {
  if (true) {
    if (typeof ref !== "object" || typeof ref.current === "undefined") {
      console.error("useMouse expects a single ref argument.");
    }
  }
  var _a = useRafState_default({
    docX: 0,
    docY: 0,
    posX: 0,
    posY: 0,
    elX: 0,
    elY: 0,
    elH: 0,
    elW: 0
  }), state = _a[0], setState = _a[1];
  (0, import_react62.useEffect)(function() {
    var moveHandler = function(event) {
      if (ref && ref.current) {
        var _a2 = ref.current.getBoundingClientRect(), left = _a2.left, top_1 = _a2.top, elW = _a2.width, elH = _a2.height;
        var posX = left + window.pageXOffset;
        var posY = top_1 + window.pageYOffset;
        var elX = event.pageX - posX;
        var elY = event.pageY - posY;
        setState({
          docX: event.pageX,
          docY: event.pageY,
          posX,
          posY,
          elX,
          elY,
          elH,
          elW
        });
      }
    };
    on(document, "mousemove", moveHandler);
    return function() {
      off(document, "mousemove", moveHandler);
    };
  }, [ref]);
  return state;
};
var useMouse_default = useMouse;

// ../../node_modules/react-use/esm/useMouseWheel.js
var import_react63 = __toESM(require_react());

// ../../node_modules/react-use/esm/useNetworkState.js
var import_react64 = __toESM(require_react());
var nav2 = isNavigator ? navigator : void 0;
var conn = nav2 && (nav2.connection || nav2.mozConnection || nav2.webkitConnection);

// ../../node_modules/react-use/esm/useObservable.js
var import_react65 = __toESM(require_react());

// ../../node_modules/react-use/esm/useOrientation.js
var import_react66 = __toESM(require_react());

// ../../node_modules/react-use/esm/usePageLeave.js
var import_react67 = __toESM(require_react());

// ../../node_modules/react-use/esm/usePermission.js
var import_react68 = __toESM(require_react());

// ../../node_modules/react-use/esm/usePrevious.js
var import_react69 = __toESM(require_react());

// ../../node_modules/react-use/esm/usePreviousDistinct.js
var import_react70 = __toESM(require_react());

// ../../node_modules/react-use/esm/usePromise.js
var import_react71 = __toESM(require_react());

// ../../node_modules/react-use/esm/useQueue.js
init_tslib_es6();
var import_react72 = __toESM(require_react());

// ../../node_modules/react-use/esm/useRaf.js
var import_react73 = __toESM(require_react());

// ../../node_modules/react-use/esm/useRafLoop.js
var import_react74 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSearchParam.js
var import_react75 = __toESM(require_react());

// ../../node_modules/react-use/esm/useScratch.js
init_tslib_es6();
var import_react76 = __toESM(require_react());
var import_react_universal_interface = __toESM(require_lib());

// ../../node_modules/react-use/esm/useScroll.js
var import_react77 = __toESM(require_react());

// ../../node_modules/react-use/esm/useScrolling.js
var import_react78 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSessionStorage.js
var import_react79 = __toESM(require_react());

// ../../node_modules/react-use/esm/useShallowCompareEffect.js
var import_fast_shallow_equal = __toESM(require_fast_shallow_equal());

// ../../node_modules/react-use/esm/useSize.js
init_tslib_es6();
var React3 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSlider.js
var import_react80 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSpeech.js
init_tslib_es6();
var import_react81 = __toESM(require_react());
var Status;
(function(Status2) {
  Status2[Status2["init"] = 0] = "init";
  Status2[Status2["play"] = 1] = "play";
  Status2[Status2["pause"] = 2] = "pause";
  Status2[Status2["end"] = 3] = "end";
})(Status || (Status = {}));

// ../../node_modules/react-use/esm/useStateWithHistory.js
var import_react82 = __toESM(require_react());

// ../../node_modules/react-use/esm/useStateList.js
init_tslib_es6();
var import_react83 = __toESM(require_react());

// ../../node_modules/react-use/esm/useThrottle.js
var import_react84 = __toESM(require_react());

// ../../node_modules/react-use/esm/useThrottleFn.js
var import_react85 = __toESM(require_react());

// ../../node_modules/react-use/esm/useTitle.js
var import_react86 = __toESM(require_react());

// ../../node_modules/react-use/esm/useTween.js
var import_ts_easing = __toESM(require_lib2());

// ../../node_modules/react-use/esm/useUnmountPromise.js
var import_react87 = __toESM(require_react());

// ../../node_modules/react-use/esm/useUpsert.js
init_tslib_es6();

// ../../node_modules/react-use/esm/useVibrate.js
var import_react88 = __toESM(require_react());
var isVibrationApiSupported = isNavigator && "vibrate" in navigator;

// ../../node_modules/react-use/esm/useVideo.js
var useVideo = createHTMLMediaHook("video");

// ../../node_modules/react-use/esm/useStateValidator.js
var import_react89 = __toESM(require_react());

// ../../node_modules/react-use/esm/useScrollbarWidth.js
var import_react90 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMultiStateValidator.js
var import_react91 = __toESM(require_react());

// ../../node_modules/react-use/esm/useWindowScroll.js
var import_react92 = __toESM(require_react());

// ../../node_modules/react-use/esm/useWindowSize.js
var import_react93 = __toESM(require_react());

// ../../node_modules/react-use/esm/useMeasure.js
var import_react94 = __toESM(require_react());
var defaultState = {
  x: 0,
  y: 0,
  width: 0,
  height: 0,
  top: 0,
  left: 0,
  bottom: 0,
  right: 0
};
function useMeasure() {
  var _a = (0, import_react94.useState)(null), element = _a[0], ref = _a[1];
  var _b = (0, import_react94.useState)(defaultState), rect = _b[0], setRect = _b[1];
  var observer = (0, import_react94.useMemo)(function() {
    return new window.ResizeObserver(function(entries) {
      if (entries[0]) {
        var _a2 = entries[0].contentRect, x2 = _a2.x, y = _a2.y, width = _a2.width, height = _a2.height, top_1 = _a2.top, left = _a2.left, bottom = _a2.bottom, right = _a2.right;
        setRect({ x: x2, y, width, height, top: top_1, left, bottom, right });
      }
    });
  }, []);
  useIsomorphicLayoutEffect_default(function() {
    if (!element)
      return;
    observer.observe(element);
    return function() {
      observer.disconnect();
    };
  }, [element]);
  return [ref, rect];
}
var useMeasure_default = isBrowser && typeof window.ResizeObserver !== "undefined" ? useMeasure : (function() {
  return [noop2, defaultState];
});

// ../../node_modules/react-use/esm/usePinchZoom.js
var import_react95 = __toESM(require_react());
var ZoomState;
(function(ZoomState2) {
  ZoomState2["ZOOMING_IN"] = "ZOOMING_IN";
  ZoomState2["ZOOMING_OUT"] = "ZOOMING_OUT";
})(ZoomState || (ZoomState = {}));

// ../../node_modules/react-use/esm/useRendersCount.js
var import_react96 = __toESM(require_react());

// ../../node_modules/react-use/esm/useSet.js
init_tslib_es6();
var import_react97 = __toESM(require_react());

// ../../node_modules/react-use/esm/factory/createGlobalState.js
var import_react98 = __toESM(require_react());

// ../../node_modules/react-use/esm/useHash.js
var import_react99 = __toESM(require_react());

// ../../packages/aitable/src/ui/Input.tsx
var import_react100 = __toESM(require_react(), 1);

// ../../packages/aitable/src/utils/color.ts
var Colors = class {
  static Amber = "#F59E0B";
  static Blue = "#3B82F6";
  static Cyan = "#06B6D4";
  static Emerald = "#10B981";
  static Fuchsia = "#D946EF";
  static Gray = "#6B7280";
  static Green = "#22C55E";
  static Indigo = "#6366F1";
  static Lime = "#84CC16";
  static Orange = "#F97316";
  static Pink = "#EC4899";
  static Purple = "#A855F7";
  static Red = "#EF4444";
  static Rose = "#F43F5E";
  static Sky = "#0EA5E9";
  static Slate = "#64748B";
  static Teal = "#14B8A6";
  static Violet = "#8B5CF6";
  static Yellow = "#EAB308";
  static Zinc = "#71717A";
};
var ColorUtils = class {
  static hexToRgb(hex) {
    const result2 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result2 ? {
      r: parseInt(result2[1], 16),
      g: parseInt(result2[2], 16),
      b: parseInt(result2[3], 16)
    } : null;
  }
  static rgbToHex(r, g, b2) {
    return "#" + ((1 << 24) + (r << 16) + (g << 8) + b2).toString(16).slice(1);
  }
  static getContrastYIQ(hexColor) {
    const rgb = this.hexToRgb(hexColor);
    if (!rgb) {
      return "black";
    }
    const yiq = (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
    return yiq >= 128 ? "black" : "white";
  }
  static getHexForColor(color) {
    if (/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color)) {
      return color;
    }
    return color;
  }
  static shouldUseLightTextOnColor(color) {
    const contrast = this.getContrastYIQ(color);
    return contrast === "white";
  }
};
function contractColorForTheme(color, theme = "light") {
  if (theme === "dark") {
    const rgb = ColorUtils.hexToRgb(color);
    if (!rgb) {
      return color;
    }
    const factor = 1.3;
    return ColorUtils.rgbToHex(
      Math.min(255, Math.round(rgb.r * factor)),
      Math.min(255, Math.round(rgb.g * factor)),
      Math.min(255, Math.round(rgb.b * factor))
    );
  }
  return color;
}

// ../../packages/aitable/src/utils/string.ts
function getRandomString(length = 8) {
  const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  let result2 = "";
  for (let i = 0; i < length; i++) {
    result2 += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return result2;
}
function cn(...classes) {
  return classes.filter(Boolean).join(" ");
}

// ../../packages/aitable/src/utils/icons.tsx
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var Check = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: (0, import_jsx_runtime.jsx)("polyline", { points: "20 6 9 17 4 12" })
  }
);
var ChevronDown = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: (0, import_jsx_runtime.jsx)("polyline", { points: "6 9 12 15 18 9" })
  }
);
var ChevronRight = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: (0, import_jsx_runtime.jsx)("polyline", { points: "9 18 15 12 9 6" })
  }
);
var Menu = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("line", { x1: "3", y1: "12", x2: "21", y2: "12" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "3", y1: "6", x2: "21", y2: "6" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "3", y1: "18", x2: "21", y2: "18" })
    ]
  }
);
var Eye = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("path", { d: "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "12", cy: "12", r: "3" })
    ]
  }
);
var EyeOff = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("path", { d: "M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "1", y1: "1", x2: "23", y2: "23" })
    ]
  }
);
var MagicAi = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: (0, import_jsx_runtime.jsx)("path", { d: "M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" })
  }
);
var Square = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsx)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: (0, import_jsx_runtime.jsx)("rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", ry: "2" })
  }
);
var SquareCheck = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", ry: "2" }),
      (0, import_jsx_runtime.jsx)("polyline", { points: "9 11 12 14 20 6" })
    ]
  }
);
var MinusSquare = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", ry: "2" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "8", y1: "12", x2: "16", y2: "12" })
    ]
  }
);
var Grip = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("circle", { cx: "9", cy: "12", r: "1" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "9", cy: "5", r: "1" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "9", cy: "19", r: "1" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "15", cy: "12", r: "1" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "15", cy: "5", r: "1" }),
      (0, import_jsx_runtime.jsx)("circle", { cx: "15", cy: "19", r: "1" })
    ]
  }
);
var AlertCircle = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("circle", { cx: "12", cy: "12", r: "10" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "12", y1: "8", x2: "12", y2: "12" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "12", y1: "16", x2: "12.01", y2: "16" })
    ]
  }
);
var DraggableHandle = Grip;
var Maximize2 = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("polyline", { points: "15 3 21 3 21 9" }),
      (0, import_jsx_runtime.jsx)("polyline", { points: "9 21 3 21 3 15" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "21", y1: "3", x2: "14", y2: "10" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "3", y1: "21", x2: "10", y2: "14" })
    ]
  }
);
var Plus = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("line", { x1: "12", y1: "5", x2: "12", y2: "19" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "5", y1: "12", x2: "19", y2: "12" })
    ]
  }
);
var X = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("line", { x1: "18", y1: "6", x2: "6", y2: "18" }),
      (0, import_jsx_runtime.jsx)("line", { x1: "6", y1: "6", x2: "18", y2: "18" })
    ]
  }
);
var Lock = ({ className, size: size2 = 16, ...props }) => (0, import_jsx_runtime.jsxs)(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    className,
    ...props,
    children: [
      (0, import_jsx_runtime.jsx)("rect", { x: "3", y: "11", width: "18", height: "11", rx: "2", ry: "2" }),
      (0, import_jsx_runtime.jsx)("path", { d: "M7 11V7a5 5 0 0 1 10 0v4" })
    ]
  }
);

// ../../packages/aitable/src/grid/renderers/cell-renderer/interface.ts
var CellType = /* @__PURE__ */ ((CellType5) => {
  CellType5["Text"] = "text";
  CellType5["Number"] = "number";
  CellType5["Boolean"] = "boolean";
  CellType5["Link"] = "link";
  CellType5["Image"] = "image";
  CellType5["Chart"] = "chart";
  CellType5["Date"] = "date";
  CellType5["User"] = "user";
  CellType5["Attachment"] = "attachment";
  CellType5["Rating"] = "rating";
  CellType5["Select"] = "select";
  CellType5["MultiSelect"] = "multiSelect";
  CellType5["Button"] = "button";
  CellType5["Formula"] = "formula";
  CellType5["Lookup"] = "lookup";
  CellType5["Rollup"] = "rollup";
  CellType5["Loading"] = "loading";
  return CellType5;
})(CellType || {});
var CellRegionType = /* @__PURE__ */ ((CellRegionType3) => {
  CellRegionType3["Cell"] = "cell";
  CellRegionType3["CellValue"] = "cellValue";
  CellRegionType3["ActiveCell"] = "activeCell";
  CellRegionType3["ColumnHeader"] = "columnHeader";
  CellRegionType3["RowHeader"] = "rowHeader";
  CellRegionType3["Update"] = "update";
  CellRegionType3["Blank"] = "blank";
  CellRegionType3["Preview"] = "preview";
  CellRegionType3["ToggleEditing"] = "toggleEditing";
  CellRegionType3["Hover"] = "hover";
  return CellRegionType3;
})(CellRegionType || {});
var ChartType = /* @__PURE__ */ ((ChartType2) => {
  ChartType2["Line"] = "line";
  ChartType2["Bar"] = "bar";
  ChartType2["Pie"] = "pie";
  ChartType2["Area"] = "area";
  return ChartType2;
})(ChartType || {});
var NumberDisplayType = /* @__PURE__ */ ((NumberDisplayType2) => {
  NumberDisplayType2["Number"] = "number";
  NumberDisplayType2["Percent"] = "percent";
  NumberDisplayType2["Currency"] = "currency";
  NumberDisplayType2["Ring"] = "ring";
  NumberDisplayType2["Bar"] = "bar";
  return NumberDisplayType2;
})(NumberDisplayType || {});

// ../../packages/aitable/src/utils/field-mappers.ts
var FIELD_TYPE_ICONS = {
  text: "📝",
  singleLineText: "📝",
  longText: "📝",
  string: "📝",
  singleline: "📝",
  multiline: "📝",
  richtext: "📝",
  number: "🔢",
  integer: "🔢",
  float: "🔢",
  decimal: "🔢",
  currency: "💰",
  percent: "📊",
  autoNumber: "🔢",
  count: "🔢",
  boolean: "✓",
  checkbox: "✓",
  check: "✓",
  date: "📅",
  datetime: "📅",
  createdTime: "📅",
  lastModifiedTime: "📅",
  timestamp: "📅",
  time: "📅",
  createDate: "📅",
  modifyDate: "📅",
  createdDatetime: "📅",
  modifiedDatetime: "📅",
  select: "📋",
  singleSelect: "📋",
  dropdown: "📋",
  singleChoice: "📋",
  option: "📋",
  choice: "📋",
  multiSelect: "🏷️",
  multipleSelect: "🏷️",
  multipleSelects: "🏷️",
  multiChoice: "🏷️",
  multipleChoice: "🏷️",
  tags: "🏷️",
  categories: "🏷️",
  user: "👤",
  createdBy: "👤",
  lastModifiedBy: "👤",
  owner: "👤",
  assignee: "👤",
  collaborator: "👤",
  member: "👤",
  link: "🔗",
  url: "🔗",
  hyperlink: "🔗",
  website: "🔗",
  webUrl: "🔗",
  email: "📧",
  mail: "📧",
  emailAddress: "📧",
  phone: "📱",
  telephone: "📱",
  mobile: "📱",
  phoneNumber: "📱",
  contact: "📱",
  attachment: "📎",
  file: "📎",
  rating: "⭐",
  star: "⭐",
  formula: "🧮",
  rollup: "🔄",
  lookup: "🔍",
  reference: "🔗",
  button: "🔘",
  barcode: "📱",
  duration: "⏱️",
  progress: "📊"
};
function getFieldIcon(fieldType) {
  const normalizedType = fieldType?.toLowerCase() || "";
  return FIELD_TYPE_ICONS[normalizedType] || FIELD_TYPE_ICONS[fieldType] || "📄";
}
function mapFieldTypeToCellType(fieldType) {
  const normalizedType = (fieldType || "").toLowerCase();
  if ([
    "text",
    "singlelinetext",
    "longtext",
    "string",
    "singleline",
    "multiline",
    "richtext",
    "formula",
    "email",
    "mail",
    "emailaddress"
  ].includes(normalizedType)) {
    return "text" /* Text */;
  }
  if ([
    "number",
    "integer",
    "float",
    "decimal",
    "currency",
    "percent",
    "autonumber",
    "count"
  ].includes(normalizedType)) {
    return "number" /* Number */;
  }
  if (["boolean", "checkbox", "check"].includes(normalizedType)) {
    return "boolean" /* Boolean */;
  }
  if ([
    "date",
    "datetime",
    "createdtime",
    "lastmodifiedtime",
    "timestamp",
    "time",
    "createdate",
    "modifydate",
    "createddatetime",
    "modifieddatetime"
  ].includes(normalizedType)) {
    return "date" /* Date */;
  }
  if ([
    "select",
    "singleselect",
    "dropdown",
    "singlechoice",
    "option",
    "choice",
    "multiselect",
    "multipleselect",
    "multipleselects",
    "multichoice",
    "multiplechoice",
    "tags",
    "categories"
  ].includes(normalizedType)) {
    return "select" /* Select */;
  }
  if (["rating", "star"].includes(normalizedType)) {
    return "rating" /* Rating */;
  }
  if ([
    "user",
    "createdby",
    "lastmodifiedby",
    "owner",
    "assignee",
    "collaborator",
    "member"
  ].includes(normalizedType)) {
    return "user" /* User */;
  }
  if ([
    "url",
    "link",
    "hyperlink",
    "website",
    "weburl",
    "attachment",
    "phone",
    "telephone",
    "mobile",
    "phonenumber",
    "contact"
  ].includes(normalizedType)) {
    return "link" /* Link */;
  }
  return "text" /* Text */;
}
function isMultiSelectField(fieldType) {
  const normalizedType = (fieldType || "").toLowerCase();
  return [
    "multiselect",
    "multipleselect",
    "multipleselects",
    "multichoice",
    "multiplechoice",
    "tags",
    "categories"
  ].includes(normalizedType);
}
function isSingleSelectField(fieldType) {
  const normalizedType = (fieldType || "").toLowerCase();
  return [
    "select",
    "singleselect",
    "dropdown",
    "singlechoice",
    "option",
    "choice"
  ].includes(normalizedType);
}
function convertFieldValueToCell(value, fieldType, fieldOptions) {
  const normalizedType = (fieldType || "").toLowerCase();
  if ([
    "text",
    "singlelinetext",
    "longtext",
    "string",
    "singleline",
    "multiline",
    "richtext",
    "formula"
  ].includes(normalizedType)) {
    return {
      type: "text" /* Text */,
      data: value ? String(value) : "",
      displayData: value ? String(value) : ""
    };
  }
  if ([
    "number",
    "integer",
    "float",
    "decimal",
    "currency",
    "percent",
    "autonumber",
    "count"
  ].includes(normalizedType)) {
    const numValue = value != null ? Number(value) : 0;
    return {
      type: "number" /* Number */,
      data: numValue,
      displayData: String(numValue)
    };
  }
  if (["boolean", "checkbox", "check"].includes(normalizedType)) {
    const boolValue = Boolean(value);
    return {
      type: "boolean" /* Boolean */,
      data: boolValue,
      displayData: boolValue ? "✓" : ""
    };
  }
  if ([
    "date",
    "datetime",
    "createdtime",
    "lastmodifiedtime",
    "timestamp",
    "time",
    "createdate",
    "modifydate",
    "createddatetime",
    "modifieddatetime"
  ].includes(normalizedType)) {
    const dateStr = value ? String(value) : "";
    let displayStr = "";
    if (dateStr) {
      try {
        displayStr = new Date(dateStr).toLocaleDateString("zh-CN");
      } catch {
        displayStr = dateStr;
      }
    }
    return {
      type: "date" /* Date */,
      data: dateStr,
      displayData: displayStr
    };
  }
  if (isSingleSelectField(normalizedType)) {
    const options = fieldOptions?.choices || [];
    const choiceMap = /* @__PURE__ */ new Map();
    options.forEach((choice) => {
      choiceMap.set(choice.id || choice.name, choice);
    });
    const strValue = value ? String(value) : "";
    return {
      type: "select" /* Select */,
      data: strValue ? [strValue] : [],
      displayData: strValue ? [strValue] : [],
      choiceMap,
      choiceSorted: options,
      isMultiple: false
    };
  }
  if (isMultiSelectField(normalizedType)) {
    const options = fieldOptions?.choices || [];
    const choiceMap = /* @__PURE__ */ new Map();
    options.forEach((choice) => {
      choiceMap.set(choice.id || choice.name, choice);
    });
    let arrValue = [];
    if (Array.isArray(value)) {
      arrValue = value.map((v) => String(v || "")).filter((v) => v !== "");
    } else if (value) {
      arrValue = [String(value)];
    }
    return {
      type: "select" /* Select */,
      data: arrValue,
      displayData: arrValue,
      choiceMap,
      choiceSorted: options,
      isMultiple: true
    };
  }
  if (["rating", "star"].includes(normalizedType)) {
    const ratingValue = value ? Number(value) : 0;
    return {
      type: "rating" /* Rating */,
      data: ratingValue,
      displayData: String(ratingValue),
      icon: "⭐",
      color: "#fbbf24",
      max: 5
    };
  }
  if ([
    "user",
    "createdby",
    "lastmodifiedby",
    "owner",
    "assignee",
    "collaborator",
    "member"
  ].includes(normalizedType)) {
    const userName = value ? String(value) : "";
    return {
      type: "user" /* User */,
      data: userName ? [{ id: userName, name: userName, avatarUrl: "" }] : [],
      displayData: userName ? `👤 ${userName}` : ""
    };
  }
  if (["url", "link", "hyperlink", "website", "weburl", "attachment"].includes(
    normalizedType
  )) {
    const linkValue = value ? String(value) : "";
    return {
      type: "link" /* Link */,
      data: {
        title: linkValue,
        url: linkValue
      },
      displayData: linkValue
    };
  }
  if (["email", "mail", "emailaddress"].includes(normalizedType)) {
    return {
      type: "text" /* Text */,
      data: value ? String(value) : "",
      displayData: value ? String(value) : ""
    };
  }
  if (["phone", "telephone", "mobile", "phonenumber", "contact"].includes(
    normalizedType
  )) {
    const phoneValue = value ? String(value) : "";
    return {
      type: "link" /* Link */,
      data: {
        title: phoneValue,
        url: phoneValue ? `tel:${phoneValue}` : ""
      },
      displayData: phoneValue
    };
  }
  console.log(
    `⚠️ 未知字段类型 "${fieldType}" (normalized: "${normalizedType}")，使用文本类型. 值:`,
    value
  );
  return {
    type: "text" /* Text */,
    data: value ? String(value) : "",
    displayData: value ? String(value) : ""
  };
}
function extractFieldValue(record, fieldId, fieldName) {
  if (!record) return null;
  if (record.data && typeof record.data === "object") {
    if (fieldId in record.data) {
      return record.data[fieldId];
    }
    if (fieldName && fieldName in record.data) {
      return record.data[fieldName];
    }
  }
  if (record.fields && typeof record.fields === "object") {
    if (fieldId in record.fields) {
      return record.fields[fieldId];
    }
    if (fieldName && fieldName in record.fields) {
      return record.fields[fieldName];
    }
  }
  if (fieldId in record) {
    return record[fieldId];
  }
  if (fieldName && fieldName in record) {
    return record[fieldName];
  }
  return null;
}
function createGetCellContent(fields, records) {
  return (cell) => {
    const [colIndex, rowIndex] = cell;
    if (colIndex < 0 || rowIndex < 0 || !records.length || !fields.length) {
      return {
        type: "text" /* Text */,
        data: "",
        displayData: ""
      };
    }
    const record = records[rowIndex];
    const field = fields[colIndex];
    if (!record || !field) {
      return {
        type: "text" /* Text */,
        data: "",
        displayData: ""
      };
    }
    const value = extractFieldValue(record, field.id, field.name);
    return convertFieldValueToCell(value, field.type, field.options);
  };
}
function convertFieldsToColumns(fields) {
  return fields.map((field, index3) => ({
    id: field.id,
    name: field.name,
    width: 150,
    isPrimary: field.isPrimary || field.primary || index3 === 0,
    icon: getFieldIcon(field.type)
  }));
}

// ../../packages/aitable/src/ui/Input.tsx
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var Input = (0, import_react100.forwardRef)(
  ({ className, type = "text", ...props }, ref) => {
    return (0, import_jsx_runtime2.jsx)(
      "input",
      {
        type,
        className: cn(
          "flex h-9 w-full rounded-md border border-input bg-background px-3 py-1 text-sm shadow-sm transition-colors",
          "file:border-0 file:bg-transparent file:text-sm file:font-medium",
          "placeholder:text-muted-foreground",
          "focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring",
          "disabled:cursor-not-allowed disabled:opacity-50",
          className
        ),
        ref,
        ...props
      }
    );
  }
);
Input.displayName = "Input";

// ../../packages/aitable/src/ui/Command.tsx
var import_react101 = __toESM(require_react(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var CommandContext = (0, import_react101.createContext)({
  search: "",
  setSearch: () => {
  }
});
var Command = (0, import_react101.forwardRef)(
  ({ className, children, ...props }, ref) => {
    const [search2, setSearch] = (0, import_react101.useState)("");
    return (0, import_jsx_runtime3.jsx)(CommandContext.Provider, { value: { search: search2, setSearch }, children: (0, import_jsx_runtime3.jsx)(
      "div",
      {
        ref,
        className: cn(
          "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
          className
        ),
        ...props,
        children
      }
    ) });
  }
);
Command.displayName = "Command";
var CommandInput = (0, import_react101.forwardRef)(({ className, placeholder, ...props }, ref) => {
  const { setSearch } = (0, import_react101.useContext)(CommandContext);
  return (0, import_jsx_runtime3.jsx)("div", { className: "flex items-center border-b px-3", children: (0, import_jsx_runtime3.jsx)(
    "input",
    {
      ref,
      className: cn(
        "flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none",
        "placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
        className
      ),
      placeholder,
      onChange: (e2) => setSearch(e2.target.value),
      ...props
    }
  ) });
});
CommandInput.displayName = "CommandInput";
var CommandList = (0, import_react101.forwardRef)(({ className, children, ...props }, ref) => {
  return (0, import_jsx_runtime3.jsx)(
    "div",
    {
      ref,
      className: cn(
        "max-h-[300px] overflow-y-auto overflow-x-hidden",
        className
      ),
      ...props,
      children
    }
  );
});
CommandList.displayName = "CommandList";
var CommandEmpty = (0, import_react101.forwardRef)(({ className, children = "No results found.", ...props }, ref) => {
  return (0, import_jsx_runtime3.jsx)(
    "div",
    {
      ref,
      className: cn("py-6 text-center text-sm", className),
      ...props,
      children
    }
  );
});
CommandEmpty.displayName = "CommandEmpty";
var CommandGroup = (0, import_react101.forwardRef)(({ className, children, ...props }, ref) => {
  return (0, import_jsx_runtime3.jsx)(
    "div",
    {
      ref,
      className: cn(
        "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
        className
      ),
      ...props,
      children
    }
  );
});
CommandGroup.displayName = "CommandGroup";
var CommandItem = (0, import_react101.forwardRef)(({ className, onSelect, children, ...props }, ref) => {
  return (0, import_jsx_runtime3.jsx)(
    "div",
    {
      ref,
      className: cn(
        "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none",
        "hover:bg-accent hover:text-accent-foreground",
        "data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
        className
      ),
      onClick: onSelect,
      ...props,
      children
    }
  );
});
CommandItem.displayName = "CommandItem";

// ../../packages/aitable/src/ui/Button.tsx
var import_react103 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/design-system/tokens.ts
var colorTokens = {
  // Primary - 主色调（用于强调、选中状态）
  primary: {
    50: "#eff6ff",
    100: "#dbeafe",
    200: "#bfdbfe",
    300: "#93c5fd",
    400: "#60a5fa",
    500: "#3b82f6",
    // 主色
    600: "#2563eb",
    700: "#1d4ed8",
    800: "#1e40af",
    900: "#1e3a8a"
  },
  // Surface - 表面颜色（背景、卡片）
  surface: {
    base: "#ffffff",
    hover: "#f8fafc",
    active: "#f1f5f9",
    selected: "#e0f2fe",
    disabled: "#f9fafb",
    destructive: "#fef2f2",
    // 危险操作的背景色
    accent: "#eff6ff"
    // 强调背景色
  },
  // Border - 边框颜色
  border: {
    subtle: "#e5e7eb",
    default: "#d1d5db",
    strong: "#9ca3af",
    focus: "#3b82f6",
    error: "#ef4444",
    accent: "#93c5fd"
    // 强调边框色
  },
  // Text - 文本颜色
  text: {
    primary: "#0f172a",
    secondary: "#64748b",
    tertiary: "#94a3b8",
    inverse: "#ffffff",
    disabled: "#cbd5e1",
    link: "#2563eb",
    error: "#dc2626",
    success: "#16a34a",
    warning: "#d97706",
    accent: "#2563eb",
    // 强调文本色
    destructive: "#dc2626"
    // 危险操作的文本色
  },
  // Interactive - 交互元素
  interactive: {
    default: {
      bg: "#ffffff",
      border: "#d1d5db",
      text: "#374151"
    },
    hover: {
      bg: "#f9fafb",
      border: "#9ca3af",
      text: "#111827"
    },
    active: {
      bg: "#f3f4f6",
      border: "#6b7280",
      text: "#030712"
    },
    disabled: {
      bg: "#f9fafb",
      border: "#e5e7eb",
      text: "#d1d5db"
    },
    bg: "#ffffff"
    // 添加 bg 属性用于兼容性
  },
  // Semantic - 语义颜色
  semantic: {
    info: {
      bg: "#dbeafe",
      border: "#93c5fd",
      text: "#1e40af"
    },
    success: {
      bg: "#dcfce7",
      border: "#86efac",
      text: "#166534"
    },
    warning: {
      bg: "#fef3c7",
      border: "#fcd34d",
      text: "#92400e"
    },
    error: {
      bg: "#fee2e2",
      border: "#fca5a5",
      text: "#991b1b"
    }
  },
  // Cell - 单元格特定颜色
  cell: {
    background: "#ffffff",
    backgroundHover: "#f8fafc",
    backgroundSelected: "rgba(226, 232, 240, 0.5)",
    backgroundLoading: "#fef3c7",
    border: "#e2e8f0",
    borderActive: "#0f172a",
    text: "#334155",
    textHighlight: "#7c3aed"
  },
  // Column - 列头颜色
  column: {
    background: "#f8fafc",
    backgroundHover: "#f1f5f9",
    backgroundSelected: "#e2e8f0",
    text: "#334155",
    resizeHandle: "#94a3b8"
  }
};
var spacing = {
  0: "0",
  1: "0.25rem",
  // 4px
  2: "0.5rem",
  // 8px
  3: "0.75rem",
  // 12px
  4: "1rem",
  // 16px
  5: "1.25rem",
  // 20px
  6: "1.5rem",
  // 24px
  8: "2rem",
  // 32px
  10: "2.5rem",
  // 40px
  12: "3rem",
  // 48px
  16: "4rem",
  // 64px
  20: "5rem"
  // 80px
};
var radius = {
  none: "0",
  sm: "0.25rem",
  // 4px
  md: "0.375rem",
  // 6px
  lg: "0.5rem",
  // 8px
  xl: "0.75rem",
  // 12px
  "2xl": "1rem",
  // 16px
  full: "9999px"
};
var elevation = {
  // 扁平（无阴影）
  flat: "none",
  // 微小阴影（hover 状态）
  xs: "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
  // 小阴影（下拉菜单）
  sm: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)",
  // 中等阴影（卡片、弹窗）
  md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1)",
  // 大阴影（模态框）
  lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1)",
  // 超大阴影（主要模态框）
  xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)",
  // Focus ring（焦点状态）
  focus: "0 0 0 3px rgba(59, 130, 246, 0.1)"
};
var typography = {
  fontFamily: {
    sans: 'Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
    mono: '"Fira Code", "SF Mono", Monaco, "Cascadia Code", "Roboto Mono", Consolas, monospace'
  },
  fontSize: {
    xs: ["0.75rem", { lineHeight: "1rem" }],
    // 12px
    sm: ["0.8125rem", { lineHeight: "1.25rem" }],
    // 13px
    base: ["0.875rem", { lineHeight: "1.5rem" }],
    // 14px
    lg: ["1rem", { lineHeight: "1.75rem" }],
    // 16px
    xl: ["1.125rem", { lineHeight: "1.75rem" }],
    // 18px
    "2xl": ["1.25rem", { lineHeight: "1.75rem" }]
    // 20px
  },
  fontWeight: {
    normal: "400",
    medium: "500",
    semibold: "600",
    bold: "700"
  },
  letterSpacing: {
    tight: "-0.01em",
    normal: "0",
    wide: "0.01em"
  }
};
var transitions = {
  // 时长
  duration: {
    instant: "0ms",
    fast: "150ms",
    base: "200ms",
    slow: "300ms",
    slower: "500ms"
  },
  // 缓动函数
  easing: {
    // 标准缓动（大多数情况）
    standard: "cubic-bezier(0.4, 0.0, 0.2, 1)",
    // 加速（元素离开）
    accelerate: "cubic-bezier(0.4, 0.0, 1, 1)",
    // 减速（元素进入）
    decelerate: "cubic-bezier(0.0, 0.0, 0.2, 1)",
    // 弹性（特殊场景）
    spring: "cubic-bezier(0.34, 1.56, 0.64, 1)"
  },
  // 预设 transition
  presets: {
    // 快速淡入淡出（hover）
    fade: "opacity 150ms cubic-bezier(0.4, 0.0, 0.2, 1)",
    // 颜色变化
    colors: "background-color 200ms cubic-bezier(0.4, 0.0, 0.2, 1), color 200ms cubic-bezier(0.4, 0.0, 0.2, 1)",
    // 所有属性
    all: "all 200ms cubic-bezier(0.4, 0.0, 0.2, 1)",
    // 变换（transform）
    transform: "transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)"
  }
};
var iconSizes = {
  xs: 14,
  sm: 16,
  base: 20,
  lg: 24,
  xl: 32
};
var zIndex = {
  base: 0,
  dropdown: 1e3,
  sticky: 1100,
  fixed: 1200,
  modalBackdrop: 1300,
  modal: 1400,
  popover: 1500,
  tooltip: 1600
};
var componentTokens = {
  // 按钮
  button: {
    height: {
      sm: "28px",
      md: "32px",
      lg: "36px"
    },
    padding: {
      sm: "0 12px",
      md: "0 16px",
      lg: "0 20px"
    }
  },
  // 输入框
  input: {
    height: {
      sm: "28px",
      md: "32px",
      lg: "36px"
    },
    padding: {
      sm: "0 8px",
      md: "0 12px",
      lg: "0 16px"
    },
    borderWidth: "1px",
    borderRadius: radius.md
  },
  // 单元格
  cell: {
    minHeight: "36px",
    padding: "0 8px",
    borderWidth: "1px"
  },
  // 列头
  columnHeader: {
    height: "40px",
    padding: "0 12px"
  }
};
var tokens = {
  colors: colorTokens,
  spacing,
  radius,
  elevation,
  typography,
  transitions,
  iconSizes,
  zIndex,
  components: componentTokens
};

// ../../packages/aitable/src/grid/design-system/utils.ts
function cn2(...inputs) {
  return clsx(inputs);
}

// ../../packages/aitable/src/grid/design-system/dark-theme.ts
var darkColorTokens = {
  // Primary - 主色调（略微提亮以增加对比）
  primary: {
    50: "#1e3a8a",
    100: "#1e40af",
    200: "#1d4ed8",
    300: "#2563eb",
    400: "#3b82f6",
    500: "#60a5fa",
    // 主色（比 light 模式更亮）
    600: "#93c5fd",
    700: "#bfdbfe",
    800: "#dbeafe",
    900: "#eff6ff"
  },
  // Surface - 表面颜色（使用深灰色代替纯黑）
  surface: {
    base: "#0a0a0a",
    // 几乎黑，但不是纯黑
    hover: "#171717",
    // neutral-900
    active: "#262626",
    // neutral-800
    selected: "#1e293b",
    // slate-800 with blue tint
    disabled: "#18181b"
    // zinc-900
  },
  // Border - 边框颜色（暗色模式下要subtle）
  border: {
    subtle: "#27272a",
    // zinc-800
    default: "#3f3f46",
    // zinc-700
    strong: "#52525b",
    // zinc-600
    focus: "#60a5fa",
    // blue-400
    error: "#f87171"
    // red-400
  },
  // Text - 文本颜色（暗色模式下不用纯白）
  text: {
    primary: "#f4f4f5",
    // zinc-100
    secondary: "#a1a1aa",
    // zinc-400
    tertiary: "#71717a",
    // zinc-500
    inverse: "#18181b",
    // zinc-900
    disabled: "#52525b",
    // zinc-600
    link: "#93c5fd",
    // blue-300
    error: "#fca5a5",
    // red-300
    success: "#86efac",
    // green-300
    warning: "#fcd34d"
    // yellow-300
  },
  // Interactive - 交互元素
  interactive: {
    default: {
      bg: "#18181b",
      border: "#3f3f46",
      text: "#e4e4e7"
    },
    hover: {
      bg: "#27272a",
      border: "#52525b",
      text: "#f4f4f5"
    },
    active: {
      bg: "#3f3f46",
      border: "#71717a",
      text: "#fafafa"
    },
    disabled: {
      bg: "#18181b",
      border: "#27272a",
      text: "#52525b"
    }
  },
  // Semantic - 语义颜色（暗色模式下降低饱和度）
  semantic: {
    info: {
      bg: "#1e293b",
      border: "#334155",
      text: "#93c5fd"
    },
    success: {
      bg: "#14532d",
      border: "#166534",
      text: "#86efac"
    },
    warning: {
      bg: "#713f12",
      border: "#92400e",
      text: "#fcd34d"
    },
    error: {
      bg: "#7f1d1d",
      border: "#991b1b",
      text: "#fca5a5"
    }
  },
  // Cell - 单元格特定颜色
  cell: {
    background: "#0a0a0a",
    backgroundHover: "#171717",
    backgroundSelected: "rgba(59, 130, 246, 0.15)",
    backgroundLoading: "#422006",
    border: "#27272a",
    borderActive: "#f4f4f5",
    text: "#e4e4e7",
    textHighlight: "#a78bfa"
    // violet-400
  },
  // Column - 列头颜色
  column: {
    background: "#171717",
    backgroundHover: "#262626",
    backgroundSelected: "#3f3f46",
    text: "#e4e4e7",
    resizeHandle: "#71717a"
  }
};
var darkTheme = {
  // ========== Common ==========
  staticWhite: "#FFFFFF",
  staticBlack: "#000000",
  // Icon
  iconFgCommon: darkColorTokens.text.secondary,
  iconBgCommon: "transparent",
  iconFgHighlight: darkColorTokens.primary[500],
  iconBgHighlight: darkColorTokens.primary[100],
  iconFgSelected: darkColorTokens.primary[600],
  iconBgSelected: darkColorTokens.primary[200],
  iconSizeXS: 14,
  iconSizeSM: 16,
  iconSizeMD: 20,
  iconSizeLG: 24,
  // Font
  fontSizeXXS: 10,
  fontSizeXS: 12,
  fontSizeSM: 13,
  fontSizeMD: 14,
  fontSizeLG: 16,
  fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
  fontSize: 13,
  // Text
  textColor: darkColorTokens.text.primary,
  textColorSecondary: darkColorTokens.text.secondary,
  // ========== Cell ==========
  cellBg: darkColorTokens.cell.background,
  cellBgHovered: darkColorTokens.cell.backgroundHover,
  cellBgSelected: darkColorTokens.cell.backgroundSelected,
  cellBgLoading: darkColorTokens.cell.backgroundLoading,
  cellLineColor: darkColorTokens.cell.border,
  cellLineColorActived: darkColorTokens.cell.borderActive,
  cellTextColor: darkColorTokens.cell.text,
  cellTextColorHighlight: darkColorTokens.cell.textHighlight,
  cellOptionBg: darkColorTokens.surface.active,
  cellOptionBgHighlight: darkColorTokens.surface.hover,
  cellOptionTextColor: darkColorTokens.text.primary,
  // ========== Group Header ==========
  groupHeaderBgPrimary: darkColorTokens.surface.hover,
  groupHeaderBgSecondary: darkColorTokens.surface.active,
  groupHeaderBgTertiary: darkColorTokens.border.subtle,
  // ========== Column Header ==========
  columnHeaderBg: darkColorTokens.column.background,
  columnHeaderBgHovered: darkColorTokens.column.backgroundHover,
  columnHeaderBgSelected: darkColorTokens.column.backgroundSelected,
  columnHeaderNameColor: darkColorTokens.column.text,
  columnResizeHandlerBg: darkColorTokens.column.resizeHandle,
  columnDraggingPlaceholderBg: "rgba(255, 255, 255, 0.1)",
  // ========== Column Statistic ==========
  columnStatisticBgHovered: darkColorTokens.surface.active,
  // ========== Row Header ==========
  rowHeaderTextColor: darkColorTokens.text.secondary,
  // ========== Append Row ==========
  appendRowBg: darkColorTokens.surface.hover,
  appendRowBgHovered: darkColorTokens.surface.active,
  // ========== Avatar ==========
  avatarBg: darkColorTokens.surface.active,
  avatarTextColor: darkColorTokens.text.primary,
  avatarSizeXS: 16,
  avatarSizeSM: 20,
  avatarSizeMD: 24,
  // ========== ScrollBar ==========
  scrollBarBg: darkColorTokens.border.strong,
  // ========== Interaction ==========
  interactionLineColorCommon: darkColorTokens.border.default,
  interactionLineColorHighlight: darkColorTokens.primary[500],
  // ========== Search ==========
  searchCursorBg: "#fbbf24",
  // amber-400
  searchTargetIndexBg: "#713f12",
  // yellow-900 dark
  // ========== Comment ==========
  commentCountBg: "#f97316",
  // orange-500
  commentCountTextColor: "#ffffff",
  // ========== Theme Key ==========
  themeKey: "dark"
};

// ../../packages/aitable/src/grid/design-system/theme-provider.tsx
var import_react102 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/configs/gridTheme.refactored.ts
var { colors, iconSizes: iconSizes2, typography: typography2 } = tokens;
var lightTheme = {
  // ========== Common ==========
  staticWhite: "#FFFFFF",
  staticBlack: "#000000",
  // Icon
  iconFgCommon: colors.text.secondary,
  iconBgCommon: "transparent",
  iconFgHighlight: colors.primary[500],
  iconBgHighlight: colors.primary[50],
  iconFgSelected: colors.primary[700],
  iconBgSelected: colors.primary[100],
  iconSizeXS: iconSizes2.xs,
  iconSizeSM: iconSizes2.sm,
  iconSizeMD: iconSizes2.base,
  iconSizeLG: iconSizes2.lg,
  // Font
  fontSizeXXS: 10,
  fontSizeXS: 12,
  fontSizeSM: 13,
  fontSizeMD: 14,
  fontSizeLG: 16,
  fontFamily: typography2.fontFamily.sans,
  fontSize: 13,
  // Text
  textColor: colors.text.primary,
  textColorSecondary: colors.text.secondary,
  // ========== Cell ==========
  cellBg: colors.cell.background,
  cellBgHovered: colors.cell.backgroundHover,
  cellBgSelected: colors.cell.backgroundSelected,
  cellBgLoading: colors.cell.backgroundLoading,
  cellLineColor: colors.cell.border,
  cellLineColorActived: colors.cell.borderActive,
  cellTextColor: colors.cell.text,
  cellTextColorHighlight: colors.cell.textHighlight,
  // Cell Options (Select/MultiSelect)
  cellOptionBg: colors.surface.active,
  cellOptionBgHighlight: colors.surface.hover,
  cellOptionTextColor: colors.text.primary,
  // ========== Group Header ==========
  groupHeaderBgPrimary: colors.surface.hover,
  groupHeaderBgSecondary: colors.surface.active,
  groupHeaderBgTertiary: colors.border.subtle,
  // ========== Column Header ==========
  columnHeaderBg: colors.column.background,
  columnHeaderBgHovered: colors.column.backgroundHover,
  columnHeaderBgSelected: colors.column.backgroundSelected,
  columnHeaderNameColor: colors.column.text,
  columnResizeHandlerBg: colors.column.resizeHandle,
  columnDraggingPlaceholderBg: "rgba(0, 0, 0, 0.1)",
  // ========== Column Statistic ==========
  columnStatisticBgHovered: colors.surface.active,
  // ========== Row Header ==========
  rowHeaderTextColor: colors.text.secondary,
  // ========== Append Row ==========
  appendRowBg: colors.surface.hover,
  appendRowBgHovered: colors.surface.active,
  // ========== Avatar ==========
  avatarBg: colors.surface.active,
  avatarTextColor: colors.text.primary,
  avatarSizeXS: 16,
  avatarSizeSM: 20,
  avatarSizeMD: 24,
  // ========== ScrollBar ==========
  scrollBarBg: colors.border.strong,
  // ========== Interaction ==========
  interactionLineColorCommon: colors.border.default,
  interactionLineColorHighlight: colors.primary[500],
  // ========== Search ==========
  searchCursorBg: "#fbbf24",
  // amber-400
  searchTargetIndexBg: "#fef3c7",
  // yellow-100
  // ========== Comment ==========
  commentCountBg: "#f97316",
  // orange-500
  commentCountTextColor: "#ffffff",
  // ========== Theme Key ==========
  themeKey: "light"
};

// ../../packages/aitable/src/grid/design-system/theme-provider.tsx
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var ThemeContext = (0, import_react102.createContext)(void 0);

// ../../packages/aitable/src/ui/Button.tsx
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var variantStyles = {
  primary: {
    base: "bg-blue-600 text-white border-blue-600",
    hover: "hover:bg-blue-700 hover:border-blue-700 hover:shadow-md",
    active: "active:bg-blue-800 active:scale-[0.98]",
    disabled: "disabled:bg-gray-300 disabled:border-gray-300 disabled:text-gray-500 disabled:cursor-not-allowed"
  },
  secondary: {
    base: "bg-white text-gray-700 border-gray-300",
    hover: "hover:bg-gray-50 hover:border-gray-400 hover:text-gray-900",
    active: "active:bg-gray-100 active:scale-[0.98]",
    disabled: "disabled:bg-gray-50 disabled:border-gray-200 disabled:text-gray-400 disabled:cursor-not-allowed"
  },
  ghost: {
    base: "bg-transparent text-gray-700 border-transparent",
    hover: "hover:bg-gray-100 hover:text-gray-900",
    active: "active:bg-gray-200 active:scale-[0.98]",
    disabled: "disabled:text-gray-400 disabled:cursor-not-allowed"
  },
  danger: {
    base: "bg-red-600 text-white border-red-600",
    hover: "hover:bg-red-700 hover:border-red-700 hover:shadow-md",
    active: "active:bg-red-800 active:scale-[0.98]",
    disabled: "disabled:bg-gray-300 disabled:border-gray-300 disabled:text-gray-500 disabled:cursor-not-allowed"
  }
};
var sizeStyles = {
  sm: "h-7 px-2.5 text-xs gap-1.5",
  md: "h-8 px-3 text-sm gap-2",
  lg: "h-10 px-4 text-base gap-2.5"
};
var Spinner = ({ size: size2 = 14 }) => (0, import_jsx_runtime5.jsxs)(
  "svg",
  {
    className: "animate-spin",
    width: size2,
    height: size2,
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    children: [
      (0, import_jsx_runtime5.jsx)(
        "circle",
        {
          className: "opacity-25",
          cx: "12",
          cy: "12",
          r: "10",
          stroke: "currentColor",
          strokeWidth: "4"
        }
      ),
      (0, import_jsx_runtime5.jsx)(
        "path",
        {
          className: "opacity-75",
          fill: "currentColor",
          d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        }
      )
    ]
  }
);
var Button = (0, import_react103.forwardRef)(
  ({
    variant = "secondary",
    size: size2 = "md",
    icon,
    iconPosition = "left",
    loading = false,
    fullWidth = false,
    disabled = false,
    className,
    children,
    type = "button",
    ...props
  }, ref) => {
    const variantStyle = variantStyles[variant];
    const sizeStyle = sizeStyles[size2];
    const iconSizeMap = {
      sm: 14,
      md: 16,
      lg: 18
    };
    const iconSize = iconSizeMap[size2];
    const renderIcon = () => {
      if (loading) {
        return (0, import_jsx_runtime5.jsx)(Spinner, { size: iconSize });
      }
      if (!icon) return null;
      if (import_react103.default.isValidElement(icon)) {
        return icon;
      }
      const isComponentType = typeof icon === "function" || typeof icon === "object" && icon !== null && ("$$typeof" in icon || "render" in icon);
      if (isComponentType) {
        const IconComponent = icon;
        return (0, import_jsx_runtime5.jsx)(IconComponent, { size: iconSize });
      }
      return icon;
    };
    const iconElement = renderIcon();
    return (0, import_jsx_runtime5.jsxs)(
      "button",
      {
        ref,
        type,
        disabled: disabled || loading,
        className: cn2(
          // 基础样式
          "inline-flex items-center justify-center",
          "font-medium rounded-md border",
          "transition-all duration-200 ease-out",
          "focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2",
          // 变体样式
          variantStyle.base,
          variantStyle.hover,
          variantStyle.active,
          variantStyle.disabled,
          // 尺寸样式
          sizeStyle,
          // 全宽
          fullWidth && "w-full",
          // 只有图标时的样式
          !children && iconElement && "aspect-square p-0",
          // 自定义类名
          className
        ),
        ...props,
        children: [
          iconPosition === "left" && iconElement,
          children && (0, import_jsx_runtime5.jsx)("span", { className: cn2(loading && "opacity-0"), children }),
          iconPosition === "right" && iconElement,
          loading && children && (0, import_jsx_runtime5.jsx)("span", { className: "absolute inset-0 flex items-center justify-center", children: (0, import_jsx_runtime5.jsx)(Spinner, { size: iconSize }) })
        ]
      }
    );
  }
);
Button.displayName = "Button";
var IconButton = (0, import_react103.forwardRef)(({ icon, size: size2 = "md", ...props }, ref) => {
  return (0, import_jsx_runtime5.jsx)(Button, { ref, icon, size: size2, ...props });
});
IconButton.displayName = "IconButton";
var ButtonGroup = ({ children, className }) => {
  return (0, import_jsx_runtime5.jsx)(
    "div",
    {
      className: cn2(
        "inline-flex items-center rounded-md",
        "[&>button]:rounded-none",
        "[&>button:first-child]:rounded-l-md",
        "[&>button:last-child]:rounded-r-md",
        "[&>button:not(:first-child)]:border-l-0",
        className
      ),
      role: "group",
      children
    }
  );
};
ButtonGroup.displayName = "ButtonGroup";

// ../../packages/aitable/src/ui/Toast.tsx
var import_react106 = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/createLucideIcon.js
var import_react105 = __toESM(require_react());

// ../../packages/aitable/node_modules/lucide-react/dist/esm/shared/src/utils.js
var toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
var toCamelCase = (string) => string.replace(
  /^([A-Z])|[\s-_]+(\w)/g,
  (match2, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()
);
var toPascalCase = (string) => {
  const camelCase2 = toCamelCase(string);
  return camelCase2.charAt(0).toUpperCase() + camelCase2.slice(1);
};
var mergeClasses = (...classes) => classes.filter((className, index3, array) => {
  return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index3;
}).join(" ").trim();
var hasA11yProp = (props) => {
  for (const prop in props) {
    if (prop.startsWith("aria-") || prop === "role" || prop === "title") {
      return true;
    }
  }
};

// ../../packages/aitable/node_modules/lucide-react/dist/esm/Icon.js
var import_react104 = __toESM(require_react());

// ../../packages/aitable/node_modules/lucide-react/dist/esm/defaultAttributes.js
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: 2,
  strokeLinecap: "round",
  strokeLinejoin: "round"
};

// ../../packages/aitable/node_modules/lucide-react/dist/esm/Icon.js
var Icon = (0, import_react104.forwardRef)(
  ({
    color = "currentColor",
    size: size2 = 24,
    strokeWidth = 2,
    absoluteStrokeWidth,
    className = "",
    children,
    iconNode,
    ...rest2
  }, ref) => (0, import_react104.createElement)(
    "svg",
    {
      ref,
      ...defaultAttributes,
      width: size2,
      height: size2,
      stroke: color,
      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size2) : strokeWidth,
      className: mergeClasses("lucide", className),
      ...!children && !hasA11yProp(rest2) && { "aria-hidden": "true" },
      ...rest2
    },
    [
      ...iconNode.map(([tag, attrs]) => (0, import_react104.createElement)(tag, attrs)),
      ...Array.isArray(children) ? children : [children]
    ]
  )
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/createLucideIcon.js
var createLucideIcon = (iconName, iconNode) => {
  const Component3 = (0, import_react105.forwardRef)(
    ({ className, ...props }, ref) => (0, import_react105.createElement)(Icon, {
      ref,
      iconNode,
      className: mergeClasses(
        `lucide-${toKebabCase(toPascalCase(iconName))}`,
        `lucide-${iconName}`,
        className
      ),
      ...props
    })
  );
  Component3.displayName = toPascalCase(iconName);
  return Component3;
};

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/a-arrow-down.js
var __iconNode = [
  ["path", { d: "m14 12 4 4 4-4", key: "buelq4" }],
  ["path", { d: "M18 16V7", key: "ty0viw" }],
  ["path", { d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16", key: "d5nyq2" }],
  ["path", { d: "M3.304 13h6.392", key: "1q3zxz" }]
];
var AArrowDown = createLucideIcon("a-arrow-down", __iconNode);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/a-large-small.js
var __iconNode2 = [
  ["path", { d: "m15 16 2.536-7.328a1.02 1.02 1 0 1 1.928 0L22 16", key: "xik6mr" }],
  ["path", { d: "M15.697 14h5.606", key: "1stdlc" }],
  ["path", { d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16", key: "d5nyq2" }],
  ["path", { d: "M3.304 13h6.392", key: "1q3zxz" }]
];
var ALargeSmall = createLucideIcon("a-large-small", __iconNode2);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/a-arrow-up.js
var __iconNode3 = [
  ["path", { d: "m14 11 4-4 4 4", key: "1pu57t" }],
  ["path", { d: "M18 16V7", key: "ty0viw" }],
  ["path", { d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16", key: "d5nyq2" }],
  ["path", { d: "M3.304 13h6.392", key: "1q3zxz" }]
];
var AArrowUp = createLucideIcon("a-arrow-up", __iconNode3);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/accessibility.js
var __iconNode4 = [
  ["circle", { cx: "16", cy: "4", r: "1", key: "1grugj" }],
  ["path", { d: "m18 19 1-7-6 1", key: "r0i19z" }],
  ["path", { d: "m5 8 3-3 5.5 3-2.36 3.5", key: "9ptxx2" }],
  ["path", { d: "M4.24 14.5a5 5 0 0 0 6.88 6", key: "10kmtu" }],
  ["path", { d: "M13.76 17.5a5 5 0 0 0-6.88-6", key: "2qq6rc" }]
];
var Accessibility = createLucideIcon("accessibility", __iconNode4);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/activity.js
var __iconNode5 = [
  [
    "path",
    {
      d: "M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",
      key: "169zse"
    }
  ]
];
var Activity = createLucideIcon("activity", __iconNode5);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/air-vent.js
var __iconNode6 = [
  ["path", { d: "M18 17.5a2.5 2.5 0 1 1-4 2.03V12", key: "yd12zl" }],
  [
    "path",
    {
      d: "M6 12H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2",
      key: "larmp2"
    }
  ],
  ["path", { d: "M6 8h12", key: "6g4wlu" }],
  ["path", { d: "M6.6 15.572A2 2 0 1 0 10 17v-5", key: "1x1kqn" }]
];
var AirVent = createLucideIcon("air-vent", __iconNode6);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/airplay.js
var __iconNode7 = [
  [
    "path",
    {
      d: "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1",
      key: "ns4c3b"
    }
  ],
  ["path", { d: "m12 15 5 6H7Z", key: "14qnn2" }]
];
var Airplay = createLucideIcon("airplay", __iconNode7);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-clock-check.js
var __iconNode8 = [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "m9 13 2 2 4-4", key: "6343dt" }]
];
var AlarmClockCheck = createLucideIcon("alarm-clock-check", __iconNode8);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-clock-minus.js
var __iconNode9 = [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }]
];
var AlarmClockMinus = createLucideIcon("alarm-clock-minus", __iconNode9);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-clock-off.js
var __iconNode10 = [
  ["path", { d: "M6.87 6.87a8 8 0 1 0 11.26 11.26", key: "3on8tj" }],
  ["path", { d: "M19.9 14.25a8 8 0 0 0-9.15-9.15", key: "15ghsc" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.26 18.67 4 21", key: "yzmioq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M4 4 2 6", key: "1ycko6" }]
];
var AlarmClockOff = createLucideIcon("alarm-clock-off", __iconNode10);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-clock-plus.js
var __iconNode11 = [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }]
];
var AlarmClockPlus = createLucideIcon("alarm-clock-plus", __iconNode11);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-clock.js
var __iconNode12 = [
  ["circle", { cx: "12", cy: "13", r: "8", key: "3y4lt7" }],
  ["path", { d: "M12 9v4l2 2", key: "1c63tq" }],
  ["path", { d: "M5 3 2 6", key: "18tl5t" }],
  ["path", { d: "m22 6-3-3", key: "1opdir" }],
  ["path", { d: "M6.38 18.7 4 21", key: "17xu3x" }],
  ["path", { d: "M17.64 18.67 20 21", key: "kv2oe2" }]
];
var AlarmClock = createLucideIcon("alarm-clock", __iconNode12);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/alarm-smoke.js
var __iconNode13 = [
  ["path", { d: "M11 21c0-2.5 2-2.5 2-5", key: "1sicvv" }],
  ["path", { d: "M16 21c0-2.5 2-2.5 2-5", key: "1o3eny" }],
  ["path", { d: "m19 8-.8 3a1.25 1.25 0 0 1-1.2 1H7a1.25 1.25 0 0 1-1.2-1L5 8", key: "1bvca4" }],
  [
    "path",
    { d: "M21 3a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a1 1 0 0 1 1-1z", key: "x3qr1j" }
  ],
  ["path", { d: "M6 21c0-2.5 2-2.5 2-5", key: "i3w1gp" }]
];
var AlarmSmoke = createLucideIcon("alarm-smoke", __iconNode13);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/album.js
var __iconNode14 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["polyline", { points: "11 3 11 11 14 8 17 11 17 3", key: "1wcwz3" }]
];
var Album = createLucideIcon("album", __iconNode14);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-center-horizontal.js
var __iconNode15 = [
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M10 16v4a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-4", key: "11f1s0" }],
  ["path", { d: "M10 8V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4", key: "t14dx9" }],
  ["path", { d: "M20 16v1a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2v-1", key: "1w07xs" }],
  ["path", { d: "M14 8V7c0-1.1.9-2 2-2h2a2 2 0 0 1 2 2v1", key: "1apec2" }]
];
var AlignCenterHorizontal = createLucideIcon("align-center-horizontal", __iconNode15);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-center-vertical.js
var __iconNode16 = [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "M8 10H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h4", key: "14d6g8" }],
  ["path", { d: "M16 10h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-4", key: "1e2lrw" }],
  ["path", { d: "M8 20H7a2 2 0 0 1-2-2v-2c0-1.1.9-2 2-2h1", key: "1fkdwx" }],
  ["path", { d: "M16 14h1a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-1", key: "1euafb" }]
];
var AlignCenterVertical = createLucideIcon("align-center-vertical", __iconNode16);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-end-horizontal.js
var __iconNode17 = [
  ["rect", { width: "6", height: "16", x: "4", y: "2", rx: "2", key: "z5wdxg" }],
  ["rect", { width: "6", height: "9", x: "14", y: "9", rx: "2", key: "um7a8w" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }]
];
var AlignEndHorizontal = createLucideIcon("align-end-horizontal", __iconNode17);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-distribute-center.js
var __iconNode18 = [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M17 22v-5", key: "4b6g73" }],
  ["path", { d: "M17 7V2", key: "hnrr36" }],
  ["path", { d: "M7 22v-3", key: "1r4jpn" }],
  ["path", { d: "M7 5V2", key: "liy1u9" }]
];
var AlignHorizontalDistributeCenter = createLucideIcon(
  "align-horizontal-distribute-center",
  __iconNode18
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-end-vertical.js
var __iconNode19 = [
  ["rect", { width: "16", height: "6", x: "2", y: "4", rx: "2", key: "10wcwx" }],
  ["rect", { width: "9", height: "6", x: "9", y: "14", rx: "2", key: "4p5bwg" }],
  ["path", { d: "M22 22V2", key: "12ipfv" }]
];
var AlignEndVertical = createLucideIcon("align-end-vertical", __iconNode19);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-distribute-end.js
var __iconNode20 = [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M10 2v20", key: "uyc634" }],
  ["path", { d: "M20 2v20", key: "1tx262" }]
];
var AlignHorizontalDistributeEnd = createLucideIcon(
  "align-horizontal-distribute-end",
  __iconNode20
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-distribute-start.js
var __iconNode21 = [
  ["rect", { width: "6", height: "14", x: "4", y: "5", rx: "2", key: "1wwnby" }],
  ["rect", { width: "6", height: "10", x: "14", y: "7", rx: "2", key: "1fe6j6" }],
  ["path", { d: "M4 2v20", key: "gtpd5x" }],
  ["path", { d: "M14 2v20", key: "tg6bpw" }]
];
var AlignHorizontalDistributeStart = createLucideIcon(
  "align-horizontal-distribute-start",
  __iconNode21
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-justify-end.js
var __iconNode22 = [
  ["rect", { width: "6", height: "14", x: "2", y: "5", rx: "2", key: "dy24zr" }],
  ["rect", { width: "6", height: "10", x: "12", y: "7", rx: "2", key: "1ht384" }],
  ["path", { d: "M22 2v20", key: "40qfg1" }]
];
var AlignHorizontalJustifyEnd = createLucideIcon("align-horizontal-justify-end", __iconNode22);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-justify-center.js
var __iconNode23 = [
  ["rect", { width: "6", height: "14", x: "2", y: "5", rx: "2", key: "dy24zr" }],
  ["rect", { width: "6", height: "10", x: "16", y: "7", rx: "2", key: "13zkjt" }],
  ["path", { d: "M12 2v20", key: "t6zp3m" }]
];
var AlignHorizontalJustifyCenter = createLucideIcon(
  "align-horizontal-justify-center",
  __iconNode23
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-justify-start.js
var __iconNode24 = [
  ["rect", { width: "6", height: "14", x: "6", y: "5", rx: "2", key: "hsirpf" }],
  ["rect", { width: "6", height: "10", x: "16", y: "7", rx: "2", key: "13zkjt" }],
  ["path", { d: "M2 2v20", key: "1ivd8o" }]
];
var AlignHorizontalJustifyStart = createLucideIcon("align-horizontal-justify-start", __iconNode24);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-space-around.js
var __iconNode25 = [
  ["rect", { width: "6", height: "10", x: "9", y: "7", rx: "2", key: "yn7j0q" }],
  ["path", { d: "M4 22V2", key: "tsjzd3" }],
  ["path", { d: "M20 22V2", key: "1bnhr8" }]
];
var AlignHorizontalSpaceAround = createLucideIcon("align-horizontal-space-around", __iconNode25);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-horizontal-space-between.js
var __iconNode26 = [
  ["rect", { width: "6", height: "14", x: "3", y: "5", rx: "2", key: "j77dae" }],
  ["rect", { width: "6", height: "10", x: "15", y: "7", rx: "2", key: "bq30hj" }],
  ["path", { d: "M3 2v20", key: "1d2pfg" }],
  ["path", { d: "M21 2v20", key: "p059bm" }]
];
var AlignHorizontalSpaceBetween = createLucideIcon("align-horizontal-space-between", __iconNode26);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-start-horizontal.js
var __iconNode27 = [
  ["rect", { width: "6", height: "16", x: "4", y: "6", rx: "2", key: "1n4dg1" }],
  ["rect", { width: "6", height: "9", x: "14", y: "6", rx: "2", key: "17khns" }],
  ["path", { d: "M22 2H2", key: "fhrpnj" }]
];
var AlignStartHorizontal = createLucideIcon("align-start-horizontal", __iconNode27);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-start-vertical.js
var __iconNode28 = [
  ["rect", { width: "9", height: "6", x: "6", y: "14", rx: "2", key: "lpm2y7" }],
  ["rect", { width: "16", height: "6", x: "6", y: "4", rx: "2", key: "rdj6ps" }],
  ["path", { d: "M2 2v20", key: "1ivd8o" }]
];
var AlignStartVertical = createLucideIcon("align-start-vertical", __iconNode28);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-distribute-center.js
var __iconNode29 = [
  ["path", { d: "M22 17h-3", key: "1lwga1" }],
  ["path", { d: "M22 7h-5", key: "o2endc" }],
  ["path", { d: "M5 17H2", key: "1gx9xc" }],
  ["path", { d: "M7 7H2", key: "6bq26l" }],
  ["rect", { x: "5", y: "14", width: "14", height: "6", rx: "2", key: "1qrzuf" }],
  ["rect", { x: "7", y: "4", width: "10", height: "6", rx: "2", key: "we8e9z" }]
];
var AlignVerticalDistributeCenter = createLucideIcon(
  "align-vertical-distribute-center",
  __iconNode29
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-distribute-end.js
var __iconNode30 = [
  ["rect", { width: "14", height: "6", x: "5", y: "14", rx: "2", key: "jmoj9s" }],
  ["rect", { width: "10", height: "6", x: "7", y: "4", rx: "2", key: "aza5on" }],
  ["path", { d: "M2 20h20", key: "owomy5" }],
  ["path", { d: "M2 10h20", key: "1ir3d8" }]
];
var AlignVerticalDistributeEnd = createLucideIcon("align-vertical-distribute-end", __iconNode30);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-distribute-start.js
var __iconNode31 = [
  ["rect", { width: "14", height: "6", x: "5", y: "14", rx: "2", key: "jmoj9s" }],
  ["rect", { width: "10", height: "6", x: "7", y: "4", rx: "2", key: "aza5on" }],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M2 4h20", key: "mda7wb" }]
];
var AlignVerticalDistributeStart = createLucideIcon(
  "align-vertical-distribute-start",
  __iconNode31
);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-justify-center.js
var __iconNode32 = [
  ["rect", { width: "14", height: "6", x: "5", y: "16", rx: "2", key: "1i8z2d" }],
  ["rect", { width: "10", height: "6", x: "7", y: "2", rx: "2", key: "ypihtt" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }]
];
var AlignVerticalJustifyCenter = createLucideIcon("align-vertical-justify-center", __iconNode32);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-justify-end.js
var __iconNode33 = [
  ["rect", { width: "14", height: "6", x: "5", y: "12", rx: "2", key: "4l4tp2" }],
  ["rect", { width: "10", height: "6", x: "7", y: "2", rx: "2", key: "ypihtt" }],
  ["path", { d: "M2 22h20", key: "272qi7" }]
];
var AlignVerticalJustifyEnd = createLucideIcon("align-vertical-justify-end", __iconNode33);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-justify-start.js
var __iconNode34 = [
  ["rect", { width: "14", height: "6", x: "5", y: "16", rx: "2", key: "1i8z2d" }],
  ["rect", { width: "10", height: "6", x: "7", y: "6", rx: "2", key: "13squh" }],
  ["path", { d: "M2 2h20", key: "1ennik" }]
];
var AlignVerticalJustifyStart = createLucideIcon("align-vertical-justify-start", __iconNode34);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-space-around.js
var __iconNode35 = [
  ["rect", { width: "10", height: "6", x: "7", y: "9", rx: "2", key: "b1zbii" }],
  ["path", { d: "M22 20H2", key: "1p1f7z" }],
  ["path", { d: "M22 4H2", key: "1b7qnq" }]
];
var AlignVerticalSpaceAround = createLucideIcon("align-vertical-space-around", __iconNode35);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/align-vertical-space-between.js
var __iconNode36 = [
  ["rect", { width: "14", height: "6", x: "5", y: "15", rx: "2", key: "1w91an" }],
  ["rect", { width: "10", height: "6", x: "7", y: "3", rx: "2", key: "17wqzy" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }],
  ["path", { d: "M2 3h20", key: "91anmk" }]
];
var AlignVerticalSpaceBetween = createLucideIcon("align-vertical-space-between", __iconNode36);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ambulance.js
var __iconNode37 = [
  ["path", { d: "M10 10H6", key: "1bsnug" }],
  ["path", { d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2", key: "wrbu53" }],
  [
    "path",
    {
      d: "M19 18h2a1 1 0 0 0 1-1v-3.28a1 1 0 0 0-.684-.948l-1.923-.641a1 1 0 0 1-.578-.502l-1.539-3.076A1 1 0 0 0 16.382 8H14",
      key: "lrkjwd"
    }
  ],
  ["path", { d: "M8 8v4", key: "1fwk8c" }],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["circle", { cx: "17", cy: "18", r: "2", key: "332jqn" }],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }]
];
var Ambulance = createLucideIcon("ambulance", __iconNode37);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ampersand.js
var __iconNode38 = [
  [
    "path",
    {
      d: "M17.5 12c0 4.4-3.6 8-8 8A4.5 4.5 0 0 1 5 15.5c0-6 8-4 8-8.5a3 3 0 1 0-6 0c0 3 2.5 8.5 12 13",
      key: "1o9ehi"
    }
  ],
  ["path", { d: "M16 12h3", key: "4uvgyw" }]
];
var Ampersand = createLucideIcon("ampersand", __iconNode38);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ampersands.js
var __iconNode39 = [
  [
    "path",
    {
      d: "M10 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5",
      key: "12lh1k"
    }
  ],
  [
    "path",
    {
      d: "M22 17c-5-3-7-7-7-9a2 2 0 0 1 4 0c0 2.5-5 2.5-5 6 0 1.7 1.3 3 3 3 2.8 0 5-2.2 5-5",
      key: "173c68"
    }
  ]
];
var Ampersands = createLucideIcon("ampersands", __iconNode39);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/amphora.js
var __iconNode40 = [
  [
    "path",
    { d: "M10 2v5.632c0 .424-.272.795-.653.982A6 6 0 0 0 6 14c.006 4 3 7 5 8", key: "1h8rid" }
  ],
  ["path", { d: "M10 5H8a2 2 0 0 0 0 4h.68", key: "3ezsi6" }],
  ["path", { d: "M14 2v5.632c0 .424.272.795.652.982A6 6 0 0 1 18 14c0 4-3 7-5 8", key: "yt6q09" }],
  ["path", { d: "M14 5h2a2 2 0 0 1 0 4h-.68", key: "8f95yk" }],
  ["path", { d: "M18 22H6", key: "mg6kv4" }],
  ["path", { d: "M9 2h6", key: "1jrp98" }]
];
var Amphora = createLucideIcon("amphora", __iconNode40);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/angry.js
var __iconNode41 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 16s-1.5-2-4-2-4 2-4 2", key: "epbg0q" }],
  ["path", { d: "M7.5 8 10 9", key: "olxxln" }],
  ["path", { d: "m14 9 2.5-1", key: "1j6cij" }],
  ["path", { d: "M9 10h.01", key: "qbtxuw" }],
  ["path", { d: "M15 10h.01", key: "1qmjsl" }]
];
var Angry = createLucideIcon("angry", __iconNode41);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/anchor.js
var __iconNode42 = [
  ["path", { d: "M12 22V8", key: "qkxhtm" }],
  ["path", { d: "M5 12H2a10 10 0 0 0 20 0h-3", key: "1hv3nh" }],
  ["circle", { cx: "12", cy: "5", r: "3", key: "rqqgnr" }]
];
var Anchor = createLucideIcon("anchor", __iconNode42);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/annoyed.js
var __iconNode43 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 15h8", key: "45n4r" }],
  ["path", { d: "M8 9h2", key: "1g203m" }],
  ["path", { d: "M14 9h2", key: "116p9w" }]
];
var Annoyed = createLucideIcon("annoyed", __iconNode43);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/antenna.js
var __iconNode44 = [
  ["path", { d: "M2 12 7 2", key: "117k30" }],
  ["path", { d: "m7 12 5-10", key: "1tvx22" }],
  ["path", { d: "m12 12 5-10", key: "ev1o1a" }],
  ["path", { d: "m17 12 5-10", key: "1e4ti3" }],
  ["path", { d: "M4.5 7h15", key: "vlsxkz" }],
  ["path", { d: "M12 16v6", key: "c8a4gj" }]
];
var Antenna = createLucideIcon("antenna", __iconNode44);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/anvil.js
var __iconNode45 = [
  ["path", { d: "M7 10H6a4 4 0 0 1-4-4 1 1 0 0 1 1-1h4", key: "1hjpb6" }],
  [
    "path",
    { d: "M7 5a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1 7 7 0 0 1-7 7H8a1 1 0 0 1-1-1z", key: "1qn45f" }
  ],
  ["path", { d: "M9 12v5", key: "3anwtq" }],
  ["path", { d: "M15 12v5", key: "5xh3zn" }],
  [
    "path",
    { d: "M5 20a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3 1 1 0 0 1-1 1H6a1 1 0 0 1-1-1", key: "1fi4x8" }
  ]
];
var Anvil = createLucideIcon("anvil", __iconNode45);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/aperture.js
var __iconNode46 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m14.31 8 5.74 9.94", key: "1y6ab4" }],
  ["path", { d: "M9.69 8h11.48", key: "1wxppr" }],
  ["path", { d: "m7.38 12 5.74-9.94", key: "1grp0k" }],
  ["path", { d: "M9.69 16 3.95 6.06", key: "libnyf" }],
  ["path", { d: "M14.31 16H2.83", key: "x5fava" }],
  ["path", { d: "m16.62 12-5.74 9.94", key: "1vwawt" }]
];
var Aperture = createLucideIcon("aperture", __iconNode46);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/app-window-mac.js
var __iconNode47 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M10 8h.01", key: "1r9ogq" }],
  ["path", { d: "M14 8h.01", key: "1primd" }]
];
var AppWindowMac = createLucideIcon("app-window-mac", __iconNode47);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/app-window.js
var __iconNode48 = [
  ["rect", { x: "2", y: "4", width: "20", height: "16", rx: "2", key: "izxlao" }],
  ["path", { d: "M10 4v4", key: "pp8u80" }],
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["path", { d: "M6 4v4", key: "1svtjw" }]
];
var AppWindow = createLucideIcon("app-window", __iconNode48);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/apple.js
var __iconNode49 = [
  ["path", { d: "M12 6.528V3a1 1 0 0 1 1-1h0", key: "11qiee" }],
  [
    "path",
    {
      d: "M18.237 21A15 15 0 0 0 22 11a6 6 0 0 0-10-4.472A6 6 0 0 0 2 11a15.1 15.1 0 0 0 3.763 10 3 3 0 0 0 3.648.648 5.5 5.5 0 0 1 5.178 0A3 3 0 0 0 18.237 21",
      key: "110c12"
    }
  ]
];
var Apple = createLucideIcon("apple", __iconNode49);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/archive-x.js
var __iconNode50 = [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8", key: "1s80jp" }],
  ["path", { d: "m9.5 17 5-5", key: "nakeu6" }],
  ["path", { d: "m9.5 12 5 5", key: "1hccrj" }]
];
var ArchiveX = createLucideIcon("archive-x", __iconNode50);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/archive-restore.js
var __iconNode51 = [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h2", key: "tvwodi" }],
  ["path", { d: "M20 8v11a2 2 0 0 1-2 2h-2", key: "1gkqxj" }],
  ["path", { d: "m9 15 3-3 3 3", key: "1pd0qc" }],
  ["path", { d: "M12 12v9", key: "192myk" }]
];
var ArchiveRestore = createLucideIcon("archive-restore", __iconNode51);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/archive.js
var __iconNode52 = [
  ["rect", { width: "20", height: "5", x: "2", y: "3", rx: "1", key: "1wp1u1" }],
  ["path", { d: "M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8", key: "1s80jp" }],
  ["path", { d: "M10 12h4", key: "a56b0p" }]
];
var Archive = createLucideIcon("archive", __iconNode52);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/armchair.js
var __iconNode53 = [
  ["path", { d: "M19 9V6a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v3", key: "irtipd" }],
  [
    "path",
    {
      d: "M3 16a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z",
      key: "1qyhux"
    }
  ],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
];
var Armchair = createLucideIcon("armchair", __iconNode53);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-down-dash.js
var __iconNode54 = [
  [
    "path",
    {
      d: "M15 11a1 1 0 0 0 1 1h2.939a1 1 0 0 1 .75 1.811l-6.835 6.836a1.207 1.207 0 0 1-1.707 0L4.31 13.81a1 1 0 0 1 .75-1.811H8a1 1 0 0 0 1-1V9a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z",
      key: "1hy3w3"
    }
  ],
  ["path", { d: "M9 4h6", key: "10am2s" }]
];
var ArrowBigDownDash = createLucideIcon("arrow-big-down-dash", __iconNode54);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-down.js
var __iconNode55 = [
  [
    "path",
    {
      d: "M15 11a1 1 0 0 0 1 1h2.939a1 1 0 0 1 .75 1.811l-6.835 6.836a1.207 1.207 0 0 1-1.707 0L4.31 13.81a1 1 0 0 1 .75-1.811H8a1 1 0 0 0 1-1V5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z",
      key: "1eaqc3"
    }
  ]
];
var ArrowBigDown = createLucideIcon("arrow-big-down", __iconNode55);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-left-dash.js
var __iconNode56 = [
  [
    "path",
    {
      d: "M13 9a1 1 0 0 1-1-1V5.061a1 1 0 0 0-1.811-.75l-6.835 6.836a1.207 1.207 0 0 0 0 1.707l6.835 6.835a1 1 0 0 0 1.811-.75V16a1 1 0 0 1 1-1h2a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1z",
      key: "p8w4w5"
    }
  ],
  ["path", { d: "M20 9v6", key: "14roy0" }]
];
var ArrowBigLeftDash = createLucideIcon("arrow-big-left-dash", __iconNode56);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-left.js
var __iconNode57 = [
  [
    "path",
    {
      d: "M13 9a1 1 0 0 1-1-1V5.061a1 1 0 0 0-1.811-.75l-6.835 6.836a1.207 1.207 0 0 0 0 1.707l6.835 6.835a1 1 0 0 0 1.811-.75V16a1 1 0 0 1 1-1h6a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1z",
      key: "aztept"
    }
  ]
];
var ArrowBigLeft = createLucideIcon("arrow-big-left", __iconNode57);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-right-dash.js
var __iconNode58 = [
  [
    "path",
    {
      d: "M11 9a1 1 0 0 0 1-1V5.061a1 1 0 0 1 1.811-.75l6.836 6.836a1.207 1.207 0 0 1 0 1.707l-6.836 6.835a1 1 0 0 1-1.811-.75V16a1 1 0 0 0-1-1H9a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z",
      key: "67vhrh"
    }
  ],
  ["path", { d: "M4 9v6", key: "bns7oa" }]
];
var ArrowBigRightDash = createLucideIcon("arrow-big-right-dash", __iconNode58);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-right.js
var __iconNode59 = [
  [
    "path",
    {
      d: "M11 9a1 1 0 0 0 1-1V5.061a1 1 0 0 1 1.811-.75l6.836 6.836a1.207 1.207 0 0 1 0 1.707l-6.836 6.835a1 1 0 0 1-1.811-.75V16a1 1 0 0 0-1-1H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z",
      key: "1232du"
    }
  ]
];
var ArrowBigRight = createLucideIcon("arrow-big-right", __iconNode59);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-up-dash.js
var __iconNode60 = [
  [
    "path",
    {
      d: "M9 13a1 1 0 0 0-1-1H5.061a1 1 0 0 1-.75-1.811l6.836-6.835a1.207 1.207 0 0 1 1.707 0l6.835 6.835a1 1 0 0 1-.75 1.811H16a1 1 0 0 0-1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z",
      key: "pnzqmc"
    }
  ],
  ["path", { d: "M9 20h6", key: "s66wpe" }]
];
var ArrowBigUpDash = createLucideIcon("arrow-big-up-dash", __iconNode60);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-big-up.js
var __iconNode61 = [
  [
    "path",
    {
      d: "M9 13a1 1 0 0 0-1-1H5.061a1 1 0 0 1-.75-1.811l6.836-6.835a1.207 1.207 0 0 1 1.707 0l6.835 6.835a1 1 0 0 1-.75 1.811H16a1 1 0 0 0-1 1v6a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z",
      key: "lh0v7k"
    }
  ]
];
var ArrowBigUp = createLucideIcon("arrow-big-up", __iconNode61);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-0-1.js
var __iconNode62 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["rect", { x: "15", y: "4", width: "4", height: "6", ry: "2", key: "1bwicg" }],
  ["path", { d: "M17 20v-6h-2", key: "1qp1so" }],
  ["path", { d: "M15 20h4", key: "1j968p" }]
];
var ArrowDown01 = createLucideIcon("arrow-down-0-1", __iconNode62);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-1-0.js
var __iconNode63 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M17 10V4h-2", key: "zcsr5x" }],
  ["path", { d: "M15 10h4", key: "id2lce" }],
  ["rect", { x: "15", y: "14", width: "4", height: "6", ry: "2", key: "33xykx" }]
];
var ArrowDown10 = createLucideIcon("arrow-down-1-0", __iconNode63);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-a-z.js
var __iconNode64 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M20 8h-5", key: "1vsyxs" }],
  ["path", { d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10", key: "ag13bf" }],
  ["path", { d: "M15 14h5l-5 6h5", key: "ur5jdg" }]
];
var ArrowDownAZ = createLucideIcon("arrow-down-a-z", __iconNode64);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-from-line.js
var __iconNode65 = [
  ["path", { d: "M19 3H5", key: "1236rx" }],
  ["path", { d: "M12 21V7", key: "gj6g52" }],
  ["path", { d: "m6 15 6 6 6-6", key: "h15q88" }]
];
var ArrowDownFromLine = createLucideIcon("arrow-down-from-line", __iconNode65);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-left.js
var __iconNode66 = [
  ["path", { d: "M17 7 7 17", key: "15tmo1" }],
  ["path", { d: "M17 17H7V7", key: "1org7z" }]
];
var ArrowDownLeft = createLucideIcon("arrow-down-left", __iconNode66);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-narrow-wide.js
var __iconNode67 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M11 4h4", key: "6d7r33" }],
  ["path", { d: "M11 8h7", key: "djye34" }],
  ["path", { d: "M11 12h10", key: "1438ji" }]
];
var ArrowDownNarrowWide = createLucideIcon("arrow-down-narrow-wide", __iconNode67);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-right.js
var __iconNode68 = [
  ["path", { d: "m7 7 10 10", key: "1fmybs" }],
  ["path", { d: "M17 7v10H7", key: "6fjiku" }]
];
var ArrowDownRight = createLucideIcon("arrow-down-right", __iconNode68);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-to-dot.js
var __iconNode69 = [
  ["path", { d: "M12 2v14", key: "jyx4ut" }],
  ["path", { d: "m19 9-7 7-7-7", key: "1oe3oy" }],
  ["circle", { cx: "12", cy: "21", r: "1", key: "o0uj5v" }]
];
var ArrowDownToDot = createLucideIcon("arrow-down-to-dot", __iconNode69);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-to-line.js
var __iconNode70 = [
  ["path", { d: "M12 17V3", key: "1cwfxf" }],
  ["path", { d: "m6 11 6 6 6-6", key: "12ii2o" }],
  ["path", { d: "M19 21H5", key: "150jfl" }]
];
var ArrowDownToLine = createLucideIcon("arrow-down-to-line", __iconNode70);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-up.js
var __iconNode71 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "m21 8-4-4-4 4", key: "1c9v7m" }],
  ["path", { d: "M17 4v16", key: "7dpous" }]
];
var ArrowDownUp = createLucideIcon("arrow-down-up", __iconNode71);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-wide-narrow.js
var __iconNode72 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 20V4", key: "1yoxec" }],
  ["path", { d: "M11 4h10", key: "1w87gc" }],
  ["path", { d: "M11 8h7", key: "djye34" }],
  ["path", { d: "M11 12h4", key: "q8tih4" }]
];
var ArrowDownWideNarrow = createLucideIcon("arrow-down-wide-narrow", __iconNode72);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down-z-a.js
var __iconNode73 = [
  ["path", { d: "m3 16 4 4 4-4", key: "1co6wj" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M15 4h5l-5 6h5", key: "8asdl1" }],
  ["path", { d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20", key: "r6l5cz" }],
  ["path", { d: "M20 18h-5", key: "18j1r2" }]
];
var ArrowDownZA = createLucideIcon("arrow-down-z-a", __iconNode73);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-down.js
var __iconNode74 = [
  ["path", { d: "M12 5v14", key: "s699le" }],
  ["path", { d: "m19 12-7 7-7-7", key: "1idqje" }]
];
var ArrowDown = createLucideIcon("arrow-down", __iconNode74);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-left-from-line.js
var __iconNode75 = [
  ["path", { d: "m9 6-6 6 6 6", key: "7v63n9" }],
  ["path", { d: "M3 12h14", key: "13k4hi" }],
  ["path", { d: "M21 19V5", key: "b4bplr" }]
];
var ArrowLeftFromLine = createLucideIcon("arrow-left-from-line", __iconNode75);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-left-right.js
var __iconNode76 = [
  ["path", { d: "M8 3 4 7l4 4", key: "9rb6wj" }],
  ["path", { d: "M4 7h16", key: "6tx8e3" }],
  ["path", { d: "m16 21 4-4-4-4", key: "siv7j2" }],
  ["path", { d: "M20 17H4", key: "h6l3hr" }]
];
var ArrowLeftRight = createLucideIcon("arrow-left-right", __iconNode76);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-left-to-line.js
var __iconNode77 = [
  ["path", { d: "M3 19V5", key: "rwsyhb" }],
  ["path", { d: "m13 6-6 6 6 6", key: "1yhaz7" }],
  ["path", { d: "M7 12h14", key: "uoisry" }]
];
var ArrowLeftToLine = createLucideIcon("arrow-left-to-line", __iconNode77);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-left.js
var __iconNode78 = [
  ["path", { d: "m12 19-7-7 7-7", key: "1l729n" }],
  ["path", { d: "M19 12H5", key: "x3x0zl" }]
];
var ArrowLeft = createLucideIcon("arrow-left", __iconNode78);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-right-from-line.js
var __iconNode79 = [
  ["path", { d: "M3 5v14", key: "1nt18q" }],
  ["path", { d: "M21 12H7", key: "13ipq5" }],
  ["path", { d: "m15 18 6-6-6-6", key: "6tx3qv" }]
];
var ArrowRightFromLine = createLucideIcon("arrow-right-from-line", __iconNode79);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-right-left.js
var __iconNode80 = [
  ["path", { d: "m16 3 4 4-4 4", key: "1x1c3m" }],
  ["path", { d: "M20 7H4", key: "zbl0bi" }],
  ["path", { d: "m8 21-4-4 4-4", key: "h9nckh" }],
  ["path", { d: "M4 17h16", key: "g4d7ey" }]
];
var ArrowRightLeft = createLucideIcon("arrow-right-left", __iconNode80);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-right-to-line.js
var __iconNode81 = [
  ["path", { d: "M17 12H3", key: "8awo09" }],
  ["path", { d: "m11 18 6-6-6-6", key: "8c2y43" }],
  ["path", { d: "M21 5v14", key: "nzette" }]
];
var ArrowRightToLine = createLucideIcon("arrow-right-to-line", __iconNode81);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-right.js
var __iconNode82 = [
  ["path", { d: "M5 12h14", key: "1ays0h" }],
  ["path", { d: "m12 5 7 7-7 7", key: "xquz4c" }]
];
var ArrowRight = createLucideIcon("arrow-right", __iconNode82);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-0-1.js
var __iconNode83 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["rect", { x: "15", y: "4", width: "4", height: "6", ry: "2", key: "1bwicg" }],
  ["path", { d: "M17 20v-6h-2", key: "1qp1so" }],
  ["path", { d: "M15 20h4", key: "1j968p" }]
];
var ArrowUp01 = createLucideIcon("arrow-up-0-1", __iconNode83);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-1-0.js
var __iconNode84 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M17 10V4h-2", key: "zcsr5x" }],
  ["path", { d: "M15 10h4", key: "id2lce" }],
  ["rect", { x: "15", y: "14", width: "4", height: "6", ry: "2", key: "33xykx" }]
];
var ArrowUp10 = createLucideIcon("arrow-up-1-0", __iconNode84);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-a-z.js
var __iconNode85 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M20 8h-5", key: "1vsyxs" }],
  ["path", { d: "M15 10V6.5a2.5 2.5 0 0 1 5 0V10", key: "ag13bf" }],
  ["path", { d: "M15 14h5l-5 6h5", key: "ur5jdg" }]
];
var ArrowUpAZ = createLucideIcon("arrow-up-a-z", __iconNode85);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-down.js
var __iconNode86 = [
  ["path", { d: "m21 16-4 4-4-4", key: "f6ql7i" }],
  ["path", { d: "M17 20V4", key: "1ejh1v" }],
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }]
];
var ArrowUpDown = createLucideIcon("arrow-up-down", __iconNode86);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-from-dot.js
var __iconNode87 = [
  ["path", { d: "m5 9 7-7 7 7", key: "1hw5ic" }],
  ["path", { d: "M12 16V2", key: "ywoabb" }],
  ["circle", { cx: "12", cy: "21", r: "1", key: "o0uj5v" }]
];
var ArrowUpFromDot = createLucideIcon("arrow-up-from-dot", __iconNode87);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-from-line.js
var __iconNode88 = [
  ["path", { d: "m18 9-6-6-6 6", key: "kcunyi" }],
  ["path", { d: "M12 3v14", key: "7cf3v8" }],
  ["path", { d: "M5 21h14", key: "11awu3" }]
];
var ArrowUpFromLine = createLucideIcon("arrow-up-from-line", __iconNode88);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-left.js
var __iconNode89 = [
  ["path", { d: "M7 17V7h10", key: "11bw93" }],
  ["path", { d: "M17 17 7 7", key: "2786uv" }]
];
var ArrowUpLeft = createLucideIcon("arrow-up-left", __iconNode89);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-narrow-wide.js
var __iconNode90 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M11 12h4", key: "q8tih4" }],
  ["path", { d: "M11 16h7", key: "uosisv" }],
  ["path", { d: "M11 20h10", key: "jvxblo" }]
];
var ArrowUpNarrowWide = createLucideIcon("arrow-up-narrow-wide", __iconNode90);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-right.js
var __iconNode91 = [
  ["path", { d: "M7 7h10v10", key: "1tivn9" }],
  ["path", { d: "M7 17 17 7", key: "1vkiza" }]
];
var ArrowUpRight = createLucideIcon("arrow-up-right", __iconNode91);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-to-line.js
var __iconNode92 = [
  ["path", { d: "M5 3h14", key: "7usisc" }],
  ["path", { d: "m18 13-6-6-6 6", key: "1kf1n9" }],
  ["path", { d: "M12 7v14", key: "1akyts" }]
];
var ArrowUpToLine = createLucideIcon("arrow-up-to-line", __iconNode92);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-wide-narrow.js
var __iconNode93 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M11 12h10", key: "1438ji" }],
  ["path", { d: "M11 16h7", key: "uosisv" }],
  ["path", { d: "M11 20h4", key: "1krc32" }]
];
var ArrowUpWideNarrow = createLucideIcon("arrow-up-wide-narrow", __iconNode93);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up-z-a.js
var __iconNode94 = [
  ["path", { d: "m3 8 4-4 4 4", key: "11wl7u" }],
  ["path", { d: "M7 4v16", key: "1glfcx" }],
  ["path", { d: "M15 4h5l-5 6h5", key: "8asdl1" }],
  ["path", { d: "M15 20v-3.5a2.5 2.5 0 0 1 5 0V20", key: "r6l5cz" }],
  ["path", { d: "M20 18h-5", key: "18j1r2" }]
];
var ArrowUpZA = createLucideIcon("arrow-up-z-a", __iconNode94);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrow-up.js
var __iconNode95 = [
  ["path", { d: "m5 12 7-7 7 7", key: "hav0vg" }],
  ["path", { d: "M12 19V5", key: "x0mq9r" }]
];
var ArrowUp = createLucideIcon("arrow-up", __iconNode95);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/arrows-up-from-line.js
var __iconNode96 = [
  ["path", { d: "m4 6 3-3 3 3", key: "9aidw8" }],
  ["path", { d: "M7 17V3", key: "19qxw1" }],
  ["path", { d: "m14 6 3-3 3 3", key: "6iy689" }],
  ["path", { d: "M17 17V3", key: "o0fmgi" }],
  ["path", { d: "M4 21h16", key: "1h09gz" }]
];
var ArrowsUpFromLine = createLucideIcon("arrows-up-from-line", __iconNode96);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/asterisk.js
var __iconNode97 = [
  ["path", { d: "M12 6v12", key: "1vza4d" }],
  ["path", { d: "M17.196 9 6.804 15", key: "1ah31z" }],
  ["path", { d: "m6.804 9 10.392 6", key: "1b6pxd" }]
];
var Asterisk = createLucideIcon("asterisk", __iconNode97);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/at-sign.js
var __iconNode98 = [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8", key: "7n84p3" }]
];
var AtSign = createLucideIcon("at-sign", __iconNode98);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/atom.js
var __iconNode99 = [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M20.2 20.2c2.04-2.03.02-7.36-4.5-11.9-4.54-4.52-9.87-6.54-11.9-4.5-2.04 2.03-.02 7.36 4.5 11.9 4.54 4.52 9.87 6.54 11.9 4.5Z",
      key: "1l2ple"
    }
  ],
  [
    "path",
    {
      d: "M15.7 15.7c4.52-4.54 6.54-9.87 4.5-11.9-2.03-2.04-7.36-.02-11.9 4.5-4.52 4.54-6.54 9.87-4.5 11.9 2.03 2.04 7.36.02 11.9-4.5Z",
      key: "1wam0m"
    }
  ]
];
var Atom = createLucideIcon("atom", __iconNode99);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/audio-lines.js
var __iconNode100 = [
  ["path", { d: "M2 10v3", key: "1fnikh" }],
  ["path", { d: "M6 6v11", key: "11sgs0" }],
  ["path", { d: "M10 3v18", key: "yhl04a" }],
  ["path", { d: "M14 8v7", key: "3a1oy3" }],
  ["path", { d: "M18 5v13", key: "123xd1" }],
  ["path", { d: "M22 10v3", key: "154ddg" }]
];
var AudioLines = createLucideIcon("audio-lines", __iconNode100);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/audio-waveform.js
var __iconNode101 = [
  [
    "path",
    {
      d: "M2 13a2 2 0 0 0 2-2V7a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0V4a2 2 0 0 1 4 0v13a2 2 0 0 0 4 0v-4a2 2 0 0 1 2-2",
      key: "57tc96"
    }
  ]
];
var AudioWaveform = createLucideIcon("audio-waveform", __iconNode101);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/award.js
var __iconNode102 = [
  [
    "path",
    {
      d: "m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526",
      key: "1yiouv"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "6", key: "1vp47v" }]
];
var Award = createLucideIcon("award", __iconNode102);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/axe.js
var __iconNode103 = [
  ["path", { d: "m14 12-8.381 8.38a1 1 0 0 1-3.001-3L11 9", key: "5z9253" }],
  [
    "path",
    {
      d: "M15 15.5a.5.5 0 0 0 .5.5A6.5 6.5 0 0 0 22 9.5a.5.5 0 0 0-.5-.5h-1.672a2 2 0 0 1-1.414-.586l-5.062-5.062a1.205 1.205 0 0 0-1.704 0L9.352 5.648a1.205 1.205 0 0 0 0 1.704l5.062 5.062A2 2 0 0 1 15 13.828z",
      key: "19zklq"
    }
  ]
];
var Axe = createLucideIcon("axe", __iconNode103);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/axis-3d.js
var __iconNode104 = [
  ["path", { d: "M13.5 10.5 15 9", key: "1nsxvm" }],
  ["path", { d: "M4 4v15a1 1 0 0 0 1 1h15", key: "1w6lkd" }],
  ["path", { d: "M4.293 19.707 6 18", key: "3g1p8c" }],
  ["path", { d: "m9 15 1.5-1.5", key: "1xfbes" }]
];
var Axis3d = createLucideIcon("axis-3d", __iconNode104);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/baby.js
var __iconNode105 = [
  ["path", { d: "M10 16c.5.3 1.2.5 2 .5s1.5-.2 2-.5", key: "1u7htd" }],
  ["path", { d: "M15 12h.01", key: "1k8ypt" }],
  [
    "path",
    {
      d: "M19.38 6.813A9 9 0 0 1 20.8 10.2a2 2 0 0 1 0 3.6 9 9 0 0 1-17.6 0 2 2 0 0 1 0-3.6A9 9 0 0 1 12 3c2 0 3.5 1.1 3.5 2.5s-.9 2.5-2 2.5c-.8 0-1.5-.4-1.5-1",
      key: "11xh7x"
    }
  ],
  ["path", { d: "M9 12h.01", key: "157uk2" }]
];
var Baby = createLucideIcon("baby", __iconNode105);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/backpack.js
var __iconNode106 = [
  [
    "path",
    { d: "M4 10a4 4 0 0 1 4-4h8a4 4 0 0 1 4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z", key: "1ol0lm" }
  ],
  ["path", { d: "M8 10h8", key: "c7uz4u" }],
  ["path", { d: "M8 18h8", key: "1no2b1" }],
  ["path", { d: "M8 22v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6", key: "1fr6do" }],
  ["path", { d: "M9 6V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2", key: "donm21" }]
];
var Backpack = createLucideIcon("backpack", __iconNode106);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-alert.js
var __iconNode107 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "12", key: "1pkeuh" }],
  ["line", { x1: "12", x2: "12.01", y1: "16", y2: "16", key: "4dfq90" }]
];
var BadgeAlert = createLucideIcon("badge-alert", __iconNode107);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-cent.js
var __iconNode108 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M15.4 10a4 4 0 1 0 0 4", key: "2eqtx8" }]
];
var BadgeCent = createLucideIcon("badge-cent", __iconNode108);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-check.js
var __iconNode109 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
];
var BadgeCheck = createLucideIcon("badge-check", __iconNode109);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-dollar-sign.js
var __iconNode110 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }]
];
var BadgeDollarSign = createLucideIcon("badge-dollar-sign", __iconNode110);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-euro.js
var __iconNode111 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M7 12h5", key: "gblrwe" }],
  ["path", { d: "M15 9.4a4 4 0 1 0 0 5.2", key: "1makmb" }]
];
var BadgeEuro = createLucideIcon("badge-euro", __iconNode111);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-info.js
var __iconNode112 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "12", key: "1y1yb1" }],
  ["line", { x1: "12", x2: "12.01", y1: "8", y2: "8", key: "110wyk" }]
];
var BadgeInfo = createLucideIcon("badge-info", __iconNode112);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-indian-rupee.js
var __iconNode113 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M8 8h8", key: "1bis0t" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m13 17-5-1h1a4 4 0 0 0 0-8", key: "nu2bwa" }]
];
var BadgeIndianRupee = createLucideIcon("badge-indian-rupee", __iconNode113);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-japanese-yen.js
var __iconNode114 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m9 8 3 3v7", key: "17yadx" }],
  ["path", { d: "m12 11 3-3", key: "p4cfq1" }],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M9 16h6", key: "8wimt3" }]
];
var BadgeJapaneseYen = createLucideIcon("badge-japanese-yen", __iconNode114);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-minus.js
var __iconNode115 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
];
var BadgeMinus = createLucideIcon("badge-minus", __iconNode115);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-percent.js
var __iconNode116 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
];
var BadgePercent = createLucideIcon("badge-percent", __iconNode116);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-plus.js
var __iconNode117 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "16", key: "10p56q" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
];
var BadgePlus = createLucideIcon("badge-plus", __iconNode117);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-pound-sterling.js
var __iconNode118 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M8 12h4", key: "qz6y1c" }],
  ["path", { d: "M10 16V9.5a2.5 2.5 0 0 1 5 0", key: "3mlbjk" }],
  ["path", { d: "M8 16h7", key: "sbedsn" }]
];
var BadgePoundSterling = createLucideIcon("badge-pound-sterling", __iconNode118);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-question-mark.js
var __iconNode119 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["line", { x1: "12", x2: "12.01", y1: "17", y2: "17", key: "io3f8k" }]
];
var BadgeQuestionMark = createLucideIcon("badge-question-mark", __iconNode119);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-swiss-franc.js
var __iconNode120 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M11 17V8h4", key: "1bfq6y" }],
  ["path", { d: "M11 12h3", key: "2eqnfz" }],
  ["path", { d: "M9 16h4", key: "1skf3a" }]
];
var BadgeSwissFranc = createLucideIcon("badge-swiss-franc", __iconNode120);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-russian-ruble.js
var __iconNode121 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["path", { d: "M9 16h5", key: "1syiyw" }],
  ["path", { d: "M9 12h5a2 2 0 1 0 0-4h-3v9", key: "1ge9c1" }]
];
var BadgeRussianRuble = createLucideIcon("badge-russian-ruble", __iconNode121);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-turkish-lira.js
var __iconNode122 = [
  ["path", { d: "M11 7v10a5 5 0 0 0 5-5", key: "1ja3ih" }],
  ["path", { d: "m15 8-6 3", key: "4x0uwz" }],
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76",
      key: "18242g"
    }
  ]
];
var BadgeTurkishLira = createLucideIcon("badge-turkish-lira", __iconNode122);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge-x.js
var __iconNode123 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ],
  ["line", { x1: "15", x2: "9", y1: "9", y2: "15", key: "f7djnv" }],
  ["line", { x1: "9", x2: "15", y1: "9", y2: "15", key: "1shsy8" }]
];
var BadgeX = createLucideIcon("badge-x", __iconNode123);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/badge.js
var __iconNode124 = [
  [
    "path",
    {
      d: "M3.85 8.62a4 4 0 0 1 4.78-4.77 4 4 0 0 1 6.74 0 4 4 0 0 1 4.78 4.78 4 4 0 0 1 0 6.74 4 4 0 0 1-4.77 4.78 4 4 0 0 1-6.75 0 4 4 0 0 1-4.78-4.77 4 4 0 0 1 0-6.76Z",
      key: "3c2336"
    }
  ]
];
var Badge = createLucideIcon("badge", __iconNode124);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/baggage-claim.js
var __iconNode125 = [
  ["path", { d: "M22 18H6a2 2 0 0 1-2-2V7a2 2 0 0 0-2-2", key: "4irg2o" }],
  ["path", { d: "M17 14V4a2 2 0 0 0-2-2h-1a2 2 0 0 0-2 2v10", key: "14fcyx" }],
  ["rect", { width: "13", height: "8", x: "8", y: "6", rx: "1", key: "o6oiis" }],
  ["circle", { cx: "18", cy: "20", r: "2", key: "t9985n" }],
  ["circle", { cx: "9", cy: "20", r: "2", key: "e5v82j" }]
];
var BaggageClaim = createLucideIcon("baggage-claim", __iconNode125);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ban.js
var __iconNode126 = [
  ["path", { d: "M4.929 4.929 19.07 19.071", key: "196cmz" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Ban = createLucideIcon("ban", __iconNode126);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/banana.js
var __iconNode127 = [
  ["path", { d: "M4 13c3.5-2 8-2 10 2a5.5 5.5 0 0 1 8 5", key: "1cscit" }],
  [
    "path",
    {
      d: "M5.15 17.89c5.52-1.52 8.65-6.89 7-12C11.55 4 11.5 2 13 2c3.22 0 5 5.5 5 8 0 6.5-4.2 12-10.49 12C5.11 22 2 22 2 20c0-1.5 1.14-1.55 3.15-2.11Z",
      key: "1y1nbv"
    }
  ]
];
var Banana = createLucideIcon("banana", __iconNode127);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bandage.js
var __iconNode128 = [
  ["path", { d: "M10 10.01h.01", key: "1e9xi7" }],
  ["path", { d: "M10 14.01h.01", key: "ac23bv" }],
  ["path", { d: "M14 10.01h.01", key: "2wfrvf" }],
  ["path", { d: "M14 14.01h.01", key: "8tw8yn" }],
  ["path", { d: "M18 6v11.5", key: "dkbidh" }],
  ["path", { d: "M6 6v12", key: "vkc79e" }],
  ["rect", { x: "2", y: "6", width: "20", height: "12", rx: "2", key: "1wpnh2" }]
];
var Bandage = createLucideIcon("bandage", __iconNode128);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/banknote-arrow-down.js
var __iconNode129 = [
  ["path", { d: "M12 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5", key: "x6cv4u" }],
  ["path", { d: "m16 19 3 3 3-3", key: "1ibux0" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M6 12h.01", key: "c2rlol" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var BanknoteArrowDown = createLucideIcon("banknote-arrow-down", __iconNode129);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/banknote-arrow-up.js
var __iconNode130 = [
  ["path", { d: "M12 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5", key: "x6cv4u" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  ["path", { d: "M19 22v-6", key: "qhmiwi" }],
  ["path", { d: "m22 19-3-3-3 3", key: "rn6bg2" }],
  ["path", { d: "M6 12h.01", key: "c2rlol" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var BanknoteArrowUp = createLucideIcon("banknote-arrow-up", __iconNode130);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/banknote-x.js
var __iconNode131 = [
  ["path", { d: "M13 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5", key: "16nib6" }],
  ["path", { d: "m17 17 5 5", key: "p7ous7" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  ["path", { d: "m22 17-5 5", key: "gqnmv0" }],
  ["path", { d: "M6 12h.01", key: "c2rlol" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var BanknoteX = createLucideIcon("banknote-x", __iconNode131);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/banknote.js
var __iconNode132 = [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M6 12h.01M18 12h.01", key: "113zkx" }]
];
var Banknote = createLucideIcon("banknote", __iconNode132);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/barcode.js
var __iconNode133 = [
  ["path", { d: "M3 5v14", key: "1nt18q" }],
  ["path", { d: "M8 5v14", key: "1ybrkv" }],
  ["path", { d: "M12 5v14", key: "s699le" }],
  ["path", { d: "M17 5v14", key: "ycjyhj" }],
  ["path", { d: "M21 5v14", key: "nzette" }]
];
var Barcode = createLucideIcon("barcode", __iconNode133);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/barrel.js
var __iconNode134 = [
  ["path", { d: "M10 3a41 41 0 0 0 0 18", key: "1qcnzb" }],
  ["path", { d: "M14 3a41 41 0 0 1 0 18", key: "547vd4" }],
  [
    "path",
    {
      d: "M17 3a2 2 0 0 1 1.68.92 15.25 15.25 0 0 1 0 16.16A2 2 0 0 1 17 21H7a2 2 0 0 1-1.68-.92 15.25 15.25 0 0 1 0-16.16A2 2 0 0 1 7 3z",
      key: "1wepyy"
    }
  ],
  ["path", { d: "M3.84 17h16.32", key: "1wh981" }],
  ["path", { d: "M3.84 7h16.32", key: "19jf4x" }]
];
var Barrel = createLucideIcon("barrel", __iconNode134);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/baseline.js
var __iconNode135 = [
  ["path", { d: "M4 20h16", key: "14thso" }],
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var Baseline = createLucideIcon("baseline", __iconNode135);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bath.js
var __iconNode136 = [
  ["path", { d: "M10 4 8 6", key: "1rru8s" }],
  ["path", { d: "M17 19v2", key: "ts1sot" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M7 19v2", key: "12npes" }],
  [
    "path",
    {
      d: "M9 5 7.621 3.621A2.121 2.121 0 0 0 4 5v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5",
      key: "14ym8i"
    }
  ]
];
var Bath = createLucideIcon("bath", __iconNode136);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-charging.js
var __iconNode137 = [
  ["path", { d: "m11 7-3 5h4l-3 5", key: "b4a64w" }],
  ["path", { d: "M14.856 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.935", key: "lre1cr" }],
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M5.14 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2.936", key: "13q5k0" }]
];
var BatteryCharging = createLucideIcon("battery-charging", __iconNode137);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-full.js
var __iconNode138 = [
  ["path", { d: "M10 10v4", key: "1mb2ec" }],
  ["path", { d: "M14 10v4", key: "1nt88p" }],
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M6 10v4", key: "1n77qd" }],
  ["rect", { x: "2", y: "6", width: "16", height: "12", rx: "2", key: "13zb55" }]
];
var BatteryFull = createLucideIcon("battery-full", __iconNode138);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-low.js
var __iconNode139 = [
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M6 14v-4", key: "14a6bd" }],
  ["rect", { x: "2", y: "6", width: "16", height: "12", rx: "2", key: "13zb55" }]
];
var BatteryLow = createLucideIcon("battery-low", __iconNode139);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-medium.js
var __iconNode140 = [
  ["path", { d: "M10 14v-4", key: "suye4c" }],
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M6 14v-4", key: "14a6bd" }],
  ["rect", { x: "2", y: "6", width: "16", height: "12", rx: "2", key: "13zb55" }]
];
var BatteryMedium = createLucideIcon("battery-medium", __iconNode140);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-plus.js
var __iconNode141 = [
  ["path", { d: "M10 9v6", key: "17i7lo" }],
  ["path", { d: "M12.543 6H16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.605", key: "o09yah" }],
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M7 12h6", key: "iekk3h" }],
  ["path", { d: "M7.606 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.606", key: "xyqvf1" }]
];
var BatteryPlus = createLucideIcon("battery-plus", __iconNode141);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery-warning.js
var __iconNode142 = [
  ["path", { d: "M10 17h.01", key: "nbq80n" }],
  ["path", { d: "M10 7v6", key: "nne03l" }],
  ["path", { d: "M14 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2", key: "1m83kb" }],
  ["path", { d: "M22 14v-4", key: "14q9d5" }],
  ["path", { d: "M6 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2", key: "h8lgfh" }]
];
var BatteryWarning = createLucideIcon("battery-warning", __iconNode142);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/battery.js
var __iconNode143 = [
  ["path", { d: "M 22 14 L 22 10", key: "nqc4tb" }],
  ["rect", { x: "2", y: "6", width: "16", height: "12", rx: "2", key: "13zb55" }]
];
var Battery = createLucideIcon("battery", __iconNode143);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/beaker.js
var __iconNode144 = [
  ["path", { d: "M4.5 3h15", key: "c7n0jr" }],
  ["path", { d: "M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3", key: "m1uhx7" }],
  ["path", { d: "M6 14h12", key: "4cwo0f" }]
];
var Beaker = createLucideIcon("beaker", __iconNode144);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bean-off.js
var __iconNode145 = [
  [
    "path",
    {
      d: "M9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22a13.96 13.96 0 0 0 9.9-4.1",
      key: "bq3udt"
    }
  ],
  ["path", { d: "M10.75 5.093A6 6 0 0 1 22 8c0 2.411-.61 4.68-1.683 6.66", key: "17ccse" }],
  [
    "path",
    {
      d: "M5.341 10.62a4 4 0 0 0 6.487 1.208M10.62 5.341a4.015 4.015 0 0 1 2.039 2.04",
      key: "18zqgq"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var BeanOff = createLucideIcon("bean-off", __iconNode145);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bean.js
var __iconNode146 = [
  [
    "path",
    {
      d: "M10.165 6.598C9.954 7.478 9.64 8.36 9 9c-.64.64-1.521.954-2.402 1.165A6 6 0 0 0 8 22c7.732 0 14-6.268 14-14a6 6 0 0 0-11.835-1.402Z",
      key: "1tvzk7"
    }
  ],
  ["path", { d: "M5.341 10.62a4 4 0 1 0 5.279-5.28", key: "2cyri2" }]
];
var Bean = createLucideIcon("bean", __iconNode146);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bed-double.js
var __iconNode147 = [
  ["path", { d: "M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8", key: "1k78r4" }],
  ["path", { d: "M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4", key: "fb3tl2" }],
  ["path", { d: "M12 4v6", key: "1dcgq2" }],
  ["path", { d: "M2 18h20", key: "ajqnye" }]
];
var BedDouble = createLucideIcon("bed-double", __iconNode147);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bed-single.js
var __iconNode148 = [
  ["path", { d: "M3 20v-8a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8", key: "1wm6mi" }],
  ["path", { d: "M5 10V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v4", key: "4k93s5" }],
  ["path", { d: "M3 18h18", key: "1h113x" }]
];
var BedSingle = createLucideIcon("bed-single", __iconNode148);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bed.js
var __iconNode149 = [
  ["path", { d: "M2 4v16", key: "vw9hq8" }],
  ["path", { d: "M2 8h18a2 2 0 0 1 2 2v10", key: "1dgv2r" }],
  ["path", { d: "M2 17h20", key: "18nfp3" }],
  ["path", { d: "M6 8v9", key: "1yriud" }]
];
var Bed = createLucideIcon("bed", __iconNode149);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/beef.js
var __iconNode150 = [
  [
    "path",
    {
      d: "M16.4 13.7A6.5 6.5 0 1 0 6.28 6.6c-1.1 3.13-.78 3.9-3.18 6.08A3 3 0 0 0 5 18c4 0 8.4-1.8 11.4-4.3",
      key: "cisjcv"
    }
  ],
  [
    "path",
    {
      d: "m18.5 6 2.19 4.5a6.48 6.48 0 0 1-2.29 7.2C15.4 20.2 11 22 7 22a3 3 0 0 1-2.68-1.66L2.4 16.5",
      key: "5byaag"
    }
  ],
  ["circle", { cx: "12.5", cy: "8.5", r: "2.5", key: "9738u8" }]
];
var Beef = createLucideIcon("beef", __iconNode150);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/beer-off.js
var __iconNode151 = [
  ["path", { d: "M13 13v5", key: "igwfh0" }],
  ["path", { d: "M17 11.47V8", key: "16yw0g" }],
  ["path", { d: "M17 11h1a3 3 0 0 1 2.745 4.211", key: "1xbt65" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3", key: "c55o3e" }],
  [
    "path",
    { d: "M7.536 7.535C6.766 7.649 6.154 8 5.5 8a2.5 2.5 0 0 1-1.768-4.268", key: "1ydug7" }
  ],
  [
    "path",
    {
      d: "M8.727 3.204C9.306 2.767 9.885 2 11 2c1.56 0 2 1.5 3 1.5s1.72-.5 2.5-.5a1 1 0 1 1 0 5c-.78 0-1.5-.5-2.5-.5a3.149 3.149 0 0 0-.842.12",
      key: "q81o7q"
    }
  ],
  ["path", { d: "M9 14.6V18", key: "20ek98" }]
];
var BeerOff = createLucideIcon("beer-off", __iconNode151);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/beer.js
var __iconNode152 = [
  ["path", { d: "M17 11h1a3 3 0 0 1 0 6h-1", key: "1yp76v" }],
  ["path", { d: "M9 12v6", key: "1u1cab" }],
  ["path", { d: "M13 12v6", key: "1sugkk" }],
  [
    "path",
    {
      d: "M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z",
      key: "1510fo"
    }
  ],
  ["path", { d: "M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8", key: "19jb7n" }]
];
var Beer = createLucideIcon("beer", __iconNode152);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-dot.js
var __iconNode153 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  [
    "path",
    {
      d: "M13.916 2.314A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.74 7.327A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673 9 9 0 0 1-.585-.665",
      key: "1tip0g"
    }
  ],
  ["circle", { cx: "18", cy: "8", r: "3", key: "1g0gzu" }]
];
var BellDot = createLucideIcon("bell-dot", __iconNode153);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-electric.js
var __iconNode154 = [
  ["path", { d: "M18.518 17.347A7 7 0 0 1 14 19", key: "1emhpo" }],
  ["path", { d: "M18.8 4A11 11 0 0 1 20 9", key: "127b67" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["circle", { cx: "20", cy: "16", r: "2", key: "1v9bxh" }],
  ["circle", { cx: "9", cy: "9", r: "7", key: "p2h5vp" }],
  ["rect", { x: "4", y: "16", width: "10", height: "6", rx: "2", key: "bfnviv" }]
];
var BellElectric = createLucideIcon("bell-electric", __iconNode154);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-minus.js
var __iconNode155 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  ["path", { d: "M15 8h6", key: "8ybuxh" }],
  [
    "path",
    {
      d: "M16.243 3.757A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673A9.4 9.4 0 0 1 18.667 12",
      key: "bdwj86"
    }
  ]
];
var BellMinus = createLucideIcon("bell-minus", __iconNode155);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-off.js
var __iconNode156 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  [
    "path",
    {
      d: "M17 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 .258-1.742",
      key: "178tsu"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.668 3.01A6 6 0 0 1 18 8c0 2.687.77 4.653 1.707 6.05", key: "1hqiys" }]
];
var BellOff = createLucideIcon("bell-off", __iconNode156);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-plus.js
var __iconNode157 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  ["path", { d: "M15 8h6", key: "8ybuxh" }],
  ["path", { d: "M18 5v6", key: "g5ayrv" }],
  [
    "path",
    {
      d: "M20.002 14.464a9 9 0 0 0 .738.863A1 1 0 0 1 20 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 8.75-5.332",
      key: "1abcvy"
    }
  ]
];
var BellPlus = createLucideIcon("bell-plus", __iconNode157);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell-ring.js
var __iconNode158 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  ["path", { d: "M22 8c0-2.3-.8-4.3-2-6", key: "5bb3ad" }],
  [
    "path",
    {
      d: "M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326",
      key: "11g9vi"
    }
  ],
  ["path", { d: "M4 2C2.8 3.7 2 5.7 2 8", key: "tap9e0" }]
];
var BellRing = createLucideIcon("bell-ring", __iconNode158);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bell.js
var __iconNode159 = [
  ["path", { d: "M10.268 21a2 2 0 0 0 3.464 0", key: "vwvbt9" }],
  [
    "path",
    {
      d: "M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326",
      key: "11g9vi"
    }
  ]
];
var Bell = createLucideIcon("bell", __iconNode159);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/between-horizontal-end.js
var __iconNode160 = [
  ["rect", { width: "13", height: "7", x: "3", y: "3", rx: "1", key: "11xb64" }],
  ["path", { d: "m22 15-3-3 3-3", key: "26chmm" }],
  ["rect", { width: "13", height: "7", x: "3", y: "14", rx: "1", key: "k6ky7n" }]
];
var BetweenHorizontalEnd = createLucideIcon("between-horizontal-end", __iconNode160);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/between-horizontal-start.js
var __iconNode161 = [
  ["rect", { width: "13", height: "7", x: "8", y: "3", rx: "1", key: "pkso9a" }],
  ["path", { d: "m2 9 3 3-3 3", key: "1agib5" }],
  ["rect", { width: "13", height: "7", x: "8", y: "14", rx: "1", key: "1q5fc1" }]
];
var BetweenHorizontalStart = createLucideIcon("between-horizontal-start", __iconNode161);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/between-vertical-end.js
var __iconNode162 = [
  ["rect", { width: "7", height: "13", x: "3", y: "3", rx: "1", key: "1fdu0f" }],
  ["path", { d: "m9 22 3-3 3 3", key: "17z65a" }],
  ["rect", { width: "7", height: "13", x: "14", y: "3", rx: "1", key: "1squn4" }]
];
var BetweenVerticalEnd = createLucideIcon("between-vertical-end", __iconNode162);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/between-vertical-start.js
var __iconNode163 = [
  ["rect", { width: "7", height: "13", x: "3", y: "8", rx: "1", key: "1fjrkv" }],
  ["path", { d: "m15 2-3 3-3-3", key: "1uh6eb" }],
  ["rect", { width: "7", height: "13", x: "14", y: "8", rx: "1", key: "w3fjg8" }]
];
var BetweenVerticalStart = createLucideIcon("between-vertical-start", __iconNode163);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/biceps-flexed.js
var __iconNode164 = [
  [
    "path",
    {
      d: "M12.409 13.017A5 5 0 0 1 22 15c0 3.866-4 7-9 7-4.077 0-8.153-.82-10.371-2.462-.426-.316-.631-.832-.62-1.362C2.118 12.723 2.627 2 10 2a3 3 0 0 1 3 3 2 2 0 0 1-2 2c-1.105 0-1.64-.444-2-1",
      key: "1pmlyh"
    }
  ],
  ["path", { d: "M15 14a5 5 0 0 0-7.584 2", key: "5rb254" }],
  ["path", { d: "M9.964 6.825C8.019 7.977 9.5 13 8 15", key: "kbvsx9" }]
];
var BicepsFlexed = createLucideIcon("biceps-flexed", __iconNode164);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bike.js
var __iconNode165 = [
  ["circle", { cx: "18.5", cy: "17.5", r: "3.5", key: "15x4ox" }],
  ["circle", { cx: "5.5", cy: "17.5", r: "3.5", key: "1noe27" }],
  ["circle", { cx: "15", cy: "5", r: "1", key: "19l28e" }],
  ["path", { d: "M12 17.5V14l-3-3 4-3 2 3h2", key: "1npguv" }]
];
var Bike = createLucideIcon("bike", __iconNode165);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/binary.js
var __iconNode166 = [
  ["rect", { x: "14", y: "14", width: "4", height: "6", rx: "2", key: "p02svl" }],
  ["rect", { x: "6", y: "4", width: "4", height: "6", rx: "2", key: "xm4xkj" }],
  ["path", { d: "M6 20h4", key: "1i6q5t" }],
  ["path", { d: "M14 10h4", key: "ru81e7" }],
  ["path", { d: "M6 14h2v6", key: "16z9wg" }],
  ["path", { d: "M14 4h2v6", key: "1idq9u" }]
];
var Binary = createLucideIcon("binary", __iconNode166);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/binoculars.js
var __iconNode167 = [
  ["path", { d: "M10 10h4", key: "tcdvrf" }],
  ["path", { d: "M19 7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3", key: "3apit1" }],
  [
    "path",
    {
      d: "M20 21a2 2 0 0 0 2-2v-3.851c0-1.39-2-2.962-2-4.829V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v11a2 2 0 0 0 2 2z",
      key: "rhpgnw"
    }
  ],
  ["path", { d: "M 22 16 L 2 16", key: "14lkq7" }],
  [
    "path",
    {
      d: "M4 21a2 2 0 0 1-2-2v-3.851c0-1.39 2-2.962 2-4.829V8a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v11a2 2 0 0 1-2 2z",
      key: "104b3k"
    }
  ],
  ["path", { d: "M9 7V4a1 1 0 0 0-1-1H6a1 1 0 0 0-1 1v3", key: "14fczp" }]
];
var Binoculars = createLucideIcon("binoculars", __iconNode167);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/biohazard.js
var __iconNode168 = [
  ["circle", { cx: "12", cy: "11.9", r: "2", key: "e8h31w" }],
  ["path", { d: "M6.7 3.4c-.9 2.5 0 5.2 2.2 6.7C6.5 9 3.7 9.6 2 11.6", key: "17bolr" }],
  ["path", { d: "m8.9 10.1 1.4.8", key: "15ezny" }],
  ["path", { d: "M17.3 3.4c.9 2.5 0 5.2-2.2 6.7 2.4-1.2 5.2-.6 6.9 1.5", key: "wtwa5u" }],
  ["path", { d: "m15.1 10.1-1.4.8", key: "1r0b28" }],
  ["path", { d: "M16.7 20.8c-2.6-.4-4.6-2.6-4.7-5.3-.2 2.6-2.1 4.8-4.7 5.2", key: "m7qszh" }],
  ["path", { d: "M12 13.9v1.6", key: "zfyyim" }],
  ["path", { d: "M13.5 5.4c-1-.2-2-.2-3 0", key: "1bi9q0" }],
  ["path", { d: "M17 16.4c.7-.7 1.2-1.6 1.5-2.5", key: "1rhjqw" }],
  ["path", { d: "M5.5 13.9c.3.9.8 1.8 1.5 2.5", key: "8gsud3" }]
];
var Biohazard = createLucideIcon("biohazard", __iconNode168);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bird.js
var __iconNode169 = [
  ["path", { d: "M16 7h.01", key: "1kdx03" }],
  ["path", { d: "M3.4 18H12a8 8 0 0 0 8-8V7a4 4 0 0 0-7.28-2.3L2 20", key: "oj1oa8" }],
  ["path", { d: "m20 7 2 .5-2 .5", key: "12nv4d" }],
  ["path", { d: "M10 18v3", key: "1yea0a" }],
  ["path", { d: "M14 17.75V21", key: "1pymcb" }],
  ["path", { d: "M7 18a6 6 0 0 0 3.84-10.61", key: "1npnn0" }]
];
var Bird = createLucideIcon("bird", __iconNode169);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bitcoin.js
var __iconNode170 = [
  [
    "path",
    {
      d: "M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727",
      key: "yr8idg"
    }
  ]
];
var Bitcoin = createLucideIcon("bitcoin", __iconNode170);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/blend.js
var __iconNode171 = [
  ["circle", { cx: "9", cy: "9", r: "7", key: "p2h5vp" }],
  ["circle", { cx: "15", cy: "15", r: "7", key: "19ennj" }]
];
var Blend = createLucideIcon("blend", __iconNode171);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/blinds.js
var __iconNode172 = [
  ["path", { d: "M3 3h18", key: "o7r712" }],
  ["path", { d: "M20 7H8", key: "gd2fo2" }],
  ["path", { d: "M20 11H8", key: "1ynp89" }],
  ["path", { d: "M10 19h10", key: "19hjk5" }],
  ["path", { d: "M8 15h12", key: "1yqzne" }],
  ["path", { d: "M4 3v14", key: "fggqzn" }],
  ["circle", { cx: "4", cy: "19", r: "2", key: "p3m9r0" }]
];
var Blinds = createLucideIcon("blinds", __iconNode172);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/blocks.js
var __iconNode173 = [
  [
    "path",
    {
      d: "M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2",
      key: "1ah6g2"
    }
  ],
  ["rect", { x: "14", y: "2", width: "8", height: "8", rx: "1", key: "88lufb" }]
];
var Blocks = createLucideIcon("blocks", __iconNode173);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bluetooth-connected.js
var __iconNode174 = [
  ["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }],
  ["line", { x1: "18", x2: "21", y1: "12", y2: "12", key: "1rsjjs" }],
  ["line", { x1: "3", x2: "6", y1: "12", y2: "12", key: "11yl8c" }]
];
var BluetoothConnected = createLucideIcon("bluetooth-connected", __iconNode174);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bluetooth-off.js
var __iconNode175 = [
  ["path", { d: "m17 17-5 5V12l-5 5", key: "v5aci6" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M14.5 9.5 17 7l-5-5v4.5", key: "1kddfz" }]
];
var BluetoothOff = createLucideIcon("bluetooth-off", __iconNode175);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bluetooth.js
var __iconNode176 = [["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }]];
var Bluetooth = createLucideIcon("bluetooth", __iconNode176);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bluetooth-searching.js
var __iconNode177 = [
  ["path", { d: "m7 7 10 10-5 5V2l5 5L7 17", key: "1q5490" }],
  ["path", { d: "M20.83 14.83a4 4 0 0 0 0-5.66", key: "k8tn1j" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }]
];
var BluetoothSearching = createLucideIcon("bluetooth-searching", __iconNode177);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bold.js
var __iconNode178 = [
  [
    "path",
    { d: "M6 12h9a4 4 0 0 1 0 8H7a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h7a4 4 0 0 1 0 8", key: "mg9rjx" }
  ]
];
var Bold = createLucideIcon("bold", __iconNode178);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bolt.js
var __iconNode179 = [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
];
var Bolt = createLucideIcon("bolt", __iconNode179);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bomb.js
var __iconNode180 = [
  ["circle", { cx: "11", cy: "13", r: "9", key: "hd149" }],
  [
    "path",
    {
      d: "M14.35 4.65 16.3 2.7a2.41 2.41 0 0 1 3.4 0l1.6 1.6a2.4 2.4 0 0 1 0 3.4l-1.95 1.95",
      key: "jp4j1b"
    }
  ],
  ["path", { d: "m22 2-1.5 1.5", key: "ay92ug" }]
];
var Bomb = createLucideIcon("bomb", __iconNode180);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bone.js
var __iconNode181 = [
  [
    "path",
    {
      d: "M17 10c.7-.7 1.69 0 2.5 0a2.5 2.5 0 1 0 0-5 .5.5 0 0 1-.5-.5 2.5 2.5 0 1 0-5 0c0 .81.7 1.8 0 2.5l-7 7c-.7.7-1.69 0-2.5 0a2.5 2.5 0 0 0 0 5c.28 0 .5.22.5.5a2.5 2.5 0 1 0 5 0c0-.81-.7-1.8 0-2.5Z",
      key: "w610uw"
    }
  ]
];
var Bone = createLucideIcon("bone", __iconNode181);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-a.js
var __iconNode182 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m8 13 4-7 4 7", key: "4rari8" }],
  ["path", { d: "M9.1 11h5.7", key: "1gkovt" }]
];
var BookA = createLucideIcon("book-a", __iconNode182);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-alert.js
var __iconNode183 = [
  ["path", { d: "M12 13h.01", key: "y0uutt" }],
  ["path", { d: "M12 6v3", key: "1m4b9j" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
];
var BookAlert = createLucideIcon("book-alert", __iconNode183);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-audio.js
var __iconNode184 = [
  ["path", { d: "M12 6v7", key: "1f6ttz" }],
  ["path", { d: "M16 8v3", key: "gejaml" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 8v3", key: "1qzp49" }]
];
var BookAudio = createLucideIcon("book-audio", __iconNode184);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-check.js
var __iconNode185 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 9.5 2 2 4-4", key: "1dth82" }]
];
var BookCheck = createLucideIcon("book-check", __iconNode185);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-copy.js
var __iconNode186 = [
  ["path", { d: "M5 7a2 2 0 0 0-2 2v11", key: "1yhqjt" }],
  ["path", { d: "M5.803 18H5a2 2 0 0 0 0 4h9.5a.5.5 0 0 0 .5-.5V21", key: "edzzo5" }],
  [
    "path",
    {
      d: "M9 15V4a2 2 0 0 1 2-2h9.5a.5.5 0 0 1 .5.5v14a.5.5 0 0 1-.5.5H11a2 2 0 0 1 0-4h10",
      key: "1nwzrg"
    }
  ]
];
var BookCopy = createLucideIcon("book-copy", __iconNode186);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-dashed.js
var __iconNode187 = [
  ["path", { d: "M12 17h1.5", key: "1gkc67" }],
  ["path", { d: "M12 22h1.5", key: "1my7sn" }],
  ["path", { d: "M12 2h1.5", key: "19tvb7" }],
  ["path", { d: "M17.5 22H19a1 1 0 0 0 1-1", key: "10akbh" }],
  ["path", { d: "M17.5 2H19a1 1 0 0 1 1 1v1.5", key: "1vrfjs" }],
  ["path", { d: "M20 14v3h-2.5", key: "1naeju" }],
  ["path", { d: "M20 8.5V10", key: "1ctpfu" }],
  ["path", { d: "M4 10V8.5", key: "1o3zg5" }],
  ["path", { d: "M4 19.5V14", key: "ob81pf" }],
  ["path", { d: "M4 4.5A2.5 2.5 0 0 1 6.5 2H8", key: "s8vcyb" }],
  ["path", { d: "M8 22H6.5a1 1 0 0 1 0-5H8", key: "1cu73q" }]
];
var BookDashed = createLucideIcon("book-dashed", __iconNode187);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-down.js
var __iconNode188 = [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 10 3 3 3-3", key: "zt5b4y" }]
];
var BookDown = createLucideIcon("book-down", __iconNode188);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-headphones.js
var __iconNode189 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 12v-2a4 4 0 0 1 8 0v2", key: "1vsqkj" }],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }]
];
var BookHeadphones = createLucideIcon("book-headphones", __iconNode189);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-heart.js
var __iconNode190 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  [
    "path",
    {
      d: "M8.62 9.8A2.25 2.25 0 1 1 12 6.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z",
      key: "9v40y5"
    }
  ]
];
var BookHeart = createLucideIcon("book-heart", __iconNode190);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-image.js
var __iconNode191 = [
  ["path", { d: "m20 13.7-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17", key: "q6ojf0" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["circle", { cx: "10", cy: "8", r: "2", key: "2qkj4p" }]
];
var BookImage = createLucideIcon("book-image", __iconNode191);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-key.js
var __iconNode192 = [
  ["path", { d: "m19 3 1 1", key: "ze14oc" }],
  ["path", { d: "m20 2-4.5 4.5", key: "1sppr8" }],
  ["path", { d: "M20 7.898V21a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "1xzogz" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2h7.844", key: "vtdg6h" }],
  ["circle", { cx: "14", cy: "8", r: "2", key: "u49eql" }]
];
var BookKey = createLucideIcon("book-key", __iconNode192);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-lock.js
var __iconNode193 = [
  ["path", { d: "M18 6V4a2 2 0 1 0-4 0v2", key: "1aquzs" }],
  ["path", { d: "M20 15v6a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "1rkj32" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H10", key: "18wgow" }],
  ["rect", { x: "12", y: "6", width: "8", height: "5", rx: "1", key: "73l30o" }]
];
var BookLock = createLucideIcon("book-lock", __iconNode193);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-marked.js
var __iconNode194 = [
  ["path", { d: "M10 2v8l3-3 3 3V2", key: "sqw3rj" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
];
var BookMarked = createLucideIcon("book-marked", __iconNode194);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-minus.js
var __iconNode195 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
];
var BookMinus = createLucideIcon("book-minus", __iconNode195);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-open-check.js
var __iconNode196 = [
  ["path", { d: "M12 21V7", key: "gj6g52" }],
  ["path", { d: "m16 12 2 2 4-4", key: "mdajum" }],
  [
    "path",
    {
      d: "M22 6V4a1 1 0 0 0-1-1h-5a4 4 0 0 0-4 4 4 4 0 0 0-4-4H3a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h6a3 3 0 0 1 3 3 3 3 0 0 1 3-3h6a1 1 0 0 0 1-1v-1.3",
      key: "8arnkb"
    }
  ]
];
var BookOpenCheck = createLucideIcon("book-open-check", __iconNode196);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-open-text.js
var __iconNode197 = [
  ["path", { d: "M12 7v14", key: "1akyts" }],
  ["path", { d: "M16 12h2", key: "7q9ll5" }],
  ["path", { d: "M16 8h2", key: "msurwy" }],
  [
    "path",
    {
      d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",
      key: "ruj8y"
    }
  ],
  ["path", { d: "M6 12h2", key: "32wvfc" }],
  ["path", { d: "M6 8h2", key: "30oboj" }]
];
var BookOpenText = createLucideIcon("book-open-text", __iconNode197);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-open.js
var __iconNode198 = [
  ["path", { d: "M12 7v14", key: "1akyts" }],
  [
    "path",
    {
      d: "M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z",
      key: "ruj8y"
    }
  ]
];
var BookOpen = createLucideIcon("book-open", __iconNode198);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-plus.js
var __iconNode199 = [
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
];
var BookPlus = createLucideIcon("book-plus", __iconNode199);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-text.js
var __iconNode200 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "M8 11h8", key: "vwpz6n" }],
  ["path", { d: "M8 7h6", key: "1f0q6e" }]
];
var BookText = createLucideIcon("book-text", __iconNode200);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-type.js
var __iconNode201 = [
  ["path", { d: "M10 13h4", key: "ytezjc" }],
  ["path", { d: "M12 6v7", key: "1f6ttz" }],
  ["path", { d: "M16 8V6H8v2", key: "x8j6u4" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
];
var BookType = createLucideIcon("book-type", __iconNode201);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-up-2.js
var __iconNode202 = [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "M18 2h1a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20", key: "161d7n" }],
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2", key: "1lorq7" }],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }],
  ["path", { d: "m9 5 3-3 3 3", key: "l8vdw6" }]
];
var BookUp2 = createLucideIcon("book-up-2", __iconNode202);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-up.js
var __iconNode203 = [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }]
];
var BookUp = createLucideIcon("book-up", __iconNode203);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-user.js
var __iconNode204 = [
  ["path", { d: "M15 13a3 3 0 1 0-6 0", key: "10j68g" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }]
];
var BookUser = createLucideIcon("book-user", __iconNode204);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book-x.js
var __iconNode205 = [
  ["path", { d: "m14.5 7-5 5", key: "dy991v" }],
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ],
  ["path", { d: "m9.5 7 5 5", key: "s45iea" }]
];
var BookX = createLucideIcon("book-x", __iconNode205);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/book.js
var __iconNode206 = [
  [
    "path",
    {
      d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20",
      key: "k3hazp"
    }
  ]
];
var Book = createLucideIcon("book", __iconNode206);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bookmark-check.js
var __iconNode207 = [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z", key: "169p4p" }],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }]
];
var BookmarkCheck = createLucideIcon("bookmark-check", __iconNode207);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bookmark-minus.js
var __iconNode208 = [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }],
  ["line", { x1: "15", x2: "9", y1: "10", y2: "10", key: "1gty7f" }]
];
var BookmarkMinus = createLucideIcon("bookmark-minus", __iconNode208);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bookmark-plus.js
var __iconNode209 = [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }],
  ["line", { x1: "12", x2: "12", y1: "7", y2: "13", key: "1cppfj" }],
  ["line", { x1: "15", x2: "9", y1: "10", y2: "10", key: "1gty7f" }]
];
var BookmarkPlus = createLucideIcon("bookmark-plus", __iconNode209);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bookmark-x.js
var __iconNode210 = [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z", key: "169p4p" }],
  ["path", { d: "m14.5 7.5-5 5", key: "3lb6iw" }],
  ["path", { d: "m9.5 7.5 5 5", key: "ko136h" }]
];
var BookmarkX = createLucideIcon("bookmark-x", __iconNode210);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bookmark.js
var __iconNode211 = [
  ["path", { d: "m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z", key: "1fy3hk" }]
];
var Bookmark = createLucideIcon("bookmark", __iconNode211);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/boom-box.js
var __iconNode212 = [
  ["path", { d: "M4 9V5a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4", key: "vvzvr1" }],
  ["path", { d: "M8 8v1", key: "xcqmfk" }],
  ["path", { d: "M12 8v1", key: "1rj8u4" }],
  ["path", { d: "M16 8v1", key: "1q12zr" }],
  ["rect", { width: "20", height: "12", x: "2", y: "9", rx: "2", key: "igpb89" }],
  ["circle", { cx: "8", cy: "15", r: "2", key: "fa4a8s" }],
  ["circle", { cx: "16", cy: "15", r: "2", key: "14c3ya" }]
];
var BoomBox = createLucideIcon("boom-box", __iconNode212);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bot-message-square.js
var __iconNode213 = [
  ["path", { d: "M12 6V2H8", key: "1155em" }],
  ["path", { d: "M15 11v2", key: "i11awn" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  [
    "path",
    {
      d: "M20 16a2 2 0 0 1-2 2H8.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 4 20.286V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2z",
      key: "11gyqh"
    }
  ],
  ["path", { d: "M9 11v2", key: "1ueba0" }]
];
var BotMessageSquare = createLucideIcon("bot-message-square", __iconNode213);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bot-off.js
var __iconNode214 = [
  ["path", { d: "M13.67 8H18a2 2 0 0 1 2 2v4.33", key: "7az073" }],
  ["path", { d: "M2 14h2", key: "vft8re" }],
  ["path", { d: "M20 14h2", key: "4cs60a" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }],
  ["path", { d: "M8 8H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 1.414-.586", key: "s09a7a" }],
  ["path", { d: "M9 13v2", key: "rq6x2g" }],
  ["path", { d: "M9.67 4H12v2.33", key: "110xot" }]
];
var BotOff = createLucideIcon("bot-off", __iconNode214);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bot.js
var __iconNode215 = [
  ["path", { d: "M12 8V4H8", key: "hb8ula" }],
  ["rect", { width: "16", height: "12", x: "4", y: "8", rx: "2", key: "enze0r" }],
  ["path", { d: "M2 14h2", key: "vft8re" }],
  ["path", { d: "M20 14h2", key: "4cs60a" }],
  ["path", { d: "M15 13v2", key: "1xurst" }],
  ["path", { d: "M9 13v2", key: "rq6x2g" }]
];
var Bot = createLucideIcon("bot", __iconNode215);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bottle-wine.js
var __iconNode216 = [
  [
    "path",
    {
      d: "M10 3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a6 6 0 0 0 1.2 3.6l.6.8A6 6 0 0 1 17 13v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-8a6 6 0 0 1 1.2-3.6l.6-.8A6 6 0 0 0 10 5z",
      key: "blqgoc"
    }
  ],
  ["path", { d: "M17 13h-4a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h4", key: "43jbee" }]
];
var BottleWine = createLucideIcon("bottle-wine", __iconNode216);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bow-arrow.js
var __iconNode217 = [
  ["path", { d: "M17 3h4v4", key: "19p9u1" }],
  [
    "path",
    { d: "M18.575 11.082a13 13 0 0 1 1.048 9.027 1.17 1.17 0 0 1-1.914.597L14 17", key: "12t3w9" }
  ],
  ["path", { d: "M7 10 3.29 6.29a1.17 1.17 0 0 1 .6-1.91 13 13 0 0 1 9.03 1.05", key: "ogng5l" }],
  [
    "path",
    {
      d: "M7 14a1.7 1.7 0 0 0-1.207.5l-2.646 2.646A.5.5 0 0 0 3.5 18H5a1 1 0 0 1 1 1v1.5a.5.5 0 0 0 .854.354L9.5 18.207A1.7 1.7 0 0 0 10 17v-2a1 1 0 0 0-1-1z",
      key: "8v3fy2"
    }
  ],
  ["path", { d: "M9.707 14.293 21 3", key: "ydm3bn" }]
];
var BowArrow = createLucideIcon("bow-arrow", __iconNode217);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/box.js
var __iconNode218 = [
  [
    "path",
    {
      d: "M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z",
      key: "hh9hay"
    }
  ],
  ["path", { d: "m3.3 7 8.7 5 8.7-5", key: "g66t2b" }],
  ["path", { d: "M12 22V12", key: "d0xqtd" }]
];
var Box = createLucideIcon("box", __iconNode218);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/boxes.js
var __iconNode219 = [
  [
    "path",
    {
      d: "M2.97 12.92A2 2 0 0 0 2 14.63v3.24a2 2 0 0 0 .97 1.71l3 1.8a2 2 0 0 0 2.06 0L12 19v-5.5l-5-3-4.03 2.42Z",
      key: "lc1i9w"
    }
  ],
  ["path", { d: "m7 16.5-4.74-2.85", key: "1o9zyk" }],
  ["path", { d: "m7 16.5 5-3", key: "va8pkn" }],
  ["path", { d: "M7 16.5v5.17", key: "jnp8gn" }],
  [
    "path",
    {
      d: "M12 13.5V19l3.97 2.38a2 2 0 0 0 2.06 0l3-1.8a2 2 0 0 0 .97-1.71v-3.24a2 2 0 0 0-.97-1.71L17 10.5l-5 3Z",
      key: "8zsnat"
    }
  ],
  ["path", { d: "m17 16.5-5-3", key: "8arw3v" }],
  ["path", { d: "m17 16.5 4.74-2.85", key: "8rfmw" }],
  ["path", { d: "M17 16.5v5.17", key: "k6z78m" }],
  [
    "path",
    {
      d: "M7.97 4.42A2 2 0 0 0 7 6.13v4.37l5 3 5-3V6.13a2 2 0 0 0-.97-1.71l-3-1.8a2 2 0 0 0-2.06 0l-3 1.8Z",
      key: "1xygjf"
    }
  ],
  ["path", { d: "M12 8 7.26 5.15", key: "1vbdud" }],
  ["path", { d: "m12 8 4.74-2.85", key: "3rx089" }],
  ["path", { d: "M12 13.5V8", key: "1io7kd" }]
];
var Boxes = createLucideIcon("boxes", __iconNode219);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/braces.js
var __iconNode220 = [
  [
    "path",
    { d: "M8 3H7a2 2 0 0 0-2 2v5a2 2 0 0 1-2 2 2 2 0 0 1 2 2v5c0 1.1.9 2 2 2h1", key: "ezmyqa" }
  ],
  [
    "path",
    {
      d: "M16 21h1a2 2 0 0 0 2-2v-5c0-1.1.9-2 2-2a2 2 0 0 1-2-2V5a2 2 0 0 0-2-2h-1",
      key: "e1hn23"
    }
  ]
];
var Braces = createLucideIcon("braces", __iconNode220);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brackets.js
var __iconNode221 = [
  ["path", { d: "M16 3h3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-3", key: "1kt8lf" }],
  ["path", { d: "M8 21H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h3", key: "gduv9" }]
];
var Brackets = createLucideIcon("brackets", __iconNode221);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brain-circuit.js
var __iconNode222 = [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z",
      key: "l5xja"
    }
  ],
  ["path", { d: "M9 13a4.5 4.5 0 0 0 3-4", key: "10igwf" }],
  ["path", { d: "M6.003 5.125A3 3 0 0 0 6.401 6.5", key: "105sqy" }],
  ["path", { d: "M3.477 10.896a4 4 0 0 1 .585-.396", key: "ql3yin" }],
  ["path", { d: "M6 18a4 4 0 0 1-1.967-.516", key: "2e4loj" }],
  ["path", { d: "M12 13h4", key: "1ku699" }],
  ["path", { d: "M12 18h6a2 2 0 0 1 2 2v1", key: "105ag5" }],
  ["path", { d: "M12 8h8", key: "1lhi5i" }],
  ["path", { d: "M16 8V5a2 2 0 0 1 2-2", key: "u6izg6" }],
  ["circle", { cx: "16", cy: "13", r: ".5", key: "ry7gng" }],
  ["circle", { cx: "18", cy: "3", r: ".5", key: "1aiba7" }],
  ["circle", { cx: "20", cy: "21", r: ".5", key: "yhc1fs" }],
  ["circle", { cx: "20", cy: "8", r: ".5", key: "1e43v0" }]
];
var BrainCircuit = createLucideIcon("brain-circuit", __iconNode222);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brain-cog.js
var __iconNode223 = [
  ["path", { d: "m10.852 14.772-.383.923", key: "11vil6" }],
  ["path", { d: "m10.852 9.228-.383-.923", key: "1fjppe" }],
  ["path", { d: "m13.148 14.772.382.924", key: "je3va1" }],
  ["path", { d: "m13.531 8.305-.383.923", key: "18epck" }],
  ["path", { d: "m14.772 10.852.923-.383", key: "k9m8cz" }],
  ["path", { d: "m14.772 13.148.923.383", key: "1xvhww" }],
  [
    "path",
    {
      d: "M17.598 6.5A3 3 0 1 0 12 5a3 3 0 0 0-5.63-1.446 3 3 0 0 0-.368 1.571 4 4 0 0 0-2.525 5.771",
      key: "jcbbz1"
    }
  ],
  ["path", { d: "M17.998 5.125a4 4 0 0 1 2.525 5.771", key: "1kkn7e" }],
  ["path", { d: "M19.505 10.294a4 4 0 0 1-1.5 7.706", key: "18bmuc" }],
  [
    "path",
    {
      d: "M4.032 17.483A4 4 0 0 0 11.464 20c.18-.311.892-.311 1.072 0a4 4 0 0 0 7.432-2.516",
      key: "uozx0d"
    }
  ],
  ["path", { d: "M4.5 10.291A4 4 0 0 0 6 18", key: "whdemb" }],
  ["path", { d: "M6.002 5.125a3 3 0 0 0 .4 1.375", key: "1kqy2g" }],
  ["path", { d: "m9.228 10.852-.923-.383", key: "1wtb30" }],
  ["path", { d: "m9.228 13.148-.923.383", key: "1a830x" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
];
var BrainCog = createLucideIcon("brain-cog", __iconNode223);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brain.js
var __iconNode224 = [
  ["path", { d: "M12 18V5", key: "adv99a" }],
  ["path", { d: "M15 13a4.17 4.17 0 0 1-3-4 4.17 4.17 0 0 1-3 4", key: "1e3is1" }],
  ["path", { d: "M17.598 6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5", key: "1gqd8o" }],
  ["path", { d: "M17.997 5.125a4 4 0 0 1 2.526 5.77", key: "iwvgf7" }],
  ["path", { d: "M18 18a4 4 0 0 0 2-7.464", key: "efp6ie" }],
  ["path", { d: "M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517", key: "1gq6am" }],
  ["path", { d: "M6 18a4 4 0 0 1-2-7.464", key: "k1g0md" }],
  ["path", { d: "M6.003 5.125a4 4 0 0 0-2.526 5.77", key: "q97ue3" }]
];
var Brain = createLucideIcon("brain", __iconNode224);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brick-wall-fire.js
var __iconNode225 = [
  ["path", { d: "M16 3v2.107", key: "gq8xun" }],
  [
    "path",
    {
      d: "M17 9c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 22 17a5 5 0 0 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C13 11.5 16 9 17 9",
      key: "1l2pih"
    }
  ],
  [
    "path",
    { d: "M21 8.274V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.938", key: "jrnqjp" }
  ],
  ["path", { d: "M3 15h5.253", key: "xqg7rb" }],
  ["path", { d: "M3 9h8.228", key: "1ppb70" }],
  ["path", { d: "M8 15v6", key: "1stoo3" }],
  ["path", { d: "M8 3v6", key: "vlvjmk" }]
];
var BrickWallFire = createLucideIcon("brick-wall-fire", __iconNode225);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brick-wall-shield.js
var __iconNode226 = [
  ["path", { d: "M12 9v1.258", key: "iwpddn" }],
  ["path", { d: "M16 3v5.46", key: "d7ew98" }],
  ["path", { d: "M21 9.118V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h5.75", key: "137t5x" }],
  [
    "path",
    {
      d: "M22 17.5c0 2.499-1.75 3.749-3.83 4.474a.5.5 0 0 1-.335-.005c-2.085-.72-3.835-1.97-3.835-4.47V14a.5.5 0 0 1 .5-.499c1 0 2.25-.6 3.12-1.36a.6.6 0 0 1 .76-.001c.875.765 2.12 1.36 3.12 1.36a.5.5 0 0 1 .5.5z",
      key: "16j3tf"
    }
  ],
  ["path", { d: "M3 15h7", key: "1qldh6" }],
  ["path", { d: "M3 9h12.142", key: "1yjd6m" }],
  ["path", { d: "M8 15v6", key: "1stoo3" }],
  ["path", { d: "M8 3v6", key: "vlvjmk" }]
];
var BrickWallShield = createLucideIcon("brick-wall-shield", __iconNode226);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brick-wall.js
var __iconNode227 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 9v6", key: "199k2o" }],
  ["path", { d: "M16 15v6", key: "8rj2es" }],
  ["path", { d: "M16 3v6", key: "1j6rpj" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M8 15v6", key: "1stoo3" }],
  ["path", { d: "M8 3v6", key: "vlvjmk" }]
];
var BrickWall = createLucideIcon("brick-wall", __iconNode227);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/briefcase-business.js
var __iconNode228 = [
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2", key: "1ksdt3" }],
  ["path", { d: "M22 13a18.15 18.15 0 0 1-20 0", key: "12hx5q" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
];
var BriefcaseBusiness = createLucideIcon("briefcase-business", __iconNode228);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/briefcase-conveyor-belt.js
var __iconNode229 = [
  ["path", { d: "M10 20v2", key: "1n8e1g" }],
  ["path", { d: "M14 20v2", key: "1lq872" }],
  ["path", { d: "M18 20v2", key: "10uadw" }],
  ["path", { d: "M21 20H3", key: "kdqkdp" }],
  ["path", { d: "M6 20v2", key: "a9bc87" }],
  ["path", { d: "M8 16V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v12", key: "17n9tx" }],
  ["rect", { x: "4", y: "6", width: "16", height: "10", rx: "2", key: "1097i5" }]
];
var BriefcaseConveyorBelt = createLucideIcon("briefcase-conveyor-belt", __iconNode229);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/briefcase.js
var __iconNode230 = [
  ["path", { d: "M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16", key: "jecpp" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
];
var Briefcase = createLucideIcon("briefcase", __iconNode230);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/briefcase-medical.js
var __iconNode231 = [
  ["path", { d: "M12 11v4", key: "a6ujw6" }],
  ["path", { d: "M14 13h-4", key: "1pl8zg" }],
  ["path", { d: "M16 6V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v2", key: "1ksdt3" }],
  ["path", { d: "M18 6v14", key: "1mu4gy" }],
  ["path", { d: "M6 6v14", key: "1s15cj" }],
  ["rect", { width: "20", height: "14", x: "2", y: "6", rx: "2", key: "i6l2r4" }]
];
var BriefcaseMedical = createLucideIcon("briefcase-medical", __iconNode231);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bring-to-front.js
var __iconNode232 = [
  ["rect", { x: "8", y: "8", width: "8", height: "8", rx: "2", key: "yj20xf" }],
  ["path", { d: "M4 10a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2", key: "1ltk23" }],
  ["path", { d: "M14 20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2", key: "1q24h9" }]
];
var BringToFront = createLucideIcon("bring-to-front", __iconNode232);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brush-cleaning.js
var __iconNode233 = [
  ["path", { d: "m16 22-1-4", key: "1ow2iv" }],
  [
    "path",
    {
      d: "M19 13.99a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1",
      key: "iw8jdu"
    }
  ],
  ["path", { d: "M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233z", key: "1soew8" }],
  ["path", { d: "m8 22 1-4", key: "s3unb" }]
];
var BrushCleaning = createLucideIcon("brush-cleaning", __iconNode233);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bubbles.js
var __iconNode234 = [
  ["path", { d: "M7.2 14.8a2 2 0 0 1 2 2", key: "1tw9gg" }],
  ["circle", { cx: "18.5", cy: "8.5", r: "3.5", key: "1wadoa" }],
  ["circle", { cx: "7.5", cy: "16.5", r: "5.5", key: "6mdt3g" }],
  ["circle", { cx: "7.5", cy: "4.5", r: "2.5", key: "637s54" }]
];
var Bubbles = createLucideIcon("bubbles", __iconNode234);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/brush.js
var __iconNode235 = [
  ["path", { d: "m11 10 3 3", key: "fzmg1i" }],
  [
    "path",
    { d: "M6.5 21A3.5 3.5 0 1 0 3 17.5a2.62 2.62 0 0 1-.708 1.792A1 1 0 0 0 3 21z", key: "p4q2r7" }
  ],
  ["path", { d: "M9.969 17.031 21.378 5.624a1 1 0 0 0-3.002-3.002L6.967 14.031", key: "wy6l02" }]
];
var Brush = createLucideIcon("brush", __iconNode235);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bug-off.js
var __iconNode236 = [
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M15 7.13V6a3 3 0 0 0-5.14-2.1L8 2", key: "vl8zik" }],
  ["path", { d: "M18 12.34V11a4 4 0 0 0-4-4h-1.3", key: "sz915m" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M21 5a4 4 0 0 1-3.55 3.97", key: "5cxbf6" }],
  ["path", { d: "M22 13h-3.34", key: "1y15gv" }],
  ["path", { d: "M3 21a4 4 0 0 1 3.81-4", key: "1fjd4g" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "M7.7 7.7A4 4 0 0 0 6 11v3a6 6 0 0 0 11.13 3.13", key: "1njkjs" }]
];
var BugOff = createLucideIcon("bug-off", __iconNode236);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bug-play.js
var __iconNode237 = [
  ["path", { d: "M10 19.655A6 6 0 0 1 6 14v-3a4 4 0 0 1 4-4h4a4 4 0 0 1 4 3.97", key: "1gnv52" }],
  [
    "path",
    {
      d: "M14 15.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z",
      key: "1weqy9"
    }
  ],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M21 5a4 4 0 0 1-3.55 3.97", key: "5cxbf6" }],
  ["path", { d: "M3 21a4 4 0 0 1 3.81-4", key: "1fjd4g" }],
  ["path", { d: "M3 5a4 4 0 0 0 3.55 3.97", key: "1d7oge" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "m8 2 1.88 1.88", key: "fmnt4t" }],
  ["path", { d: "M9 7.13V6a3 3 0 1 1 6 0v1.13", key: "1vgav8" }]
];
var BugPlay = createLucideIcon("bug-play", __iconNode237);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bug.js
var __iconNode238 = [
  ["path", { d: "M12 20v-9", key: "1qisl0" }],
  ["path", { d: "M14 7a4 4 0 0 1 4 4v3a6 6 0 0 1-12 0v-3a4 4 0 0 1 4-4z", key: "uouzyp" }],
  ["path", { d: "M14.12 3.88 16 2", key: "qol33r" }],
  ["path", { d: "M21 21a4 4 0 0 0-3.81-4", key: "1b0z45" }],
  ["path", { d: "M21 5a4 4 0 0 1-3.55 3.97", key: "5cxbf6" }],
  ["path", { d: "M22 13h-4", key: "1jl80f" }],
  ["path", { d: "M3 21a4 4 0 0 1 3.81-4", key: "1fjd4g" }],
  ["path", { d: "M3 5a4 4 0 0 0 3.55 3.97", key: "1d7oge" }],
  ["path", { d: "M6 13H2", key: "82j7cp" }],
  ["path", { d: "m8 2 1.88 1.88", key: "fmnt4t" }],
  ["path", { d: "M9 7.13V6a3 3 0 1 1 6 0v1.13", key: "1vgav8" }]
];
var Bug = createLucideIcon("bug", __iconNode238);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/building-2.js
var __iconNode239 = [
  ["path", { d: "M10 12h4", key: "a56b0p" }],
  ["path", { d: "M10 8h4", key: "1sr2af" }],
  ["path", { d: "M14 21v-3a2 2 0 0 0-4 0v3", key: "1rgiei" }],
  [
    "path",
    {
      d: "M6 10H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-2",
      key: "secmi2"
    }
  ],
  ["path", { d: "M6 21V5a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v16", key: "16ra0t" }]
];
var Building2 = createLucideIcon("building-2", __iconNode239);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/building.js
var __iconNode240 = [
  ["path", { d: "M12 10h.01", key: "1nrarc" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M12 6h.01", key: "1vi96p" }],
  ["path", { d: "M16 10h.01", key: "1m94wz" }],
  ["path", { d: "M16 14h.01", key: "1gbofw" }],
  ["path", { d: "M16 6h.01", key: "1x0f13" }],
  ["path", { d: "M8 10h.01", key: "19clt8" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }],
  ["path", { d: "M8 6h.01", key: "1dz90k" }],
  ["path", { d: "M9 22v-3a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3", key: "cabbwy" }],
  ["rect", { x: "4", y: "2", width: "16", height: "20", rx: "2", key: "1uxh74" }]
];
var Building = createLucideIcon("building", __iconNode240);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bus.js
var __iconNode241 = [
  ["path", { d: "M8 6v6", key: "18i7km" }],
  ["path", { d: "M15 6v6", key: "1sg6z9" }],
  ["path", { d: "M2 12h19.6", key: "de5uta" }],
  [
    "path",
    {
      d: "M18 18h3s.5-1.7.8-2.8c.1-.4.2-.8.2-1.2 0-.4-.1-.8-.2-1.2l-1.4-5C20.1 6.8 19.1 6 18 6H4a2 2 0 0 0-2 2v10h3",
      key: "1wwztk"
    }
  ],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }],
  ["path", { d: "M9 18h5", key: "lrx6i" }],
  ["circle", { cx: "16", cy: "18", r: "2", key: "1v4tcr" }]
];
var Bus = createLucideIcon("bus", __iconNode241);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/bus-front.js
var __iconNode242 = [
  ["path", { d: "M4 6 2 7", key: "1mqr15" }],
  ["path", { d: "M10 6h4", key: "1itunk" }],
  ["path", { d: "m22 7-2-1", key: "1umjhc" }],
  ["rect", { width: "16", height: "16", x: "4", y: "3", rx: "2", key: "1wxw4b" }],
  ["path", { d: "M4 11h16", key: "mpoxn0" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["path", { d: "M18 21v-2", key: "sqyl04" }]
];
var BusFront = createLucideIcon("bus-front", __iconNode242);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cable-car.js
var __iconNode243 = [
  ["path", { d: "M10 3h.01", key: "lbucoy" }],
  ["path", { d: "M14 2h.01", key: "1k8aa1" }],
  ["path", { d: "m2 9 20-5", key: "1kz0j5" }],
  ["path", { d: "M12 12V6.5", key: "1vbrij" }],
  ["rect", { width: "16", height: "10", x: "4", y: "12", rx: "3", key: "if91er" }],
  ["path", { d: "M9 12v5", key: "3anwtq" }],
  ["path", { d: "M15 12v5", key: "5xh3zn" }],
  ["path", { d: "M4 17h16", key: "g4d7ey" }]
];
var CableCar = createLucideIcon("cable-car", __iconNode243);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cake-slice.js
var __iconNode244 = [
  ["path", { d: "M16 13H3", key: "1wpj08" }],
  ["path", { d: "M16 17H3", key: "3lvfcd" }],
  [
    "path",
    {
      d: "m7.2 7.9-3.388 2.5A2 2 0 0 0 3 12.01V20a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1v-8.654c0-2-2.44-6.026-6.44-8.026a1 1 0 0 0-1.082.057L10.4 5.6",
      key: "1gmhf7"
    }
  ],
  ["circle", { cx: "9", cy: "7", r: "2", key: "1305pl" }]
];
var CakeSlice = createLucideIcon("cake-slice", __iconNode244);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cable.js
var __iconNode245 = [
  [
    "path",
    { d: "M17 19a1 1 0 0 1-1-1v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a1 1 0 0 1-1 1z", key: "trhst0" }
  ],
  ["path", { d: "M17 21v-2", key: "ds4u3f" }],
  ["path", { d: "M19 14V6.5a1 1 0 0 0-7 0v11a1 1 0 0 1-7 0V10", key: "1mo9zo" }],
  ["path", { d: "M21 21v-2", key: "eo0ou" }],
  ["path", { d: "M3 5V3", key: "1k5hjh" }],
  [
    "path",
    { d: "M4 10a2 2 0 0 1-2-2V6a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2z", key: "1dd30t" }
  ],
  ["path", { d: "M7 5V3", key: "1t1388" }]
];
var Cable = createLucideIcon("cable", __iconNode245);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cake.js
var __iconNode246 = [
  ["path", { d: "M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8", key: "1w3rig" }],
  ["path", { d: "M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1", key: "n2jgmb" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }],
  ["path", { d: "M7 8v3", key: "1qtyvj" }],
  ["path", { d: "M12 8v3", key: "hwp4zt" }],
  ["path", { d: "M17 8v3", key: "1i6e5u" }],
  ["path", { d: "M7 4h.01", key: "1bh4kh" }],
  ["path", { d: "M12 4h.01", key: "1ujb9j" }],
  ["path", { d: "M17 4h.01", key: "1upcoc" }]
];
var Cake = createLucideIcon("cake", __iconNode246);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calculator.js
var __iconNode247 = [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["line", { x1: "8", x2: "16", y1: "6", y2: "6", key: "x4nwl0" }],
  ["line", { x1: "16", x2: "16", y1: "14", y2: "18", key: "wjye3r" }],
  ["path", { d: "M16 10h.01", key: "1m94wz" }],
  ["path", { d: "M12 10h.01", key: "1nrarc" }],
  ["path", { d: "M8 10h.01", key: "19clt8" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }]
];
var Calculator = createLucideIcon("calculator", __iconNode247);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-1.js
var __iconNode248 = [
  ["path", { d: "M11 14h1v4", key: "fy54vd" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
];
var Calendar1 = createLucideIcon("calendar-1", __iconNode248);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-arrow-down.js
var __iconNode249 = [
  ["path", { d: "m14 18 4 4 4-4", key: "1waygx" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M18 14v8", key: "irew45" }],
  [
    "path",
    { d: "M21 11.354V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.343", key: "bse4f3" }
  ],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarArrowDown = createLucideIcon("calendar-arrow-down", __iconNode249);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-arrow-up.js
var __iconNode250 = [
  ["path", { d: "m14 18 4-4 4 4", key: "ftkppy" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M18 22v-8", key: "su0gjh" }],
  ["path", { d: "M21 11.343V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9", key: "1exg90" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarArrowUp = createLucideIcon("calendar-arrow-up", __iconNode250);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-check-2.js
var __iconNode251 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 14V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "bce9hv" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m16 20 2 2 4-4", key: "13tcca" }]
];
var CalendarCheck2 = createLucideIcon("calendar-check-2", __iconNode251);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-check.js
var __iconNode252 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m9 16 2 2 4-4", key: "19s6y9" }]
];
var CalendarCheck = createLucideIcon("calendar-check", __iconNode252);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-clock.js
var __iconNode253 = [
  ["path", { d: "M16 14v2.2l1.6 1", key: "fo4ql5" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 7.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5", key: "1osxxc" }],
  ["path", { d: "M3 10h5", key: "r794hk" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }]
];
var CalendarClock = createLucideIcon("calendar-clock", __iconNode253);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-cog.js
var __iconNode254 = [
  ["path", { d: "m15.228 16.852-.923-.383", key: "npixar" }],
  ["path", { d: "m15.228 19.148-.923.383", key: "51cr3n" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "m16.47 14.305.382.923", key: "obybxd" }],
  ["path", { d: "m16.852 20.772-.383.924", key: "dpfhf9" }],
  ["path", { d: "m19.148 15.228.383-.923", key: "1reyyz" }],
  ["path", { d: "m19.53 21.696-.382-.924", key: "1goivc" }],
  ["path", { d: "m20.772 16.852.924-.383", key: "htqkph" }],
  ["path", { d: "m20.772 19.148.924.383", key: "9w9pjp" }],
  ["path", { d: "M21 10.592V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "1pvbig" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var CalendarCog = createLucideIcon("calendar-cog", __iconNode254);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-days.js
var __iconNode255 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 14h.01", key: "6423bh" }],
  ["path", { d: "M12 14h.01", key: "1etili" }],
  ["path", { d: "M16 14h.01", key: "1gbofw" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M16 18h.01", key: "kzsmim" }]
];
var CalendarDays = createLucideIcon("calendar-days", __iconNode255);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-heart.js
var __iconNode256 = [
  [
    "path",
    { d: "M12.127 22H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.125", key: "vxdnp4" }
  ],
  [
    "path",
    {
      d: "M14.62 18.8A2.25 2.25 0 1 1 18 15.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z",
      key: "15cy7q"
    }
  ],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarHeart = createLucideIcon("calendar-heart", __iconNode256);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-fold.js
var __iconNode257 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 17V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11Z", key: "kg77oy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M15 22v-4a2 2 0 0 1 2-2h4", key: "1gnbqr" }]
];
var CalendarFold = createLucideIcon("calendar-fold", __iconNode257);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-minus-2.js
var __iconNode258 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M10 16h4", key: "17e571" }]
];
var CalendarMinus2 = createLucideIcon("calendar-minus-2", __iconNode258);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-minus.js
var __iconNode259 = [
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 15V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5", key: "1scpom" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarMinus = createLucideIcon("calendar-minus", __iconNode259);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-off.js
var __iconNode260 = [
  ["path", { d: "M4.2 4.2A2 2 0 0 0 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 1.82-1.18", key: "16swn3" }],
  ["path", { d: "M21 15.5V6a2 2 0 0 0-2-2H9.5", key: "yhw86o" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h7", key: "1wap6i" }],
  ["path", { d: "M21 10h-5.5", key: "quycpq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var CalendarOff = createLucideIcon("calendar-off", __iconNode260);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-plus-2.js
var __iconNode261 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M10 16h4", key: "17e571" }],
  ["path", { d: "M12 14v4", key: "1thi36" }]
];
var CalendarPlus2 = createLucideIcon("calendar-plus-2", __iconNode261);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-plus.js
var __iconNode262 = [
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M21 12.598V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5", key: "1glfrc" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarPlus = createLucideIcon("calendar-plus", __iconNode262);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-range.js
var __iconNode263 = [
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M17 14h-6", key: "bkmgh3" }],
  ["path", { d: "M13 18H7", key: "bb0bb7" }],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 18h.01", key: "1bdyru" }]
];
var CalendarRange = createLucideIcon("calendar-range", __iconNode263);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-search.js
var __iconNode264 = [
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 11.75V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7.25", key: "1jrsq6" }],
  ["path", { d: "m22 22-1.875-1.875", key: "13zax7" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var CalendarSearch = createLucideIcon("calendar-search", __iconNode264);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-sync.js
var __iconNode265 = [
  ["path", { d: "M11 10v4h4", key: "172dkj" }],
  ["path", { d: "m11 14 1.535-1.605a5 5 0 0 1 8 1.5", key: "vu0qm5" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "m21 18-1.535 1.605a5 5 0 0 1-8-1.5", key: "1qgeyt" }],
  ["path", { d: "M21 22v-4h-4", key: "hrummi" }],
  ["path", { d: "M21 8.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h4.3", key: "mctw84" }],
  ["path", { d: "M3 10h4", key: "1el30a" }],
  ["path", { d: "M8 2v4", key: "1cmpym" }]
];
var CalendarSync = createLucideIcon("calendar-sync", __iconNode265);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-x-2.js
var __iconNode266 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M21 13V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8", key: "3spt84" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m17 22 5-5", key: "1k6ppv" }],
  ["path", { d: "m17 17 5 5", key: "p7ous7" }]
];
var CalendarX2 = createLucideIcon("calendar-x-2", __iconNode266);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar-x.js
var __iconNode267 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }],
  ["path", { d: "m14 14-4 4", key: "rymu2i" }],
  ["path", { d: "m10 14 4 4", key: "3sz06r" }]
];
var CalendarX = createLucideIcon("calendar-x", __iconNode267);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/calendar.js
var __iconNode268 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }]
];
var Calendar = createLucideIcon("calendar", __iconNode268);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/camera.js
var __iconNode269 = [
  [
    "path",
    {
      d: "M13.997 4a2 2 0 0 1 1.76 1.05l.486.9A2 2 0 0 0 18.003 7H20a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1.997a2 2 0 0 0 1.759-1.048l.489-.904A2 2 0 0 1 10.004 4z",
      key: "18u6gg"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "3", key: "1vg3eu" }]
];
var Camera = createLucideIcon("camera", __iconNode269);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/camera-off.js
var __iconNode270 = [
  ["path", { d: "M14.564 14.558a3 3 0 1 1-4.122-4.121", key: "1rnrzw" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    { d: "M20 20H4a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1.997a2 2 0 0 0 .819-.175", key: "1x3arw" }
  ],
  [
    "path",
    {
      d: "M9.695 4.024A2 2 0 0 1 10.004 4h3.993a2 2 0 0 1 1.76 1.05l.486.9A2 2 0 0 0 18.003 7H20a2 2 0 0 1 2 2v7.344",
      key: "1i84u0"
    }
  ]
];
var CameraOff = createLucideIcon("camera-off", __iconNode270);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/candy-cane.js
var __iconNode271 = [
  [
    "path",
    {
      d: "M5.7 21a2 2 0 0 1-3.5-2l8.6-14a6 6 0 0 1 10.4 6 2 2 0 1 1-3.464-2 2 2 0 1 0-3.464-2Z",
      key: "isaq8g"
    }
  ],
  ["path", { d: "M17.75 7 15 2.1", key: "12x7e8" }],
  ["path", { d: "M10.9 4.8 13 9", key: "100a87" }],
  ["path", { d: "m7.9 9.7 2 4.4", key: "ntfhaj" }],
  ["path", { d: "M4.9 14.7 7 18.9", key: "1x43jy" }]
];
var CandyCane = createLucideIcon("candy-cane", __iconNode271);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/candy-off.js
var __iconNode272 = [
  ["path", { d: "M10 10v7.9", key: "m8g9tt" }],
  ["path", { d: "M11.802 6.145a5 5 0 0 1 6.053 6.053", key: "dn87i3" }],
  ["path", { d: "M14 6.1v2.243", key: "1kzysn" }],
  [
    "path",
    { d: "m15.5 15.571-.964.964a5 5 0 0 1-7.071 0 5 5 0 0 1 0-7.07l.964-.965", key: "3sxy18" }
  ],
  [
    "path",
    {
      d: "M16 7V3a1 1 0 0 1 1.707-.707 2.5 2.5 0 0 0 2.152.717 1 1 0 0 1 1.131 1.131 2.5 2.5 0 0 0 .717 2.152A1 1 0 0 1 21 8h-4",
      key: "gpb6xx"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M8 17v4a1 1 0 0 1-1.707.707 2.5 2.5 0 0 0-2.152-.717 1 1 0 0 1-1.131-1.131 2.5 2.5 0 0 0-.717-2.152A1 1 0 0 1 3 16h4",
      key: "qexcha"
    }
  ]
];
var CandyOff = createLucideIcon("candy-off", __iconNode272);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cannabis.js
var __iconNode273 = [
  ["path", { d: "M12 22v-4", key: "1utk9m" }],
  [
    "path",
    {
      d: "M7 12c-1.5 0-4.5 1.5-5 3 3.5 1.5 6 1 6 1-1.5 1.5-2 3.5-2 5 2.5 0 4.5-1.5 6-3 1.5 1.5 3.5 3 6 3 0-1.5-.5-3.5-2-5 0 0 2.5.5 6-1-.5-1.5-3.5-3-5-3 1.5-1 4-4 4-6-2.5 0-5.5 1.5-7 3 0-2.5-.5-5-2-7-1.5 2-2 4.5-2 7-1.5-1.5-4.5-3-7-3 0 2 2.5 5 4 6",
      key: "1mezod"
    }
  ]
];
var Cannabis = createLucideIcon("cannabis", __iconNode273);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/candy.js
var __iconNode274 = [
  ["path", { d: "M10 7v10.9", key: "1gynux" }],
  ["path", { d: "M14 6.1V17", key: "116kdf" }],
  [
    "path",
    {
      d: "M16 7V3a1 1 0 0 1 1.707-.707 2.5 2.5 0 0 0 2.152.717 1 1 0 0 1 1.131 1.131 2.5 2.5 0 0 0 .717 2.152A1 1 0 0 1 21 8h-4",
      key: "gpb6xx"
    }
  ],
  [
    "path",
    {
      d: "M16.536 7.465a5 5 0 0 0-7.072 0l-2 2a5 5 0 0 0 0 7.07 5 5 0 0 0 7.072 0l2-2a5 5 0 0 0 0-7.07",
      key: "1tsln4"
    }
  ],
  [
    "path",
    {
      d: "M8 17v4a1 1 0 0 1-1.707.707 2.5 2.5 0 0 0-2.152-.717 1 1 0 0 1-1.131-1.131 2.5 2.5 0 0 0-.717-2.152A1 1 0 0 1 3 16h4",
      key: "qexcha"
    }
  ]
];
var Candy = createLucideIcon("candy", __iconNode274);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/captions-off.js
var __iconNode275 = [
  ["path", { d: "M10.5 5H19a2 2 0 0 1 2 2v8.5", key: "jqtk4d" }],
  ["path", { d: "M17 11h-.5", key: "1961ue" }],
  ["path", { d: "M19 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2", key: "1keqsi" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M7 11h4", key: "1o1z6v" }],
  ["path", { d: "M7 15h2.5", key: "1ina1g" }]
];
var CaptionsOff = createLucideIcon("captions-off", __iconNode275);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/captions.js
var __iconNode276 = [
  ["rect", { width: "18", height: "14", x: "3", y: "5", rx: "2", ry: "2", key: "12ruh7" }],
  ["path", { d: "M7 15h4M15 15h2M7 11h2M13 11h4", key: "1ueiar" }]
];
var Captions = createLucideIcon("captions", __iconNode276);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/car-taxi-front.js
var __iconNode277 = [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  [
    "path",
    { d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8", key: "1imjwt" }
  ],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  ["rect", { width: "18", height: "8", x: "3", y: "10", rx: "2", key: "a7itu8" }],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
];
var CarTaxiFront = createLucideIcon("car-taxi-front", __iconNode277);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/car-front.js
var __iconNode278 = [
  [
    "path",
    { d: "m21 8-2 2-1.5-3.7A2 2 0 0 0 15.646 5H8.4a2 2 0 0 0-1.903 1.257L5 10 3 8", key: "1imjwt" }
  ],
  ["path", { d: "M7 14h.01", key: "1qa3f1" }],
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  ["rect", { width: "18", height: "8", x: "3", y: "10", rx: "2", key: "a7itu8" }],
  ["path", { d: "M5 18v2", key: "ppbyun" }],
  ["path", { d: "M19 18v2", key: "gy7782" }]
];
var CarFront = createLucideIcon("car-front", __iconNode278);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/car.js
var __iconNode279 = [
  [
    "path",
    {
      d: "M19 17h2c.6 0 1-.4 1-1v-3c0-.9-.7-1.7-1.5-1.9C18.7 10.6 16 10 16 10s-1.3-1.4-2.2-2.3c-.5-.4-1.1-.7-1.8-.7H5c-.6 0-1.1.4-1.4.9l-1.4 2.9A3.7 3.7 0 0 0 2 12v4c0 .6.4 1 1 1h2",
      key: "5owen"
    }
  ],
  ["circle", { cx: "7", cy: "17", r: "2", key: "u2ysq9" }],
  ["path", { d: "M9 17h6", key: "r8uit2" }],
  ["circle", { cx: "17", cy: "17", r: "2", key: "axvx0g" }]
];
var Car = createLucideIcon("car", __iconNode279);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/caravan.js
var __iconNode280 = [
  ["path", { d: "M18 19V9a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v8a2 2 0 0 0 2 2h2", key: "19jm3t" }],
  ["path", { d: "M2 9h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2", key: "13hakp" }],
  ["path", { d: "M22 17v1a1 1 0 0 1-1 1H10v-9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v9", key: "1crci8" }],
  ["circle", { cx: "8", cy: "19", r: "2", key: "t8fc5s" }]
];
var Caravan = createLucideIcon("caravan", __iconNode280);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/carrot.js
var __iconNode281 = [
  [
    "path",
    {
      d: "M2.27 21.7s9.87-3.5 12.73-6.36a4.5 4.5 0 0 0-6.36-6.37C5.77 11.84 2.27 21.7 2.27 21.7zM8.64 14l-2.05-2.04M15.34 15l-2.46-2.46",
      key: "rfqxbe"
    }
  ],
  ["path", { d: "M22 9s-1.33-2-3.5-2C16.86 7 15 9 15 9s1.33 2 3.5 2S22 9 22 9z", key: "6b25w4" }],
  ["path", { d: "M15 2s-2 1.33-2 3.5S15 9 15 9s2-1.84 2-3.5C17 3.33 15 2 15 2z", key: "fn65lo" }]
];
var Carrot = createLucideIcon("carrot", __iconNode281);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/card-sim.js
var __iconNode282 = [
  ["path", { d: "M12 14v4", key: "1thi36" }],
  [
    "path",
    {
      d: "M14.172 2a2 2 0 0 1 1.414.586l3.828 3.828A2 2 0 0 1 20 7.828V20a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z",
      key: "1o66bk"
    }
  ],
  ["path", { d: "M8 14h8", key: "1fgep2" }],
  ["rect", { x: "8", y: "10", width: "8", height: "8", rx: "1", key: "1aonk6" }]
];
var CardSim = createLucideIcon("card-sim", __iconNode282);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/case-lower.js
var __iconNode283 = [
  ["path", { d: "M10 9v7", key: "ylp826" }],
  ["path", { d: "M14 6v10", key: "1jy4vg" }],
  ["circle", { cx: "17.5", cy: "12.5", r: "3.5", key: "1a9481" }],
  ["circle", { cx: "6.5", cy: "12.5", r: "3.5", key: "2jlv1r" }]
];
var CaseLower = createLucideIcon("case-lower", __iconNode283);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/case-sensitive.js
var __iconNode284 = [
  ["path", { d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16", key: "d5nyq2" }],
  ["path", { d: "M22 9v7", key: "pvm9v3" }],
  ["path", { d: "M3.304 13h6.392", key: "1q3zxz" }],
  ["circle", { cx: "18.5", cy: "12.5", r: "3.5", key: "z97x68" }]
];
var CaseSensitive = createLucideIcon("case-sensitive", __iconNode284);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/case-upper.js
var __iconNode285 = [
  [
    "path",
    {
      d: "M15 11h4.5a1 1 0 0 1 0 5h-4a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h3a1 1 0 0 1 0 5",
      key: "nxs35"
    }
  ],
  ["path", { d: "m2 16 4.039-9.69a.5.5 0 0 1 .923 0L11 16", key: "d5nyq2" }],
  ["path", { d: "M3.304 13h6.392", key: "1q3zxz" }]
];
var CaseUpper = createLucideIcon("case-upper", __iconNode285);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cassette-tape.js
var __iconNode286 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["circle", { cx: "8", cy: "10", r: "2", key: "1xl4ub" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["circle", { cx: "16", cy: "10", r: "2", key: "r14t7q" }],
  ["path", { d: "m6 20 .7-2.9A1.4 1.4 0 0 1 8.1 16h7.8a1.4 1.4 0 0 1 1.4 1l.7 3", key: "l01ucn" }]
];
var CassetteTape = createLucideIcon("cassette-tape", __iconNode286);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cast.js
var __iconNode287 = [
  ["path", { d: "M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6", key: "3zrzxg" }],
  ["path", { d: "M2 12a9 9 0 0 1 8 8", key: "g6cvee" }],
  ["path", { d: "M2 16a5 5 0 0 1 4 4", key: "1y1dii" }],
  ["line", { x1: "2", x2: "2.01", y1: "20", y2: "20", key: "xu2jvo" }]
];
var Cast = createLucideIcon("cast", __iconNode287);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/castle.js
var __iconNode288 = [
  ["path", { d: "M10 5V3", key: "1y54qe" }],
  ["path", { d: "M14 5V3", key: "m6isi" }],
  ["path", { d: "M15 21v-3a3 3 0 0 0-6 0v3", key: "lbp5hj" }],
  ["path", { d: "M18 3v8", key: "2ollhf" }],
  ["path", { d: "M18 5H6", key: "98imr9" }],
  ["path", { d: "M22 11H2", key: "1lmjae" }],
  ["path", { d: "M22 9v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9", key: "1rly83" }],
  ["path", { d: "M6 3v8", key: "csox7g" }]
];
var Castle = createLucideIcon("castle", __iconNode288);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cat.js
var __iconNode289 = [
  [
    "path",
    {
      d: "M12 5c.67 0 1.35.09 2 .26 1.78-2 5.03-2.84 6.42-2.26 1.4.58-.42 7-.42 7 .57 1.07 1 2.24 1 3.44C21 17.9 16.97 21 12 21s-9-3-9-7.56c0-1.25.5-2.4 1-3.44 0 0-1.89-6.42-.5-7 1.39-.58 4.72.23 6.5 2.23A9.04 9.04 0 0 1 12 5Z",
      key: "x6xyqk"
    }
  ],
  ["path", { d: "M8 14v.5", key: "1nzgdb" }],
  ["path", { d: "M16 14v.5", key: "1lajdz" }],
  ["path", { d: "M11.25 16.25h1.5L12 17l-.75-.75Z", key: "12kq1m" }]
];
var Cat = createLucideIcon("cat", __iconNode289);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cctv.js
var __iconNode290 = [
  [
    "path",
    {
      d: "M16.75 12h3.632a1 1 0 0 1 .894 1.447l-2.034 4.069a1 1 0 0 1-1.708.134l-2.124-2.97",
      key: "ir91b5"
    }
  ],
  [
    "path",
    {
      d: "M17.106 9.053a1 1 0 0 1 .447 1.341l-3.106 6.211a1 1 0 0 1-1.342.447L3.61 12.3a2.92 2.92 0 0 1-1.3-3.91L3.69 5.6a2.92 2.92 0 0 1 3.92-1.3z",
      key: "jlp8i1"
    }
  ],
  ["path", { d: "M2 19h3.76a2 2 0 0 0 1.8-1.1L9 15", key: "19bib8" }],
  ["path", { d: "M2 21v-4", key: "l40lih" }],
  ["path", { d: "M7 9h.01", key: "19b3jx" }]
];
var Cctv = createLucideIcon("cctv", __iconNode290);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-area.js
var __iconNode291 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  [
    "path",
    {
      d: "M7 11.207a.5.5 0 0 1 .146-.353l2-2a.5.5 0 0 1 .708 0l3.292 3.292a.5.5 0 0 0 .708 0l4.292-4.292a.5.5 0 0 1 .854.353V16a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1z",
      key: "q0gr47"
    }
  ]
];
var ChartArea = createLucideIcon("chart-area", __iconNode291);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-bar-big.js
var __iconNode292 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "7", y: "13", width: "9", height: "4", rx: "1", key: "1iip1u" }],
  ["rect", { x: "7", y: "5", width: "12", height: "4", rx: "1", key: "1anskk" }]
];
var ChartBarBig = createLucideIcon("chart-bar-big", __iconNode292);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-bar-decreasing.js
var __iconNode293 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 11h8", key: "1feolt" }],
  ["path", { d: "M7 16h3", key: "ur6vzw" }],
  ["path", { d: "M7 6h12", key: "sz5b0d" }]
];
var ChartBarDecreasing = createLucideIcon("chart-bar-decreasing", __iconNode293);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-bar-increasing.js
var __iconNode294 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 11h8", key: "1feolt" }],
  ["path", { d: "M7 16h12", key: "wsnu98" }],
  ["path", { d: "M7 6h3", key: "w9rmul" }]
];
var ChartBarIncreasing = createLucideIcon("chart-bar-increasing", __iconNode294);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-bar-stacked.js
var __iconNode295 = [
  ["path", { d: "M11 13v4", key: "vyy2rb" }],
  ["path", { d: "M15 5v4", key: "1gx88a" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "7", y: "13", width: "9", height: "4", rx: "1", key: "1iip1u" }],
  ["rect", { x: "7", y: "5", width: "12", height: "4", rx: "1", key: "1anskk" }]
];
var ChartBarStacked = createLucideIcon("chart-bar-stacked", __iconNode295);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-bar.js
var __iconNode296 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 16h8", key: "srdodz" }],
  ["path", { d: "M7 11h12", key: "127s9w" }],
  ["path", { d: "M7 6h3", key: "w9rmul" }]
];
var ChartBar = createLucideIcon("chart-bar", __iconNode296);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-candlestick.js
var __iconNode297 = [
  ["path", { d: "M9 5v4", key: "14uxtq" }],
  ["rect", { width: "4", height: "6", x: "7", y: "9", rx: "1", key: "f4fvz0" }],
  ["path", { d: "M9 15v2", key: "r5rk32" }],
  ["path", { d: "M17 3v2", key: "1l2re6" }],
  ["rect", { width: "4", height: "8", x: "15", y: "5", rx: "1", key: "z38je5" }],
  ["path", { d: "M17 13v3", key: "5l0wba" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }]
];
var ChartCandlestick = createLucideIcon("chart-candlestick", __iconNode297);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-column-big.js
var __iconNode298 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "15", y: "5", width: "4", height: "12", rx: "1", key: "q8uenq" }],
  ["rect", { x: "7", y: "8", width: "4", height: "9", rx: "1", key: "sr5ea" }]
];
var ChartColumnBig = createLucideIcon("chart-column-big", __iconNode298);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-column-increasing.js
var __iconNode299 = [
  ["path", { d: "M13 17V9", key: "1fwyjl" }],
  ["path", { d: "M18 17V5", key: "sfb6ij" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 17v-3", key: "17ska0" }]
];
var ChartColumnIncreasing = createLucideIcon("chart-column-increasing", __iconNode299);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-column-decreasing.js
var __iconNode300 = [
  ["path", { d: "M13 17V9", key: "1fwyjl" }],
  ["path", { d: "M18 17v-3", key: "1sqioe" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 17V5", key: "1wzmnc" }]
];
var ChartColumnDecreasing = createLucideIcon("chart-column-decreasing", __iconNode300);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-column-stacked.js
var __iconNode301 = [
  ["path", { d: "M11 13H7", key: "t0o9gq" }],
  ["path", { d: "M19 9h-4", key: "rera1j" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["rect", { x: "15", y: "5", width: "4", height: "12", rx: "1", key: "q8uenq" }],
  ["rect", { x: "7", y: "8", width: "4", height: "9", rx: "1", key: "sr5ea" }]
];
var ChartColumnStacked = createLucideIcon("chart-column-stacked", __iconNode301);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-column.js
var __iconNode302 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M18 17V9", key: "2bz60n" }],
  ["path", { d: "M13 17V5", key: "1frdt8" }],
  ["path", { d: "M8 17v-3", key: "17ska0" }]
];
var ChartColumn = createLucideIcon("chart-column", __iconNode302);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-gantt.js
var __iconNode303 = [
  ["path", { d: "M10 6h8", key: "zvc2xc" }],
  ["path", { d: "M12 16h6", key: "yi5mkt" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M8 11h7", key: "wz2hg0" }]
];
var ChartGantt = createLucideIcon("chart-gantt", __iconNode303);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-line.js
var __iconNode304 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "m19 9-5 5-4-4-3 3", key: "2osh9i" }]
];
var ChartLine = createLucideIcon("chart-line", __iconNode304);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-network.js
var __iconNode305 = [
  ["path", { d: "m13.11 7.664 1.78 2.672", key: "go2gg9" }],
  ["path", { d: "m14.162 12.788-3.324 1.424", key: "11x848" }],
  ["path", { d: "m20 4-6.06 1.515", key: "1wxxh7" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["circle", { cx: "12", cy: "6", r: "2", key: "1jj5th" }],
  ["circle", { cx: "16", cy: "12", r: "2", key: "4ma0v8" }],
  ["circle", { cx: "9", cy: "15", r: "2", key: "lf2ghp" }]
];
var ChartNetwork = createLucideIcon("chart-network", __iconNode305);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-no-axes-column-decreasing.js
var __iconNode306 = [
  ["path", { d: "M5 21V3", key: "clc1r8" }],
  ["path", { d: "M12 21V9", key: "uvy0l4" }],
  ["path", { d: "M19 21v-6", key: "tkawy9" }]
];
var ChartNoAxesColumnDecreasing = createLucideIcon("chart-no-axes-column-decreasing", __iconNode306);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-no-axes-column-increasing.js
var __iconNode307 = [
  ["path", { d: "M5 21v-6", key: "1hz6c0" }],
  ["path", { d: "M12 21V9", key: "uvy0l4" }],
  ["path", { d: "M19 21V3", key: "11j9sm" }]
];
var ChartNoAxesColumnIncreasing = createLucideIcon("chart-no-axes-column-increasing", __iconNode307);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-no-axes-column.js
var __iconNode308 = [
  ["path", { d: "M5 21v-6", key: "1hz6c0" }],
  ["path", { d: "M12 21V3", key: "1lcnhd" }],
  ["path", { d: "M19 21V9", key: "unv183" }]
];
var ChartNoAxesColumn = createLucideIcon("chart-no-axes-column", __iconNode308);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-no-axes-combined.js
var __iconNode309 = [
  ["path", { d: "M12 16v5", key: "zza2cw" }],
  ["path", { d: "M16 14v7", key: "1g90b9" }],
  ["path", { d: "M20 10v11", key: "1iqoj0" }],
  [
    "path",
    { d: "m22 3-8.646 8.646a.5.5 0 0 1-.708 0L9.354 8.354a.5.5 0 0 0-.707 0L2 15", key: "1fw8x9" }
  ],
  ["path", { d: "M4 18v3", key: "1yp0dc" }],
  ["path", { d: "M8 14v7", key: "n3cwzv" }]
];
var ChartNoAxesCombined = createLucideIcon("chart-no-axes-combined", __iconNode309);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-no-axes-gantt.js
var __iconNode310 = [
  ["path", { d: "M6 5h12", key: "fvfigv" }],
  ["path", { d: "M4 12h10", key: "oujl3d" }],
  ["path", { d: "M12 19h8", key: "baeox8" }]
];
var ChartNoAxesGantt = createLucideIcon("chart-no-axes-gantt", __iconNode310);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-pie.js
var __iconNode311 = [
  [
    "path",
    {
      d: "M21 12c.552 0 1.005-.449.95-.998a10 10 0 0 0-8.953-8.951c-.55-.055-.998.398-.998.95v8a1 1 0 0 0 1 1z",
      key: "pzmjnu"
    }
  ],
  ["path", { d: "M21.21 15.89A10 10 0 1 1 8 2.83", key: "k2fpak" }]
];
var ChartPie = createLucideIcon("chart-pie", __iconNode311);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-spline.js
var __iconNode312 = [
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }],
  ["path", { d: "M7 16c.5-2 1.5-7 4-7 2 0 2 3 4 3 2.5 0 4.5-5 5-7", key: "lw07rv" }]
];
var ChartSpline = createLucideIcon("chart-spline", __iconNode312);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chart-scatter.js
var __iconNode313 = [
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }],
  ["circle", { cx: "18.5", cy: "5.5", r: ".5", fill: "currentColor", key: "lysivs" }],
  ["circle", { cx: "11.5", cy: "11.5", r: ".5", fill: "currentColor", key: "byv1b8" }],
  ["circle", { cx: "7.5", cy: "16.5", r: ".5", fill: "currentColor", key: "nkw3mc" }],
  ["circle", { cx: "17.5", cy: "14.5", r: ".5", fill: "currentColor", key: "1gjh6j" }],
  ["path", { d: "M3 3v16a2 2 0 0 0 2 2h16", key: "c24i48" }]
];
var ChartScatter = createLucideIcon("chart-scatter", __iconNode313);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/check-check.js
var __iconNode314 = [
  ["path", { d: "M18 6 7 17l-5-5", key: "116fxf" }],
  ["path", { d: "m22 10-7.5 7.5L13 16", key: "ke71qq" }]
];
var CheckCheck = createLucideIcon("check-check", __iconNode314);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/check.js
var __iconNode315 = [["path", { d: "M20 6 9 17l-5-5", key: "1gmf2c" }]];
var Check2 = createLucideIcon("check", __iconNode315);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chef-hat.js
var __iconNode316 = [
  [
    "path",
    {
      d: "M17 21a1 1 0 0 0 1-1v-5.35c0-.457.316-.844.727-1.041a4 4 0 0 0-2.134-7.589 5 5 0 0 0-9.186 0 4 4 0 0 0-2.134 7.588c.411.198.727.585.727 1.041V20a1 1 0 0 0 1 1Z",
      key: "1qvrer"
    }
  ],
  ["path", { d: "M6 17h12", key: "1jwigz" }]
];
var ChefHat = createLucideIcon("chef-hat", __iconNode316);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/check-line.js
var __iconNode317 = [
  ["path", { d: "M20 4L9 15", key: "1qkx8z" }],
  ["path", { d: "M21 19L3 19", key: "100sma" }],
  ["path", { d: "M9 15L4 10", key: "9zxff7" }]
];
var CheckLine = createLucideIcon("check-line", __iconNode317);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cherry.js
var __iconNode318 = [
  ["path", { d: "M2 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z", key: "cvxqlc" }],
  ["path", { d: "M12 17a5 5 0 0 0 10 0c0-2.76-2.5-5-5-3-2.5-2-5 .24-5 3Z", key: "1ostrc" }],
  ["path", { d: "M7 14c3.22-2.91 4.29-8.75 5-12 1.66 2.38 4.94 9 5 12", key: "hqx58h" }],
  ["path", { d: "M22 9c-4.29 0-7.14-2.33-10-7 5.71 0 10 4.67 10 7Z", key: "eykp1o" }]
];
var Cherry = createLucideIcon("cherry", __iconNode318);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-down.js
var __iconNode319 = [["path", { d: "m6 9 6 6 6-6", key: "qrunsl" }]];
var ChevronDown2 = createLucideIcon("chevron-down", __iconNode319);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-first.js
var __iconNode320 = [
  ["path", { d: "m17 18-6-6 6-6", key: "1yerx2" }],
  ["path", { d: "M7 6v12", key: "1p53r6" }]
];
var ChevronFirst = createLucideIcon("chevron-first", __iconNode320);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-last.js
var __iconNode321 = [
  ["path", { d: "m7 18 6-6-6-6", key: "lwmzdw" }],
  ["path", { d: "M17 6v12", key: "1o0aio" }]
];
var ChevronLast = createLucideIcon("chevron-last", __iconNode321);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-left.js
var __iconNode322 = [["path", { d: "m15 18-6-6 6-6", key: "1wnfg3" }]];
var ChevronLeft = createLucideIcon("chevron-left", __iconNode322);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-right.js
var __iconNode323 = [["path", { d: "m9 18 6-6-6-6", key: "mthhwq" }]];
var ChevronRight2 = createLucideIcon("chevron-right", __iconNode323);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevron-up.js
var __iconNode324 = [["path", { d: "m18 15-6-6-6 6", key: "153udz" }]];
var ChevronUp = createLucideIcon("chevron-up", __iconNode324);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-down-up.js
var __iconNode325 = [
  ["path", { d: "m7 20 5-5 5 5", key: "13a0gw" }],
  ["path", { d: "m7 4 5 5 5-5", key: "1kwcof" }]
];
var ChevronsDownUp = createLucideIcon("chevrons-down-up", __iconNode325);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-down.js
var __iconNode326 = [
  ["path", { d: "m7 6 5 5 5-5", key: "1lc07p" }],
  ["path", { d: "m7 13 5 5 5-5", key: "1d48rs" }]
];
var ChevronsDown = createLucideIcon("chevrons-down", __iconNode326);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-left-right-ellipsis.js
var __iconNode327 = [
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }],
  ["path", { d: "m17 7 5 5-5 5", key: "1xlxn0" }],
  ["path", { d: "m7 7-5 5 5 5", key: "19njba" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }]
];
var ChevronsLeftRightEllipsis = createLucideIcon("chevrons-left-right-ellipsis", __iconNode327);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-left-right.js
var __iconNode328 = [
  ["path", { d: "m9 7-5 5 5 5", key: "j5w590" }],
  ["path", { d: "m15 7 5 5-5 5", key: "1bl6da" }]
];
var ChevronsLeftRight = createLucideIcon("chevrons-left-right", __iconNode328);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-left.js
var __iconNode329 = [
  ["path", { d: "m11 17-5-5 5-5", key: "13zhaf" }],
  ["path", { d: "m18 17-5-5 5-5", key: "h8a8et" }]
];
var ChevronsLeft = createLucideIcon("chevrons-left", __iconNode329);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-right-left.js
var __iconNode330 = [
  ["path", { d: "m20 17-5-5 5-5", key: "30x0n2" }],
  ["path", { d: "m4 17 5-5-5-5", key: "16spf4" }]
];
var ChevronsRightLeft = createLucideIcon("chevrons-right-left", __iconNode330);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-right.js
var __iconNode331 = [
  ["path", { d: "m6 17 5-5-5-5", key: "xnjwq" }],
  ["path", { d: "m13 17 5-5-5-5", key: "17xmmf" }]
];
var ChevronsRight = createLucideIcon("chevrons-right", __iconNode331);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-up-down.js
var __iconNode332 = [
  ["path", { d: "m7 15 5 5 5-5", key: "1hf1tw" }],
  ["path", { d: "m7 9 5-5 5 5", key: "sgt6xg" }]
];
var ChevronsUpDown = createLucideIcon("chevrons-up-down", __iconNode332);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chevrons-up.js
var __iconNode333 = [
  ["path", { d: "m17 11-5-5-5 5", key: "e8nh98" }],
  ["path", { d: "m17 18-5-5-5 5", key: "2avn1x" }]
];
var ChevronsUp = createLucideIcon("chevrons-up", __iconNode333);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/chromium.js
var __iconNode334 = [
  ["path", { d: "M10.88 21.94 15.46 14", key: "xkve6t" }],
  ["path", { d: "M21.17 8H12", key: "19dcdn" }],
  ["path", { d: "M3.95 6.06 8.54 14", key: "g8jz9m" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
];
var Chromium = createLucideIcon("chromium", __iconNode334);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/church.js
var __iconNode335 = [
  ["path", { d: "M10 9h4", key: "u4k05v" }],
  ["path", { d: "M12 7v5", key: "ma6bk" }],
  ["path", { d: "M14 21v-3a2 2 0 0 0-4 0v3", key: "1rgiei" }],
  [
    "path",
    {
      d: "m18 9 3.52 2.147a1 1 0 0 1 .48.854V19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-6.999a1 1 0 0 1 .48-.854L6 9",
      key: "flvdwo"
    }
  ],
  [
    "path",
    {
      d: "M6 21V7a1 1 0 0 1 .376-.782l5-3.999a1 1 0 0 1 1.249.001l5 4A1 1 0 0 1 18 7v14",
      key: "a5i0n2"
    }
  ]
];
var Church = createLucideIcon("church", __iconNode335);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cigarette-off.js
var __iconNode336 = [
  ["path", { d: "M12 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h13", key: "1gdiyg" }],
  ["path", { d: "M18 8c0-2.5-2-2.5-2-5", key: "1il607" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M21 12a1 1 0 0 1 1 1v2a1 1 0 0 1-.5.866", key: "166zjj" }],
  ["path", { d: "M22 8c0-2.5-2-2.5-2-5", key: "1gah44" }],
  ["path", { d: "M7 12v4", key: "jqww69" }]
];
var CigaretteOff = createLucideIcon("cigarette-off", __iconNode336);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cigarette.js
var __iconNode337 = [
  ["path", { d: "M17 12H3a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h14", key: "1mb5g1" }],
  ["path", { d: "M18 8c0-2.5-2-2.5-2-5", key: "1il607" }],
  ["path", { d: "M21 16a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1", key: "1yl5r7" }],
  ["path", { d: "M22 8c0-2.5-2-2.5-2-5", key: "1gah44" }],
  ["path", { d: "M7 12v4", key: "jqww69" }]
];
var Cigarette = createLucideIcon("cigarette", __iconNode337);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-alert.js
var __iconNode338 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "12", key: "1pkeuh" }],
  ["line", { x1: "12", x2: "12.01", y1: "16", y2: "16", key: "4dfq90" }]
];
var CircleAlert = createLucideIcon("circle-alert", __iconNode338);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-down.js
var __iconNode339 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8 12 4 4 4-4", key: "k98ssh" }]
];
var CircleArrowDown = createLucideIcon("circle-arrow-down", __iconNode339);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-left.js
var __iconNode340 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m12 8-4 4 4 4", key: "15vm53" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }]
];
var CircleArrowLeft = createLucideIcon("circle-arrow-left", __iconNode340);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-out-down-left.js
var __iconNode341 = [
  ["path", { d: "M2 12a10 10 0 1 1 10 10", key: "1yn6ov" }],
  ["path", { d: "m2 22 10-10", key: "28ilpk" }],
  ["path", { d: "M8 22H2v-6", key: "sulq54" }]
];
var CircleArrowOutDownLeft = createLucideIcon("circle-arrow-out-down-left", __iconNode341);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-out-down-right.js
var __iconNode342 = [
  ["path", { d: "M12 22a10 10 0 1 1 10-10", key: "130bv5" }],
  ["path", { d: "M22 22 12 12", key: "131aw7" }],
  ["path", { d: "M22 16v6h-6", key: "1gvm70" }]
];
var CircleArrowOutDownRight = createLucideIcon("circle-arrow-out-down-right", __iconNode342);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-out-up-left.js
var __iconNode343 = [
  ["path", { d: "M2 8V2h6", key: "hiwtdz" }],
  ["path", { d: "m2 2 10 10", key: "1oh8rs" }],
  ["path", { d: "M12 2A10 10 0 1 1 2 12", key: "rrk4fa" }]
];
var CircleArrowOutUpLeft = createLucideIcon("circle-arrow-out-up-left", __iconNode343);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-out-up-right.js
var __iconNode344 = [
  ["path", { d: "M22 12A10 10 0 1 1 12 2", key: "1fm58d" }],
  ["path", { d: "M22 2 12 12", key: "yg2myt" }],
  ["path", { d: "M16 2h6v6", key: "zan5cs" }]
];
var CircleArrowOutUpRight = createLucideIcon("circle-arrow-out-up-right", __iconNode344);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-right.js
var __iconNode345 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m12 16 4-4-4-4", key: "1i9zcv" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var CircleArrowRight = createLucideIcon("circle-arrow-right", __iconNode345);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-arrow-up.js
var __iconNode346 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }]
];
var CircleArrowUp = createLucideIcon("circle-arrow-up", __iconNode346);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-check.js
var __iconNode347 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
];
var CircleCheck = createLucideIcon("circle-check", __iconNode347);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-check-big.js
var __iconNode348 = [
  ["path", { d: "M21.801 10A10 10 0 1 1 17 3.335", key: "yps3ct" }],
  ["path", { d: "m9 11 3 3L22 4", key: "1pflzl" }]
];
var CircleCheckBig = createLucideIcon("circle-check-big", __iconNode348);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-chevron-down.js
var __iconNode349 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m16 10-4 4-4-4", key: "894hmk" }]
];
var CircleChevronDown = createLucideIcon("circle-chevron-down", __iconNode349);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-chevron-left.js
var __iconNode350 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m14 16-4-4 4-4", key: "ojs7w8" }]
];
var CircleChevronLeft = createLucideIcon("circle-chevron-left", __iconNode350);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-chevron-right.js
var __iconNode351 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m10 8 4 4-4 4", key: "1wy4r4" }]
];
var CircleChevronRight = createLucideIcon("circle-chevron-right", __iconNode351);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-chevron-up.js
var __iconNode352 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m8 14 4-4 4 4", key: "fy2ptz" }]
];
var CircleChevronUp = createLucideIcon("circle-chevron-up", __iconNode352);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-dashed.js
var __iconNode353 = [
  ["path", { d: "M10.1 2.182a10 10 0 0 1 3.8 0", key: "5ilxe3" }],
  ["path", { d: "M13.9 21.818a10 10 0 0 1-3.8 0", key: "11zvb9" }],
  ["path", { d: "M17.609 3.721a10 10 0 0 1 2.69 2.7", key: "1iw5b2" }],
  ["path", { d: "M2.182 13.9a10 10 0 0 1 0-3.8", key: "c0bmvh" }],
  ["path", { d: "M20.279 17.609a10 10 0 0 1-2.7 2.69", key: "1ruxm7" }],
  ["path", { d: "M21.818 10.1a10 10 0 0 1 0 3.8", key: "qkgqxc" }],
  ["path", { d: "M3.721 6.391a10 10 0 0 1 2.7-2.69", key: "1mcia2" }],
  ["path", { d: "M6.391 20.279a10 10 0 0 1-2.69-2.7", key: "1fvljs" }]
];
var CircleDashed = createLucideIcon("circle-dashed", __iconNode353);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-divide.js
var __iconNode354 = [
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "16", key: "aqc6ln" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "8", key: "1mkcni" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CircleDivide = createLucideIcon("circle-divide", __iconNode354);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-dollar-sign.js
var __iconNode355 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }]
];
var CircleDollarSign = createLucideIcon("circle-dollar-sign", __iconNode355);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-dot-dashed.js
var __iconNode356 = [
  ["path", { d: "M10.1 2.18a9.93 9.93 0 0 1 3.8 0", key: "1qdqn0" }],
  ["path", { d: "M17.6 3.71a9.95 9.95 0 0 1 2.69 2.7", key: "1bq7p6" }],
  ["path", { d: "M21.82 10.1a9.93 9.93 0 0 1 0 3.8", key: "1rlaqf" }],
  ["path", { d: "M20.29 17.6a9.95 9.95 0 0 1-2.7 2.69", key: "1xk03u" }],
  ["path", { d: "M13.9 21.82a9.94 9.94 0 0 1-3.8 0", key: "l7re25" }],
  ["path", { d: "M6.4 20.29a9.95 9.95 0 0 1-2.69-2.7", key: "1v18p6" }],
  ["path", { d: "M2.18 13.9a9.93 9.93 0 0 1 0-3.8", key: "xdo6bj" }],
  ["path", { d: "M3.71 6.4a9.95 9.95 0 0 1 2.7-2.69", key: "1jjmaz" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
];
var CircleDotDashed = createLucideIcon("circle-dot-dashed", __iconNode356);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-dot.js
var __iconNode357 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
];
var CircleDot = createLucideIcon("circle-dot", __iconNode357);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-ellipsis.js
var __iconNode358 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M17 12h.01", key: "1m0b6t" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M7 12h.01", key: "eqddd0" }]
];
var CircleEllipsis = createLucideIcon("circle-ellipsis", __iconNode358);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-equal.js
var __iconNode359 = [
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M7 14h10", key: "1mhdw3" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CircleEqual = createLucideIcon("circle-equal", __iconNode359);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-fading-arrow-up.js
var __iconNode360 = [
  ["path", { d: "M12 2a10 10 0 0 1 7.38 16.75", key: "175t95" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }],
  ["path", { d: "M2.5 8.875a10 10 0 0 0-.5 3", key: "1vce0s" }],
  ["path", { d: "M2.83 16a10 10 0 0 0 2.43 3.4", key: "o3fkw4" }],
  ["path", { d: "M4.636 5.235a10 10 0 0 1 .891-.857", key: "1szpfk" }],
  ["path", { d: "M8.644 21.42a10 10 0 0 0 7.631-.38", key: "9yhvd4" }]
];
var CircleFadingArrowUp = createLucideIcon("circle-fading-arrow-up", __iconNode360);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-fading-plus.js
var __iconNode361 = [
  ["path", { d: "M12 2a10 10 0 0 1 7.38 16.75", key: "175t95" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }],
  ["path", { d: "M2.5 8.875a10 10 0 0 0-.5 3", key: "1vce0s" }],
  ["path", { d: "M2.83 16a10 10 0 0 0 2.43 3.4", key: "o3fkw4" }],
  ["path", { d: "M4.636 5.235a10 10 0 0 1 .891-.857", key: "1szpfk" }],
  ["path", { d: "M8.644 21.42a10 10 0 0 0 7.631-.38", key: "9yhvd4" }]
];
var CircleFadingPlus = createLucideIcon("circle-fading-plus", __iconNode361);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-gauge.js
var __iconNode362 = [
  ["path", { d: "M15.6 2.7a10 10 0 1 0 5.7 5.7", key: "1e0p6d" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M13.4 10.6 19 5", key: "1kr7tw" }]
];
var CircleGauge = createLucideIcon("circle-gauge", __iconNode362);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-minus.js
var __iconNode363 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var CircleMinus = createLucideIcon("circle-minus", __iconNode363);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-off.js
var __iconNode364 = [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.35 2.69A10 10 0 0 1 21.3 15.65", key: "1pfsoa" }],
  ["path", { d: "M19.08 19.08A10 10 0 1 1 4.92 4.92", key: "1ablyi" }]
];
var CircleOff = createLucideIcon("circle-off", __iconNode364);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-parking-off.js
var __iconNode365 = [
  ["path", { d: "M12.656 7H13a3 3 0 0 1 2.984 3.307", key: "1sjx87" }],
  ["path", { d: "M13 13H9", key: "e2beee" }],
  ["path", { d: "M19.071 19.071A1 1 0 0 1 4.93 4.93", key: "1kb595" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.357 2.687a10 10 0 0 1 12.956 12.956", key: "5bsfdx" }],
  ["path", { d: "M9 17V9", key: "ojradj" }]
];
var CircleParkingOff = createLucideIcon("circle-parking-off", __iconNode365);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-parking.js
var __iconNode366 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9 17V7h4a3 3 0 0 1 0 6H9", key: "1dfk2c" }]
];
var CircleParking = createLucideIcon("circle-parking", __iconNode366);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-pause.js
var __iconNode367 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "10", x2: "10", y1: "15", y2: "9", key: "c1nkhi" }],
  ["line", { x1: "14", x2: "14", y1: "15", y2: "9", key: "h65svq" }]
];
var CirclePause = createLucideIcon("circle-pause", __iconNode367);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-percent.js
var __iconNode368 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
];
var CirclePercent = createLucideIcon("circle-percent", __iconNode368);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-play.js
var __iconNode369 = [
  [
    "path",
    {
      d: "M9 9.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997A1 1 0 0 1 9 14.996z",
      key: "kmsa83"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CirclePlay = createLucideIcon("circle-play", __iconNode369);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-plus.js
var __iconNode370 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
];
var CirclePlus = createLucideIcon("circle-plus", __iconNode370);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-pound-sterling.js
var __iconNode371 = [
  ["path", { d: "M10 16V9.5a1 1 0 0 1 5 0", key: "1i1are" }],
  ["path", { d: "M8 12h4", key: "qz6y1c" }],
  ["path", { d: "M8 16h7", key: "sbedsn" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CirclePoundSterling = createLucideIcon("circle-pound-sterling", __iconNode371);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-power.js
var __iconNode372 = [
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M7.998 9.003a5 5 0 1 0 8-.005", key: "1pek45" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CirclePower = createLucideIcon("circle-power", __iconNode372);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-question-mark.js
var __iconNode373 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
];
var CircleQuestionMark = createLucideIcon("circle-question-mark", __iconNode373);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-slash-2.js
var __iconNode374 = [
  ["path", { d: "M22 2 2 22", key: "y4kqgn" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CircleSlash2 = createLucideIcon("circle-slash-2", __iconNode374);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-slash.js
var __iconNode375 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "9", x2: "15", y1: "15", y2: "9", key: "1dfufj" }]
];
var CircleSlash = createLucideIcon("circle-slash", __iconNode375);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-small.js
var __iconNode376 = [["circle", { cx: "12", cy: "12", r: "6", key: "1vlfrh" }]];
var CircleSmall = createLucideIcon("circle-small", __iconNode376);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-star.js
var __iconNode377 = [
  [
    "path",
    {
      d: "M11.051 7.616a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.867l-1.156-1.152a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z",
      key: "285bvi"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CircleStar = createLucideIcon("circle-star", __iconNode377);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-stop.js
var __iconNode378 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["rect", { x: "9", y: "9", width: "6", height: "6", rx: "1", key: "1ssd4o" }]
];
var CircleStop = createLucideIcon("circle-stop", __iconNode378);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-user-round.js
var __iconNode379 = [
  ["path", { d: "M18 20a6 6 0 0 0-12 0", key: "1qehca" }],
  ["circle", { cx: "12", cy: "10", r: "4", key: "1h16sb" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var CircleUserRound = createLucideIcon("circle-user-round", __iconNode379);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-user.js
var __iconNode380 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662", key: "154egf" }]
];
var CircleUser = createLucideIcon("circle-user", __iconNode380);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle-x.js
var __iconNode381 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
];
var CircleX = createLucideIcon("circle-x", __iconNode381);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circle.js
var __iconNode382 = [["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]];
var Circle = createLucideIcon("circle", __iconNode382);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/circuit-board.js
var __iconNode383 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M11 9h4a2 2 0 0 0 2-2V3", key: "1ve2rv" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "M7 21v-4a2 2 0 0 1 2-2h4", key: "1fwkro" }],
  ["circle", { cx: "15", cy: "15", r: "2", key: "3i40o0" }]
];
var CircuitBoard = createLucideIcon("circuit-board", __iconNode383);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/citrus.js
var __iconNode384 = [
  [
    "path",
    {
      d: "M21.66 17.67a1.08 1.08 0 0 1-.04 1.6A12 12 0 0 1 4.73 2.38a1.1 1.1 0 0 1 1.61-.04z",
      key: "4ite01"
    }
  ],
  ["path", { d: "M19.65 15.66A8 8 0 0 1 8.35 4.34", key: "1gxipu" }],
  ["path", { d: "m14 10-5.5 5.5", key: "92pfem" }],
  ["path", { d: "M14 17.85V10H6.15", key: "xqmtsk" }]
];
var Citrus = createLucideIcon("citrus", __iconNode384);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clapperboard.js
var __iconNode385 = [
  [
    "path",
    { d: "M20.2 6 3 11l-.9-2.4c-.3-1.1.3-2.2 1.3-2.5l13.5-4c1.1-.3 2.2.3 2.5 1.3Z", key: "1tn4o7" }
  ],
  ["path", { d: "m6.2 5.3 3.1 3.9", key: "iuk76l" }],
  ["path", { d: "m12.4 3.4 3.1 4", key: "6hsd6n" }],
  ["path", { d: "M3 11h18v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2Z", key: "ltgou9" }]
];
var Clapperboard = createLucideIcon("clapperboard", __iconNode385);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-check.js
var __iconNode386 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "m9 14 2 2 4-4", key: "df797q" }]
];
var ClipboardCheck = createLucideIcon("clipboard-check", __iconNode386);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-clock.js
var __iconNode387 = [
  ["path", { d: "M16 14v2.2l1.6 1", key: "fo4ql5" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v.832", key: "1ujtp2" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2", key: "qvpao1" }],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }],
  ["rect", { x: "8", y: "2", width: "8", height: "4", rx: "1", key: "ublpy" }]
];
var ClipboardClock = createLucideIcon("clipboard-clock", __iconNode387);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-copy.js
var __iconNode388 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2", key: "4jdomd" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v4", key: "3hqy98" }],
  ["path", { d: "M21 14H11", key: "1bme5i" }],
  ["path", { d: "m15 10-4 4 4 4", key: "5dvupr" }]
];
var ClipboardCopy = createLucideIcon("clipboard-copy", __iconNode388);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-list.js
var __iconNode389 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M12 11h4", key: "1jrz19" }],
  ["path", { d: "M12 16h4", key: "n85exb" }],
  ["path", { d: "M8 11h.01", key: "1dfujw" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
];
var ClipboardList = createLucideIcon("clipboard-list", __iconNode389);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-minus.js
var __iconNode390 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 14h6", key: "159ibu" }]
];
var ClipboardMinus = createLucideIcon("clipboard-minus", __iconNode390);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-paste.js
var __iconNode391 = [
  ["path", { d: "M11 14h10", key: "1w8e9d" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v1.344", key: "1e62lh" }],
  ["path", { d: "m17 18 4-4-4-4", key: "z2g111" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 1.793-1.113", key: "bjbb7m" }],
  ["rect", { x: "8", y: "2", width: "8", height: "4", rx: "1", key: "ublpy" }]
];
var ClipboardPaste = createLucideIcon("clipboard-paste", __iconNode391);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-pen-line.js
var __iconNode392 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", key: "1oijnt" }],
  ["path", { d: "M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-.5", key: "1but9f" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 1.73 1", key: "1p8n7l" }],
  ["path", { d: "M8 18h1", key: "13wk12" }],
  [
    "path",
    {
      d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "2t3380"
    }
  ]
];
var ClipboardPenLine = createLucideIcon("clipboard-pen-line", __iconNode392);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-pen.js
var __iconNode393 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", key: "1oijnt" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-5.5", key: "cereej" }],
  ["path", { d: "M4 13.5V6a2 2 0 0 1 2-2h2", key: "5ua5vh" }],
  [
    "path",
    {
      d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1y4qbx"
    }
  ]
];
var ClipboardPen = createLucideIcon("clipboard-pen", __iconNode393);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-plus.js
var __iconNode394 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 14h6", key: "159ibu" }],
  ["path", { d: "M12 17v-6", key: "1y8rbf" }]
];
var ClipboardPlus = createLucideIcon("clipboard-plus", __iconNode394);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-type.js
var __iconNode395 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "M9 12v-1h6v1", key: "iehl6m" }],
  ["path", { d: "M11 17h2", key: "12w5me" }],
  ["path", { d: "M12 11v6", key: "1bwqyc" }]
];
var ClipboardType = createLucideIcon("clipboard-type", __iconNode395);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard.js
var __iconNode396 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ]
];
var Clipboard = createLucideIcon("clipboard", __iconNode396);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clipboard-x.js
var __iconNode397 = [
  ["rect", { width: "8", height: "4", x: "8", y: "2", rx: "1", ry: "1", key: "tgr4d6" }],
  [
    "path",
    {
      d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",
      key: "116196"
    }
  ],
  ["path", { d: "m15 11-6 6", key: "1toa9n" }],
  ["path", { d: "m9 11 6 6", key: "wlibny" }]
];
var ClipboardX = createLucideIcon("clipboard-x", __iconNode397);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-1.js
var __iconNode398 = [
  ["path", { d: "M12 6v6l2-4", key: "miptyd" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock1 = createLucideIcon("clock-1", __iconNode398);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-10.js
var __iconNode399 = [
  ["path", { d: "M12 6v6l-4-2", key: "cedpoo" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock10 = createLucideIcon("clock-10", __iconNode399);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-11.js
var __iconNode400 = [
  ["path", { d: "M12 6v6l-2-4", key: "ns39ag" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock11 = createLucideIcon("clock-11", __iconNode400);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-12.js
var __iconNode401 = [
  ["path", { d: "M12 6v6", key: "1ipuwl" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock12 = createLucideIcon("clock-12", __iconNode401);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-2.js
var __iconNode402 = [
  ["path", { d: "M12 6v6l4-2", key: "1r2kuh" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock2 = createLucideIcon("clock-2", __iconNode402);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-3.js
var __iconNode403 = [
  ["path", { d: "M12 6v6h4", key: "135r8i" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock3 = createLucideIcon("clock-3", __iconNode403);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-4.js
var __iconNode404 = [
  ["path", { d: "M12 6v6l4 2", key: "mmk7yg" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock4 = createLucideIcon("clock-4", __iconNode404);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-5.js
var __iconNode405 = [
  ["path", { d: "M12 6v6l2 4", key: "1287s9" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock5 = createLucideIcon("clock-5", __iconNode405);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-6.js
var __iconNode406 = [
  ["path", { d: "M12 6v10", key: "wf7rdh" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock6 = createLucideIcon("clock-6", __iconNode406);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-7.js
var __iconNode407 = [
  ["path", { d: "M12 6v6l-2 4", key: "1095bu" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock7 = createLucideIcon("clock-7", __iconNode407);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-8.js
var __iconNode408 = [
  ["path", { d: "M12 6v6l-4 2", key: "imc3wl" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock8 = createLucideIcon("clock-8", __iconNode408);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-9.js
var __iconNode409 = [
  ["path", { d: "M12 6v6H8", key: "u39vzm" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock9 = createLucideIcon("clock-9", __iconNode409);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-alert.js
var __iconNode410 = [
  ["path", { d: "M12 6v6l4 2", key: "mmk7yg" }],
  ["path", { d: "M20 12v5", key: "12wsvk" }],
  ["path", { d: "M20 21h.01", key: "1p6o6n" }],
  ["path", { d: "M21.25 8.2A10 10 0 1 0 16 21.16", key: "17fp9f" }]
];
var ClockAlert = createLucideIcon("clock-alert", __iconNode410);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-arrow-down.js
var __iconNode411 = [
  ["path", { d: "M12 6v6l2 1", key: "19cm8n" }],
  ["path", { d: "M12.337 21.994a10 10 0 1 1 9.588-8.767", key: "28moa" }],
  ["path", { d: "m14 18 4 4 4-4", key: "1waygx" }],
  ["path", { d: "M18 14v8", key: "irew45" }]
];
var ClockArrowDown = createLucideIcon("clock-arrow-down", __iconNode411);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-arrow-up.js
var __iconNode412 = [
  ["path", { d: "M12 6v6l1.56.78", key: "14ed3g" }],
  ["path", { d: "M13.227 21.925a10 10 0 1 1 8.767-9.588", key: "jwkls1" }],
  ["path", { d: "m14 18 4-4 4 4", key: "ftkppy" }],
  ["path", { d: "M18 22v-8", key: "su0gjh" }]
];
var ClockArrowUp = createLucideIcon("clock-arrow-up", __iconNode412);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-fading.js
var __iconNode413 = [
  ["path", { d: "M12 2a10 10 0 0 1 7.38 16.75", key: "175t95" }],
  ["path", { d: "M12 6v6l4 2", key: "mmk7yg" }],
  ["path", { d: "M2.5 8.875a10 10 0 0 0-.5 3", key: "1vce0s" }],
  ["path", { d: "M2.83 16a10 10 0 0 0 2.43 3.4", key: "o3fkw4" }],
  ["path", { d: "M4.636 5.235a10 10 0 0 1 .891-.857", key: "1szpfk" }],
  ["path", { d: "M8.644 21.42a10 10 0 0 0 7.631-.38", key: "9yhvd4" }]
];
var ClockFading = createLucideIcon("clock-fading", __iconNode413);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock-plus.js
var __iconNode414 = [
  ["path", { d: "M12 6v6l3.644 1.822", key: "1jmett" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M21.92 13.267a10 10 0 1 0-8.653 8.653", key: "1u0osk" }]
];
var ClockPlus = createLucideIcon("clock-plus", __iconNode414);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clock.js
var __iconNode415 = [
  ["path", { d: "M12 6v6l4 2", key: "mmk7yg" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Clock = createLucideIcon("clock", __iconNode415);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/closed-caption.js
var __iconNode416 = [
  ["path", { d: "M10 9.17a3 3 0 1 0 0 5.66", key: "h9wayk" }],
  ["path", { d: "M17 9.17a3 3 0 1 0 0 5.66", key: "1v6zke" }],
  ["rect", { x: "2", y: "5", width: "20", height: "14", rx: "2", key: "qneu4z" }]
];
var ClosedCaption = createLucideIcon("closed-caption", __iconNode416);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-alert.js
var __iconNode417 = [
  ["path", { d: "M12 12v4", key: "tww15h" }],
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M17 18h.5a1 1 0 0 0 0-9h-1.79A7 7 0 1 0 7 17.708", key: "xsb5ju" }]
];
var CloudAlert = createLucideIcon("cloud-alert", __iconNode417);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-check.js
var __iconNode418 = [
  ["path", { d: "m17 15-5.5 5.5L9 18", key: "15q87x" }],
  ["path", { d: "M5 17.743A7 7 0 1 1 15.71 10h1.79a4.5 4.5 0 0 1 1.5 8.742", key: "9ho6ki" }]
];
var CloudCheck = createLucideIcon("cloud-check", __iconNode418);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-cog.js
var __iconNode419 = [
  ["path", { d: "m10.852 19.772-.383.924", key: "r7sl7d" }],
  ["path", { d: "m13.148 14.228.383-.923", key: "1d5zpm" }],
  ["path", { d: "M13.148 19.772a3 3 0 1 0-2.296-5.544l-.383-.923", key: "1ydik7" }],
  ["path", { d: "m13.53 20.696-.382-.924a3 3 0 1 1-2.296-5.544", key: "1m1vsf" }],
  ["path", { d: "m14.772 15.852.923-.383", key: "660p6e" }],
  ["path", { d: "m14.772 18.148.923.383", key: "hrcpis" }],
  [
    "path",
    {
      d: "M4.2 15.1a7 7 0 1 1 9.93-9.858A7 7 0 0 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.2",
      key: "j2q98n"
    }
  ],
  ["path", { d: "m9.228 15.852-.923-.383", key: "1p9ong" }],
  ["path", { d: "m9.228 18.148-.923.383", key: "6558rz" }]
];
var CloudCog = createLucideIcon("cloud-cog", __iconNode419);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-download.js
var __iconNode420 = [
  ["path", { d: "M12 13v8l-4-4", key: "1f5nwf" }],
  ["path", { d: "m12 21 4-4", key: "1lfcce" }],
  ["path", { d: "M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284", key: "ui1hmy" }]
];
var CloudDownload = createLucideIcon("cloud-download", __iconNode420);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-drizzle.js
var __iconNode421 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M8 19v1", key: "1dk2by" }],
  ["path", { d: "M8 14v1", key: "84yxot" }],
  ["path", { d: "M16 19v1", key: "v220m7" }],
  ["path", { d: "M16 14v1", key: "g12gj6" }],
  ["path", { d: "M12 21v1", key: "q8vafk" }],
  ["path", { d: "M12 16v1", key: "1mx6rx" }]
];
var CloudDrizzle = createLucideIcon("cloud-drizzle", __iconNode421);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-fog.js
var __iconNode422 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 17H7", key: "pygtm1" }],
  ["path", { d: "M17 21H9", key: "1u2q02" }]
];
var CloudFog = createLucideIcon("cloud-fog", __iconNode422);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-hail.js
var __iconNode423 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 14v2", key: "a1is7l" }],
  ["path", { d: "M8 14v2", key: "1e9m6t" }],
  ["path", { d: "M16 20h.01", key: "xwek51" }],
  ["path", { d: "M8 20h.01", key: "1vjney" }],
  ["path", { d: "M12 16v2", key: "z66u1j" }],
  ["path", { d: "M12 22h.01", key: "1urd7a" }]
];
var CloudHail = createLucideIcon("cloud-hail", __iconNode423);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-lightning.js
var __iconNode424 = [
  ["path", { d: "M6 16.326A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 .5 8.973", key: "1cez44" }],
  ["path", { d: "m13 12-3 5h4l-3 5", key: "1t22er" }]
];
var CloudLightning = createLucideIcon("cloud-lightning", __iconNode424);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-moon-rain.js
var __iconNode425 = [
  ["path", { d: "M11 20v2", key: "174qtz" }],
  [
    "path",
    {
      d: "M18.376 14.512a6 6 0 0 0 3.461-4.127c.148-.625-.659-.97-1.248-.714a4 4 0 0 1-5.259-5.26c.255-.589-.09-1.395-.716-1.248a6 6 0 0 0-4.594 5.36",
      key: "zwnc1e"
    }
  ],
  ["path", { d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24", key: "1qmrp3" }],
  ["path", { d: "M7 19v2", key: "12npes" }]
];
var CloudMoonRain = createLucideIcon("cloud-moon-rain", __iconNode425);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-moon.js
var __iconNode426 = [
  ["path", { d: "M13 16a3 3 0 0 1 0 6H7a5 5 0 1 1 4.9-6z", key: "ie2ih4" }],
  [
    "path",
    {
      d: "M18.376 14.512a6 6 0 0 0 3.461-4.127c.148-.625-.659-.97-1.248-.714a4 4 0 0 1-5.259-5.26c.255-.589-.09-1.395-.716-1.248a6 6 0 0 0-4.594 5.36",
      key: "zwnc1e"
    }
  ]
];
var CloudMoon = createLucideIcon("cloud-moon", __iconNode426);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-off.js
var __iconNode427 = [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5.782 5.782A7 7 0 0 0 9 19h8.5a4.5 4.5 0 0 0 1.307-.193", key: "yfwify" }],
  [
    "path",
    { d: "M21.532 16.5A4.5 4.5 0 0 0 17.5 10h-1.79A7.008 7.008 0 0 0 10 5.07", key: "jlfiyv" }
  ]
];
var CloudOff = createLucideIcon("cloud-off", __iconNode427);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-rain-wind.js
var __iconNode428 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "m9.2 22 3-7", key: "sb5f6j" }],
  ["path", { d: "m9 13-3 7", key: "500co5" }],
  ["path", { d: "m17 13-3 7", key: "8t2fiy" }]
];
var CloudRainWind = createLucideIcon("cloud-rain-wind", __iconNode428);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-rain.js
var __iconNode429 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M16 14v6", key: "1j4efv" }],
  ["path", { d: "M8 14v6", key: "17c4r9" }],
  ["path", { d: "M12 16v6", key: "c8a4gj" }]
];
var CloudRain = createLucideIcon("cloud-rain", __iconNode429);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-snow.js
var __iconNode430 = [
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M8 19h.01", key: "puxtts" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }],
  ["path", { d: "M12 21h.01", key: "h35vbk" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }],
  ["path", { d: "M16 19h.01", key: "1vcnzz" }]
];
var CloudSnow = createLucideIcon("cloud-snow", __iconNode430);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-sun-rain.js
var __iconNode431 = [
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }],
  ["path", { d: "M15.947 12.65a4 4 0 0 0-5.925-4.128", key: "dpwdj0" }],
  ["path", { d: "M3 20a5 5 0 1 1 8.9-4H13a3 3 0 0 1 2 5.24", key: "1qmrp3" }],
  ["path", { d: "M11 20v2", key: "174qtz" }],
  ["path", { d: "M7 19v2", key: "12npes" }]
];
var CloudSunRain = createLucideIcon("cloud-sun-rain", __iconNode431);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-upload.js
var __iconNode432 = [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242", key: "1pljnt" }],
  ["path", { d: "m8 17 4-4 4 4", key: "1quai1" }]
];
var CloudUpload = createLucideIcon("cloud-upload", __iconNode432);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud-sun.js
var __iconNode433 = [
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }],
  ["path", { d: "M15.947 12.65a4 4 0 0 0-5.925-4.128", key: "dpwdj0" }],
  ["path", { d: "M13 22H7a5 5 0 1 1 4.9-6H13a3 3 0 0 1 0 6Z", key: "s09mg5" }]
];
var CloudSun = createLucideIcon("cloud-sun", __iconNode433);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloud.js
var __iconNode434 = [
  ["path", { d: "M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z", key: "p7xjir" }]
];
var Cloud = createLucideIcon("cloud", __iconNode434);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cloudy.js
var __iconNode435 = [
  ["path", { d: "M17.5 21H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z", key: "gqqjvc" }],
  ["path", { d: "M22 10a3 3 0 0 0-3-3h-2.207a5.502 5.502 0 0 0-10.702.5", key: "1p2s76" }]
];
var Cloudy = createLucideIcon("cloudy", __iconNode435);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/clover.js
var __iconNode436 = [
  ["path", { d: "M16.17 7.83 2 22", key: "t58vo8" }],
  [
    "path",
    {
      d: "M4.02 12a2.827 2.827 0 1 1 3.81-4.17A2.827 2.827 0 1 1 12 4.02a2.827 2.827 0 1 1 4.17 3.81A2.827 2.827 0 1 1 19.98 12a2.827 2.827 0 1 1-3.81 4.17A2.827 2.827 0 1 1 12 19.98a2.827 2.827 0 1 1-4.17-3.81A1 1 0 1 1 4 12",
      key: "17k36q"
    }
  ],
  ["path", { d: "m7.83 7.83 8.34 8.34", key: "1d7sxk" }]
];
var Clover = createLucideIcon("clover", __iconNode436);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/club.js
var __iconNode437 = [
  [
    "path",
    {
      d: "M17.28 9.05a5.5 5.5 0 1 0-10.56 0A5.5 5.5 0 1 0 12 17.66a5.5 5.5 0 1 0 5.28-8.6Z",
      key: "27yuqz"
    }
  ],
  ["path", { d: "M12 17.66L12 22", key: "ogfahf" }]
];
var Club = createLucideIcon("club", __iconNode437);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/code-xml.js
var __iconNode438 = [
  ["path", { d: "m18 16 4-4-4-4", key: "1inbqp" }],
  ["path", { d: "m6 8-4 4 4 4", key: "15zrgr" }],
  ["path", { d: "m14.5 4-5 16", key: "e7oirm" }]
];
var CodeXml = createLucideIcon("code-xml", __iconNode438);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/code.js
var __iconNode439 = [
  ["path", { d: "m16 18 6-6-6-6", key: "eg8j8" }],
  ["path", { d: "m8 6-6 6 6 6", key: "ppft3o" }]
];
var Code = createLucideIcon("code", __iconNode439);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/codepen.js
var __iconNode440 = [
  ["polygon", { points: "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2", key: "srzb37" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "15.5", key: "1t73f2" }],
  ["polyline", { points: "22 8.5 12 15.5 2 8.5", key: "ajlxae" }],
  ["polyline", { points: "2 15.5 12 8.5 22 15.5", key: "susrui" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "8.5", key: "2cldga" }]
];
var Codepen = createLucideIcon("codepen", __iconNode440);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/codesandbox.js
var __iconNode441 = [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ],
  ["polyline", { points: "7.5 4.21 12 6.81 16.5 4.21", key: "fabo96" }],
  ["polyline", { points: "7.5 19.79 7.5 14.6 3 12", key: "z377f1" }],
  ["polyline", { points: "21 12 16.5 14.6 16.5 19.79", key: "9nrev1" }],
  ["polyline", { points: "3.27 6.96 12 12.01 20.73 6.96", key: "1180pa" }],
  ["line", { x1: "12", x2: "12", y1: "22.08", y2: "12", key: "3z3uq6" }]
];
var Codesandbox = createLucideIcon("codesandbox", __iconNode441);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cog.js
var __iconNode442 = [
  ["path", { d: "M11 10.27 7 3.34", key: "16pf9h" }],
  ["path", { d: "m11 13.73-4 6.93", key: "794ttg" }],
  ["path", { d: "M12 22v-2", key: "1osdcq" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M14 12h8", key: "4f43i9" }],
  ["path", { d: "m17 20.66-1-1.73", key: "eq3orb" }],
  ["path", { d: "m17 3.34-1 1.73", key: "2wel8s" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "m20.66 17-1.73-1", key: "sg0v6f" }],
  ["path", { d: "m20.66 7-1.73 1", key: "1ow05n" }],
  ["path", { d: "m3.34 17 1.73-1", key: "nuk764" }],
  ["path", { d: "m3.34 7 1.73 1", key: "1ulond" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["circle", { cx: "12", cy: "12", r: "8", key: "46899m" }]
];
var Cog = createLucideIcon("cog", __iconNode442);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/coffee.js
var __iconNode443 = [
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M14 2v2", key: "6buw04" }],
  [
    "path",
    {
      d: "M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1",
      key: "pwadti"
    }
  ],
  ["path", { d: "M6 2v2", key: "colzsn" }]
];
var Coffee = createLucideIcon("coffee", __iconNode443);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/coins.js
var __iconNode444 = [
  ["circle", { cx: "8", cy: "8", r: "6", key: "3yglwk" }],
  ["path", { d: "M18.09 10.37A6 6 0 1 1 10.34 18", key: "t5s6rm" }],
  ["path", { d: "M7 6h1v4", key: "1obek4" }],
  ["path", { d: "m16.71 13.88.7.71-2.82 2.82", key: "1rbuyh" }]
];
var Coins = createLucideIcon("coins", __iconNode444);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/columns-2.js
var __iconNode445 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 3v18", key: "108xh3" }]
];
var Columns2 = createLucideIcon("columns-2", __iconNode445);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/columns-3-cog.js
var __iconNode446 = [
  ["path", { d: "M10.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.5", key: "1g2yzs" }],
  ["path", { d: "m14.3 19.6 1-.4", key: "11sv9r" }],
  ["path", { d: "M15 3v7.5", key: "7lm50a" }],
  ["path", { d: "m15.2 16.9-.9-.3", key: "1t7mvx" }],
  ["path", { d: "m16.6 21.7.3-.9", key: "1j67ps" }],
  ["path", { d: "m16.8 15.3-.4-1", key: "1ei7r6" }],
  ["path", { d: "m19.1 15.2.3-.9", key: "18r7jp" }],
  ["path", { d: "m19.6 21.7-.4-1", key: "z2vh2" }],
  ["path", { d: "m20.7 16.8 1-.4", key: "19m87a" }],
  ["path", { d: "m21.7 19.4-.9-.3", key: "1qgwi9" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var Columns3Cog = createLucideIcon("columns-3-cog", __iconNode446);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/columns-3.js
var __iconNode447 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
];
var Columns3 = createLucideIcon("columns-3", __iconNode447);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/columns-4.js
var __iconNode448 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7.5 3v18", key: "w0wo6v" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M16.5 3v18", key: "10tjh1" }]
];
var Columns4 = createLucideIcon("columns-4", __iconNode448);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/combine.js
var __iconNode449 = [
  ["path", { d: "M14 3a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1", key: "1l7d7l" }],
  ["path", { d: "M19 3a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1", key: "9955pe" }],
  ["path", { d: "m7 15 3 3", key: "4hkfgk" }],
  ["path", { d: "m7 21 3-3H5a2 2 0 0 1-2-2v-2", key: "1xljwe" }],
  ["rect", { x: "14", y: "14", width: "7", height: "7", rx: "1", key: "1cdgtw" }],
  ["rect", { x: "3", y: "3", width: "7", height: "7", rx: "1", key: "zi3rio" }]
];
var Combine = createLucideIcon("combine", __iconNode449);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/command.js
var __iconNode450 = [
  [
    "path",
    { d: "M15 6v12a3 3 0 1 0 3-3H6a3 3 0 1 0 3 3V6a3 3 0 1 0-3 3h12a3 3 0 1 0-3-3", key: "11bfej" }
  ]
];
var Command2 = createLucideIcon("command", __iconNode450);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/compass.js
var __iconNode451 = [
  [
    "path",
    {
      d: "m16.24 7.76-1.804 5.411a2 2 0 0 1-1.265 1.265L7.76 16.24l1.804-5.411a2 2 0 0 1 1.265-1.265z",
      key: "9ktpf1"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Compass = createLucideIcon("compass", __iconNode451);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/component.js
var __iconNode452 = [
  [
    "path",
    {
      d: "M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z",
      key: "1uwlt4"
    }
  ],
  [
    "path",
    {
      d: "M2.297 11.293a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0z",
      key: "10291m"
    }
  ],
  [
    "path",
    {
      d: "M8.916 17.912a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0z",
      key: "1tqoq1"
    }
  ],
  [
    "path",
    {
      d: "M8.916 4.674a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z",
      key: "1x6lto"
    }
  ]
];
var Component = createLucideIcon("component", __iconNode452);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/computer.js
var __iconNode453 = [
  ["rect", { width: "14", height: "8", x: "5", y: "2", rx: "2", key: "wc9tft" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h2", key: "rwmk9e" }],
  ["path", { d: "M12 18h6", key: "aqd8w3" }]
];
var Computer = createLucideIcon("computer", __iconNode453);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/concierge-bell.js
var __iconNode454 = [
  [
    "path",
    { d: "M3 20a1 1 0 0 1-1-1v-1a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1Z", key: "1pvr1r" }
  ],
  ["path", { d: "M20 16a8 8 0 1 0-16 0", key: "1pa543" }],
  ["path", { d: "M12 4v4", key: "1bq03y" }],
  ["path", { d: "M10 4h4", key: "1xpv9s" }]
];
var ConciergeBell = createLucideIcon("concierge-bell", __iconNode454);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cone.js
var __iconNode455 = [
  ["path", { d: "m20.9 18.55-8-15.98a1 1 0 0 0-1.8 0l-8 15.98", key: "53pte7" }],
  ["ellipse", { cx: "12", cy: "19", rx: "9", ry: "3", key: "1ji25f" }]
];
var Cone = createLucideIcon("cone", __iconNode455);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/construction.js
var __iconNode456 = [
  ["rect", { x: "2", y: "6", width: "20", height: "8", rx: "1", key: "1estib" }],
  ["path", { d: "M17 14v7", key: "7m2elx" }],
  ["path", { d: "M7 14v7", key: "1cm7wv" }],
  ["path", { d: "M17 3v3", key: "1v4jwn" }],
  ["path", { d: "M7 3v3", key: "7o6guu" }],
  ["path", { d: "M10 14 2.3 6.3", key: "1023jk" }],
  ["path", { d: "m14 6 7.7 7.7", key: "1s8pl2" }],
  ["path", { d: "m8 6 8 8", key: "hl96qh" }]
];
var Construction = createLucideIcon("construction", __iconNode456);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/contact-round.js
var __iconNode457 = [
  ["path", { d: "M16 2v2", key: "scm5qe" }],
  ["path", { d: "M17.915 22a6 6 0 0 0-12 0", key: "suqz9p" }],
  ["path", { d: "M8 2v2", key: "pbkmx" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
];
var ContactRound = createLucideIcon("contact-round", __iconNode457);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/contact.js
var __iconNode458 = [
  ["path", { d: "M16 2v2", key: "scm5qe" }],
  ["path", { d: "M7 22v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2", key: "1waht3" }],
  ["path", { d: "M8 2v2", key: "pbkmx" }],
  ["circle", { cx: "12", cy: "11", r: "3", key: "itu57m" }],
  ["rect", { x: "3", y: "4", width: "18", height: "18", rx: "2", key: "12vinp" }]
];
var Contact = createLucideIcon("contact", __iconNode458);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/contrast.js
var __iconNode459 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 18a6 6 0 0 0 0-12v12z", key: "j4l70d" }]
];
var Contrast = createLucideIcon("contrast", __iconNode459);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/container.js
var __iconNode460 = [
  [
    "path",
    {
      d: "M22 7.7c0-.6-.4-1.2-.8-1.5l-6.3-3.9a1.72 1.72 0 0 0-1.7 0l-10.3 6c-.5.2-.9.8-.9 1.4v6.6c0 .5.4 1.2.8 1.5l6.3 3.9a1.72 1.72 0 0 0 1.7 0l10.3-6c.5-.3.9-1 .9-1.5Z",
      key: "1t2lqe"
    }
  ],
  ["path", { d: "M10 21.9V14L2.1 9.1", key: "o7czzq" }],
  ["path", { d: "m10 14 11.9-6.9", key: "zm5e20" }],
  ["path", { d: "M14 19.8v-8.1", key: "159ecu" }],
  ["path", { d: "M18 17.5V9.4", key: "11uown" }]
];
var Container = createLucideIcon("container", __iconNode460);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cookie.js
var __iconNode461 = [
  ["path", { d: "M12 2a10 10 0 1 0 10 10 4 4 0 0 1-5-5 4 4 0 0 1-5-5", key: "laymnq" }],
  ["path", { d: "M8.5 8.5v.01", key: "ue8clq" }],
  ["path", { d: "M16 15.5v.01", key: "14dtrp" }],
  ["path", { d: "M12 12v.01", key: "u5ubse" }],
  ["path", { d: "M11 17v.01", key: "1hyl5a" }],
  ["path", { d: "M7 14v.01", key: "uct60s" }]
];
var Cookie = createLucideIcon("cookie", __iconNode461);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cooking-pot.js
var __iconNode462 = [
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8", key: "u0tga0" }],
  ["path", { d: "m4 8 16-4", key: "16g0ng" }],
  [
    "path",
    {
      d: "m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8",
      key: "12cejc"
    }
  ]
];
var CookingPot = createLucideIcon("cooking-pot", __iconNode462);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy-check.js
var __iconNode463 = [
  ["path", { d: "m12 15 2 2 4-4", key: "2c609p" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var CopyCheck = createLucideIcon("copy-check", __iconNode463);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy-minus.js
var __iconNode464 = [
  ["line", { x1: "12", x2: "18", y1: "15", y2: "15", key: "1nscbv" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var CopyMinus = createLucideIcon("copy-minus", __iconNode464);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy-plus.js
var __iconNode465 = [
  ["line", { x1: "15", x2: "15", y1: "12", y2: "18", key: "1p7wdc" }],
  ["line", { x1: "12", x2: "18", y1: "15", y2: "15", key: "1nscbv" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var CopyPlus = createLucideIcon("copy-plus", __iconNode465);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy-slash.js
var __iconNode466 = [
  ["line", { x1: "12", x2: "18", y1: "18", y2: "12", key: "ebkxgr" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var CopySlash = createLucideIcon("copy-slash", __iconNode466);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy.js
var __iconNode467 = [
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var Copy = createLucideIcon("copy", __iconNode467);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copy-x.js
var __iconNode468 = [
  ["line", { x1: "12", x2: "18", y1: "12", y2: "18", key: "1rg63v" }],
  ["line", { x1: "12", x2: "18", y1: "18", y2: "12", key: "ebkxgr" }],
  ["rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2", key: "17jyea" }],
  ["path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2", key: "zix9uf" }]
];
var CopyX = createLucideIcon("copy-x", __iconNode468);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copyright.js
var __iconNode469 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M14.83 14.83a4 4 0 1 1 0-5.66", key: "1i56pz" }]
];
var Copyright = createLucideIcon("copyright", __iconNode469);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/copyleft.js
var __iconNode470 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M9.17 14.83a4 4 0 1 0 0-5.66", key: "1sveal" }]
];
var Copyleft = createLucideIcon("copyleft", __iconNode470);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-down-left.js
var __iconNode471 = [
  ["path", { d: "M20 4v7a4 4 0 0 1-4 4H4", key: "6o5b7l" }],
  ["path", { d: "m9 10-5 5 5 5", key: "1kshq7" }]
];
var CornerDownLeft = createLucideIcon("corner-down-left", __iconNode471);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-down-right.js
var __iconNode472 = [
  ["path", { d: "m15 10 5 5-5 5", key: "qqa56n" }],
  ["path", { d: "M4 4v7a4 4 0 0 0 4 4h12", key: "z08zvw" }]
];
var CornerDownRight = createLucideIcon("corner-down-right", __iconNode472);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-left-down.js
var __iconNode473 = [
  ["path", { d: "m14 15-5 5-5-5", key: "1eia93" }],
  ["path", { d: "M20 4h-7a4 4 0 0 0-4 4v12", key: "nbpdq2" }]
];
var CornerLeftDown = createLucideIcon("corner-left-down", __iconNode473);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-left-up.js
var __iconNode474 = [
  ["path", { d: "M14 9 9 4 4 9", key: "1af5af" }],
  ["path", { d: "M20 20h-7a4 4 0 0 1-4-4V4", key: "1blwi3" }]
];
var CornerLeftUp = createLucideIcon("corner-left-up", __iconNode474);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-right-down.js
var __iconNode475 = [
  ["path", { d: "m10 15 5 5 5-5", key: "1hpjnr" }],
  ["path", { d: "M4 4h7a4 4 0 0 1 4 4v12", key: "wcbgct" }]
];
var CornerRightDown = createLucideIcon("corner-right-down", __iconNode475);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-right-up.js
var __iconNode476 = [
  ["path", { d: "m10 9 5-5 5 5", key: "9ctzwi" }],
  ["path", { d: "M4 20h7a4 4 0 0 0 4-4V4", key: "1plgdj" }]
];
var CornerRightUp = createLucideIcon("corner-right-up", __iconNode476);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-up-left.js
var __iconNode477 = [
  ["path", { d: "M20 20v-7a4 4 0 0 0-4-4H4", key: "1nkjon" }],
  ["path", { d: "M9 14 4 9l5-5", key: "102s5s" }]
];
var CornerUpLeft = createLucideIcon("corner-up-left", __iconNode477);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/corner-up-right.js
var __iconNode478 = [
  ["path", { d: "m15 14 5-5-5-5", key: "12vg1m" }],
  ["path", { d: "M4 20v-7a4 4 0 0 1 4-4h12", key: "1lu4f8" }]
];
var CornerUpRight = createLucideIcon("corner-up-right", __iconNode478);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/creative-commons.js
var __iconNode479 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  [
    "path",
    { d: "M10 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1", key: "1ss3eq" }
  ],
  [
    "path",
    { d: "M17 9.3a2.8 2.8 0 0 0-3.5 1 3.1 3.1 0 0 0 0 3.4 2.7 2.7 0 0 0 3.5 1", key: "1od56t" }
  ]
];
var CreativeCommons = createLucideIcon("creative-commons", __iconNode479);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/credit-card.js
var __iconNode480 = [
  ["rect", { width: "20", height: "14", x: "2", y: "5", rx: "2", key: "ynyp8z" }],
  ["line", { x1: "2", x2: "22", y1: "10", y2: "10", key: "1b3vmo" }]
];
var CreditCard = createLucideIcon("credit-card", __iconNode480);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cpu.js
var __iconNode481 = [
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M17 20v2", key: "1rnc9c" }],
  ["path", { d: "M17 2v2", key: "11trls" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M2 17h2", key: "7oei6x" }],
  ["path", { d: "M2 7h2", key: "asdhe0" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "M20 17h2", key: "1fpfkl" }],
  ["path", { d: "M20 7h2", key: "1o8tra" }],
  ["path", { d: "M7 20v2", key: "4gnj0m" }],
  ["path", { d: "M7 2v2", key: "1i4yhu" }],
  ["rect", { x: "4", y: "4", width: "16", height: "16", rx: "2", key: "1vbyd7" }],
  ["rect", { x: "8", y: "8", width: "8", height: "8", rx: "1", key: "z9xiuo" }]
];
var Cpu = createLucideIcon("cpu", __iconNode481);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/croissant.js
var __iconNode482 = [
  ["path", { d: "M10.2 18H4.774a1.5 1.5 0 0 1-1.352-.97 11 11 0 0 1 .132-6.487", key: "14kkz9" }],
  ["path", { d: "M18 10.2V4.774a1.5 1.5 0 0 0-.97-1.352 11 11 0 0 0-6.486.132", key: "1g7v07" }],
  ["path", { d: "M18 5a4 3 0 0 1 4 3 2 2 0 0 1-2 2 10 10 0 0 0-5.139 1.42", key: "ratg6b" }],
  ["path", { d: "M5 18a3 4 0 0 0 3 4 2 2 0 0 0 2-2 10 10 0 0 1 1.42-5.14", key: "4454f0" }],
  [
    "path",
    {
      d: "M8.709 2.554a10 10 0 0 0-6.155 6.155 1.5 1.5 0 0 0 .676 1.626l9.807 5.42a2 2 0 0 0 2.718-2.718l-5.42-9.807a1.5 1.5 0 0 0-1.626-.676",
      key: "qmemie"
    }
  ]
];
var Croissant = createLucideIcon("croissant", __iconNode482);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/crop.js
var __iconNode483 = [
  ["path", { d: "M6 2v14a2 2 0 0 0 2 2h14", key: "ron5a4" }],
  ["path", { d: "M18 22V8a2 2 0 0 0-2-2H2", key: "7s9ehn" }]
];
var Crop = createLucideIcon("crop", __iconNode483);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cross.js
var __iconNode484 = [
  [
    "path",
    {
      d: "M4 9a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4a1 1 0 0 1 1 1v4a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-4a1 1 0 0 1 1-1h4a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-4a1 1 0 0 1-1-1V4a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v4a1 1 0 0 1-1 1z",
      key: "1xbrqy"
    }
  ]
];
var Cross = createLucideIcon("cross", __iconNode484);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/crosshair.js
var __iconNode485 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "22", x2: "18", y1: "12", y2: "12", key: "l9bcsi" }],
  ["line", { x1: "6", x2: "2", y1: "12", y2: "12", key: "13hhkx" }],
  ["line", { x1: "12", x2: "12", y1: "6", y2: "2", key: "10w3f3" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "18", key: "15g9kq" }]
];
var Crosshair = createLucideIcon("crosshair", __iconNode485);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/crown.js
var __iconNode486 = [
  [
    "path",
    {
      d: "M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z",
      key: "1vdc57"
    }
  ],
  ["path", { d: "M5 21h14", key: "11awu3" }]
];
var Crown = createLucideIcon("crown", __iconNode486);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cuboid.js
var __iconNode487 = [
  [
    "path",
    {
      d: "m21.12 6.4-6.05-4.06a2 2 0 0 0-2.17-.05L2.95 8.41a2 2 0 0 0-.95 1.7v5.82a2 2 0 0 0 .88 1.66l6.05 4.07a2 2 0 0 0 2.17.05l9.95-6.12a2 2 0 0 0 .95-1.7V8.06a2 2 0 0 0-.88-1.66Z",
      key: "1u2ovd"
    }
  ],
  ["path", { d: "M10 22v-8L2.25 9.15", key: "11pn4q" }],
  ["path", { d: "m10 14 11.77-6.87", key: "1kt1wh" }]
];
var Cuboid = createLucideIcon("cuboid", __iconNode487);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cup-soda.js
var __iconNode488 = [
  ["path", { d: "m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8", key: "8166m8" }],
  ["path", { d: "M5 8h14", key: "pcz4l3" }],
  ["path", { d: "M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0", key: "yjz344" }],
  ["path", { d: "m12 8 1-6h2", key: "3ybfa4" }]
];
var CupSoda = createLucideIcon("cup-soda", __iconNode488);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/currency.js
var __iconNode489 = [
  ["circle", { cx: "12", cy: "12", r: "8", key: "46899m" }],
  ["line", { x1: "3", x2: "6", y1: "3", y2: "6", key: "1jkytn" }],
  ["line", { x1: "21", x2: "18", y1: "3", y2: "6", key: "14zfjt" }],
  ["line", { x1: "3", x2: "6", y1: "21", y2: "18", key: "iusuec" }],
  ["line", { x1: "21", x2: "18", y1: "21", y2: "18", key: "yj2dd7" }]
];
var Currency = createLucideIcon("currency", __iconNode489);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/cylinder.js
var __iconNode490 = [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5v14a9 3 0 0 0 18 0V5", key: "aqi0yr" }]
];
var Cylinder = createLucideIcon("cylinder", __iconNode490);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dam.js
var __iconNode491 = [
  [
    "path",
    { d: "M11 11.31c1.17.56 1.54 1.69 3.5 1.69 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1", key: "157kva" }
  ],
  ["path", { d: "M11.75 18c.35.5 1.45 1 2.75 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1", key: "d7q6m6" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  [
    "path",
    { d: "M7 3a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1L10 4a1 1 0 0 0-1-1z", key: "pr6s65" }
  ]
];
var Dam = createLucideIcon("dam", __iconNode491);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/database-backup.js
var __iconNode492 = [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 12a9 3 0 0 0 5 2.69", key: "1ui2ym" }],
  ["path", { d: "M21 9.3V5", key: "6k6cib" }],
  ["path", { d: "M3 5v14a9 3 0 0 0 6.47 2.88", key: "i62tjy" }],
  ["path", { d: "M12 12v4h4", key: "1bxaet" }],
  [
    "path",
    {
      d: "M13 20a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L12 16",
      key: "1f4ei9"
    }
  ]
];
var DatabaseBackup = createLucideIcon("database-backup", __iconNode492);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/database.js
var __iconNode493 = [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5V19A9 3 0 0 0 21 19V5", key: "1wlel7" }],
  ["path", { d: "M3 12A9 3 0 0 0 21 12", key: "mv7ke4" }]
];
var Database = createLucideIcon("database", __iconNode493);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/database-zap.js
var __iconNode494 = [
  ["ellipse", { cx: "12", cy: "5", rx: "9", ry: "3", key: "msslwz" }],
  ["path", { d: "M3 5V19A9 3 0 0 0 15 21.84", key: "14ibmq" }],
  ["path", { d: "M21 5V8", key: "1marbg" }],
  ["path", { d: "M21 12L18 17H22L19 22", key: "zafso" }],
  ["path", { d: "M3 12A9 3 0 0 0 14.59 14.87", key: "1y4wr8" }]
];
var DatabaseZap = createLucideIcon("database-zap", __iconNode494);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/decimals-arrow-left.js
var __iconNode495 = [
  ["path", { d: "m13 21-3-3 3-3", key: "s3o1nf" }],
  ["path", { d: "M20 18H10", key: "14r3mt" }],
  ["path", { d: "M3 11h.01", key: "1eifu7" }],
  ["rect", { x: "6", y: "3", width: "5", height: "8", rx: "2.5", key: "v9paqo" }]
];
var DecimalsArrowLeft = createLucideIcon("decimals-arrow-left", __iconNode495);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/decimals-arrow-right.js
var __iconNode496 = [
  ["path", { d: "M10 18h10", key: "1y5s8o" }],
  ["path", { d: "m17 21 3-3-3-3", key: "1ammt0" }],
  ["path", { d: "M3 11h.01", key: "1eifu7" }],
  ["rect", { x: "15", y: "3", width: "5", height: "8", rx: "2.5", key: "76md6a" }],
  ["rect", { x: "6", y: "3", width: "5", height: "8", rx: "2.5", key: "v9paqo" }]
];
var DecimalsArrowRight = createLucideIcon("decimals-arrow-right", __iconNode496);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/delete.js
var __iconNode497 = [
  [
    "path",
    {
      d: "M10 5a2 2 0 0 0-1.344.519l-6.328 5.74a1 1 0 0 0 0 1.481l6.328 5.741A2 2 0 0 0 10 19h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z",
      key: "1yo7s0"
    }
  ],
  ["path", { d: "m12 9 6 6", key: "anjzzh" }],
  ["path", { d: "m18 9-6 6", key: "1fp51s" }]
];
var Delete = createLucideIcon("delete", __iconNode497);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dessert.js
var __iconNode498 = [
  [
    "path",
    {
      d: "M10.162 3.167A10 10 0 0 0 2 13a2 2 0 0 0 4 0v-1a2 2 0 0 1 4 0v4a2 2 0 0 0 4 0v-4a2 2 0 0 1 4 0v1a2 2 0 0 0 4-.006 10 10 0 0 0-8.161-9.826",
      key: "xi88qy"
    }
  ],
  ["path", { d: "M20.804 14.869a9 9 0 0 1-17.608 0", key: "1r28rg" }],
  ["circle", { cx: "12", cy: "4", r: "2", key: "muu5ef" }]
];
var Dessert = createLucideIcon("dessert", __iconNode498);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diameter.js
var __iconNode499 = [
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["circle", { cx: "5", cy: "5", r: "2", key: "1gwv83" }],
  ["path", { d: "M6.48 3.66a10 10 0 0 1 13.86 13.86", key: "xr8kdq" }],
  ["path", { d: "m6.41 6.41 11.18 11.18", key: "uhpjw7" }],
  ["path", { d: "M3.66 6.48a10 10 0 0 0 13.86 13.86", key: "cldpwv" }]
];
var Diameter = createLucideIcon("diameter", __iconNode499);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diamond-minus.js
var __iconNode500 = [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z",
      key: "1ey20j"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var DiamondMinus = createLucideIcon("diamond-minus", __iconNode500);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diamond-percent.js
var __iconNode501 = [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z",
      key: "1tpxz2"
    }
  ],
  ["path", { d: "M9.2 9.2h.01", key: "1b7bvt" }],
  ["path", { d: "m14.5 9.5-5 5", key: "17q4r4" }],
  ["path", { d: "M14.7 14.8h.01", key: "17nsh4" }]
];
var DiamondPercent = createLucideIcon("diamond-percent", __iconNode501);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diamond-plus.js
var __iconNode502 = [
  ["path", { d: "M12 8v8", key: "napkw2" }],
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0z",
      key: "1ey20j"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var DiamondPlus = createLucideIcon("diamond-plus", __iconNode502);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diamond.js
var __iconNode503 = [
  [
    "path",
    {
      d: "M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41l-7.59-7.59a2.41 2.41 0 0 0-3.41 0Z",
      key: "1f1r0c"
    }
  ]
];
var Diamond = createLucideIcon("diamond", __iconNode503);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-1.js
var __iconNode504 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
];
var Dice1 = createLucideIcon("dice-1", __iconNode504);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-3.js
var __iconNode505 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
];
var Dice3 = createLucideIcon("dice-3", __iconNode505);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-2.js
var __iconNode506 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }],
  ["path", { d: "M9 15h.01", key: "fzyn71" }]
];
var Dice2 = createLucideIcon("dice-2", __iconNode506);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-4.js
var __iconNode507 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }]
];
var Dice4 = createLucideIcon("dice-4", __iconNode507);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-5.js
var __iconNode508 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
];
var Dice5 = createLucideIcon("dice-5", __iconNode508);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dice-6.js
var __iconNode509 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M16 8h.01", key: "cr5u4v" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }],
  ["path", { d: "M8 8h.01", key: "1e4136" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
];
var Dice6 = createLucideIcon("dice-6", __iconNode509);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dices.js
var __iconNode510 = [
  ["rect", { width: "12", height: "12", x: "2", y: "10", rx: "2", ry: "2", key: "6agr2n" }],
  [
    "path",
    { d: "m17.92 14 3.5-3.5a2.24 2.24 0 0 0 0-3l-5-4.92a2.24 2.24 0 0 0-3 0L10 6", key: "1o487t" }
  ],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 14h.01", key: "ssrbsk" }],
  ["path", { d: "M15 6h.01", key: "cblpky" }],
  ["path", { d: "M18 9h.01", key: "2061c0" }]
];
var Dices = createLucideIcon("dices", __iconNode510);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/disc-2.js
var __iconNode511 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
];
var Disc2 = createLucideIcon("disc-2", __iconNode511);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/diff.js
var __iconNode512 = [
  ["path", { d: "M12 3v14", key: "7cf3v8" }],
  ["path", { d: "M5 10h14", key: "elsbfy" }],
  ["path", { d: "M5 21h14", key: "11awu3" }]
];
var Diff = createLucideIcon("diff", __iconNode512);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/disc-3.js
var __iconNode513 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M6 12c0-1.7.7-3.2 1.8-4.2", key: "oqkarx" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M18 12c0 1.7-.7 3.2-1.8 4.2", key: "1eah9h" }]
];
var Disc3 = createLucideIcon("disc-3", __iconNode513);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/disc.js
var __iconNode514 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var Disc = createLucideIcon("disc", __iconNode514);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/disc-album.js
var __iconNode515 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "12", r: "5", key: "nd82uf" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }]
];
var DiscAlbum = createLucideIcon("disc-album", __iconNode515);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/divide.js
var __iconNode516 = [
  ["circle", { cx: "12", cy: "6", r: "1", key: "1bh7o1" }],
  ["line", { x1: "5", x2: "19", y1: "12", y2: "12", key: "13b5wn" }],
  ["circle", { cx: "12", cy: "18", r: "1", key: "lqb9t5" }]
];
var Divide = createLucideIcon("divide", __iconNode516);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dna-off.js
var __iconNode517 = [
  ["path", { d: "M15 2c-1.35 1.5-2.092 3-2.5 4.5L14 8", key: "1bivrr" }],
  ["path", { d: "m17 6-2.891-2.891", key: "xu6p2f" }],
  ["path", { d: "M2 15c3.333-3 6.667-3 10-3", key: "nxix30" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "m20 9 .891.891", key: "3xwk7g" }],
  ["path", { d: "M22 9c-1.5 1.35-3 2.092-4.5 2.5l-1-1", key: "18cutr" }],
  ["path", { d: "M3.109 14.109 4 15", key: "q76aoh" }],
  ["path", { d: "m6.5 12.5 1 1", key: "cs35ky" }],
  ["path", { d: "m7 18 2.891 2.891", key: "1sisit" }],
  ["path", { d: "M9 22c1.35-1.5 2.092-3 2.5-4.5L10 16", key: "rlvei3" }]
];
var DnaOff = createLucideIcon("dna-off", __iconNode517);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dna.js
var __iconNode518 = [
  ["path", { d: "m10 16 1.5 1.5", key: "11lckj" }],
  ["path", { d: "m14 8-1.5-1.5", key: "1ohn8i" }],
  ["path", { d: "M15 2c-1.798 1.998-2.518 3.995-2.807 5.993", key: "80uv8i" }],
  ["path", { d: "m16.5 10.5 1 1", key: "696xn5" }],
  ["path", { d: "m17 6-2.891-2.891", key: "xu6p2f" }],
  ["path", { d: "M2 15c6.667-6 13.333 0 20-6", key: "1pyr53" }],
  ["path", { d: "m20 9 .891.891", key: "3xwk7g" }],
  ["path", { d: "M3.109 14.109 4 15", key: "q76aoh" }],
  ["path", { d: "m6.5 12.5 1 1", key: "cs35ky" }],
  ["path", { d: "m7 18 2.891 2.891", key: "1sisit" }],
  ["path", { d: "M9 22c1.798-1.998 2.518-3.995 2.807-5.993", key: "q3hbxp" }]
];
var Dna = createLucideIcon("dna", __iconNode518);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dock.js
var __iconNode519 = [
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 16h12", key: "u522kt" }]
];
var Dock = createLucideIcon("dock", __iconNode519);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dog.js
var __iconNode520 = [
  ["path", { d: "M11.25 16.25h1.5L12 17z", key: "w7jh35" }],
  ["path", { d: "M16 14v.5", key: "1lajdz" }],
  [
    "path",
    {
      d: "M4.42 11.247A13.152 13.152 0 0 0 4 14.556C4 18.728 7.582 21 12 21s8-2.272 8-6.444a11.702 11.702 0 0 0-.493-3.309",
      key: "u7s9ue"
    }
  ],
  ["path", { d: "M8 14v.5", key: "1nzgdb" }],
  [
    "path",
    {
      d: "M8.5 8.5c-.384 1.05-1.083 2.028-2.344 2.5-1.931.722-3.576-.297-3.656-1-.113-.994 1.177-6.53 4-7 1.923-.321 3.651.845 3.651 2.235A7.497 7.497 0 0 1 14 5.277c0-1.39 1.844-2.598 3.767-2.277 2.823.47 4.113 6.006 4 7-.08.703-1.725 1.722-3.656 1-1.261-.472-1.855-1.45-2.239-2.5",
      key: "v8hric"
    }
  ]
];
var Dog = createLucideIcon("dog", __iconNode520);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dollar-sign.js
var __iconNode521 = [
  ["line", { x1: "12", x2: "12", y1: "2", y2: "22", key: "7eqyqh" }],
  ["path", { d: "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6", key: "1b0p4s" }]
];
var DollarSign = createLucideIcon("dollar-sign", __iconNode521);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/donut.js
var __iconNode522 = [
  [
    "path",
    {
      d: "M20.5 10a2.5 2.5 0 0 1-2.4-3H18a2.95 2.95 0 0 1-2.6-4.4 10 10 0 1 0 6.3 7.1c-.3.2-.8.3-1.2.3",
      key: "19sr3x"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
];
var Donut = createLucideIcon("donut", __iconNode522);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/door-closed-locked.js
var __iconNode523 = [
  ["path", { d: "M10 12h.01", key: "1kxr2c" }],
  ["path", { d: "M18 9V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14", key: "1bnhmg" }],
  ["path", { d: "M2 20h8", key: "10ntw1" }],
  ["path", { d: "M20 17v-2a2 2 0 1 0-4 0v2", key: "pwaxnr" }],
  ["rect", { x: "14", y: "17", width: "8", height: "5", rx: "1", key: "15pjcy" }]
];
var DoorClosedLocked = createLucideIcon("door-closed-locked", __iconNode523);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/door-closed.js
var __iconNode524 = [
  ["path", { d: "M10 12h.01", key: "1kxr2c" }],
  ["path", { d: "M18 20V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v14", key: "36qu9e" }],
  ["path", { d: "M2 20h20", key: "owomy5" }]
];
var DoorClosed = createLucideIcon("door-closed", __iconNode524);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/door-open.js
var __iconNode525 = [
  ["path", { d: "M11 20H2", key: "nlcfvz" }],
  [
    "path",
    {
      d: "M11 4.562v16.157a1 1 0 0 0 1.242.97L19 20V5.562a2 2 0 0 0-1.515-1.94l-4-1A2 2 0 0 0 11 4.561z",
      key: "au4z13"
    }
  ],
  ["path", { d: "M11 4H8a2 2 0 0 0-2 2v14", key: "74r1mk" }],
  ["path", { d: "M14 12h.01", key: "1jfl7z" }],
  ["path", { d: "M22 20h-3", key: "vhrsz" }]
];
var DoorOpen = createLucideIcon("door-open", __iconNode525);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dot.js
var __iconNode526 = [["circle", { cx: "12.1", cy: "12.1", r: "1", key: "18d7e5" }]];
var Dot = createLucideIcon("dot", __iconNode526);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/download.js
var __iconNode527 = [
  ["path", { d: "M12 15V3", key: "m9g1x1" }],
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }],
  ["path", { d: "m7 10 5 5 5-5", key: "brsn70" }]
];
var Download = createLucideIcon("download", __iconNode527);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drafting-compass.js
var __iconNode528 = [
  ["path", { d: "m12.99 6.74 1.93 3.44", key: "iwagvd" }],
  ["path", { d: "M19.136 12a10 10 0 0 1-14.271 0", key: "ppmlo4" }],
  ["path", { d: "m21 21-2.16-3.84", key: "vylbct" }],
  ["path", { d: "m3 21 8.02-14.26", key: "1ssaw4" }],
  ["circle", { cx: "12", cy: "5", r: "2", key: "f1ur92" }]
];
var DraftingCompass = createLucideIcon("drafting-compass", __iconNode528);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drama.js
var __iconNode529 = [
  ["path", { d: "M10 11h.01", key: "d2at3l" }],
  ["path", { d: "M14 6h.01", key: "k028ub" }],
  ["path", { d: "M18 6h.01", key: "1v4wsw" }],
  ["path", { d: "M6.5 13.1h.01", key: "1748ia" }],
  ["path", { d: "M22 5c0 9-4 12-6 12s-6-3-6-12c0-2 2-3 6-3s6 1 6 3", key: "172yzv" }],
  ["path", { d: "M17.4 9.9c-.8.8-2 .8-2.8 0", key: "1obv0w" }],
  [
    "path",
    {
      d: "M10.1 7.1C9 7.2 7.7 7.7 6 8.6c-3.5 2-4.7 3.9-3.7 5.6 4.5 7.8 9.5 8.4 11.2 7.4.9-.5 1.9-2.1 1.9-4.7",
      key: "rqjl8i"
    }
  ],
  ["path", { d: "M9.1 16.5c.3-1.1 1.4-1.7 2.4-1.4", key: "1mr6wy" }]
];
var Drama = createLucideIcon("drama", __iconNode529);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dribbble.js
var __iconNode530 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M19.13 5.09C15.22 9.14 10 10.44 2.25 10.94", key: "hpej1" }],
  ["path", { d: "M21.75 12.84c-6.62-1.41-12.14 1-16.38 6.32", key: "1tr44o" }],
  ["path", { d: "M8.56 2.75c4.37 6 6 9.42 8 17.72", key: "kbh691" }]
];
var Dribbble = createLucideIcon("dribbble", __iconNode530);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drill.js
var __iconNode531 = [
  [
    "path",
    { d: "M10 18a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H5a3 3 0 0 1-3-3 1 1 0 0 1 1-1z", key: "ioqxb1" }
  ],
  [
    "path",
    {
      d: "M13 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1l-.81 3.242a1 1 0 0 1-.97.758H8",
      key: "1rs59n"
    }
  ],
  ["path", { d: "M14 4h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-3", key: "105ega" }],
  ["path", { d: "M18 6h4", key: "66u95g" }],
  ["path", { d: "m5 10-2 8", key: "xt2lic" }],
  ["path", { d: "m7 18 2-8", key: "1bzku2" }]
];
var Drill = createLucideIcon("drill", __iconNode531);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drone.js
var __iconNode532 = [
  ["path", { d: "M10 10 7 7", key: "zp14k7" }],
  ["path", { d: "m10 14-3 3", key: "1jrpxk" }],
  ["path", { d: "m14 10 3-3", key: "7tigam" }],
  ["path", { d: "m14 14 3 3", key: "vm23p3" }],
  ["path", { d: "M14.205 4.139a4 4 0 1 1 5.439 5.863", key: "1tm5p2" }],
  ["path", { d: "M19.637 14a4 4 0 1 1-5.432 5.868", key: "16egi2" }],
  ["path", { d: "M4.367 10a4 4 0 1 1 5.438-5.862", key: "1wta6a" }],
  ["path", { d: "M9.795 19.862a4 4 0 1 1-5.429-5.873", key: "q39hpv" }],
  ["rect", { x: "10", y: "8", width: "4", height: "8", rx: "1", key: "phrjt1" }]
];
var Drone = createLucideIcon("drone", __iconNode532);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/droplet-off.js
var __iconNode533 = [
  [
    "path",
    {
      d: "M18.715 13.186C18.29 11.858 17.384 10.607 16 9.5c-2-1.6-3.5-4-4-6.5a10.7 10.7 0 0 1-.884 2.586",
      key: "8suz2t"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    { d: "M8.795 8.797A11 11 0 0 1 8 9.5C6 11.1 5 13 5 15a7 7 0 0 0 13.222 3.208", key: "19dw9m" }
  ]
];
var DropletOff = createLucideIcon("droplet-off", __iconNode533);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/droplet.js
var __iconNode534 = [
  [
    "path",
    {
      d: "M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z",
      key: "c7niix"
    }
  ]
];
var Droplet = createLucideIcon("droplet", __iconNode534);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/droplets.js
var __iconNode535 = [
  [
    "path",
    {
      d: "M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z",
      key: "1ptgy4"
    }
  ],
  [
    "path",
    {
      d: "M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97",
      key: "1sl1rz"
    }
  ]
];
var Droplets = createLucideIcon("droplets", __iconNode535);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drum.js
var __iconNode536 = [
  ["path", { d: "m2 2 8 8", key: "1v6059" }],
  ["path", { d: "m22 2-8 8", key: "173r8a" }],
  ["ellipse", { cx: "12", cy: "9", rx: "10", ry: "5", key: "liohsx" }],
  ["path", { d: "M7 13.4v7.9", key: "1yi6u9" }],
  ["path", { d: "M12 14v8", key: "1tn2tj" }],
  ["path", { d: "M17 13.4v7.9", key: "eqz2v3" }],
  ["path", { d: "M2 9v8a10 5 0 0 0 20 0V9", key: "1750ul" }]
];
var Drum = createLucideIcon("drum", __iconNode536);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/drumstick.js
var __iconNode537 = [
  [
    "path",
    { d: "M15.4 15.63a7.875 6 135 1 1 6.23-6.23 4.5 3.43 135 0 0-6.23 6.23", key: "1dtqwm" }
  ],
  [
    "path",
    {
      d: "m8.29 12.71-2.6 2.6a2.5 2.5 0 1 0-1.65 4.65A2.5 2.5 0 1 0 8.7 18.3l2.59-2.59",
      key: "1oq1fw"
    }
  ]
];
var Drumstick = createLucideIcon("drumstick", __iconNode537);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/dumbbell.js
var __iconNode538 = [
  [
    "path",
    {
      d: "M17.596 12.768a2 2 0 1 0 2.829-2.829l-1.768-1.767a2 2 0 0 0 2.828-2.829l-2.828-2.828a2 2 0 0 0-2.829 2.828l-1.767-1.768a2 2 0 1 0-2.829 2.829z",
      key: "9m4mmf"
    }
  ],
  ["path", { d: "m2.5 21.5 1.4-1.4", key: "17g3f0" }],
  ["path", { d: "m20.1 3.9 1.4-1.4", key: "1qn309" }],
  [
    "path",
    {
      d: "M5.343 21.485a2 2 0 1 0 2.829-2.828l1.767 1.768a2 2 0 1 0 2.829-2.829l-6.364-6.364a2 2 0 1 0-2.829 2.829l1.768 1.767a2 2 0 0 0-2.828 2.829z",
      key: "1t2c92"
    }
  ],
  ["path", { d: "m9.6 14.4 4.8-4.8", key: "6umqxw" }]
];
var Dumbbell = createLucideIcon("dumbbell", __iconNode538);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ear-off.js
var __iconNode539 = [
  ["path", { d: "M6 18.5a3.5 3.5 0 1 0 7 0c0-1.57.92-2.52 2.04-3.46", key: "1qngmn" }],
  ["path", { d: "M6 8.5c0-.75.13-1.47.36-2.14", key: "b06bma" }],
  ["path", { d: "M8.8 3.15A6.5 6.5 0 0 1 19 8.5c0 1.63-.44 2.81-1.09 3.76", key: "g10hsz" }],
  ["path", { d: "M12.5 6A2.5 2.5 0 0 1 15 8.5M10 13a2 2 0 0 0 1.82-1.18", key: "ygzou7" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var EarOff = createLucideIcon("ear-off", __iconNode539);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ear.js
var __iconNode540 = [
  ["path", { d: "M6 8.5a6.5 6.5 0 1 1 13 0c0 6-6 6-6 10a3.5 3.5 0 1 1-7 0", key: "1dfaln" }],
  ["path", { d: "M15 8.5a2.5 2.5 0 0 0-5 0v1a2 2 0 1 1 0 4", key: "1qnva7" }]
];
var Ear = createLucideIcon("ear", __iconNode540);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/earth-lock.js
var __iconNode541 = [
  ["path", { d: "M7 3.34V5a3 3 0 0 0 3 3", key: "w732o8" }],
  ["path", { d: "M11 21.95V18a2 2 0 0 0-2-2 2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05", key: "f02343" }],
  ["path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54", key: "1djwo0" }],
  ["path", { d: "M12 2a10 10 0 1 0 9.54 13", key: "zjsr6q" }],
  ["path", { d: "M20 6V4a2 2 0 1 0-4 0v2", key: "1of5e8" }],
  ["rect", { width: "8", height: "5", x: "14", y: "6", rx: "1", key: "1fmf51" }]
];
var EarthLock = createLucideIcon("earth-lock", __iconNode541);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/earth.js
var __iconNode542 = [
  ["path", { d: "M21.54 15H17a2 2 0 0 0-2 2v4.54", key: "1djwo0" }],
  [
    "path",
    {
      d: "M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17",
      key: "1tzkfa"
    }
  ],
  ["path", { d: "M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05", key: "14pb5j" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Earth = createLucideIcon("earth", __iconNode542);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/eclipse.js
var __iconNode543 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 2a7 7 0 1 0 10 10", key: "1yuj32" }]
];
var Eclipse = createLucideIcon("eclipse", __iconNode543);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/egg-fried.js
var __iconNode544 = [
  ["circle", { cx: "11.5", cy: "12.5", r: "3.5", key: "1cl1mi" }],
  [
    "path",
    {
      d: "M3 8c0-3.5 2.5-6 6.5-6 5 0 4.83 3 7.5 5s5 2 5 6c0 4.5-2.5 6.5-7 6.5-2.5 0-2.5 2.5-6 2.5s-7-2-7-5.5c0-3 1.5-3 1.5-5C3.5 10 3 9 3 8Z",
      key: "165ef9"
    }
  ]
];
var EggFried = createLucideIcon("egg-fried", __iconNode544);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/egg-off.js
var __iconNode545 = [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20 14.347V14c0-6-4-12-8-12-1.078 0-2.157.436-3.157 1.19", key: "13g2jy" }],
  ["path", { d: "M6.206 6.21C4.871 8.4 4 11.2 4 14a8 8 0 0 0 14.568 4.568", key: "1581id" }]
];
var EggOff = createLucideIcon("egg-off", __iconNode545);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/egg.js
var __iconNode546 = [
  ["path", { d: "M12 2C8 2 4 8 4 14a8 8 0 0 0 16 0c0-6-4-12-8-12", key: "1le142" }]
];
var Egg = createLucideIcon("egg", __iconNode546);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js
var __iconNode547 = [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["circle", { cx: "12", cy: "19", r: "1", key: "lyex9k" }]
];
var EllipsisVertical = createLucideIcon("ellipsis-vertical", __iconNode547);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ellipsis.js
var __iconNode548 = [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "19", cy: "12", r: "1", key: "1wjl8i" }],
  ["circle", { cx: "5", cy: "12", r: "1", key: "1pcz8c" }]
];
var Ellipsis = createLucideIcon("ellipsis", __iconNode548);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/equal-approximately.js
var __iconNode549 = [
  ["path", { d: "M5 15a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0", key: "yrdkhy" }],
  ["path", { d: "M5 9a6.5 6.5 0 0 1 7 0 6.5 6.5 0 0 0 7 0", key: "gzkvyz" }]
];
var EqualApproximately = createLucideIcon("equal-approximately", __iconNode549);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/equal-not.js
var __iconNode550 = [
  ["line", { x1: "5", x2: "19", y1: "9", y2: "9", key: "1nwqeh" }],
  ["line", { x1: "5", x2: "19", y1: "15", y2: "15", key: "g8yjpy" }],
  ["line", { x1: "19", x2: "5", y1: "5", y2: "19", key: "1x9vlm" }]
];
var EqualNot = createLucideIcon("equal-not", __iconNode550);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/equal.js
var __iconNode551 = [
  ["line", { x1: "5", x2: "19", y1: "9", y2: "9", key: "1nwqeh" }],
  ["line", { x1: "5", x2: "19", y1: "15", y2: "15", key: "g8yjpy" }]
];
var Equal = createLucideIcon("equal", __iconNode551);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/eraser.js
var __iconNode552 = [
  [
    "path",
    {
      d: "M21 21H8a2 2 0 0 1-1.42-.587l-3.994-3.999a2 2 0 0 1 0-2.828l10-10a2 2 0 0 1 2.829 0l5.999 6a2 2 0 0 1 0 2.828L12.834 21",
      key: "g5wo59"
    }
  ],
  ["path", { d: "m5.082 11.09 8.828 8.828", key: "1wx5vj" }]
];
var Eraser = createLucideIcon("eraser", __iconNode552);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ethernet-port.js
var __iconNode553 = [
  [
    "path",
    {
      d: "m15 20 3-3h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h2l3 3z",
      key: "rbahqx"
    }
  ],
  ["path", { d: "M6 8v1", key: "1636ez" }],
  ["path", { d: "M10 8v1", key: "1talb4" }],
  ["path", { d: "M14 8v1", key: "1rsfgr" }],
  ["path", { d: "M18 8v1", key: "gnkwox" }]
];
var EthernetPort = createLucideIcon("ethernet-port", __iconNode553);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/euro.js
var __iconNode554 = [
  ["path", { d: "M4 10h12", key: "1y6xl8" }],
  ["path", { d: "M4 14h9", key: "1loblj" }],
  [
    "path",
    {
      d: "M19 6a7.7 7.7 0 0 0-5.2-2A7.9 7.9 0 0 0 6 12c0 4.4 3.5 8 7.8 8 2 0 3.8-.8 5.2-2",
      key: "1j6lzo"
    }
  ]
];
var Euro = createLucideIcon("euro", __iconNode554);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/expand.js
var __iconNode555 = [
  ["path", { d: "m15 15 6 6", key: "1s409w" }],
  ["path", { d: "m15 9 6-6", key: "ko1vev" }],
  ["path", { d: "M21 16v5h-5", key: "1ck2sf" }],
  ["path", { d: "M21 8V3h-5", key: "1qoq8a" }],
  ["path", { d: "M3 16v5h5", key: "1t08am" }],
  ["path", { d: "m3 21 6-6", key: "wwnumi" }],
  ["path", { d: "M3 8V3h5", key: "1ln10m" }],
  ["path", { d: "M9 9 3 3", key: "v551iv" }]
];
var Expand = createLucideIcon("expand", __iconNode555);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ev-charger.js
var __iconNode556 = [
  [
    "path",
    { d: "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 4 0v-6.998a2 2 0 0 0-.59-1.42L18 5", key: "1wtuz0" }
  ],
  ["path", { d: "M14 21V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v16", key: "e09ifn" }],
  ["path", { d: "M2 21h13", key: "1x0fut" }],
  ["path", { d: "M3 7h11", key: "19efrr" }],
  ["path", { d: "m9 11-2 3h3l-2 3", key: "lmzxi1" }]
];
var EvCharger = createLucideIcon("ev-charger", __iconNode556);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/external-link.js
var __iconNode557 = [
  ["path", { d: "M15 3h6v6", key: "1q9fwt" }],
  ["path", { d: "M10 14 21 3", key: "gplh6r" }],
  ["path", { d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6", key: "a6xqqp" }]
];
var ExternalLink = createLucideIcon("external-link", __iconNode557);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/eye-closed.js
var __iconNode558 = [
  ["path", { d: "m15 18-.722-3.25", key: "1j64jw" }],
  ["path", { d: "M2 8a10.645 10.645 0 0 0 20 0", key: "1e7gxb" }],
  ["path", { d: "m20 15-1.726-2.05", key: "1cnuld" }],
  ["path", { d: "m4 15 1.726-2.05", key: "1dsqqd" }],
  ["path", { d: "m9 18 .722-3.25", key: "ypw2yx" }]
];
var EyeClosed = createLucideIcon("eye-closed", __iconNode558);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/eye-off.js
var __iconNode559 = [
  [
    "path",
    {
      d: "M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49",
      key: "ct8e1f"
    }
  ],
  ["path", { d: "M14.084 14.158a3 3 0 0 1-4.242-4.242", key: "151rxh" }],
  [
    "path",
    {
      d: "M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143",
      key: "13bj9a"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var EyeOff2 = createLucideIcon("eye-off", __iconNode559);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/factory.js
var __iconNode560 = [
  ["path", { d: "M12 16h.01", key: "1drbdi" }],
  ["path", { d: "M16 16h.01", key: "1f9h7w" }],
  [
    "path",
    {
      d: "M3 19a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8.5a.5.5 0 0 0-.769-.422l-4.462 2.844A.5.5 0 0 1 15 10.5v-2a.5.5 0 0 0-.769-.422L9.77 10.922A.5.5 0 0 1 9 10.5V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z",
      key: "1iv0i2"
    }
  ],
  ["path", { d: "M8 16h.01", key: "18s6g9" }]
];
var Factory = createLucideIcon("factory", __iconNode560);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/eye.js
var __iconNode561 = [
  [
    "path",
    {
      d: "M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",
      key: "1nclc0"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
];
var Eye2 = createLucideIcon("eye", __iconNode561);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/facebook.js
var __iconNode562 = [
  [
    "path",
    { d: "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z", key: "1jg4f8" }
  ]
];
var Facebook = createLucideIcon("facebook", __iconNode562);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fan.js
var __iconNode563 = [
  [
    "path",
    {
      d: "M10.827 16.379a6.082 6.082 0 0 1-8.618-7.002l5.412 1.45a6.082 6.082 0 0 1 7.002-8.618l-1.45 5.412a6.082 6.082 0 0 1 8.618 7.002l-5.412-1.45a6.082 6.082 0 0 1-7.002 8.618l1.45-5.412Z",
      key: "484a7f"
    }
  ],
  ["path", { d: "M12 12v.01", key: "u5ubse" }]
];
var Fan = createLucideIcon("fan", __iconNode563);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fast-forward.js
var __iconNode564 = [
  [
    "path",
    { d: "M12 6a2 2 0 0 1 3.414-1.414l6 6a2 2 0 0 1 0 2.828l-6 6A2 2 0 0 1 12 18z", key: "b19h5q" }
  ],
  [
    "path",
    { d: "M2 6a2 2 0 0 1 3.414-1.414l6 6a2 2 0 0 1 0 2.828l-6 6A2 2 0 0 1 2 18z", key: "h7h5ge" }
  ]
];
var FastForward = createLucideIcon("fast-forward", __iconNode564);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/feather.js
var __iconNode565 = [
  [
    "path",
    {
      d: "M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z",
      key: "18jl4k"
    }
  ],
  ["path", { d: "M16 8 2 22", key: "vp34q" }],
  ["path", { d: "M17.5 15H9", key: "1oz8nu" }]
];
var Feather = createLucideIcon("feather", __iconNode565);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ferris-wheel.js
var __iconNode566 = [
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m6.8 15-3.5 2", key: "hjy98k" }],
  ["path", { d: "m20.7 7-3.5 2", key: "f08gto" }],
  ["path", { d: "M6.8 9 3.3 7", key: "1aevh4" }],
  ["path", { d: "m20.7 17-3.5-2", key: "1liqo3" }],
  ["path", { d: "m9 22 3-8 3 8", key: "wees03" }],
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M18 18.7a9 9 0 1 0-12 0", key: "dhzg4g" }]
];
var FerrisWheel = createLucideIcon("ferris-wheel", __iconNode566);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/figma.js
var __iconNode567 = [
  ["path", { d: "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z", key: "1340ok" }],
  ["path", { d: "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z", key: "1hz3m3" }],
  ["path", { d: "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z", key: "1oz8n2" }],
  ["path", { d: "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z", key: "1ff65i" }],
  ["path", { d: "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z", key: "pdip6e" }]
];
var Figma = createLucideIcon("figma", __iconNode567);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fence.js
var __iconNode568 = [
  ["path", { d: "M4 3 2 5v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "1n2rgs" }],
  ["path", { d: "M6 8h4", key: "utf9t1" }],
  ["path", { d: "M6 18h4", key: "12yh4b" }],
  ["path", { d: "m12 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "3ha7mj" }],
  ["path", { d: "M14 8h4", key: "1r8wg2" }],
  ["path", { d: "M14 18h4", key: "1t3kbu" }],
  ["path", { d: "m20 3-2 2v15c0 .6.4 1 1 1h2c.6 0 1-.4 1-1V5Z", key: "dfd4e2" }]
];
var Fence = createLucideIcon("fence", __iconNode568);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-audio-2.js
var __iconNode569 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2", key: "17k7jt" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "3", cy: "17", r: "1", key: "vo6nti" }],
  ["path", { d: "M2 17v-3a4 4 0 0 1 8 0v3", key: "1ggdre" }],
  ["circle", { cx: "9", cy: "17", r: "1", key: "bc1fq4" }]
];
var FileAudio2 = createLucideIcon("file-audio-2", __iconNode569);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-archive.js
var __iconNode570 = [
  ["path", { d: "M10 12v-1", key: "v7bkov" }],
  ["path", { d: "M10 18v-2", key: "1cjy8d" }],
  ["path", { d: "M10 7V6", key: "dljcrl" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M15.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 .274 1.01", key: "gkbcor" }
  ],
  ["circle", { cx: "10", cy: "20", r: "2", key: "1xzdoj" }]
];
var FileArchive = createLucideIcon("file-archive", __iconNode570);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-audio.js
var __iconNode571 = [
  ["path", { d: "M17.5 22h.5a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "rslqgf" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M2 19a2 2 0 1 1 4 0v1a2 2 0 1 1-4 0v-4a6 6 0 0 1 12 0v4a2 2 0 1 1-4 0v-1a2 2 0 1 1 4 0",
      key: "9f7x3i"
    }
  ]
];
var FileAudio = createLucideIcon("file-audio", __iconNode571);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-axis-3d.js
var __iconNode572 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 18 4-4", key: "12zab0" }],
  ["path", { d: "M8 10v8h8", key: "tlaukw" }]
];
var FileAxis3d = createLucideIcon("file-axis-3d", __iconNode572);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-badge-2.js
var __iconNode573 = [
  [
    "path",
    {
      d: "m13.69 12.479 1.29 4.88a.5.5 0 0 1-.697.591l-1.844-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88",
      key: "7a4gmr"
    }
  ],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }]
];
var FileBadge2 = createLucideIcon("file-badge-2", __iconNode573);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-badge.js
var __iconNode574 = [
  ["path", { d: "M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.072", key: "n6s66f" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "m6.69 16.479 1.29 4.88a.5.5 0 0 1-.698.591l-1.843-.849a1 1 0 0 0-.88.001l-1.846.85a.5.5 0 0 1-.693-.593l1.29-4.88",
      key: "1e6yvx"
    }
  ],
  ["circle", { cx: "5", cy: "14", r: "3", key: "ufru5t" }]
];
var FileBadge = createLucideIcon("file-badge", __iconNode574);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-box.js
var __iconNode575 = [
  ["path", { d: "M14.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "16lz6z" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M3 13.1a2 2 0 0 0-1 1.76v3.24a2 2 0 0 0 .97 1.78L6 21.7a2 2 0 0 0 2.03.01L11 19.9a2 2 0 0 0 1-1.76V14.9a2 2 0 0 0-.97-1.78L8 11.3a2 2 0 0 0-2.03-.01Z",
      key: "99pj1s"
    }
  ],
  ["path", { d: "M7 17v5", key: "1yj1jh" }],
  ["path", { d: "M11.7 14.2 7 17l-4.7-2.8", key: "1yk8tc" }]
];
var FileBox = createLucideIcon("file-box", __iconNode575);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-chart-column-increasing.js
var __iconNode576 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 18v-2", key: "qcmpov" }],
  ["path", { d: "M12 18v-4", key: "q1q25u" }],
  ["path", { d: "M16 18v-6", key: "15y0np" }]
];
var FileChartColumnIncreasing = createLucideIcon("file-chart-column-increasing", __iconNode576);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-chart-column.js
var __iconNode577 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 18v-1", key: "zg0ygc" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }],
  ["path", { d: "M16 18v-3", key: "j5jt4h" }]
];
var FileChartColumn = createLucideIcon("file-chart-column", __iconNode577);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-chart-pie.js
var __iconNode578 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3.5", key: "13ddob" }],
  ["path", { d: "M4.017 11.512a6 6 0 1 0 8.466 8.475", key: "s6vs5t" }],
  [
    "path",
    {
      d: "M9 16a1 1 0 0 1-1-1v-4c0-.552.45-1.008.995-.917a6 6 0 0 1 4.922 4.922c.091.544-.365.995-.917.995z",
      key: "1dl6s6"
    }
  ]
];
var FileChartPie = createLucideIcon("file-chart-pie", __iconNode578);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-chart-line.js
var __iconNode579 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m16 13-3.5 3.5-2-2L8 17", key: "zz7yod" }]
];
var FileChartLine = createLucideIcon("file-chart-line", __iconNode579);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-check-2.js
var __iconNode580 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m3 15 2 2 4-4", key: "1lhrkk" }]
];
var FileCheck2 = createLucideIcon("file-check-2", __iconNode580);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-check.js
var __iconNode581 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m9 15 2 2 4-4", key: "1grp1n" }]
];
var FileCheck = createLucideIcon("file-check", __iconNode581);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-clock.js
var __iconNode582 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "37hlfg" }],
  ["path", { d: "M8 14v2.2l1.6 1", key: "6m4bie" }],
  ["circle", { cx: "8", cy: "16", r: "6", key: "10v15b" }]
];
var FileClock = createLucideIcon("file-clock", __iconNode582);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-code-2.js
var __iconNode583 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m5 12-3 3 3 3", key: "oke12k" }],
  ["path", { d: "m9 18 3-3-3-3", key: "112psh" }]
];
var FileCode2 = createLucideIcon("file-code-2", __iconNode583);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-cog.js
var __iconNode584 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m2.305 15.53.923-.382", key: "yfp9st" }],
  ["path", { d: "m3.228 12.852-.924-.383", key: "bckynb" }],
  [
    "path",
    {
      d: "M4.677 21.5a2 2 0 0 0 1.313.5H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v2.5",
      key: "1yo3oz"
    }
  ],
  ["path", { d: "m4.852 11.228-.383-.923", key: "1j88i9" }],
  ["path", { d: "m4.852 16.772-.383.924", key: "sag1dv" }],
  ["path", { d: "m7.148 11.228.383-.923", key: "rj39hk" }],
  ["path", { d: "m7.53 17.696-.382-.924", key: "1uu5cs" }],
  ["path", { d: "m8.772 12.852.923-.383", key: "13811l" }],
  ["path", { d: "m8.772 15.148.923.383", key: "z1a5l0" }],
  ["circle", { cx: "6", cy: "14", r: "3", key: "a1xfv6" }]
];
var FileCog = createLucideIcon("file-cog", __iconNode584);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-code.js
var __iconNode585 = [
  ["path", { d: "M10 12.5 8 15l2 2.5", key: "1tg20x" }],
  ["path", { d: "m14 12.5 2 2.5-2 2.5", key: "yinavb" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }]
];
var FileCode = createLucideIcon("file-code", __iconNode585);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-diff.js
var __iconNode586 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }],
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "M9 17h6", key: "r8uit2" }]
];
var FileDiff = createLucideIcon("file-diff", __iconNode586);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-digit.js
var __iconNode587 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "4", height: "6", x: "2", y: "12", rx: "2", key: "jm304g" }],
  ["path", { d: "M10 12h2v6", key: "12zw74" }],
  ["path", { d: "M10 18h4", key: "1ulq68" }]
];
var FileDigit = createLucideIcon("file-digit", __iconNode587);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-down.js
var __iconNode588 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }],
  ["path", { d: "m9 15 3 3 3-3", key: "1npd3o" }]
];
var FileDown = createLucideIcon("file-down", __iconNode588);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-heart.js
var __iconNode589 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M2.62 13.8A2.25 2.25 0 1 1 6 10.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z",
      key: "1cfqzq"
    }
  ],
  [
    "path",
    { d: "M4 6.005V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-1.9-1.376", key: "gjdjhc" }
  ]
];
var FileHeart = createLucideIcon("file-heart", __iconNode589);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-image.js
var __iconNode590 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "10", cy: "12", r: "2", key: "737tya" }],
  ["path", { d: "m20 17-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22", key: "wt3hpn" }]
];
var FileImage = createLucideIcon("file-image", __iconNode590);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-input.js
var __iconNode591 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M2 15h10", key: "jfw4w8" }],
  ["path", { d: "m9 18 3-3-3-3", key: "112psh" }]
];
var FileInput = createLucideIcon("file-input", __iconNode591);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-json-2.js
var __iconNode592 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1", key: "fq0c9t" }
  ],
  [
    "path",
    { d: "M8 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1", key: "4gibmv" }
  ]
];
var FileJson2 = createLucideIcon("file-json-2", __iconNode592);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-json.js
var __iconNode593 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1", key: "1oajmo" }
  ],
  [
    "path",
    { d: "M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1", key: "mpwhp6" }
  ]
];
var FileJson = createLucideIcon("file-json", __iconNode593);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-key-2.js
var __iconNode594 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v6", key: "rc0qvx" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "4", cy: "16", r: "2", key: "1ehqvc" }],
  ["path", { d: "m10 10-4.5 4.5", key: "7fwrp6" }],
  ["path", { d: "m9 11 1 1", key: "wa6s5q" }]
];
var FileKey2 = createLucideIcon("file-key-2", __iconNode594);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-key.js
var __iconNode595 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["circle", { cx: "10", cy: "16", r: "2", key: "4ckbqe" }],
  ["path", { d: "m16 10-4.5 4.5", key: "7p3ebg" }],
  ["path", { d: "m15 11 1 1", key: "1bsyx3" }]
];
var FileKey = createLucideIcon("file-key", __iconNode595);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-lock.js
var __iconNode596 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["rect", { width: "8", height: "6", x: "8", y: "12", rx: "1", key: "3yr8at" }],
  ["path", { d: "M10 12v-2a2 2 0 1 1 4 0v2", key: "j4i8d" }]
];
var FileLock = createLucideIcon("file-lock", __iconNode596);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-lock-2.js
var __iconNode597 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v1", key: "jmtmu2" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "8", height: "5", x: "2", y: "13", rx: "1", key: "10y5wo" }],
  ["path", { d: "M8 13v-2a2 2 0 1 0-4 0v2", key: "1pdxzg" }]
];
var FileLock2 = createLucideIcon("file-lock-2", __iconNode597);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-minus-2.js
var __iconNode598 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M3 15h6", key: "4e2qda" }]
];
var FileMinus2 = createLucideIcon("file-minus-2", __iconNode598);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-minus.js
var __iconNode599 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }]
];
var FileMinus = createLucideIcon("file-minus", __iconNode599);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-music.js
var __iconNode600 = [
  ["path", { d: "M10.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v8.4", key: "1d3kfm" }],
  ["path", { d: "M8 18v-7.7L16 9v7", key: "1oie6o" }],
  ["circle", { cx: "14", cy: "16", r: "2", key: "1bzzi3" }],
  ["circle", { cx: "6", cy: "18", r: "2", key: "1fncim" }]
];
var FileMusic = createLucideIcon("file-music", __iconNode600);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-output.js
var __iconNode601 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M4 7V4a2 2 0 0 1 2-2 2 2 0 0 0-2 2", key: "1vk7w2" }],
  ["path", { d: "M4.063 20.999a2 2 0 0 0 2 1L18 22a2 2 0 0 0 2-2V7l-5-5H6", key: "1jink5" }],
  ["path", { d: "m5 11-3 3", key: "1dgrs4" }],
  ["path", { d: "m5 17-3-3h10", key: "1mvvaf" }]
];
var FileOutput = createLucideIcon("file-output", __iconNode601);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-pen-line.js
var __iconNode602 = [
  [
    "path",
    {
      d: "m18 5-2.414-2.414A2 2 0 0 0 14.172 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2",
      key: "142zxg"
    }
  ],
  [
    "path",
    {
      d: "M21.378 12.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "2t3380"
    }
  ],
  ["path", { d: "M8 18h1", key: "13wk12" }]
];
var FilePenLine = createLucideIcon("file-pen-line", __iconNode602);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-pen.js
var __iconNode603 = [
  ["path", { d: "M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5", key: "1couwa" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M13.378 15.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1y4qbx"
    }
  ]
];
var FilePen = createLucideIcon("file-pen", __iconNode603);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-play.js
var __iconNode604 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  [
    "path",
    {
      d: "M15.033 13.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56v-4.704a.645.645 0 0 1 .967-.56z",
      key: "1tzo1f"
    }
  ]
];
var FilePlay = createLucideIcon("file-play", __iconNode604);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-plus-2.js
var __iconNode605 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M3 15h6", key: "4e2qda" }],
  ["path", { d: "M6 12v6", key: "1u72j0" }]
];
var FilePlus2 = createLucideIcon("file-plus-2", __iconNode605);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-plus.js
var __iconNode606 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }]
];
var FilePlus = createLucideIcon("file-plus", __iconNode606);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-question-mark.js
var __iconNode607 = [
  ["path", { d: "M12 17h.01", key: "p32p05" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  ["path", { d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3", key: "mhlwft" }]
];
var FileQuestionMark = createLucideIcon("file-question-mark", __iconNode607);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-scan.js
var __iconNode608 = [
  ["path", { d: "M20 10V7l-5-5H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4", key: "1rdf37" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M16 14a2 2 0 0 0-2 2", key: "ceaadl" }],
  ["path", { d: "M20 14a2 2 0 0 1 2 2", key: "1ny6zw" }],
  ["path", { d: "M20 22a2 2 0 0 0 2-2", key: "1l9q4k" }],
  ["path", { d: "M16 22a2 2 0 0 1-2-2", key: "1wqh5n" }]
];
var FileScan = createLucideIcon("file-scan", __iconNode608);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-search-2.js
var __iconNode609 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["circle", { cx: "11.5", cy: "14.5", r: "2.5", key: "1bq0ko" }],
  ["path", { d: "M13.3 16.3 15 18", key: "2quom7" }]
];
var FileSearch2 = createLucideIcon("file-search-2", __iconNode609);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-search.js
var __iconNode610 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4.268 21a2 2 0 0 0 1.727 1H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3", key: "ms7g94" }
  ],
  ["path", { d: "m9 18-1.5-1.5", key: "1j6qii" }],
  ["circle", { cx: "5", cy: "14", r: "3", key: "ufru5t" }]
];
var FileSearch = createLucideIcon("file-search", __iconNode610);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-spreadsheet.js
var __iconNode611 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 13h2", key: "yr2amv" }],
  ["path", { d: "M14 13h2", key: "un5t4a" }],
  ["path", { d: "M8 17h2", key: "2yhykz" }],
  ["path", { d: "M14 17h2", key: "10kma7" }]
];
var FileSpreadsheet = createLucideIcon("file-spreadsheet", __iconNode611);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-sliders.js
var __iconNode612 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M10 11v2", key: "1s651w" }],
  ["path", { d: "M8 17h8", key: "wh5c61" }],
  ["path", { d: "M14 16v2", key: "12fp5e" }]
];
var FileSliders = createLucideIcon("file-sliders", __iconNode612);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-stack.js
var __iconNode613 = [
  ["path", { d: "M11 21a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1", key: "likhh7" }],
  ["path", { d: "M16 16a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1", key: "17ky3x" }],
  [
    "path",
    {
      d: "M21 6a2 2 0 0 0-.586-1.414l-2-2A2 2 0 0 0 17 2h-3a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1z",
      key: "1hyeo0"
    }
  ]
];
var FileStack = createLucideIcon("file-stack", __iconNode613);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-symlink.js
var __iconNode614 = [
  ["path", { d: "m10 18 3-3-3-3", key: "18f6ys" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    {
      d: "M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7",
      key: "50q2rw"
    }
  ]
];
var FileSymlink = createLucideIcon("file-symlink", __iconNode614);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-terminal.js
var __iconNode615 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 16 2-2-2-2", key: "10vzyd" }],
  ["path", { d: "M12 18h4", key: "1wd2n7" }]
];
var FileTerminal = createLucideIcon("file-terminal", __iconNode615);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-text.js
var __iconNode616 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M10 9H8", key: "b1mrlr" }],
  ["path", { d: "M16 13H8", key: "t4e002" }],
  ["path", { d: "M16 17H8", key: "z1uh3a" }]
];
var FileText = createLucideIcon("file-text", __iconNode616);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-type.js
var __iconNode617 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M9 13v-1h6v1", key: "1bb014" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  ["path", { d: "M11 18h2", key: "12mj7e" }]
];
var FileType = createLucideIcon("file-type", __iconNode617);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-type-2.js
var __iconNode618 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M2 13v-1h6v1", key: "1dh9dg" }],
  ["path", { d: "M5 12v6", key: "150t9c" }],
  ["path", { d: "M4 18h2", key: "1xrofg" }]
];
var FileType2 = createLucideIcon("file-type-2", __iconNode618);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-up.js
var __iconNode619 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  ["path", { d: "m15 15-3-3-3 3", key: "15xj92" }]
];
var FileUp = createLucideIcon("file-up", __iconNode619);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-user.js
var __iconNode620 = [
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M15 18a3 3 0 1 0-6 0", key: "16awa0" }],
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7z", key: "1mlx9k" }],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }]
];
var FileUser = createLucideIcon("file-user", __iconNode620);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-video-camera.js
var __iconNode621 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["rect", { width: "8", height: "6", x: "2", y: "12", rx: "1", key: "1a6c1e" }],
  [
    "path",
    {
      d: "m10 13.843 3.033-1.755a.645.645 0 0 1 .967.56v4.704a.645.645 0 0 1-.967.56L10 16.157",
      key: "vd9ei0"
    }
  ]
];
var FileVideoCamera = createLucideIcon("file-video-camera", __iconNode621);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-volume.js
var __iconNode622 = [
  ["path", { d: "M11 11a5 5 0 0 1 0 6", key: "193qb2" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  [
    "path",
    { d: "M4 6.765V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-.93-.23", key: "ifyjnl" }
  ],
  [
    "path",
    {
      d: "M7 10.51a.5.5 0 0 0-.826-.38l-1.893 1.628A1 1 0 0 1 3.63 12H2.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.129a1 1 0 0 1 .652.242l1.893 1.63a.5.5 0 0 0 .826-.38z",
      key: "mk8rxu"
    }
  ]
];
var FileVolume = createLucideIcon("file-volume", __iconNode622);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-volume-2.js
var __iconNode623 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M11.5 13.5a2.5 2.5 0 0 1 0 3", key: "1fccat" }],
  ["path", { d: "M15 12a5 5 0 0 1 0 6", key: "ps46cm" }]
];
var FileVolume2 = createLucideIcon("file-volume-2", __iconNode623);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-warning.js
var __iconNode624 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M12 9v4", key: "juzpu7" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
];
var FileWarning = createLucideIcon("file-warning", __iconNode624);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-x-2.js
var __iconNode625 = [
  ["path", { d: "M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4", key: "1pf5j1" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m8 12.5-5 5", key: "b853mi" }],
  ["path", { d: "m3 12.5 5 5", key: "1qls4r" }]
];
var FileX2 = createLucideIcon("file-x-2", __iconNode625);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file-x.js
var __iconNode626 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "m14.5 12.5-5 5", key: "b62r18" }],
  ["path", { d: "m9.5 12.5 5 5", key: "1rk7el" }]
];
var FileX = createLucideIcon("file-x", __iconNode626);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/file.js
var __iconNode627 = [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }]
];
var File = createLucideIcon("file", __iconNode627);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/files.js
var __iconNode628 = [
  [
    "path",
    {
      d: "M15 2a2 2 0 0 1 1.414.586l4 4A2 2 0 0 1 21 8v7a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z",
      key: "1vo8kb"
    }
  ],
  ["path", { d: "M15 2v4a2 2 0 0 0 2 2h4", key: "sud9ri" }],
  ["path", { d: "M5 7a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h8a2 2 0 0 0 1.732-1", key: "l4dndm" }]
];
var Files = createLucideIcon("files", __iconNode628);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/film.js
var __iconNode629 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 3v18", key: "bbkbws" }],
  ["path", { d: "M3 7.5h4", key: "zfgn84" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "M3 16.5h4", key: "1230mu" }],
  ["path", { d: "M17 3v18", key: "in4fa5" }],
  ["path", { d: "M17 7.5h4", key: "myr1c1" }],
  ["path", { d: "M17 16.5h4", key: "go4c1d" }]
];
var Film = createLucideIcon("film", __iconNode629);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fingerprint.js
var __iconNode630 = [
  ["path", { d: "M12 10a2 2 0 0 0-2 2c0 1.02-.1 2.51-.26 4", key: "1nerag" }],
  ["path", { d: "M14 13.12c0 2.38 0 6.38-1 8.88", key: "o46ks0" }],
  ["path", { d: "M17.29 21.02c.12-.6.43-2.3.5-3.02", key: "ptglia" }],
  ["path", { d: "M2 12a10 10 0 0 1 18-6", key: "ydlgp0" }],
  ["path", { d: "M2 16h.01", key: "1gqxmh" }],
  ["path", { d: "M21.8 16c.2-2 .131-5.354 0-6", key: "drycrb" }],
  ["path", { d: "M5 19.5C5.5 18 6 15 6 12a6 6 0 0 1 .34-2", key: "1tidbn" }],
  ["path", { d: "M8.65 22c.21-.66.45-1.32.57-2", key: "13wd9y" }],
  ["path", { d: "M9 6.8a6 6 0 0 1 9 5.2v2", key: "1fr1j5" }]
];
var Fingerprint = createLucideIcon("fingerprint", __iconNode630);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fire-extinguisher.js
var __iconNode631 = [
  ["path", { d: "M15 6.5V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3.5", key: "sqyvz" }],
  ["path", { d: "M9 18h8", key: "i7pszb" }],
  ["path", { d: "M18 3h-3", key: "7idoqj" }],
  ["path", { d: "M11 3a6 6 0 0 0-6 6v11", key: "1v5je3" }],
  ["path", { d: "M5 13h4", key: "svpcxo" }],
  ["path", { d: "M17 10a4 4 0 0 0-8 0v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2Z", key: "vsjego" }]
];
var FireExtinguisher = createLucideIcon("fire-extinguisher", __iconNode631);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fish-off.js
var __iconNode632 = [
  [
    "path",
    {
      d: "M18 12.47v.03m0-.5v.47m-.475 5.056A6.744 6.744 0 0 1 15 18c-3.56 0-7.56-2.53-8.5-6 .348-1.28 1.114-2.433 2.121-3.38m3.444-2.088A8.802 8.802 0 0 1 15 6c3.56 0 6.06 2.54 7 6-.309 1.14-.786 2.177-1.413 3.058",
      key: "1j1hse"
    }
  ],
  [
    "path",
    {
      d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33m7.48-4.372A9.77 9.77 0 0 1 16 6.07m0 11.86a9.77 9.77 0 0 1-1.728-3.618",
      key: "1q46z8"
    }
  ],
  [
    "path",
    {
      d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98M8.53 3h5.27a2 2 0 0 1 1.98 1.67l.23 1.4M2 2l20 20",
      key: "1407gh"
    }
  ]
];
var FishOff = createLucideIcon("fish-off", __iconNode632);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fish-symbol.js
var __iconNode633 = [
  ["path", { d: "M2 16s9-15 20-4C11 23 2 8 2 8", key: "h4oh4o" }]
];
var FishSymbol = createLucideIcon("fish-symbol", __iconNode633);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fish.js
var __iconNode634 = [
  [
    "path",
    {
      d: "M6.5 12c.94-3.46 4.94-6 8.5-6 3.56 0 6.06 2.54 7 6-.94 3.47-3.44 6-7 6s-7.56-2.53-8.5-6Z",
      key: "15baut"
    }
  ],
  ["path", { d: "M18 12v.5", key: "18hhni" }],
  ["path", { d: "M16 17.93a9.77 9.77 0 0 1 0-11.86", key: "16dt7o" }],
  [
    "path",
    {
      d: "M7 10.67C7 8 5.58 5.97 2.73 5.5c-1 1.5-1 5 .23 6.5-1.24 1.5-1.24 5-.23 6.5C5.58 18.03 7 16 7 13.33",
      key: "l9di03"
    }
  ],
  [
    "path",
    { d: "M10.46 7.26C10.2 5.88 9.17 4.24 8 3h5.8a2 2 0 0 1 1.98 1.67l.23 1.4", key: "1kjonw" }
  ],
  [
    "path",
    { d: "m16.01 17.93-.23 1.4A2 2 0 0 1 13.8 21H9.5a5.96 5.96 0 0 0 1.49-3.98", key: "1zlm23" }
  ]
];
var Fish = createLucideIcon("fish", __iconNode634);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flag-triangle-left.js
var __iconNode635 = [
  [
    "path",
    { d: "M18 22V2.8a.8.8 0 0 0-1.17-.71L5.45 7.78a.8.8 0 0 0 0 1.44L18 15.5", key: "rbbtmw" }
  ]
];
var FlagTriangleLeft = createLucideIcon("flag-triangle-left", __iconNode635);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flag-off.js
var __iconNode636 = [
  ["path", { d: "M16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528", key: "1q158e" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M4 22V4", key: "1plyxx" }],
  ["path", { d: "M7.656 2H8c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10.347", key: "xj1b71" }]
];
var FlagOff = createLucideIcon("flag-off", __iconNode636);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flag-triangle-right.js
var __iconNode637 = [
  [
    "path",
    { d: "M6 22V2.8a.8.8 0 0 1 1.17-.71l11.38 5.69a.8.8 0 0 1 0 1.44L6 15.5", key: "kfjsu0" }
  ]
];
var FlagTriangleRight = createLucideIcon("flag-triangle-right", __iconNode637);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flag.js
var __iconNode638 = [
  [
    "path",
    {
      d: "M4 22V4a1 1 0 0 1 .4-.8A6 6 0 0 1 8 2c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10a1 1 0 0 1-.4.8A6 6 0 0 1 16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528",
      key: "1jaruq"
    }
  ]
];
var Flag = createLucideIcon("flag", __iconNode638);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flame-kindling.js
var __iconNode639 = [
  [
    "path",
    {
      d: "M12 2c1 3 2.5 3.5 3.5 4.5A5 5 0 0 1 17 10a5 5 0 1 1-10 0c0-.3 0-.6.1-.9a2 2 0 1 0 3.3-2C8 4.5 11 2 12 2Z",
      key: "1ir223"
    }
  ],
  ["path", { d: "m5 22 14-4", key: "1brv4h" }],
  ["path", { d: "m5 18 14 4", key: "lgyyje" }]
];
var FlameKindling = createLucideIcon("flame-kindling", __iconNode639);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flame.js
var __iconNode640 = [
  [
    "path",
    {
      d: "M12 3q1 4 4 6.5t3 5.5a1 1 0 0 1-14 0 5 5 0 0 1 1-3 1 1 0 0 0 5 0c0-2-1.5-3-1.5-5q0-2 2.5-4",
      key: "1slcih"
    }
  ]
];
var Flame = createLucideIcon("flame", __iconNode640);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flashlight-off.js
var __iconNode641 = [
  ["path", { d: "M16 16v4a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4", key: "1r120k" }],
  ["path", { d: "M7 2h11v4c0 2-2 2-2 4v1", key: "dz1920" }],
  ["line", { x1: "11", x2: "18", y1: "6", y2: "6", key: "bi1vpe" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var FlashlightOff = createLucideIcon("flashlight-off", __iconNode641);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flashlight.js
var __iconNode642 = [
  [
    "path",
    {
      d: "M18 6c0 2-2 2-2 4v10a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2V10c0-2-2-2-2-4V2h12z",
      key: "1orkel"
    }
  ],
  ["line", { x1: "6", x2: "18", y1: "6", y2: "6", key: "1z11jq" }],
  ["line", { x1: "12", x2: "12", y1: "12", y2: "12", key: "1f4yc1" }]
];
var Flashlight = createLucideIcon("flashlight", __iconNode642);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flask-conical-off.js
var __iconNode643 = [
  ["path", { d: "M10 2v2.343", key: "15t272" }],
  ["path", { d: "M14 2v6.343", key: "sxr80q" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20 20a2 2 0 0 1-2 2H6a2 2 0 0 1-1.755-2.96l5.227-9.563", key: "k0duyd" }],
  ["path", { d: "M6.453 15H15", key: "1f0z33" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }]
];
var FlaskConicalOff = createLucideIcon("flask-conical-off", __iconNode643);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flask-conical.js
var __iconNode644 = [
  [
    "path",
    {
      d: "M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2",
      key: "18mbvz"
    }
  ],
  ["path", { d: "M6.453 15h11.094", key: "3shlmq" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }]
];
var FlaskConical = createLucideIcon("flask-conical", __iconNode644);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flask-round.js
var __iconNode645 = [
  ["path", { d: "M10 2v6.292a7 7 0 1 0 4 0V2", key: "1s42pc" }],
  ["path", { d: "M5 15h14", key: "m0yey3" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }]
];
var FlaskRound = createLucideIcon("flask-round", __iconNode645);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flip-horizontal.js
var __iconNode646 = [
  ["path", { d: "M8 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h3", key: "1i73f7" }],
  ["path", { d: "M16 3h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-3", key: "saxlbk" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 2v2", key: "tus03m" }]
];
var FlipHorizontal = createLucideIcon("flip-horizontal", __iconNode646);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flip-horizontal-2.js
var __iconNode647 = [
  ["path", { d: "m3 7 5 5-5 5V7", key: "couhi7" }],
  ["path", { d: "m21 7-5 5 5 5V7", key: "6ouia7" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 2v2", key: "tus03m" }]
];
var FlipHorizontal2 = createLucideIcon("flip-horizontal-2", __iconNode647);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flip-vertical-2.js
var __iconNode648 = [
  ["path", { d: "m17 3-5 5-5-5h10", key: "1ftt6x" }],
  ["path", { d: "m17 21-5-5-5 5h10", key: "1m0wmu" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
];
var FlipVertical2 = createLucideIcon("flip-vertical-2", __iconNode648);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flip-vertical.js
var __iconNode649 = [
  ["path", { d: "M21 8V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v3", key: "14bfxa" }],
  ["path", { d: "M21 16v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3", key: "14rx03" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
];
var FlipVertical = createLucideIcon("flip-vertical", __iconNode649);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flower-2.js
var __iconNode650 = [
  [
    "path",
    {
      d: "M12 5a3 3 0 1 1 3 3m-3-3a3 3 0 1 0-3 3m3-3v1M9 8a3 3 0 1 0 3 3M9 8h1m5 0a3 3 0 1 1-3 3m3-3h-1m-2 3v-1",
      key: "3pnvol"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  ["path", { d: "M12 10v12", key: "6ubwww" }],
  ["path", { d: "M12 22c4.2 0 7-1.667 7-5-4.2 0-7 1.667-7 5Z", key: "9hd38g" }],
  ["path", { d: "M12 22c-4.2 0-7-1.667-7-5 4.2 0 7 1.667 7 5Z", key: "ufn41s" }]
];
var Flower2 = createLucideIcon("flower-2", __iconNode650);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/flower.js
var __iconNode651 = [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  [
    "path",
    {
      d: "M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5",
      key: "14wa3c"
    }
  ],
  ["path", { d: "M12 7.5V9", key: "1oy5b0" }],
  ["path", { d: "M7.5 12H9", key: "eltsq1" }],
  ["path", { d: "M16.5 12H15", key: "vk5kw4" }],
  ["path", { d: "M12 16.5V15", key: "k7eayi" }],
  ["path", { d: "m8 8 1.88 1.88", key: "nxy4qf" }],
  ["path", { d: "M14.12 9.88 16 8", key: "1lst6k" }],
  ["path", { d: "m8 16 1.88-1.88", key: "h2eex1" }],
  ["path", { d: "M14.12 14.12 16 16", key: "uqkrx3" }]
];
var Flower = createLucideIcon("flower", __iconNode651);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/focus.js
var __iconNode652 = [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }]
];
var Focus = createLucideIcon("focus", __iconNode652);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fold-vertical.js
var __iconNode653 = [
  ["path", { d: "M12 22v-6", key: "6o8u61" }],
  ["path", { d: "M12 8V2", key: "1wkif3" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }],
  ["path", { d: "m15 19-3-3-3 3", key: "e37ymu" }],
  ["path", { d: "m15 5-3 3-3-3", key: "19d6lf" }]
];
var FoldVertical = createLucideIcon("fold-vertical", __iconNode653);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fold-horizontal.js
var __iconNode654 = [
  ["path", { d: "M2 12h6", key: "1wqiqv" }],
  ["path", { d: "M22 12h-6", key: "1eg9hc" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m19 9-3 3 3 3", key: "12ol22" }],
  ["path", { d: "m5 15 3-3-3-3", key: "1kdhjc" }]
];
var FoldHorizontal = createLucideIcon("fold-horizontal", __iconNode654);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-archive.js
var __iconNode655 = [
  ["circle", { cx: "15", cy: "19", r: "2", key: "u2pros" }],
  [
    "path",
    {
      d: "M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1",
      key: "1jj40k"
    }
  ],
  ["path", { d: "M15 11v-1", key: "cntcp" }],
  ["path", { d: "M15 17v-2", key: "1279jj" }]
];
var FolderArchive = createLucideIcon("folder-archive", __iconNode655);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-check.js
var __iconNode656 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "m9 13 2 2 4-4", key: "6343dt" }]
];
var FolderCheck = createLucideIcon("folder-check", __iconNode656);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-closed.js
var __iconNode657 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M2 10h20", key: "1ir3d8" }]
];
var FolderClosed = createLucideIcon("folder-closed", __iconNode657);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-clock.js
var __iconNode658 = [
  ["path", { d: "M16 14v2.2l1.6 1", key: "fo4ql5" }],
  [
    "path",
    {
      d: "M7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2",
      key: "1urifu"
    }
  ],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }]
];
var FolderClock = createLucideIcon("folder-clock", __iconNode658);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-code.js
var __iconNode659 = [
  ["path", { d: "M10 10.5 8 13l2 2.5", key: "m4t9c1" }],
  ["path", { d: "m14 10.5 2 2.5-2 2.5", key: "14w2eb" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2z",
      key: "1u1bxd"
    }
  ]
];
var FolderCode = createLucideIcon("folder-code", __iconNode659);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-cog.js
var __iconNode660 = [
  [
    "path",
    {
      d: "M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.98a2 2 0 0 1 1.69.9l.66 1.2A2 2 0 0 0 12 6h8a2 2 0 0 1 2 2v3.3",
      key: "128dxu"
    }
  ],
  ["path", { d: "m14.305 19.53.923-.382", key: "3m78fa" }],
  ["path", { d: "m15.228 16.852-.923-.383", key: "npixar" }],
  ["path", { d: "m16.852 15.228-.383-.923", key: "5xggr7" }],
  ["path", { d: "m16.852 20.772-.383.924", key: "dpfhf9" }],
  ["path", { d: "m19.148 15.228.383-.923", key: "1reyyz" }],
  ["path", { d: "m19.53 21.696-.382-.924", key: "1goivc" }],
  ["path", { d: "m20.772 16.852.924-.383", key: "htqkph" }],
  ["path", { d: "m20.772 19.148.924.383", key: "9w9pjp" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var FolderCog = createLucideIcon("folder-cog", __iconNode660);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-dot.js
var __iconNode661 = [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "1", key: "49l61u" }]
];
var FolderDot = createLucideIcon("folder-dot", __iconNode661);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-down.js
var __iconNode662 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "m15 13-3 3-3-3", key: "6j2sf0" }]
];
var FolderDown = createLucideIcon("folder-down", __iconNode662);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-git-2.js
var __iconNode663 = [
  [
    "path",
    {
      d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5",
      key: "1w6njk"
    }
  ],
  ["circle", { cx: "13", cy: "12", r: "2", key: "1j92g6" }],
  ["path", { d: "M18 19c-2.8 0-5-2.2-5-5v8", key: "pkpw2h" }],
  ["circle", { cx: "20", cy: "19", r: "2", key: "1obnsp" }]
];
var FolderGit2 = createLucideIcon("folder-git-2", __iconNode663);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-git.js
var __iconNode664 = [
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M14 13h3", key: "1dgedf" }],
  ["path", { d: "M7 13h3", key: "1pygq7" }]
];
var FolderGit = createLucideIcon("folder-git", __iconNode664);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-heart.js
var __iconNode665 = [
  [
    "path",
    {
      d: "M10.638 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.417",
      key: "10r6g4"
    }
  ],
  [
    "path",
    {
      d: "M14.62 18.8A2.25 2.25 0 1 1 18 15.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z",
      key: "15cy7q"
    }
  ]
];
var FolderHeart = createLucideIcon("folder-heart", __iconNode665);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-input.js
var __iconNode666 = [
  [
    "path",
    {
      d: "M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1",
      key: "fm4g5t"
    }
  ],
  ["path", { d: "M2 13h10", key: "pgb2dq" }],
  ["path", { d: "m9 16 3-3-3-3", key: "6m91ic" }]
];
var FolderInput = createLucideIcon("folder-input", __iconNode666);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-kanban.js
var __iconNode667 = [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["path", { d: "M8 10v4", key: "tgpxqk" }],
  ["path", { d: "M12 10v2", key: "hh53o1" }],
  ["path", { d: "M16 10v6", key: "1d6xys" }]
];
var FolderKanban = createLucideIcon("folder-kanban", __iconNode667);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-key.js
var __iconNode668 = [
  ["circle", { cx: "16", cy: "20", r: "2", key: "1vifvg" }],
  [
    "path",
    {
      d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2",
      key: "3hgo9p"
    }
  ],
  ["path", { d: "m22 14-4.5 4.5", key: "1ef6z8" }],
  ["path", { d: "m21 15 1 1", key: "1ejcpy" }]
];
var FolderKey = createLucideIcon("folder-key", __iconNode668);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-lock.js
var __iconNode669 = [
  ["rect", { width: "8", height: "5", x: "14", y: "17", rx: "1", key: "19aais" }],
  [
    "path",
    {
      d: "M10 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v2.5",
      key: "1w6v7t"
    }
  ],
  ["path", { d: "M20 17v-2a2 2 0 1 0-4 0v2", key: "pwaxnr" }]
];
var FolderLock = createLucideIcon("folder-lock", __iconNode669);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-minus.js
var __iconNode670 = [
  ["path", { d: "M9 13h6", key: "1uhe8q" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
];
var FolderMinus = createLucideIcon("folder-minus", __iconNode670);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-open-dot.js
var __iconNode671 = [
  [
    "path",
    {
      d: "m6 14 1.45-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.55 6a2 2 0 0 1-1.94 1.5H4a2 2 0 0 1-2-2V5c0-1.1.9-2 2-2h3.93a2 2 0 0 1 1.66.9l.82 1.2a2 2 0 0 0 1.66.9H18a2 2 0 0 1 2 2v2",
      key: "1nmvlm"
    }
  ],
  ["circle", { cx: "14", cy: "15", r: "1", key: "1gm4qj" }]
];
var FolderOpenDot = createLucideIcon("folder-open-dot", __iconNode671);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-open.js
var __iconNode672 = [
  [
    "path",
    {
      d: "m6 14 1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2",
      key: "usdka0"
    }
  ]
];
var FolderOpen = createLucideIcon("folder-open", __iconNode672);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-output.js
var __iconNode673 = [
  [
    "path",
    {
      d: "M2 7.5V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-1.5",
      key: "1yk7aj"
    }
  ],
  ["path", { d: "M2 13h10", key: "pgb2dq" }],
  ["path", { d: "m5 10-3 3 3 3", key: "1r8ie0" }]
];
var FolderOutput = createLucideIcon("folder-output", __iconNode673);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-pen.js
var __iconNode674 = [
  [
    "path",
    {
      d: "M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5",
      key: "a8xqs0"
    }
  ],
  [
    "path",
    {
      d: "M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1saktj"
    }
  ]
];
var FolderPen = createLucideIcon("folder-pen", __iconNode674);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-plus.js
var __iconNode675 = [
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "M9 13h6", key: "1uhe8q" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
];
var FolderPlus = createLucideIcon("folder-plus", __iconNode675);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-root.js
var __iconNode676 = [
  [
    "path",
    {
      d: "M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2Z",
      key: "1fr9dc"
    }
  ],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }],
  ["path", { d: "M12 15v5", key: "11xva1" }]
];
var FolderRoot = createLucideIcon("folder-root", __iconNode676);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-search-2.js
var __iconNode677 = [
  ["circle", { cx: "11.5", cy: "12.5", r: "2.5", key: "1ea5ju" }],
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M13.3 14.3 15 16", key: "1y4v1n" }]
];
var FolderSearch2 = createLucideIcon("folder-search-2", __iconNode677);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-search.js
var __iconNode678 = [
  [
    "path",
    {
      d: "M10.7 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v4.1",
      key: "1bw5m7"
    }
  ],
  ["path", { d: "m21 21-1.9-1.9", key: "1g2n9r" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }]
];
var FolderSearch = createLucideIcon("folder-search", __iconNode678);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-symlink.js
var __iconNode679 = [
  [
    "path",
    {
      d: "M2 9.35V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7",
      key: "y8kt7d"
    }
  ],
  ["path", { d: "m8 16 3-3-3-3", key: "rlqrt1" }]
];
var FolderSymlink = createLucideIcon("folder-symlink", __iconNode679);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-sync.js
var __iconNode680 = [
  [
    "path",
    {
      d: "M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v.5",
      key: "1dkoa9"
    }
  ],
  ["path", { d: "M12 10v4h4", key: "1czhmt" }],
  ["path", { d: "m12 14 1.535-1.605a5 5 0 0 1 8 1.5", key: "lvuxfi" }],
  ["path", { d: "M22 22v-4h-4", key: "1ewp4q" }],
  ["path", { d: "m22 18-1.535 1.605a5 5 0 0 1-8-1.5", key: "14ync0" }]
];
var FolderSync = createLucideIcon("folder-sync", __iconNode680);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-tree.js
var __iconNode681 = [
  [
    "path",
    {
      d: "M20 10a1 1 0 0 0 1-1V6a1 1 0 0 0-1-1h-2.5a1 1 0 0 1-.8-.4l-.9-1.2A1 1 0 0 0 15 3h-2a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z",
      key: "hod4my"
    }
  ],
  [
    "path",
    {
      d: "M20 21a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-2.9a1 1 0 0 1-.88-.55l-.42-.85a1 1 0 0 0-.92-.6H13a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1Z",
      key: "w4yl2u"
    }
  ],
  ["path", { d: "M3 5a2 2 0 0 0 2 2h3", key: "f2jnh7" }],
  ["path", { d: "M3 3v13a2 2 0 0 0 2 2h3", key: "k8epm1" }]
];
var FolderTree = createLucideIcon("folder-tree", __iconNode681);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-up.js
var __iconNode682 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "M12 10v6", key: "1bos4e" }],
  ["path", { d: "m9 13 3-3 3 3", key: "1pxg3c" }]
];
var FolderUp = createLucideIcon("folder-up", __iconNode682);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder-x.js
var __iconNode683 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ],
  ["path", { d: "m9.5 10.5 5 5", key: "ra9qjz" }],
  ["path", { d: "m14.5 10.5-5 5", key: "l2rkpq" }]
];
var FolderX = createLucideIcon("folder-x", __iconNode683);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folder.js
var __iconNode684 = [
  [
    "path",
    {
      d: "M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",
      key: "1kt360"
    }
  ]
];
var Folder = createLucideIcon("folder", __iconNode684);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/folders.js
var __iconNode685 = [
  [
    "path",
    {
      d: "M20 5a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h2.5a1.5 1.5 0 0 1 1.2.6l.6.8a1.5 1.5 0 0 0 1.2.6z",
      key: "a4852j"
    }
  ],
  [
    "path",
    { d: "M3 8.268a2 2 0 0 0-1 1.738V19a2 2 0 0 0 2 2h11a2 2 0 0 0 1.732-1", key: "yxbcw3" }
  ]
];
var Folders = createLucideIcon("folders", __iconNode685);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/footprints.js
var __iconNode686 = [
  [
    "path",
    {
      d: "M4 16v-2.38C4 11.5 2.97 10.5 3 8c.03-2.72 1.49-6 4.5-6C9.37 2 10 3.8 10 5.5c0 3.11-2 5.66-2 8.68V16a2 2 0 1 1-4 0Z",
      key: "1dudjm"
    }
  ],
  [
    "path",
    {
      d: "M20 20v-2.38c0-2.12 1.03-3.12 1-5.62-.03-2.72-1.49-6-4.5-6C14.63 6 14 7.8 14 9.5c0 3.11 2 5.66 2 8.68V20a2 2 0 1 0 4 0Z",
      key: "l2t8xc"
    }
  ],
  ["path", { d: "M16 17h4", key: "1dejxt" }],
  ["path", { d: "M4 13h4", key: "1bwh8b" }]
];
var Footprints = createLucideIcon("footprints", __iconNode686);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/forklift.js
var __iconNode687 = [
  ["path", { d: "M12 12H5a2 2 0 0 0-2 2v5", key: "7zsz91" }],
  ["circle", { cx: "13", cy: "19", r: "2", key: "wjnkru" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }],
  ["path", { d: "M8 19h3m5-17v17h6M6 12V7c0-1.1.9-2 2-2h3l5 5", key: "13bk1p" }]
];
var Forklift = createLucideIcon("forklift", __iconNode687);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/forward.js
var __iconNode688 = [
  ["path", { d: "m15 17 5-5-5-5", key: "nf172w" }],
  ["path", { d: "M4 18v-2a4 4 0 0 1 4-4h12", key: "jmiej9" }]
];
var Forward = createLucideIcon("forward", __iconNode688);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/frame.js
var __iconNode689 = [
  ["line", { x1: "22", x2: "2", y1: "6", y2: "6", key: "15w7dq" }],
  ["line", { x1: "22", x2: "2", y1: "18", y2: "18", key: "1ip48p" }],
  ["line", { x1: "6", x2: "6", y1: "2", y2: "22", key: "a2lnyx" }],
  ["line", { x1: "18", x2: "18", y1: "2", y2: "22", key: "8vb6jd" }]
];
var Frame = createLucideIcon("frame", __iconNode689);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/framer.js
var __iconNode690 = [
  ["path", { d: "M5 16V9h14V2H5l14 14h-7m-7 0 7 7v-7m-7 0h7", key: "1a2nng" }]
];
var Framer = createLucideIcon("framer", __iconNode690);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/frown.js
var __iconNode691 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M16 16s-1.5-2-4-2-4 2-4 2", key: "epbg0q" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
];
var Frown = createLucideIcon("frown", __iconNode691);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fuel.js
var __iconNode692 = [
  [
    "path",
    { d: "M14 13h2a2 2 0 0 1 2 2v2a2 2 0 0 0 4 0v-6.998a2 2 0 0 0-.59-1.42L18 5", key: "1wtuz0" }
  ],
  ["path", { d: "M14 21V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v16", key: "e09ifn" }],
  ["path", { d: "M2 21h13", key: "1x0fut" }],
  ["path", { d: "M3 9h11", key: "1p7c0w" }]
];
var Fuel = createLucideIcon("fuel", __iconNode692);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/funnel-plus.js
var __iconNode693 = [
  [
    "path",
    {
      d: "M13.354 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l1.218-1.348",
      key: "8mvsmf"
    }
  ],
  ["path", { d: "M16 6h6", key: "1dogtp" }],
  ["path", { d: "M19 3v6", key: "1ytpjt" }]
];
var FunnelPlus = createLucideIcon("funnel-plus", __iconNode693);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/fullscreen.js
var __iconNode694 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["rect", { width: "10", height: "8", x: "7", y: "8", rx: "1", key: "vys8me" }]
];
var Fullscreen = createLucideIcon("fullscreen", __iconNode694);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/funnel-x.js
var __iconNode695 = [
  [
    "path",
    {
      d: "M12.531 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14v6a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341l.427-.473",
      key: "ol2ft2"
    }
  ],
  ["path", { d: "m16.5 3.5 5 5", key: "15e6fa" }],
  ["path", { d: "m21.5 3.5-5 5", key: "m0lwru" }]
];
var FunnelX = createLucideIcon("funnel-x", __iconNode695);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/funnel.js
var __iconNode696 = [
  [
    "path",
    {
      d: "M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z",
      key: "sc7q7i"
    }
  ]
];
var Funnel = createLucideIcon("funnel", __iconNode696);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gallery-horizontal-end.js
var __iconNode697 = [
  ["path", { d: "M2 7v10", key: "a2pl2d" }],
  ["path", { d: "M6 5v14", key: "1kq3d7" }],
  ["rect", { width: "12", height: "18", x: "10", y: "3", rx: "2", key: "13i7bc" }]
];
var GalleryHorizontalEnd = createLucideIcon("gallery-horizontal-end", __iconNode697);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gallery-horizontal.js
var __iconNode698 = [
  ["path", { d: "M2 3v18", key: "pzttux" }],
  ["rect", { width: "12", height: "18", x: "6", y: "3", rx: "2", key: "btr8bg" }],
  ["path", { d: "M22 3v18", key: "6jf3v" }]
];
var GalleryHorizontal = createLucideIcon("gallery-horizontal", __iconNode698);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gallery-thumbnails.js
var __iconNode699 = [
  ["rect", { width: "18", height: "14", x: "3", y: "3", rx: "2", key: "74y24f" }],
  ["path", { d: "M4 21h1", key: "16zlid" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M19 21h1", key: "edywat" }]
];
var GalleryThumbnails = createLucideIcon("gallery-thumbnails", __iconNode699);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gallery-vertical-end.js
var __iconNode700 = [
  ["path", { d: "M7 2h10", key: "nczekb" }],
  ["path", { d: "M5 6h14", key: "u2x4p" }],
  ["rect", { width: "18", height: "12", x: "3", y: "10", rx: "2", key: "l0tzu3" }]
];
var GalleryVerticalEnd = createLucideIcon("gallery-vertical-end", __iconNode700);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gallery-vertical.js
var __iconNode701 = [
  ["path", { d: "M3 2h18", key: "15qxfx" }],
  ["rect", { width: "18", height: "12", x: "3", y: "6", rx: "2", key: "1439r6" }],
  ["path", { d: "M3 22h18", key: "8prr45" }]
];
var GalleryVertical = createLucideIcon("gallery-vertical", __iconNode701);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gamepad-2.js
var __iconNode702 = [
  ["line", { x1: "6", x2: "10", y1: "11", y2: "11", key: "1gktln" }],
  ["line", { x1: "8", x2: "8", y1: "9", y2: "13", key: "qnk9ow" }],
  ["line", { x1: "15", x2: "15.01", y1: "12", y2: "12", key: "krot7o" }],
  ["line", { x1: "18", x2: "18.01", y1: "10", y2: "10", key: "1lcuu1" }],
  [
    "path",
    {
      d: "M17.32 5H6.68a4 4 0 0 0-3.978 3.59c-.006.052-.01.101-.017.152C2.604 9.416 2 14.456 2 16a3 3 0 0 0 3 3c1 0 1.5-.5 2-1l1.414-1.414A2 2 0 0 1 9.828 16h4.344a2 2 0 0 1 1.414.586L17 18c.5.5 1 1 2 1a3 3 0 0 0 3-3c0-1.545-.604-6.584-.685-7.258-.007-.05-.011-.1-.017-.151A4 4 0 0 0 17.32 5z",
      key: "mfqc10"
    }
  ]
];
var Gamepad2 = createLucideIcon("gamepad-2", __iconNode702);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gamepad.js
var __iconNode703 = [
  ["line", { x1: "6", x2: "10", y1: "12", y2: "12", key: "161bw2" }],
  ["line", { x1: "8", x2: "8", y1: "10", y2: "14", key: "1i6ji0" }],
  ["line", { x1: "15", x2: "15.01", y1: "13", y2: "13", key: "dqpgro" }],
  ["line", { x1: "18", x2: "18.01", y1: "11", y2: "11", key: "meh2c" }],
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
];
var Gamepad = createLucideIcon("gamepad", __iconNode703);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gauge.js
var __iconNode704 = [
  ["path", { d: "m12 14 4-4", key: "9kzdfg" }],
  ["path", { d: "M3.34 19a10 10 0 1 1 17.32 0", key: "19p75a" }]
];
var Gauge = createLucideIcon("gauge", __iconNode704);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gavel.js
var __iconNode705 = [
  ["path", { d: "m14 13-8.381 8.38a1 1 0 0 1-3.001-3l8.384-8.381", key: "pgg06f" }],
  ["path", { d: "m16 16 6-6", key: "vzrcl6" }],
  ["path", { d: "m21.5 10.5-8-8", key: "a17d9x" }],
  ["path", { d: "m8 8 6-6", key: "18bi4p" }],
  ["path", { d: "m8.5 7.5 8 8", key: "1oyaui" }]
];
var Gavel = createLucideIcon("gavel", __iconNode705);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gem.js
var __iconNode706 = [
  ["path", { d: "M10.5 3 8 9l4 13 4-13-2.5-6", key: "b3dvk1" }],
  [
    "path",
    {
      d: "M17 3a2 2 0 0 1 1.6.8l3 4a2 2 0 0 1 .013 2.382l-7.99 10.986a2 2 0 0 1-3.247 0l-7.99-10.986A2 2 0 0 1 2.4 7.8l2.998-3.997A2 2 0 0 1 7 3z",
      key: "7w4byz"
    }
  ],
  ["path", { d: "M2 9h20", key: "16fsjt" }]
];
var Gem = createLucideIcon("gem", __iconNode706);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/georgian-lari.js
var __iconNode707 = [
  ["path", { d: "M11.5 21a7.5 7.5 0 1 1 7.35-9", key: "1gyj8k" }],
  ["path", { d: "M13 12V3", key: "18om2a" }],
  ["path", { d: "M4 21h16", key: "1h09gz" }],
  ["path", { d: "M9 12V3", key: "geutu0" }]
];
var GeorgianLari = createLucideIcon("georgian-lari", __iconNode707);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ghost.js
var __iconNode708 = [
  ["path", { d: "M9 10h.01", key: "qbtxuw" }],
  ["path", { d: "M15 10h.01", key: "1qmjsl" }],
  [
    "path",
    {
      d: "M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z",
      key: "uwwb07"
    }
  ]
];
var Ghost = createLucideIcon("ghost", __iconNode708);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gift.js
var __iconNode709 = [
  ["rect", { x: "3", y: "8", width: "18", height: "4", rx: "1", key: "bkv52" }],
  ["path", { d: "M12 8v13", key: "1c76mn" }],
  ["path", { d: "M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7", key: "6wjy6b" }],
  [
    "path",
    {
      d: "M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5 2.5 2.5 0 0 1 0 5",
      key: "1ihvrl"
    }
  ]
];
var Gift = createLucideIcon("gift", __iconNode709);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-branch-plus.js
var __iconNode710 = [
  ["path", { d: "M6 3v12", key: "qpgusn" }],
  ["path", { d: "M18 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z", key: "1d02ji" }],
  ["path", { d: "M6 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6z", key: "chk6ph" }],
  ["path", { d: "M15 6a9 9 0 0 0-9 9", key: "or332x" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }]
];
var GitBranchPlus = createLucideIcon("git-branch-plus", __iconNode710);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-branch.js
var __iconNode711 = [
  ["line", { x1: "6", x2: "6", y1: "3", y2: "15", key: "17qcm7" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["path", { d: "M18 9a9 9 0 0 1-9 9", key: "n2h4wq" }]
];
var GitBranch = createLucideIcon("git-branch", __iconNode711);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-commit-horizontal.js
var __iconNode712 = [
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["line", { x1: "3", x2: "9", y1: "12", y2: "12", key: "1dyftd" }],
  ["line", { x1: "15", x2: "21", y1: "12", y2: "12", key: "oup4p8" }]
];
var GitCommitHorizontal = createLucideIcon("git-commit-horizontal", __iconNode712);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-commit-vertical.js
var __iconNode713 = [
  ["path", { d: "M12 3v6", key: "1holv5" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "M12 15v6", key: "a9ows0" }]
];
var GitCommitVertical = createLucideIcon("git-commit-vertical", __iconNode713);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-compare-arrows.js
var __iconNode714 = [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v7", key: "1yj91y" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["circle", { cx: "19", cy: "18", r: "3", key: "1qljk2" }],
  ["path", { d: "M12 18H7a2 2 0 0 1-2-2V9", key: "16sdep" }],
  ["path", { d: "m9 15 3 3-3 3", key: "1m3kbl" }]
];
var GitCompareArrows = createLucideIcon("git-compare-arrows", __iconNode714);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-compare.js
var __iconNode715 = [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v7", key: "1yeb86" }],
  ["path", { d: "M11 18H8a2 2 0 0 1-2-2V9", key: "19pyzm" }]
];
var GitCompare = createLucideIcon("git-compare", __iconNode715);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-fork.js
var __iconNode716 = [
  ["circle", { cx: "12", cy: "18", r: "3", key: "1mpf1b" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }],
  ["path", { d: "M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9", key: "1uq4wg" }],
  ["path", { d: "M12 12v3", key: "158kv8" }]
];
var GitFork = createLucideIcon("git-fork", __iconNode716);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-graph.js
var __iconNode717 = [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v6", key: "158jrl" }],
  ["circle", { cx: "5", cy: "18", r: "3", key: "104gr9" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["circle", { cx: "19", cy: "6", r: "3", key: "108a5v" }],
  ["path", { d: "M16 15.7A9 9 0 0 0 19 9", key: "1e3vqb" }]
];
var GitGraph = createLucideIcon("git-graph", __iconNode717);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-merge.js
var __iconNode718 = [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 21V9a9 9 0 0 0 9 9", key: "7kw0sc" }]
];
var GitMerge = createLucideIcon("git-merge", __iconNode718);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request-arrow.js
var __iconNode719 = [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v12", key: "ih889a" }],
  ["circle", { cx: "19", cy: "18", r: "3", key: "1qljk2" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v7", key: "1yj91y" }]
];
var GitPullRequestArrow = createLucideIcon("git-pull-request-arrow", __iconNode719);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request-closed.js
var __iconNode720 = [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 9v12", key: "1sc30k" }],
  ["path", { d: "m21 3-6 6", key: "16nqsk" }],
  ["path", { d: "m21 9-6-6", key: "9j17rh" }],
  ["path", { d: "M18 11.5V15", key: "65xf6f" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var GitPullRequestClosed = createLucideIcon("git-pull-request-closed", __iconNode720);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request-create-arrow.js
var __iconNode721 = [
  ["circle", { cx: "5", cy: "6", r: "3", key: "1qnov2" }],
  ["path", { d: "M5 9v12", key: "ih889a" }],
  ["path", { d: "m15 9-3-3 3-3", key: "1lwv8l" }],
  ["path", { d: "M12 6h5a2 2 0 0 1 2 2v3", key: "1rbwk6" }],
  ["path", { d: "M19 15v6", key: "10aioa" }],
  ["path", { d: "M22 18h-6", key: "1d5gi5" }]
];
var GitPullRequestCreateArrow = createLucideIcon("git-pull-request-create-arrow", __iconNode721);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request-create.js
var __iconNode722 = [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M6 9v12", key: "1sc30k" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v3", key: "1jb6z3" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }]
];
var GitPullRequestCreate = createLucideIcon("git-pull-request-create", __iconNode722);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request-draft.js
var __iconNode723 = [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M18 6V5", key: "1oao2s" }],
  ["path", { d: "M18 11v-1", key: "11c8tz" }],
  ["line", { x1: "6", x2: "6", y1: "9", y2: "21", key: "rroup" }]
];
var GitPullRequestDraft = createLucideIcon("git-pull-request-draft", __iconNode723);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/git-pull-request.js
var __iconNode724 = [
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M13 6h3a2 2 0 0 1 2 2v7", key: "1yeb86" }],
  ["line", { x1: "6", x2: "6", y1: "9", y2: "21", key: "rroup" }]
];
var GitPullRequest = createLucideIcon("git-pull-request", __iconNode724);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/github.js
var __iconNode725 = [
  [
    "path",
    {
      d: "M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4",
      key: "tonef"
    }
  ],
  ["path", { d: "M9 18c-4.51 2-5-2-7-2", key: "9comsn" }]
];
var Github = createLucideIcon("github", __iconNode725);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gitlab.js
var __iconNode726 = [
  [
    "path",
    {
      d: "m22 13.29-3.33-10a.42.42 0 0 0-.14-.18.38.38 0 0 0-.22-.11.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18l-2.26 6.67H8.32L6.1 3.26a.42.42 0 0 0-.1-.18.38.38 0 0 0-.26-.08.39.39 0 0 0-.23.07.42.42 0 0 0-.14.18L2 13.29a.74.74 0 0 0 .27.83L12 21l9.69-6.88a.71.71 0 0 0 .31-.83Z",
      key: "148pdi"
    }
  ]
];
var Gitlab = createLucideIcon("gitlab", __iconNode726);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/glass-water.js
var __iconNode727 = [
  [
    "path",
    {
      d: "M5.116 4.104A1 1 0 0 1 6.11 3h11.78a1 1 0 0 1 .994 1.105L17.19 20.21A2 2 0 0 1 15.2 22H8.8a2 2 0 0 1-2-1.79z",
      key: "p55z4y"
    }
  ],
  ["path", { d: "M6 12a5 5 0 0 1 6 0 5 5 0 0 0 6 0", key: "mjntcy" }]
];
var GlassWater = createLucideIcon("glass-water", __iconNode727);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/glasses.js
var __iconNode728 = [
  ["circle", { cx: "6", cy: "15", r: "4", key: "vux9w4" }],
  ["circle", { cx: "18", cy: "15", r: "4", key: "18o8ve" }],
  ["path", { d: "M14 15a2 2 0 0 0-2-2 2 2 0 0 0-2 2", key: "1ag4bs" }],
  ["path", { d: "M2.5 13 5 7c.7-1.3 1.4-2 3-2", key: "1hm1gs" }],
  ["path", { d: "M21.5 13 19 7c-.7-1.3-1.5-2-3-2", key: "1r31ai" }]
];
var Glasses = createLucideIcon("glasses", __iconNode728);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/globe-lock.js
var __iconNode729 = [
  [
    "path",
    {
      d: "M15.686 15A14.5 14.5 0 0 1 12 22a14.5 14.5 0 0 1 0-20 10 10 0 1 0 9.542 13",
      key: "qkt0x6"
    }
  ],
  ["path", { d: "M2 12h8.5", key: "ovaggd" }],
  ["path", { d: "M20 6V4a2 2 0 1 0-4 0v2", key: "1of5e8" }],
  ["rect", { width: "8", height: "5", x: "14", y: "6", rx: "1", key: "1fmf51" }]
];
var GlobeLock = createLucideIcon("globe-lock", __iconNode729);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/globe.js
var __iconNode730 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20", key: "13o1zl" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }]
];
var Globe = createLucideIcon("globe", __iconNode730);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/goal.js
var __iconNode731 = [
  ["path", { d: "M12 13V2l8 4-8 4", key: "5wlwwj" }],
  ["path", { d: "M20.561 10.222a9 9 0 1 1-12.55-5.29", key: "1c0wjv" }],
  ["path", { d: "M8.002 9.997a5 5 0 1 0 8.9 2.02", key: "gb1g7m" }]
];
var Goal = createLucideIcon("goal", __iconNode731);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/gpu.js
var __iconNode732 = [
  ["path", { d: "M2 21V3", key: "1bzk4w" }],
  ["path", { d: "M2 5h18a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2.26", key: "1d64pi" }],
  ["path", { d: "M7 17v3a1 1 0 0 0 1 1h5a1 1 0 0 0 1-1v-3", key: "5hbqbf" }],
  ["circle", { cx: "16", cy: "11", r: "2", key: "qt15rb" }],
  ["circle", { cx: "8", cy: "11", r: "2", key: "ssideg" }]
];
var Gpu = createLucideIcon("gpu", __iconNode732);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/graduation-cap.js
var __iconNode733 = [
  [
    "path",
    {
      d: "M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z",
      key: "j76jl0"
    }
  ],
  ["path", { d: "M22 10v6", key: "1lu8f3" }],
  ["path", { d: "M6 12.5V16a6 3 0 0 0 12 0v-3.5", key: "1r8lef" }]
];
var GraduationCap = createLucideIcon("graduation-cap", __iconNode733);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grape.js
var __iconNode734 = [
  ["path", { d: "M22 5V2l-5.89 5.89", key: "1eenpo" }],
  ["circle", { cx: "16.6", cy: "15.89", r: "3", key: "xjtalx" }],
  ["circle", { cx: "8.11", cy: "7.4", r: "3", key: "u2fv6i" }],
  ["circle", { cx: "12.35", cy: "11.65", r: "3", key: "i6i8g7" }],
  ["circle", { cx: "13.91", cy: "5.85", r: "3", key: "6ye0dv" }],
  ["circle", { cx: "18.15", cy: "10.09", r: "3", key: "snx9no" }],
  ["circle", { cx: "6.56", cy: "13.2", r: "3", key: "17x4xg" }],
  ["circle", { cx: "10.8", cy: "17.44", r: "3", key: "1hogw9" }],
  ["circle", { cx: "5", cy: "19", r: "3", key: "1sn6vo" }]
];
var Grape = createLucideIcon("grape", __iconNode734);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-2x2-check.js
var __iconNode735 = [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
];
var Grid2x2Check = createLucideIcon("grid-2x2-check", __iconNode735);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-2x2-plus.js
var __iconNode736 = [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "M16 19h6", key: "xwg31i" }],
  ["path", { d: "M19 22v-6", key: "qhmiwi" }]
];
var Grid2x2Plus = createLucideIcon("grid-2x2-plus", __iconNode736);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-2x2-x.js
var __iconNode737 = [
  [
    "path",
    {
      d: "M12 3v17a1 1 0 0 1-1 1H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v6a1 1 0 0 1-1 1H3",
      key: "11za1p"
    }
  ],
  ["path", { d: "m16 16 5 5", key: "8tpb07" }],
  ["path", { d: "m16 21 5-5", key: "193jll" }]
];
var Grid2x2X = createLucideIcon("grid-2x2-x", __iconNode737);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-2x2.js
var __iconNode738 = [
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var Grid2x2 = createLucideIcon("grid-2x2", __iconNode738);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-3x2.js
var __iconNode739 = [
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var Grid3x2 = createLucideIcon("grid-3x2", __iconNode739);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grid-3x3.js
var __iconNode740 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
];
var Grid3x3 = createLucideIcon("grid-3x3", __iconNode740);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grip-horizontal.js
var __iconNode741 = [
  ["circle", { cx: "12", cy: "9", r: "1", key: "124mty" }],
  ["circle", { cx: "19", cy: "9", r: "1", key: "1ruzo2" }],
  ["circle", { cx: "5", cy: "9", r: "1", key: "1a8b28" }],
  ["circle", { cx: "12", cy: "15", r: "1", key: "1e56xg" }],
  ["circle", { cx: "19", cy: "15", r: "1", key: "1a92ep" }],
  ["circle", { cx: "5", cy: "15", r: "1", key: "5r1jwy" }]
];
var GripHorizontal = createLucideIcon("grip-horizontal", __iconNode741);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grip-vertical.js
var __iconNode742 = [
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }],
  ["circle", { cx: "9", cy: "5", r: "1", key: "hp0tcf" }],
  ["circle", { cx: "9", cy: "19", r: "1", key: "fkjjf6" }],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "15", cy: "5", r: "1", key: "19l28e" }],
  ["circle", { cx: "15", cy: "19", r: "1", key: "f4zoj3" }]
];
var GripVertical = createLucideIcon("grip-vertical", __iconNode742);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/grip.js
var __iconNode743 = [
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["circle", { cx: "19", cy: "5", r: "1", key: "w8mnmm" }],
  ["circle", { cx: "5", cy: "5", r: "1", key: "lttvr7" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "19", cy: "12", r: "1", key: "1wjl8i" }],
  ["circle", { cx: "5", cy: "12", r: "1", key: "1pcz8c" }],
  ["circle", { cx: "12", cy: "19", r: "1", key: "lyex9k" }],
  ["circle", { cx: "19", cy: "19", r: "1", key: "shf9b7" }],
  ["circle", { cx: "5", cy: "19", r: "1", key: "bfqh0e" }]
];
var Grip2 = createLucideIcon("grip", __iconNode743);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/group.js
var __iconNode744 = [
  ["path", { d: "M3 7V5c0-1.1.9-2 2-2h2", key: "adw53z" }],
  ["path", { d: "M17 3h2c1.1 0 2 .9 2 2v2", key: "an4l38" }],
  ["path", { d: "M21 17v2c0 1.1-.9 2-2 2h-2", key: "144t0e" }],
  ["path", { d: "M7 21H5c-1.1 0-2-.9-2-2v-2", key: "rtnfgi" }],
  ["rect", { width: "7", height: "5", x: "7", y: "7", rx: "1", key: "1eyiv7" }],
  ["rect", { width: "7", height: "5", x: "10", y: "12", rx: "1", key: "1qlmkx" }]
];
var Group = createLucideIcon("group", __iconNode744);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/guitar.js
var __iconNode745 = [
  ["path", { d: "m11.9 12.1 4.514-4.514", key: "109xqo" }],
  [
    "path",
    {
      d: "M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17 4.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 17.828 7h1.344a2 2 0 0 0 1.414-.586L21.7 5.3a1 1 0 0 0 0-1.4z",
      key: "txyc8t"
    }
  ],
  ["path", { d: "m6 16 2 2", key: "16qmzd" }],
  [
    "path",
    {
      d: "M8.23 9.85A3 3 0 0 1 11 8a5 5 0 0 1 5 5 3 3 0 0 1-1.85 2.77l-.92.38A2 2 0 0 0 12 18a4 4 0 0 1-4 4 6 6 0 0 1-6-6 4 4 0 0 1 4-4 2 2 0 0 0 1.85-1.23z",
      key: "1de1vg"
    }
  ]
];
var Guitar = createLucideIcon("guitar", __iconNode745);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ham.js
var __iconNode746 = [
  ["path", { d: "M13.144 21.144A7.274 10.445 45 1 0 2.856 10.856", key: "1k1t7q" }],
  [
    "path",
    {
      d: "M13.144 21.144A7.274 4.365 45 0 0 2.856 10.856a7.274 4.365 45 0 0 10.288 10.288",
      key: "153t1g"
    }
  ],
  [
    "path",
    {
      d: "M16.565 10.435 18.6 8.4a2.501 2.501 0 1 0 1.65-4.65 2.5 2.5 0 1 0-4.66 1.66l-2.024 2.025",
      key: "gzrt0n"
    }
  ],
  ["path", { d: "m8.5 16.5-1-1", key: "otr954" }]
];
var Ham = createLucideIcon("ham", __iconNode746);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hamburger.js
var __iconNode747 = [
  ["path", { d: "M12 16H4a2 2 0 1 1 0-4h16a2 2 0 1 1 0 4h-4.25", key: "5dloqd" }],
  ["path", { d: "M5 12a2 2 0 0 1-2-2 9 7 0 0 1 18 0 2 2 0 0 1-2 2", key: "1vl3my" }],
  [
    "path",
    {
      d: "M5 16a2 2 0 0 0-2 2 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 2 2 0 0 0-2-2q0 0 0 0",
      key: "1us75o"
    }
  ],
  ["path", { d: "m6.67 12 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2", key: "qqzweh" }]
];
var Hamburger = createLucideIcon("hamburger", __iconNode747);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hammer.js
var __iconNode748 = [
  ["path", { d: "m15 12-9.373 9.373a1 1 0 0 1-3.001-3L12 9", key: "1hayfq" }],
  ["path", { d: "m18 15 4-4", key: "16gjal" }],
  [
    "path",
    {
      d: "m21.5 11.5-1.914-1.914A2 2 0 0 1 19 8.172v-.344a2 2 0 0 0-.586-1.414l-1.657-1.657A6 6 0 0 0 12.516 3H9l1.243 1.243A6 6 0 0 1 12 8.485V10l2 2h1.172a2 2 0 0 1 1.414.586L18.5 14.5",
      key: "15ts47"
    }
  ]
];
var Hammer = createLucideIcon("hammer", __iconNode748);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-coins.js
var __iconNode749 = [
  ["path", { d: "M11 15h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 17", key: "geh8rc" }],
  [
    "path",
    {
      d: "m7 21 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "1fto5m"
    }
  ],
  ["path", { d: "m2 16 6 6", key: "1pfhp9" }],
  ["circle", { cx: "16", cy: "9", r: "2.9", key: "1n0dlu" }],
  ["circle", { cx: "6", cy: "5", r: "3", key: "151irh" }]
];
var HandCoins = createLucideIcon("hand-coins", __iconNode749);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-fist.js
var __iconNode750 = [
  [
    "path",
    {
      d: "M12.035 17.012a3 3 0 0 0-3-3l-.311-.002a.72.72 0 0 1-.505-1.229l1.195-1.195A2 2 0 0 1 10.828 11H12a2 2 0 0 0 0-4H9.243a3 3 0 0 0-2.122.879l-2.707 2.707A4.83 4.83 0 0 0 3 14a8 8 0 0 0 8 8h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v2a2 2 0 1 0 4 0",
      key: "1ff7rl"
    }
  ],
  ["path", { d: "M13.888 9.662A2 2 0 0 0 17 8V5A2 2 0 1 0 13 5", key: "1xmd21" }],
  ["path", { d: "M9 5A2 2 0 1 0 5 5V10", key: "f3wfjw" }],
  ["path", { d: "M9 7V4A2 2 0 1 1 13 4V7.268", key: "eaoucv" }]
];
var HandFist = createLucideIcon("hand-fist", __iconNode750);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-grab.js
var __iconNode751 = [
  ["path", { d: "M18 11.5V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4", key: "edstyy" }],
  ["path", { d: "M14 10V8a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2", key: "19wdwo" }],
  ["path", { d: "M10 9.9V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v5", key: "1lugqo" }],
  ["path", { d: "M6 14a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1hbeus" }],
  [
    "path",
    { d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-4a8 8 0 0 1-8-8 2 2 0 1 1 4 0", key: "1etffm" }
  ]
];
var HandGrab = createLucideIcon("hand-grab", __iconNode751);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-heart.js
var __iconNode752 = [
  ["path", { d: "M11 14h2a2 2 0 0 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 16", key: "1v1a37" }],
  [
    "path",
    {
      d: "m14.45 13.39 5.05-4.694C20.196 8 21 6.85 21 5.75a2.75 2.75 0 0 0-4.797-1.837.276.276 0 0 1-.406 0A2.75 2.75 0 0 0 11 5.75c0 1.2.802 2.248 1.5 2.946L16 11.95",
      key: "fhfbnt"
    }
  ],
  ["path", { d: "m2 15 6 6", key: "10dquu" }],
  [
    "path",
    {
      d: "m7 20 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a1 1 0 0 0-2.75-2.91",
      key: "1x6kdw"
    }
  ]
];
var HandHeart = createLucideIcon("hand-heart", __iconNode752);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-helping.js
var __iconNode753 = [
  ["path", { d: "M11 12h2a2 2 0 1 0 0-4h-3c-.6 0-1.1.2-1.4.6L3 14", key: "1j4xps" }],
  [
    "path",
    {
      d: "m7 18 1.6-1.4c.3-.4.8-.6 1.4-.6h4c1.1 0 2.1-.4 2.8-1.2l4.6-4.4a2 2 0 0 0-2.75-2.91l-4.2 3.9",
      key: "uospg8"
    }
  ],
  ["path", { d: "m2 13 6 6", key: "16e5sb" }]
];
var HandHelping = createLucideIcon("hand-helping", __iconNode753);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-metal.js
var __iconNode754 = [
  ["path", { d: "M18 12.5V10a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1.4", key: "wc6myp" }],
  ["path", { d: "M14 11V9a2 2 0 1 0-4 0v2", key: "94qvcw" }],
  ["path", { d: "M10 10.5V5a2 2 0 1 0-4 0v9", key: "m1ah89" }],
  [
    "path",
    {
      d: "m7 15-1.76-1.76a2 2 0 0 0-2.83 2.82l3.6 3.6C7.5 21.14 9.2 22 12 22h2a8 8 0 0 0 8-8V7a2 2 0 1 0-4 0v5",
      key: "t1skq1"
    }
  ]
];
var HandMetal = createLucideIcon("hand-metal", __iconNode754);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand-platter.js
var __iconNode755 = [
  ["path", { d: "M12 3V2", key: "ar7q03" }],
  [
    "path",
    {
      d: "m15.4 17.4 3.2-2.8a2 2 0 1 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2l-1.302-1.464A1 1 0 0 0 6.151 19H5",
      key: "n2g93r"
    }
  ],
  ["path", { d: "M2 14h12a2 2 0 0 1 0 4h-2", key: "1o2jem" }],
  ["path", { d: "M4 10h16", key: "img6z1" }],
  ["path", { d: "M5 10a7 7 0 0 1 14 0", key: "1ega1o" }],
  ["path", { d: "M5 14v6a1 1 0 0 1-1 1H2", key: "1hescx" }]
];
var HandPlatter = createLucideIcon("hand-platter", __iconNode755);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hand.js
var __iconNode756 = [
  ["path", { d: "M18 11V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1fvzgz" }],
  ["path", { d: "M14 10V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v2", key: "1kc0my" }],
  ["path", { d: "M10 10.5V6a2 2 0 0 0-2-2a2 2 0 0 0-2 2v8", key: "10h0bg" }],
  [
    "path",
    {
      d: "M18 8a2 2 0 1 1 4 0v6a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15",
      key: "1s1gnw"
    }
  ]
];
var Hand = createLucideIcon("hand", __iconNode756);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/handbag.js
var __iconNode757 = [
  [
    "path",
    {
      d: "M2.048 18.566A2 2 0 0 0 4 21h16a2 2 0 0 0 1.952-2.434l-2-9A2 2 0 0 0 18 8H6a2 2 0 0 0-1.952 1.566z",
      key: "1qbui5"
    }
  ],
  ["path", { d: "M8 11V6a4 4 0 0 1 8 0v5", key: "tcht90" }]
];
var Handbag = createLucideIcon("handbag", __iconNode757);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/handshake.js
var __iconNode758 = [
  ["path", { d: "m11 17 2 2a1 1 0 1 0 3-3", key: "efffak" }],
  [
    "path",
    {
      d: "m14 14 2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4",
      key: "9pr0kb"
    }
  ],
  ["path", { d: "m21 3 1 11h-2", key: "1tisrp" }],
  ["path", { d: "M3 3 2 14l6.5 6.5a1 1 0 1 0 3-3", key: "1uvwmv" }],
  ["path", { d: "M3 4h8", key: "1ep09j" }]
];
var Handshake = createLucideIcon("handshake", __iconNode758);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hard-drive-download.js
var __iconNode759 = [
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["path", { d: "m16 6-4 4-4-4", key: "6wukr" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 18h.01", key: "h775k" }]
];
var HardDriveDownload = createLucideIcon("hard-drive-download", __iconNode759);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hard-drive-upload.js
var __iconNode760 = [
  ["path", { d: "m16 6-4-4-4 4", key: "13yo43" }],
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M10 18h.01", key: "h775k" }]
];
var HardDriveUpload = createLucideIcon("hard-drive-upload", __iconNode760);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hard-drive.js
var __iconNode761 = [
  ["line", { x1: "22", x2: "2", y1: "12", y2: "12", key: "1y58io" }],
  [
    "path",
    {
      d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",
      key: "oot6mr"
    }
  ],
  ["line", { x1: "6", x2: "6.01", y1: "16", y2: "16", key: "sgf278" }],
  ["line", { x1: "10", x2: "10.01", y1: "16", y2: "16", key: "1l4acy" }]
];
var HardDrive = createLucideIcon("hard-drive", __iconNode761);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hard-hat.js
var __iconNode762 = [
  ["path", { d: "M10 10V5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v5", key: "1p9q5i" }],
  ["path", { d: "M14 6a6 6 0 0 1 6 6v3", key: "1hnv84" }],
  ["path", { d: "M4 15v-3a6 6 0 0 1 6-6", key: "9ciidu" }],
  ["rect", { x: "2", y: "15", width: "20", height: "4", rx: "1", key: "g3x8cw" }]
];
var HardHat = createLucideIcon("hard-hat", __iconNode762);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hash.js
var __iconNode763 = [
  ["line", { x1: "4", x2: "20", y1: "9", y2: "9", key: "4lhtct" }],
  ["line", { x1: "4", x2: "20", y1: "15", y2: "15", key: "vyu0kd" }],
  ["line", { x1: "10", x2: "8", y1: "3", y2: "21", key: "1ggp8o" }],
  ["line", { x1: "16", x2: "14", y1: "3", y2: "21", key: "weycgp" }]
];
var Hash2 = createLucideIcon("hash", __iconNode763);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hat-glasses.js
var __iconNode764 = [
  ["path", { d: "M14 18a2 2 0 0 0-4 0", key: "1v8fkw" }],
  [
    "path",
    {
      d: "m19 11-2.11-6.657a2 2 0 0 0-2.752-1.148l-1.276.61A2 2 0 0 1 12 4H8.5a2 2 0 0 0-1.925 1.456L5 11",
      key: "1fkr7p"
    }
  ],
  ["path", { d: "M2 11h20", key: "3eubbj" }],
  ["circle", { cx: "17", cy: "18", r: "3", key: "82mm0e" }],
  ["circle", { cx: "7", cy: "18", r: "3", key: "lvkj7j" }]
];
var HatGlasses = createLucideIcon("hat-glasses", __iconNode764);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/haze.js
var __iconNode765 = [
  ["path", { d: "m5.2 6.2 1.4 1.4", key: "17imol" }],
  ["path", { d: "M2 13h2", key: "13gyu8" }],
  ["path", { d: "M20 13h2", key: "16rner" }],
  ["path", { d: "m17.4 7.6 1.4-1.4", key: "t4xlah" }],
  ["path", { d: "M22 17H2", key: "1gtaj3" }],
  ["path", { d: "M22 21H2", key: "1gy6en" }],
  ["path", { d: "M16 13a4 4 0 0 0-8 0", key: "1dyczq" }],
  ["path", { d: "M12 5V2.5", key: "1vytko" }]
];
var Haze = createLucideIcon("haze", __iconNode765);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hdmi-port.js
var __iconNode766 = [
  [
    "path",
    {
      d: "M22 9a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h1l2 2h12l2-2h1a1 1 0 0 0 1-1Z",
      key: "2128wb"
    }
  ],
  ["path", { d: "M7.5 12h9", key: "1t0ckc" }]
];
var HdmiPort = createLucideIcon("hdmi-port", __iconNode766);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-1.js
var __iconNode767 = [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "m17 12 3-2v8", key: "1hhhft" }]
];
var Heading1 = createLucideIcon("heading-1", __iconNode767);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-2.js
var __iconNode768 = [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M21 18h-4c0-4 4-3 4-6 0-1.5-2-2.5-4-1", key: "9jr5yi" }]
];
var Heading2 = createLucideIcon("heading-2", __iconNode768);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-3.js
var __iconNode769 = [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17.5 10.5c1.7-1 3.5 0 3.5 1.5a2 2 0 0 1-2 2", key: "68ncm8" }],
  ["path", { d: "M17 17.5c2 1.5 4 .3 4-1.5a2 2 0 0 0-2-2", key: "1ejuhz" }]
];
var Heading3 = createLucideIcon("heading-3", __iconNode769);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-4.js
var __iconNode770 = [
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17 10v3a1 1 0 0 0 1 1h3", key: "tj5zdr" }],
  ["path", { d: "M21 10v8", key: "1kdml4" }],
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }]
];
var Heading4 = createLucideIcon("heading-4", __iconNode770);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-5.js
var __iconNode771 = [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["path", { d: "M17 13v-3h4", key: "1nvgqp" }],
  [
    "path",
    { d: "M17 17.7c.4.2.8.3 1.3.3 1.5 0 2.7-1.1 2.7-2.5S19.8 13 18.3 13H17", key: "2nebdn" }
  ]
];
var Heading5 = createLucideIcon("heading-5", __iconNode771);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading-6.js
var __iconNode772 = [
  ["path", { d: "M4 12h8", key: "17cfdx" }],
  ["path", { d: "M4 18V6", key: "1rz3zl" }],
  ["path", { d: "M12 18V6", key: "zqpxq5" }],
  ["circle", { cx: "19", cy: "16", r: "2", key: "15mx69" }],
  ["path", { d: "M20 10c-2 2-3 3.5-3 6", key: "f35dl0" }]
];
var Heading6 = createLucideIcon("heading-6", __iconNode772);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heading.js
var __iconNode773 = [
  ["path", { d: "M6 12h12", key: "8npq4p" }],
  ["path", { d: "M6 20V4", key: "1w1bmo" }],
  ["path", { d: "M18 20V4", key: "o2hl4u" }]
];
var Heading = createLucideIcon("heading", __iconNode773);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/headphone-off.js
var __iconNode774 = [
  ["path", { d: "M21 14h-1.343", key: "1jdnxi" }],
  ["path", { d: "M9.128 3.47A9 9 0 0 1 21 12v3.343", key: "6kipu2" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20.414 20.414A2 2 0 0 1 19 21h-1a2 2 0 0 1-2-2v-3", key: "9x50f4" }],
  [
    "path",
    {
      d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 2.636-6.364",
      key: "1bkxnm"
    }
  ]
];
var HeadphoneOff = createLucideIcon("headphone-off", __iconNode774);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/headset.js
var __iconNode775 = [
  [
    "path",
    {
      d: "M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-5Zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3Z",
      key: "12oyoe"
    }
  ],
  ["path", { d: "M21 16v2a4 4 0 0 1-4 4h-5", key: "1x7m43" }]
];
var Headset = createLucideIcon("headset", __iconNode775);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/headphones.js
var __iconNode776 = [
  [
    "path",
    {
      d: "M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3",
      key: "1xhozi"
    }
  ]
];
var Headphones = createLucideIcon("headphones", __iconNode776);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-crack.js
var __iconNode777 = [
  [
    "path",
    {
      d: "M12.409 5.824c-.702.792-1.15 1.496-1.415 2.166l2.153 2.156a.5.5 0 0 1 0 .707l-2.293 2.293a.5.5 0 0 0 0 .707L12 15",
      key: "idzbju"
    }
  ],
  [
    "path",
    {
      d: "M13.508 20.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.677.6.6 0 0 0 .818.001A5.5 5.5 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5z",
      key: "1su70f"
    }
  ]
];
var HeartCrack = createLucideIcon("heart-crack", __iconNode777);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-handshake.js
var __iconNode778 = [
  [
    "path",
    {
      d: "M19.414 14.414C21 12.828 22 11.5 22 9.5a5.5 5.5 0 0 0-9.591-3.676.6.6 0 0 1-.818.001A5.5 5.5 0 0 0 2 9.5c0 2.3 1.5 4 3 5.5l5.535 5.362a2 2 0 0 0 2.879.052 2.12 2.12 0 0 0-.004-3 2.124 2.124 0 1 0 3-3 2.124 2.124 0 0 0 3.004 0 2 2 0 0 0 0-2.828l-1.881-1.882a2.41 2.41 0 0 0-3.409 0l-1.71 1.71a2 2 0 0 1-2.828 0 2 2 0 0 1 0-2.828l2.823-2.762",
      key: "17lmqv"
    }
  ]
];
var HeartHandshake = createLucideIcon("heart-handshake", __iconNode778);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-minus.js
var __iconNode779 = [
  [
    "path",
    {
      d: "m14.876 18.99-1.368 1.323a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5a5.2 5.2 0 0 1-.244 1.572",
      key: "15yztm"
    }
  ],
  ["path", { d: "M15 15h6", key: "1u4692" }]
];
var HeartMinus = createLucideIcon("heart-minus", __iconNode779);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-plus.js
var __iconNode780 = [
  [
    "path",
    {
      d: "m14.479 19.374-.971.939a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5a5.2 5.2 0 0 1-.219 1.49",
      key: "wg5jx"
    }
  ],
  ["path", { d: "M15 15h6", key: "1u4692" }],
  ["path", { d: "M18 12v6", key: "1houu1" }]
];
var HeartPlus = createLucideIcon("heart-plus", __iconNode780);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-off.js
var __iconNode781 = [
  [
    "path",
    {
      d: "M10.5 4.893a5.5 5.5 0 0 1 1.091.931.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 1.872-1.002 3.356-2.187 4.655",
      key: "1inpfl"
    }
  ],
  [
    "path",
    {
      d: "m16.967 16.967-3.459 3.346a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5a5.5 5.5 0 0 1 2.747-4.761",
      key: "vbc6x7"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var HeartOff = createLucideIcon("heart-off", __iconNode781);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart-pulse.js
var __iconNode782 = [
  [
    "path",
    {
      d: "M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5",
      key: "mvr1a0"
    }
  ],
  ["path", { d: "M3.22 13H9.5l.5-1 2 4.5 2-7 1.5 3.5h5.27", key: "auskq0" }]
];
var HeartPulse = createLucideIcon("heart-pulse", __iconNode782);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heart.js
var __iconNode783 = [
  [
    "path",
    {
      d: "M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5",
      key: "mvr1a0"
    }
  ]
];
var Heart = createLucideIcon("heart", __iconNode783);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/heater.js
var __iconNode784 = [
  ["path", { d: "M11 8c2-3-2-3 0-6", key: "1ldv5m" }],
  ["path", { d: "M15.5 8c2-3-2-3 0-6", key: "1otqoz" }],
  ["path", { d: "M6 10h.01", key: "1lbq93" }],
  ["path", { d: "M6 14h.01", key: "zudwn7" }],
  ["path", { d: "M10 16v-4", key: "1c25yv" }],
  ["path", { d: "M14 16v-4", key: "1dkbt8" }],
  ["path", { d: "M18 16v-4", key: "1yg9me" }],
  [
    "path",
    { d: "M20 6a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3", key: "1ubg90" }
  ],
  ["path", { d: "M5 20v2", key: "1abpe8" }],
  ["path", { d: "M19 20v2", key: "kqn6ft" }]
];
var Heater = createLucideIcon("heater", __iconNode784);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hexagon.js
var __iconNode785 = [
  [
    "path",
    {
      d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z",
      key: "yt0hxn"
    }
  ]
];
var Hexagon = createLucideIcon("hexagon", __iconNode785);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/highlighter.js
var __iconNode786 = [
  ["path", { d: "m9 11-6 6v3h9l3-3", key: "1a3l36" }],
  ["path", { d: "m22 12-4.6 4.6a2 2 0 0 1-2.8 0l-5.2-5.2a2 2 0 0 1 0-2.8L14 4", key: "14a9rk" }]
];
var Highlighter = createLucideIcon("highlighter", __iconNode786);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/history.js
var __iconNode787 = [
  ["path", { d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "1357e3" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["path", { d: "M12 7v5l4 2", key: "1fdv2h" }]
];
var History = createLucideIcon("history", __iconNode787);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hop-off.js
var __iconNode788 = [
  ["path", { d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.28.01.53-.09.7-.27", key: "qyzcap" }],
  [
    "path",
    {
      d: "M11.14 20.57c.52.24 2.44 1.12 4.08 1.37.46.06.86-.25.9-.71.12-1.52-.3-3.43-.5-4.28",
      key: "y078lb"
    }
  ],
  ["path", { d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .7-.26", key: "1utre3" }],
  [
    "path",
    {
      d: "M17.99 5.52a20.83 20.83 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-1.17.1-2.5.02-3.9-.25",
      key: "17o9hm"
    }
  ],
  ["path", { d: "M20.57 11.14c.24.52 1.12 2.44 1.37 4.08.04.3-.08.59-.31.75", key: "1d1n4p" }],
  [
    "path",
    {
      d: "M4.93 4.93a10 10 0 0 0-.67 13.4c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.85.85 0 0 0 .48-.24",
      key: "9uv3tt"
    }
  ],
  [
    "path",
    {
      d: "M5.52 17.99c1.05.95 2.91 2.42 4.5 3.15a.8.8 0 0 0 1.13-.68c.2-2.34-.33-5.3-1.57-8.28",
      key: "1292wz"
    }
  ],
  [
    "path",
    {
      d: "M8.35 2.68a10 10 0 0 1 9.98 1.58c.43.35.4.96-.12 1.17-1.5.6-4.3.98-6.07 1.05",
      key: "7ozu9p"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var HopOff = createLucideIcon("hop-off", __iconNode788);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hospital.js
var __iconNode789 = [
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M14 21v-3a2 2 0 0 0-4 0v3", key: "1rgiei" }],
  ["path", { d: "M14 9h-4", key: "1w2s2s" }],
  [
    "path",
    {
      d: "M18 11h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2",
      key: "1tthqt"
    }
  ],
  ["path", { d: "M18 21V5a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16", key: "dw4p4i" }]
];
var Hospital = createLucideIcon("hospital", __iconNode789);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hop.js
var __iconNode790 = [
  [
    "path",
    {
      d: "M10.82 16.12c1.69.6 3.91.79 5.18.85.55.03 1-.42.97-.97-.06-1.27-.26-3.5-.85-5.18",
      key: "18lxf1"
    }
  ],
  [
    "path",
    {
      d: "M11.5 6.5c1.64 0 5-.38 6.71-1.07.52-.2.55-.82.12-1.17A10 10 0 0 0 4.26 18.33c.35.43.96.4 1.17-.12.69-1.71 1.07-5.07 1.07-6.71 1.34.45 3.1.9 4.88.62a.88.88 0 0 0 .73-.74c.3-2.14-.15-3.5-.61-4.88",
      key: "vtfxrw"
    }
  ],
  [
    "path",
    {
      d: "M15.62 16.95c.2.85.62 2.76.5 4.28a.77.77 0 0 1-.9.7 16.64 16.64 0 0 1-4.08-1.36",
      key: "13hl71"
    }
  ],
  [
    "path",
    {
      d: "M16.13 21.05c1.65.63 3.68.84 4.87.91a.9.9 0 0 0 .96-.96 17.68 17.68 0 0 0-.9-4.87",
      key: "1sl8oj"
    }
  ],
  [
    "path",
    {
      d: "M16.94 15.62c.86.2 2.77.62 4.29.5a.77.77 0 0 0 .7-.9 16.64 16.64 0 0 0-1.36-4.08",
      key: "19c6kt"
    }
  ],
  [
    "path",
    {
      d: "M17.99 5.52a20.82 20.82 0 0 1 3.15 4.5.8.8 0 0 1-.68 1.13c-2.33.2-5.3-.32-8.27-1.57",
      key: "85ghs3"
    }
  ],
  ["path", { d: "M4.93 4.93 3 3a.7.7 0 0 1 0-1", key: "x087yj" }],
  [
    "path",
    {
      d: "M9.58 12.18c1.24 2.98 1.77 5.95 1.57 8.28a.8.8 0 0 1-1.13.68 20.82 20.82 0 0 1-4.5-3.15",
      key: "11xdqo"
    }
  ]
];
var Hop = createLucideIcon("hop", __iconNode790);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hotel.js
var __iconNode791 = [
  ["path", { d: "M10 22v-6.57", key: "1wmca3" }],
  ["path", { d: "M12 11h.01", key: "z322tv" }],
  ["path", { d: "M12 7h.01", key: "1ivr5q" }],
  ["path", { d: "M14 15.43V22", key: "1q2vjd" }],
  ["path", { d: "M15 16a5 5 0 0 0-6 0", key: "o9wqvi" }],
  ["path", { d: "M16 11h.01", key: "xkw8gn" }],
  ["path", { d: "M16 7h.01", key: "1kdx03" }],
  ["path", { d: "M8 11h.01", key: "1dfujw" }],
  ["path", { d: "M8 7h.01", key: "1vti4s" }],
  ["rect", { x: "4", y: "2", width: "16", height: "20", rx: "2", key: "1uxh74" }]
];
var Hotel = createLucideIcon("hotel", __iconNode791);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/hourglass.js
var __iconNode792 = [
  ["path", { d: "M5 22h14", key: "ehvnwv" }],
  ["path", { d: "M5 2h14", key: "pdyrp9" }],
  [
    "path",
    {
      d: "M17 22v-4.172a2 2 0 0 0-.586-1.414L12 12l-4.414 4.414A2 2 0 0 0 7 17.828V22",
      key: "1d314k"
    }
  ],
  [
    "path",
    { d: "M7 2v4.172a2 2 0 0 0 .586 1.414L12 12l4.414-4.414A2 2 0 0 0 17 6.172V2", key: "1vvvr6" }
  ]
];
var Hourglass = createLucideIcon("hourglass", __iconNode792);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/house-heart.js
var __iconNode793 = [
  [
    "path",
    {
      d: "M8.62 13.8A2.25 2.25 0 1 1 12 10.836a2.25 2.25 0 1 1 3.38 2.966l-2.626 2.856a.998.998 0 0 1-1.507 0z",
      key: "n9s7kx"
    }
  ],
  [
    "path",
    {
      d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",
      key: "r6nss1"
    }
  ]
];
var HouseHeart = createLucideIcon("house-heart", __iconNode793);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/house-plug.js
var __iconNode794 = [
  ["path", { d: "M10 12V8.964", key: "1vll13" }],
  ["path", { d: "M14 12V8.964", key: "1x3qvg" }],
  [
    "path",
    { d: "M15 12a1 1 0 0 1 1 1v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-2a1 1 0 0 1 1-1z", key: "ppykja" }
  ],
  [
    "path",
    {
      d: "M8.5 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2h-5a2 2 0 0 1-2-2v-2",
      key: "365xoy"
    }
  ]
];
var HousePlug = createLucideIcon("house-plug", __iconNode794);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/house-wifi.js
var __iconNode795 = [
  ["path", { d: "M9.5 13.866a4 4 0 0 1 5 .01", key: "1wy54i" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }],
  [
    "path",
    {
      d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",
      key: "r6nss1"
    }
  ],
  ["path", { d: "M7 10.754a8 8 0 0 1 10 0", key: "exoy2g" }]
];
var HouseWifi = createLucideIcon("house-wifi", __iconNode795);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/house-plus.js
var __iconNode796 = [
  [
    "path",
    {
      d: "M12.35 21H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 .71-1.53l7-6a2 2 0 0 1 2.58 0l7 6A2 2 0 0 1 21 10v2.35",
      key: "8ek5ge"
    }
  ],
  ["path", { d: "M14.8 12.4A1 1 0 0 0 14 12h-4a1 1 0 0 0-1 1v8", key: "1rbg29" }],
  ["path", { d: "M15 18h6", key: "3b3c90" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }]
];
var HousePlus = createLucideIcon("house-plus", __iconNode796);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/house.js
var __iconNode797 = [
  ["path", { d: "M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8", key: "5wwlr5" }],
  [
    "path",
    {
      d: "M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",
      key: "r6nss1"
    }
  ]
];
var House = createLucideIcon("house", __iconNode797);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ice-cream-bowl.js
var __iconNode798 = [
  [
    "path",
    {
      d: "M12 17c5 0 8-2.69 8-6H4c0 3.31 3 6 8 6m-4 4h8m-4-3v3M5.14 11a3.5 3.5 0 1 1 6.71 0",
      key: "1uxfcu"
    }
  ],
  ["path", { d: "M12.14 11a3.5 3.5 0 1 1 6.71 0", key: "4k3m1s" }],
  ["path", { d: "M15.5 6.5a3.5 3.5 0 1 0-7 0", key: "zmuahr" }]
];
var IceCreamBowl = createLucideIcon("ice-cream-bowl", __iconNode798);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ice-cream-cone.js
var __iconNode799 = [
  ["path", { d: "m7 11 4.08 10.35a1 1 0 0 0 1.84 0L17 11", key: "1v6356" }],
  ["path", { d: "M17 7A5 5 0 0 0 7 7", key: "151p3v" }],
  ["path", { d: "M17 7a2 2 0 0 1 0 4H7a2 2 0 0 1 0-4", key: "1sdaij" }]
];
var IceCreamCone = createLucideIcon("ice-cream-cone", __iconNode799);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/id-card-lanyard.js
var __iconNode800 = [
  ["path", { d: "M13.5 8h-3", key: "xvov4w" }],
  [
    "path",
    {
      d: "m15 2-1 2h3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h3",
      key: "16uttc"
    }
  ],
  ["path", { d: "M16.899 22A5 5 0 0 0 7.1 22", key: "1d0ppr" }],
  ["path", { d: "m9 2 3 6", key: "1o7bd9" }],
  ["circle", { cx: "12", cy: "15", r: "3", key: "g36mzq" }]
];
var IdCardLanyard = createLucideIcon("id-card-lanyard", __iconNode800);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/id-card.js
var __iconNode801 = [
  ["path", { d: "M16 10h2", key: "8sgtl7" }],
  ["path", { d: "M16 14h2", key: "epxaof" }],
  ["path", { d: "M6.17 15a3 3 0 0 1 5.66 0", key: "n6f512" }],
  ["circle", { cx: "9", cy: "11", r: "2", key: "yxgjnd" }],
  ["rect", { x: "2", y: "5", width: "20", height: "14", rx: "2", key: "qneu4z" }]
];
var IdCard = createLucideIcon("id-card", __iconNode801);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-down.js
var __iconNode802 = [
  [
    "path",
    {
      d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21",
      key: "9csbqa"
    }
  ],
  ["path", { d: "m14 19 3 3v-5.5", key: "9ldu5r" }],
  ["path", { d: "m17 22 3-3", key: "1nkfve" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
];
var ImageDown = createLucideIcon("image-down", __iconNode802);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-minus.js
var __iconNode803 = [
  ["path", { d: "M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7", key: "m87ecr" }],
  ["line", { x1: "16", x2: "22", y1: "5", y2: "5", key: "ez7e4s" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }]
];
var ImageMinus = createLucideIcon("image-minus", __iconNode803);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-off.js
var __iconNode804 = [
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }],
  ["path", { d: "M10.41 10.41a2 2 0 1 1-2.83-2.83", key: "1bzlo9" }],
  ["line", { x1: "13.5", x2: "6", y1: "13.5", y2: "21", key: "1q0aeu" }],
  ["line", { x1: "18", x2: "21", y1: "12", y2: "15", key: "5mozeu" }],
  [
    "path",
    {
      d: "M3.59 3.59A1.99 1.99 0 0 0 3 5v14a2 2 0 0 0 2 2h14c.55 0 1.052-.22 1.41-.59",
      key: "mmje98"
    }
  ],
  ["path", { d: "M21 15V5a2 2 0 0 0-2-2H9", key: "43el77" }]
];
var ImageOff = createLucideIcon("image-off", __iconNode804);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-play.js
var __iconNode805 = [
  [
    "path",
    {
      d: "M15 15.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z",
      key: "nrt1m3"
    }
  ],
  ["path", { d: "M21 12.17V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "99hgts" }],
  ["path", { d: "m6 21 5-5", key: "1wyjai" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
];
var ImagePlay = createLucideIcon("image-play", __iconNode805);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-plus.js
var __iconNode806 = [
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 2v6", key: "4bpg5p" }],
  ["path", { d: "M21 11.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5", key: "1ue2ih" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
];
var ImagePlus = createLucideIcon("image-plus", __iconNode806);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-up.js
var __iconNode807 = [
  [
    "path",
    {
      d: "M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21",
      key: "9csbqa"
    }
  ],
  ["path", { d: "m14 19.5 3-3 3 3", key: "9vmjn0" }],
  ["path", { d: "M17 22v-5.5", key: "1aa6fl" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }]
];
var ImageUp = createLucideIcon("image-up", __iconNode807);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image-upscale.js
var __iconNode808 = [
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M17 21h2a2 2 0 0 0 2-2", key: "130fy9" }],
  ["path", { d: "M21 12v3", key: "1wzk3p" }],
  ["path", { d: "m21 3-5 5", key: "1g5oa7" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2", key: "kk3yz1" }],
  ["path", { d: "m5 21 4.144-4.144a1.21 1.21 0 0 1 1.712 0L13 19", key: "fyekpt" }],
  ["path", { d: "M9 3h3", key: "d52fa" }],
  ["rect", { x: "3", y: "11", width: "10", height: "10", rx: "1", key: "1wpmix" }]
];
var ImageUpscale = createLucideIcon("image-upscale", __iconNode808);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/image.js
var __iconNode809 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["circle", { cx: "9", cy: "9", r: "2", key: "af1f0g" }],
  ["path", { d: "m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21", key: "1xmnt7" }]
];
var Image2 = createLucideIcon("image", __iconNode809);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/import.js
var __iconNode810 = [
  ["path", { d: "M12 3v12", key: "1x0j5s" }],
  ["path", { d: "m8 11 4 4 4-4", key: "1dohi6" }],
  [
    "path",
    {
      d: "M8 5H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-4",
      key: "1ywtjm"
    }
  ]
];
var Import = createLucideIcon("import", __iconNode810);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/images.js
var __iconNode811 = [
  ["path", { d: "m22 11-1.296-1.296a2.4 2.4 0 0 0-3.408 0L11 16", key: "9kzy35" }],
  ["path", { d: "M4 8a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2", key: "1t0f0t" }],
  ["circle", { cx: "13", cy: "7", r: "1", fill: "currentColor", key: "1obus6" }],
  ["rect", { x: "8", y: "2", width: "14", height: "14", rx: "2", key: "1gvhby" }]
];
var Images = createLucideIcon("images", __iconNode811);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/inbox.js
var __iconNode812 = [
  ["polyline", { points: "22 12 16 12 14 15 10 15 8 12 2 12", key: "o97t9d" }],
  [
    "path",
    {
      d: "M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",
      key: "oot6mr"
    }
  ]
];
var Inbox = createLucideIcon("inbox", __iconNode812);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/indian-rupee.js
var __iconNode813 = [
  ["path", { d: "M6 3h12", key: "ggurg9" }],
  ["path", { d: "M6 8h12", key: "6g4wlu" }],
  ["path", { d: "m6 13 8.5 8", key: "u1kupk" }],
  ["path", { d: "M6 13h3", key: "wdp6ag" }],
  ["path", { d: "M9 13c6.667 0 6.667-10 0-10", key: "1nkvk2" }]
];
var IndianRupee = createLucideIcon("indian-rupee", __iconNode813);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/infinity.js
var __iconNode814 = [
  ["path", { d: "M6 16c5 0 7-8 12-8a4 4 0 0 1 0 8c-5 0-7-8-12-8a4 4 0 1 0 0 8", key: "18ogeb" }]
];
var Infinity2 = createLucideIcon("infinity", __iconNode814);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/info.js
var __iconNode815 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M12 16v-4", key: "1dtifu" }],
  ["path", { d: "M12 8h.01", key: "e9boi3" }]
];
var Info = createLucideIcon("info", __iconNode815);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/inspection-panel.js
var __iconNode816 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7h.01", key: "7u93v4" }],
  ["path", { d: "M17 7h.01", key: "14a9sn" }],
  ["path", { d: "M7 17h.01", key: "19xn7k" }],
  ["path", { d: "M17 17h.01", key: "1sd3ek" }]
];
var InspectionPanel = createLucideIcon("inspection-panel", __iconNode816);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/instagram.js
var __iconNode817 = [
  ["rect", { width: "20", height: "20", x: "2", y: "2", rx: "5", ry: "5", key: "2e1cvw" }],
  ["path", { d: "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z", key: "9exkf1" }],
  ["line", { x1: "17.5", x2: "17.51", y1: "6.5", y2: "6.5", key: "r4j83e" }]
];
var Instagram = createLucideIcon("instagram", __iconNode817);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/italic.js
var __iconNode818 = [
  ["line", { x1: "19", x2: "10", y1: "4", y2: "4", key: "15jd3p" }],
  ["line", { x1: "14", x2: "5", y1: "20", y2: "20", key: "bu0au3" }],
  ["line", { x1: "15", x2: "9", y1: "4", y2: "20", key: "uljnxc" }]
];
var Italic = createLucideIcon("italic", __iconNode818);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/iteration-ccw.js
var __iconNode819 = [
  ["path", { d: "m16 14 4 4-4 4", key: "hkso8o" }],
  ["path", { d: "M20 10a8 8 0 1 0-8 8h8", key: "1bik7b" }]
];
var IterationCcw = createLucideIcon("iteration-ccw", __iconNode819);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/iteration-cw.js
var __iconNode820 = [
  ["path", { d: "M4 10a8 8 0 1 1 8 8H4", key: "svv66n" }],
  ["path", { d: "m8 22-4-4 4-4", key: "6g7gki" }]
];
var IterationCw = createLucideIcon("iteration-cw", __iconNode820);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/japanese-yen.js
var __iconNode821 = [
  ["path", { d: "M12 9.5V21m0-11.5L6 3m6 6.5L18 3", key: "2ej80x" }],
  ["path", { d: "M6 15h12", key: "1hwgt5" }],
  ["path", { d: "M6 11h12", key: "wf4gp6" }]
];
var JapaneseYen = createLucideIcon("japanese-yen", __iconNode821);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/joystick.js
var __iconNode822 = [
  [
    "path",
    {
      d: "M21 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-2Z",
      key: "jg2n2t"
    }
  ],
  ["path", { d: "M6 15v-2", key: "gd6mvg" }],
  ["path", { d: "M12 15V9", key: "8c7uyn" }],
  ["circle", { cx: "12", cy: "6", r: "3", key: "1gm2ql" }]
];
var Joystick = createLucideIcon("joystick", __iconNode822);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/kanban.js
var __iconNode823 = [
  ["path", { d: "M5 3v14", key: "9nsxs2" }],
  ["path", { d: "M12 3v8", key: "1h2ygw" }],
  ["path", { d: "M19 3v18", key: "1sk56x" }]
];
var Kanban = createLucideIcon("kanban", __iconNode823);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/kayak.js
var __iconNode824 = [
  ["path", { d: "M18 17a1 1 0 0 0-1 1v1a2 2 0 1 0 2-2z", key: "skzb1g" }],
  [
    "path",
    {
      d: "M20.97 3.61a.45.45 0 0 0-.58-.58C10.2 6.6 6.6 10.2 3.03 20.39a.45.45 0 0 0 .58.58C13.8 17.4 17.4 13.8 20.97 3.61",
      key: "cv9jm7"
    }
  ],
  ["path", { d: "m6.707 6.707 10.586 10.586", key: "d2l993" }],
  ["path", { d: "M7 5a2 2 0 1 0-2 2h1a1 1 0 0 0 1-1z", key: "i0et4n" }]
];
var Kayak = createLucideIcon("kayak", __iconNode824);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/key-round.js
var __iconNode825 = [
  [
    "path",
    {
      d: "M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z",
      key: "1s6t7t"
    }
  ],
  ["circle", { cx: "16.5", cy: "7.5", r: ".5", fill: "currentColor", key: "w0ekpg" }]
];
var KeyRound = createLucideIcon("key-round", __iconNode825);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/key-square.js
var __iconNode826 = [
  [
    "path",
    {
      d: "M12.4 2.7a2.5 2.5 0 0 1 3.4 0l5.5 5.5a2.5 2.5 0 0 1 0 3.4l-3.7 3.7a2.5 2.5 0 0 1-3.4 0L8.7 9.8a2.5 2.5 0 0 1 0-3.4z",
      key: "165ttr"
    }
  ],
  ["path", { d: "m14 7 3 3", key: "1r5n42" }],
  [
    "path",
    {
      d: "m9.4 10.6-6.814 6.814A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814",
      key: "1ubxi2"
    }
  ]
];
var KeySquare = createLucideIcon("key-square", __iconNode826);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/key.js
var __iconNode827 = [
  ["path", { d: "m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4", key: "g0fldk" }],
  ["path", { d: "m21 2-9.6 9.6", key: "1j0ho8" }],
  ["circle", { cx: "7.5", cy: "15.5", r: "5.5", key: "yqb3hr" }]
];
var Key = createLucideIcon("key", __iconNode827);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/keyboard-music.js
var __iconNode828 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M6 8h4", key: "utf9t1" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "M6 12v4", key: "dy92yo" }],
  ["path", { d: "M10 12v4", key: "1fxnav" }],
  ["path", { d: "M14 12v4", key: "1hft58" }],
  ["path", { d: "M18 12v4", key: "tjjnbz" }]
];
var KeyboardMusic = createLucideIcon("keyboard-music", __iconNode828);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/keyboard-off.js
var __iconNode829 = [
  ["path", { d: "M 20 4 A2 2 0 0 1 22 6", key: "1g1fkt" }],
  ["path", { d: "M 22 6 L 22 16.41", key: "1qjg3w" }],
  ["path", { d: "M 7 16 L 16 16", key: "n0yqwb" }],
  ["path", { d: "M 9.69 4 L 20 4", key: "kbpcgx" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2", key: "s23sx2" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }]
];
var KeyboardOff = createLucideIcon("keyboard-off", __iconNode829);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/keyboard.js
var __iconNode830 = [
  ["path", { d: "M10 8h.01", key: "1r9ogq" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M14 8h.01", key: "1primd" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }],
  ["path", { d: "M18 8h.01", key: "emo2bl" }],
  ["path", { d: "M6 8h.01", key: "x9i8wu" }],
  ["path", { d: "M7 16h10", key: "wp8him" }],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }]
];
var Keyboard = createLucideIcon("keyboard", __iconNode830);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp-ceiling.js
var __iconNode831 = [
  ["path", { d: "M12 2v5", key: "nd4vlx" }],
  ["path", { d: "M14.829 15.998a3 3 0 1 1-5.658 0", key: "1pybiy" }],
  [
    "path",
    {
      d: "M20.92 14.606A1 1 0 0 1 20 16H4a1 1 0 0 1-.92-1.394l3-7A1 1 0 0 1 7 7h10a1 1 0 0 1 .92.606z",
      key: "ma1wor"
    }
  ]
];
var LampCeiling = createLucideIcon("lamp-ceiling", __iconNode831);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp-desk.js
var __iconNode832 = [
  [
    "path",
    {
      d: "M10.293 2.293a1 1 0 0 1 1.414 0l2.5 2.5 5.994 1.227a1 1 0 0 1 .506 1.687l-7 7a1 1 0 0 1-1.687-.506l-1.227-5.994-2.5-2.5a1 1 0 0 1 0-1.414z",
      key: "sb8slu"
    }
  ],
  ["path", { d: "m14.207 4.793-3.414 3.414", key: "m2x3oj" }],
  [
    "path",
    { d: "M3 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1z", key: "8b3myj" }
  ],
  ["path", { d: "m9.086 6.5-4.793 4.793a1 1 0 0 0-.18 1.17L7 18", key: "43s6cu" }]
];
var LampDesk = createLucideIcon("lamp-desk", __iconNode832);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp-floor.js
var __iconNode833 = [
  ["path", { d: "M12 10v12", key: "6ubwww" }],
  [
    "path",
    {
      d: "M17.929 7.629A1 1 0 0 1 17 9H7a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 9 2h6a1 1 0 0 1 .928.629z",
      key: "1o95gh"
    }
  ],
  ["path", { d: "M9 22h6", key: "1rlq3v" }]
];
var LampFloor = createLucideIcon("lamp-floor", __iconNode833);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp-wall-down.js
var __iconNode834 = [
  [
    "path",
    {
      d: "M19.929 18.629A1 1 0 0 1 19 20H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 13h6a1 1 0 0 1 .928.629z",
      key: "u4w2d7"
    }
  ],
  [
    "path",
    { d: "M6 3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1z", key: "15356w" }
  ],
  ["path", { d: "M8 6h4a2 2 0 0 1 2 2v5", key: "1m6m7x" }]
];
var LampWallDown = createLucideIcon("lamp-wall-down", __iconNode834);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp-wall-up.js
var __iconNode835 = [
  [
    "path",
    {
      d: "M19.929 9.629A1 1 0 0 1 19 11H9a1 1 0 0 1-.928-1.371l2-5A1 1 0 0 1 11 4h6a1 1 0 0 1 .928.629z",
      key: "1uvrbf"
    }
  ],
  [
    "path",
    { d: "M6 15a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H5a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z", key: "154r2a" }
  ],
  ["path", { d: "M8 18h4a2 2 0 0 0 2-2v-5", key: "z9mbu0" }]
];
var LampWallUp = createLucideIcon("lamp-wall-up", __iconNode835);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lamp.js
var __iconNode836 = [
  ["path", { d: "M12 12v6", key: "3ahymv" }],
  [
    "path",
    {
      d: "M4.077 10.615A1 1 0 0 0 5 12h14a1 1 0 0 0 .923-1.385l-3.077-7.384A2 2 0 0 0 15 2H9a2 2 0 0 0-1.846 1.23Z",
      key: "1l7kg2"
    }
  ],
  [
    "path",
    { d: "M8 20a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1z", key: "1mmzpi" }
  ]
];
var Lamp = createLucideIcon("lamp", __iconNode836);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/land-plot.js
var __iconNode837 = [
  ["path", { d: "m12 8 6-3-6-3v10", key: "mvpnpy" }],
  [
    "path",
    {
      d: "m8 11.99-5.5 3.14a1 1 0 0 0 0 1.74l8.5 4.86a2 2 0 0 0 2 0l8.5-4.86a1 1 0 0 0 0-1.74L16 12",
      key: "ek95tt"
    }
  ],
  ["path", { d: "m6.49 12.85 11.02 6.3", key: "1kt42w" }],
  ["path", { d: "M17.51 12.85 6.5 19.15", key: "v55bdg" }]
];
var LandPlot = createLucideIcon("land-plot", __iconNode837);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/landmark.js
var __iconNode838 = [
  ["path", { d: "M10 18v-7", key: "wt116b" }],
  [
    "path",
    {
      d: "M11.12 2.198a2 2 0 0 1 1.76.006l7.866 3.847c.476.233.31.949-.22.949H3.474c-.53 0-.695-.716-.22-.949z",
      key: "1m329m"
    }
  ],
  ["path", { d: "M14 18v-7", key: "vav6t3" }],
  ["path", { d: "M18 18v-7", key: "aexdmj" }],
  ["path", { d: "M3 22h18", key: "8prr45" }],
  ["path", { d: "M6 18v-7", key: "1ivflk" }]
];
var Landmark = createLucideIcon("landmark", __iconNode838);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/languages.js
var __iconNode839 = [
  ["path", { d: "m5 8 6 6", key: "1wu5hv" }],
  ["path", { d: "m4 14 6-6 2-3", key: "1k1g8d" }],
  ["path", { d: "M2 5h12", key: "or177f" }],
  ["path", { d: "M7 2h1", key: "1t2jsx" }],
  ["path", { d: "m22 22-5-10-5 10", key: "don7ne" }],
  ["path", { d: "M14 18h6", key: "1m8k6r" }]
];
var Languages = createLucideIcon("languages", __iconNode839);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/laptop-minimal-check.js
var __iconNode840 = [
  ["path", { d: "M2 20h20", key: "owomy5" }],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }],
  ["rect", { x: "3", y: "4", width: "18", height: "12", rx: "2", key: "8ur36m" }]
];
var LaptopMinimalCheck = createLucideIcon("laptop-minimal-check", __iconNode840);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/laptop-minimal.js
var __iconNode841 = [
  ["rect", { width: "18", height: "12", x: "3", y: "4", rx: "2", ry: "2", key: "1qhy41" }],
  ["line", { x1: "2", x2: "22", y1: "20", y2: "20", key: "ni3hll" }]
];
var LaptopMinimal = createLucideIcon("laptop-minimal", __iconNode841);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/laptop.js
var __iconNode842 = [
  [
    "path",
    {
      d: "M18 5a2 2 0 0 1 2 2v8.526a2 2 0 0 0 .212.897l1.068 2.127a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45l1.068-2.127A2 2 0 0 0 4 15.526V7a2 2 0 0 1 2-2z",
      key: "1pdavp"
    }
  ],
  ["path", { d: "M20.054 15.987H3.946", key: "14rxg9" }]
];
var Laptop = createLucideIcon("laptop", __iconNode842);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lasso-select.js
var __iconNode843 = [
  ["path", { d: "M7 22a5 5 0 0 1-2-4", key: "umushi" }],
  ["path", { d: "M7 16.93c.96.43 1.96.74 2.99.91", key: "ybbtv3" }],
  [
    "path",
    {
      d: "M3.34 14A6.8 6.8 0 0 1 2 10c0-4.42 4.48-8 10-8s10 3.58 10 8a7.19 7.19 0 0 1-.33 2",
      key: "gt5e1w"
    }
  ],
  ["path", { d: "M5 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4z", key: "bq3ynw" }],
  [
    "path",
    {
      d: "M14.33 22h-.09a.35.35 0 0 1-.24-.32v-10a.34.34 0 0 1 .33-.34c.08 0 .15.03.21.08l7.34 6a.33.33 0 0 1-.21.59h-4.49l-2.57 3.85a.35.35 0 0 1-.28.14z",
      key: "72q637"
    }
  ]
];
var LassoSelect = createLucideIcon("lasso-select", __iconNode843);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lasso.js
var __iconNode844 = [
  [
    "path",
    {
      d: "M3.704 14.467A10 8 0 0 1 2 10a10 8 0 0 1 20 0 10 8 0 0 1-10 8 10 8 0 0 1-5.181-1.158",
      key: "1yant3"
    }
  ],
  ["path", { d: "M7 22a5 5 0 0 1-2-3.994", key: "1xp6a4" }],
  ["circle", { cx: "5", cy: "16", r: "2", key: "18csp3" }]
];
var Lasso = createLucideIcon("lasso", __iconNode844);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/laugh.js
var __iconNode845 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M18 13a6 6 0 0 1-6 5 6 6 0 0 1-6-5h12Z", key: "b2q4dd" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
];
var Laugh = createLucideIcon("laugh", __iconNode845);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layers-2.js
var __iconNode846 = [
  [
    "path",
    {
      d: "M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74z",
      key: "15q6uc"
    }
  ],
  [
    "path",
    {
      d: "m20 14.285 1.5.845a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74l1.5-.845",
      key: "byia6g"
    }
  ]
];
var Layers2 = createLucideIcon("layers-2", __iconNode846);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-dashboard.js
var __iconNode847 = [
  ["rect", { width: "7", height: "9", x: "3", y: "3", rx: "1", key: "10lvy0" }],
  ["rect", { width: "7", height: "5", x: "14", y: "3", rx: "1", key: "16une8" }],
  ["rect", { width: "7", height: "9", x: "14", y: "12", rx: "1", key: "1hutg5" }],
  ["rect", { width: "7", height: "5", x: "3", y: "16", rx: "1", key: "ldoo1y" }]
];
var LayoutDashboard = createLucideIcon("layout-dashboard", __iconNode847);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layers.js
var __iconNode848 = [
  [
    "path",
    {
      d: "M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83z",
      key: "zw3jo"
    }
  ],
  [
    "path",
    {
      d: "M2 12a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 12",
      key: "1wduqc"
    }
  ],
  [
    "path",
    {
      d: "M2 17a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 17",
      key: "kqbvx6"
    }
  ]
];
var Layers = createLucideIcon("layers", __iconNode848);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-grid.js
var __iconNode849 = [
  ["rect", { width: "7", height: "7", x: "3", y: "3", rx: "1", key: "1g98yp" }],
  ["rect", { width: "7", height: "7", x: "14", y: "3", rx: "1", key: "6d4xhi" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }]
];
var LayoutGrid = createLucideIcon("layout-grid", __iconNode849);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-list.js
var __iconNode850 = [
  ["rect", { width: "7", height: "7", x: "3", y: "3", rx: "1", key: "1g98yp" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }],
  ["path", { d: "M14 4h7", key: "3xa0d5" }],
  ["path", { d: "M14 9h7", key: "1icrd9" }],
  ["path", { d: "M14 15h7", key: "1mj8o2" }],
  ["path", { d: "M14 20h7", key: "11slyb" }]
];
var LayoutList = createLucideIcon("layout-list", __iconNode850);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-panel-left.js
var __iconNode851 = [
  ["rect", { width: "7", height: "18", x: "3", y: "3", rx: "1", key: "2obqm" }],
  ["rect", { width: "7", height: "7", x: "14", y: "3", rx: "1", key: "6d4xhi" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }]
];
var LayoutPanelLeft = createLucideIcon("layout-panel-left", __iconNode851);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-panel-top.js
var __iconNode852 = [
  ["rect", { width: "18", height: "7", x: "3", y: "3", rx: "1", key: "f1a2em" }],
  ["rect", { width: "7", height: "7", x: "3", y: "14", rx: "1", key: "1bb6yr" }],
  ["rect", { width: "7", height: "7", x: "14", y: "14", rx: "1", key: "nxv5o0" }]
];
var LayoutPanelTop = createLucideIcon("layout-panel-top", __iconNode852);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/layout-template.js
var __iconNode853 = [
  ["rect", { width: "18", height: "7", x: "3", y: "3", rx: "1", key: "f1a2em" }],
  ["rect", { width: "9", height: "7", x: "3", y: "14", rx: "1", key: "jqznyg" }],
  ["rect", { width: "5", height: "7", x: "16", y: "14", rx: "1", key: "q5h2i8" }]
];
var LayoutTemplate = createLucideIcon("layout-template", __iconNode853);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/leaf.js
var __iconNode854 = [
  [
    "path",
    {
      d: "M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z",
      key: "nnexq3"
    }
  ],
  ["path", { d: "M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12", key: "mt58a7" }]
];
var Leaf = createLucideIcon("leaf", __iconNode854);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/leafy-green.js
var __iconNode855 = [
  [
    "path",
    {
      d: "M2 22c1.25-.987 2.27-1.975 3.9-2.2a5.56 5.56 0 0 1 3.8 1.5 4 4 0 0 0 6.187-2.353 3.5 3.5 0 0 0 3.69-5.116A3.5 3.5 0 0 0 20.95 8 3.5 3.5 0 1 0 16 3.05a3.5 3.5 0 0 0-5.831 1.373 3.5 3.5 0 0 0-5.116 3.69 4 4 0 0 0-2.348 6.155C3.499 15.42 4.409 16.712 4.2 18.1 3.926 19.743 3.014 20.732 2 22",
      key: "1134nt"
    }
  ],
  ["path", { d: "M2 22 17 7", key: "1q7jp2" }]
];
var LeafyGreen = createLucideIcon("leafy-green", __iconNode855);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lectern.js
var __iconNode856 = [
  [
    "path",
    {
      d: "M16 12h3a2 2 0 0 0 1.902-1.38l1.056-3.333A1 1 0 0 0 21 6H3a1 1 0 0 0-.958 1.287l1.056 3.334A2 2 0 0 0 5 12h3",
      key: "13jjxg"
    }
  ],
  ["path", { d: "M18 6V3a1 1 0 0 0-1-1h-3", key: "1550fe" }],
  ["rect", { width: "8", height: "12", x: "8", y: "10", rx: "1", key: "qmu8b6" }]
];
var Lectern = createLucideIcon("lectern", __iconNode856);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/library-big.js
var __iconNode857 = [
  ["rect", { width: "8", height: "18", x: "3", y: "3", rx: "1", key: "oynpb5" }],
  ["path", { d: "M7 3v18", key: "bbkbws" }],
  [
    "path",
    {
      d: "M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z",
      key: "1qboyk"
    }
  ]
];
var LibraryBig = createLucideIcon("library-big", __iconNode857);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/library.js
var __iconNode858 = [
  ["path", { d: "m16 6 4 14", key: "ji33uf" }],
  ["path", { d: "M12 6v14", key: "1n7gus" }],
  ["path", { d: "M8 8v12", key: "1gg7y9" }],
  ["path", { d: "M4 4v16", key: "6qkkli" }]
];
var Library = createLucideIcon("library", __iconNode858);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/life-buoy.js
var __iconNode859 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "m4.93 4.93 4.24 4.24", key: "1ymg45" }],
  ["path", { d: "m14.83 9.17 4.24-4.24", key: "1cb5xl" }],
  ["path", { d: "m14.83 14.83 4.24 4.24", key: "q42g0n" }],
  ["path", { d: "m9.17 14.83-4.24 4.24", key: "bqpfvv" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
];
var LifeBuoy = createLucideIcon("life-buoy", __iconNode859);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ligature.js
var __iconNode860 = [
  ["path", { d: "M14 12h2v8", key: "c1fccl" }],
  ["path", { d: "M14 20h4", key: "lzx1xo" }],
  ["path", { d: "M6 12h4", key: "a4o3ry" }],
  ["path", { d: "M6 20h4", key: "1i6q5t" }],
  ["path", { d: "M8 20V8a4 4 0 0 1 7.464-2", key: "wk9t6r" }]
];
var Ligature = createLucideIcon("ligature", __iconNode860);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lightbulb-off.js
var __iconNode861 = [
  ["path", { d: "M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5", key: "1fkcox" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5", key: "10m8kw" }],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["path", { d: "M10 22h4", key: "ceow96" }]
];
var LightbulbOff = createLucideIcon("lightbulb-off", __iconNode861);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/line-squiggle.js
var __iconNode862 = [
  [
    "path",
    {
      d: "M7 3.5c5-2 7 2.5 3 4C1.5 10 2 15 5 16c5 2 9-10 14-7s.5 13.5-4 12c-5-2.5.5-11 6-2",
      key: "1lrphd"
    }
  ]
];
var LineSquiggle = createLucideIcon("line-squiggle", __iconNode862);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lightbulb.js
var __iconNode863 = [
  [
    "path",
    {
      d: "M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",
      key: "1gvzjb"
    }
  ],
  ["path", { d: "M9 18h6", key: "x1upvd" }],
  ["path", { d: "M10 22h4", key: "ceow96" }]
];
var Lightbulb = createLucideIcon("lightbulb", __iconNode863);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/link-2-off.js
var __iconNode864 = [
  ["path", { d: "M9 17H7A5 5 0 0 1 7 7", key: "10o201" }],
  ["path", { d: "M15 7h2a5 5 0 0 1 4 8", key: "1d3206" }],
  ["line", { x1: "8", x2: "12", y1: "12", y2: "12", key: "rvw6j4" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var Link2Off = createLucideIcon("link-2-off", __iconNode864);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/link-2.js
var __iconNode865 = [
  ["path", { d: "M9 17H7A5 5 0 0 1 7 7h2", key: "8i5ue5" }],
  ["path", { d: "M15 7h2a5 5 0 1 1 0 10h-2", key: "1b9ql8" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }]
];
var Link2 = createLucideIcon("link-2", __iconNode865);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/link.js
var __iconNode866 = [
  ["path", { d: "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71", key: "1cjeqo" }],
  ["path", { d: "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71", key: "19qd67" }]
];
var Link = createLucideIcon("link", __iconNode866);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/linkedin.js
var __iconNode867 = [
  [
    "path",
    {
      d: "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z",
      key: "c2jq9f"
    }
  ],
  ["rect", { width: "4", height: "12", x: "2", y: "9", key: "mk3on5" }],
  ["circle", { cx: "4", cy: "4", r: "2", key: "bt5ra8" }]
];
var Linkedin = createLucideIcon("linkedin", __iconNode867);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-check.js
var __iconNode868 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M11 19H3", key: "zflm78" }],
  ["path", { d: "m15 18 2 2 4-4", key: "1szwhi" }]
];
var ListCheck = createLucideIcon("list-check", __iconNode868);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-checks.js
var __iconNode869 = [
  ["path", { d: "M13 5h8", key: "a7qcls" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 19h8", key: "c3s6r1" }],
  ["path", { d: "m3 17 2 2 4-4", key: "1jhpwq" }],
  ["path", { d: "m3 7 2 2 4-4", key: "1obspn" }]
];
var ListChecks = createLucideIcon("list-checks", __iconNode869);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-chevrons-down-up.js
var __iconNode870 = [
  ["path", { d: "M3 5h8", key: "18g2rq" }],
  ["path", { d: "M3 12h8", key: "1xfjp6" }],
  ["path", { d: "M3 19h8", key: "fpbke4" }],
  ["path", { d: "m15 5 3 3 3-3", key: "1t4thf" }],
  ["path", { d: "m15 19 3-3 3 3", key: "y4ckd2" }]
];
var ListChevronsDownUp = createLucideIcon("list-chevrons-down-up", __iconNode870);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-collapse.js
var __iconNode871 = [
  ["path", { d: "M10 5h11", key: "1hkqpe" }],
  ["path", { d: "M10 12h11", key: "6m4ad9" }],
  ["path", { d: "M10 19h11", key: "14g2nv" }],
  ["path", { d: "m3 10 3-3-3-3", key: "i7pm08" }],
  ["path", { d: "m3 20 3-3-3-3", key: "20gx1n" }]
];
var ListCollapse = createLucideIcon("list-collapse", __iconNode871);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-chevrons-up-down.js
var __iconNode872 = [
  ["path", { d: "M3 5h8", key: "18g2rq" }],
  ["path", { d: "M3 12h8", key: "1xfjp6" }],
  ["path", { d: "M3 19h8", key: "fpbke4" }],
  ["path", { d: "m15 8 3-3 3 3", key: "bc4io6" }],
  ["path", { d: "m15 16 3 3 3-3", key: "9wmg1l" }]
];
var ListChevronsUpDown = createLucideIcon("list-chevrons-up-down", __iconNode872);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-end.js
var __iconNode873 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M9 19H3", key: "s61nz1" }],
  ["path", { d: "m16 16-3 3 3 3", key: "117b85" }],
  ["path", { d: "M21 5v12a2 2 0 0 1-2 2h-6", key: "hey24a" }]
];
var ListEnd = createLucideIcon("list-end", __iconNode873);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-filter-plus.js
var __iconNode874 = [
  ["path", { d: "M12 5H2", key: "1o22fu" }],
  ["path", { d: "M6 12h12", key: "8npq4p" }],
  ["path", { d: "M9 19h6", key: "456am0" }],
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 8V2", key: "1wcffq" }]
];
var ListFilterPlus = createLucideIcon("list-filter-plus", __iconNode874);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-filter.js
var __iconNode875 = [
  ["path", { d: "M2 5h20", key: "1fs1ex" }],
  ["path", { d: "M6 12h12", key: "8npq4p" }],
  ["path", { d: "M9 19h6", key: "456am0" }]
];
var ListFilter = createLucideIcon("list-filter", __iconNode875);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-indent-decrease.js
var __iconNode876 = [
  ["path", { d: "M21 5H11", key: "us1j55" }],
  ["path", { d: "M21 12H11", key: "wd7e0v" }],
  ["path", { d: "M21 19H11", key: "saa85w" }],
  ["path", { d: "m7 8-4 4 4 4", key: "o5hrat" }]
];
var ListIndentDecrease = createLucideIcon("list-indent-decrease", __iconNode876);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-minus.js
var __iconNode877 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 19H3", key: "zzsher" }],
  ["path", { d: "M21 12h-6", key: "bt1uis" }]
];
var ListMinus = createLucideIcon("list-minus", __iconNode877);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-indent-increase.js
var __iconNode878 = [
  ["path", { d: "M21 5H11", key: "us1j55" }],
  ["path", { d: "M21 12H11", key: "wd7e0v" }],
  ["path", { d: "M21 19H11", key: "saa85w" }],
  ["path", { d: "m3 8 4 4-4 4", key: "1a3j6y" }]
];
var ListIndentIncrease = createLucideIcon("list-indent-increase", __iconNode878);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-music.js
var __iconNode879 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M11 19H3", key: "zflm78" }],
  ["path", { d: "M21 16V5", key: "yxg4q8" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
];
var ListMusic = createLucideIcon("list-music", __iconNode879);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-ordered.js
var __iconNode880 = [
  ["path", { d: "M11 5h10", key: "1cz7ny" }],
  ["path", { d: "M11 12h10", key: "1438ji" }],
  ["path", { d: "M11 19h10", key: "11t30w" }],
  ["path", { d: "M4 4h1v5", key: "10yrso" }],
  ["path", { d: "M4 9h2", key: "r1h2o0" }],
  ["path", { d: "M6.5 20H3.4c0-1 2.6-1.925 2.6-3.5a1.5 1.5 0 0 0-2.6-1.02", key: "xtkcd5" }]
];
var ListOrdered = createLucideIcon("list-ordered", __iconNode880);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-plus.js
var __iconNode881 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 19H3", key: "zzsher" }],
  ["path", { d: "M18 9v6", key: "1twb98" }],
  ["path", { d: "M21 12h-6", key: "bt1uis" }]
];
var ListPlus = createLucideIcon("list-plus", __iconNode881);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-restart.js
var __iconNode882 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M7 12H3", key: "13ou7f" }],
  ["path", { d: "M7 19H3", key: "wbqt3n" }],
  [
    "path",
    {
      d: "M12 18a5 5 0 0 0 9-3 4.5 4.5 0 0 0-4.5-4.5c-1.33 0-2.54.54-3.41 1.41L11 14",
      key: "qth677"
    }
  ],
  ["path", { d: "M11 10v4h4", key: "172dkj" }]
];
var ListRestart = createLucideIcon("list-restart", __iconNode882);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-start.js
var __iconNode883 = [
  ["path", { d: "M3 5h6", key: "1ltk0q" }],
  ["path", { d: "M3 12h13", key: "ppymz1" }],
  ["path", { d: "M3 19h13", key: "bpdczq" }],
  ["path", { d: "m16 8-3-3 3-3", key: "1pjpp6" }],
  ["path", { d: "M21 19V7a2 2 0 0 0-2-2h-6", key: "4zzq67" }]
];
var ListStart = createLucideIcon("list-start", __iconNode883);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-todo.js
var __iconNode884 = [
  ["path", { d: "M13 5h8", key: "a7qcls" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 19h8", key: "c3s6r1" }],
  ["path", { d: "m3 17 2 2 4-4", key: "1jhpwq" }],
  ["rect", { x: "3", y: "4", width: "6", height: "6", rx: "1", key: "cif1o7" }]
];
var ListTodo = createLucideIcon("list-todo", __iconNode884);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-tree.js
var __iconNode885 = [
  ["path", { d: "M8 5h13", key: "1pao27" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 19h8", key: "c3s6r1" }],
  ["path", { d: "M3 10a2 2 0 0 0 2 2h3", key: "1npucw" }],
  ["path", { d: "M3 5v12a2 2 0 0 0 2 2h3", key: "x1gjn2" }]
];
var ListTree = createLucideIcon("list-tree", __iconNode885);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-x.js
var __iconNode886 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M11 12H3", key: "51ecnj" }],
  ["path", { d: "M16 19H3", key: "zzsher" }],
  ["path", { d: "m15.5 9.5 5 5", key: "ytk86i" }],
  ["path", { d: "m20.5 9.5-5 5", key: "17o44f" }]
];
var ListX = createLucideIcon("list-x", __iconNode886);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list-video.js
var __iconNode887 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M10 12H3", key: "1ulcyk" }],
  ["path", { d: "M10 19H3", key: "108z41" }],
  [
    "path",
    {
      d: "M15 12.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997a1 1 0 0 1-1.517-.86z",
      key: "ms4nik"
    }
  ]
];
var ListVideo = createLucideIcon("list-video", __iconNode887);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/list.js
var __iconNode888 = [
  ["path", { d: "M3 5h.01", key: "18ugdj" }],
  ["path", { d: "M3 12h.01", key: "nlz23k" }],
  ["path", { d: "M3 19h.01", key: "noohij" }],
  ["path", { d: "M8 5h13", key: "1pao27" }],
  ["path", { d: "M8 12h13", key: "1za7za" }],
  ["path", { d: "M8 19h13", key: "m83p4d" }]
];
var List = createLucideIcon("list", __iconNode888);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/loader-circle.js
var __iconNode889 = [["path", { d: "M21 12a9 9 0 1 1-6.219-8.56", key: "13zald" }]];
var LoaderCircle = createLucideIcon("loader-circle", __iconNode889);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/loader-pinwheel.js
var __iconNode890 = [
  ["path", { d: "M22 12a1 1 0 0 1-10 0 1 1 0 0 0-10 0", key: "1lzz15" }],
  ["path", { d: "M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6", key: "1gnrpi" }],
  ["path", { d: "M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6", key: "u9yy5q" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var LoaderPinwheel = createLucideIcon("loader-pinwheel", __iconNode890);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/loader.js
var __iconNode891 = [
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m16.2 7.8 2.9-2.9", key: "r700ao" }],
  ["path", { d: "M18 12h4", key: "wj9ykh" }],
  ["path", { d: "m16.2 16.2 2.9 2.9", key: "1bxg5t" }],
  ["path", { d: "M12 18v4", key: "jadmvz" }],
  ["path", { d: "m4.9 19.1 2.9-2.9", key: "bwix9q" }],
  ["path", { d: "M2 12h4", key: "j09sii" }],
  ["path", { d: "m4.9 4.9 2.9 2.9", key: "giyufr" }]
];
var Loader = createLucideIcon("loader", __iconNode891);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/locate-off.js
var __iconNode892 = [
  ["path", { d: "M12 19v3", key: "npa21l" }],
  ["path", { d: "M12 2v3", key: "qbqxhf" }],
  ["path", { d: "M18.89 13.24a7 7 0 0 0-8.13-8.13", key: "1v9jrh" }],
  ["path", { d: "M19 12h3", key: "osuazr" }],
  ["path", { d: "M2 12h3", key: "1wrr53" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M7.05 7.05a7 7 0 0 0 9.9 9.9", key: "rc5l2e" }]
];
var LocateOff = createLucideIcon("locate-off", __iconNode892);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/locate-fixed.js
var __iconNode893 = [
  ["line", { x1: "2", x2: "5", y1: "12", y2: "12", key: "bvdh0s" }],
  ["line", { x1: "19", x2: "22", y1: "12", y2: "12", key: "1tbv5k" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "5", key: "11lu5j" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }],
  ["circle", { cx: "12", cy: "12", r: "7", key: "fim9np" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
];
var LocateFixed = createLucideIcon("locate-fixed", __iconNode893);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/locate.js
var __iconNode894 = [
  ["line", { x1: "2", x2: "5", y1: "12", y2: "12", key: "bvdh0s" }],
  ["line", { x1: "19", x2: "22", y1: "12", y2: "12", key: "1tbv5k" }],
  ["line", { x1: "12", x2: "12", y1: "2", y2: "5", key: "11lu5j" }],
  ["line", { x1: "12", x2: "12", y1: "19", y2: "22", key: "x3vr5v" }],
  ["circle", { cx: "12", cy: "12", r: "7", key: "fim9np" }]
];
var Locate = createLucideIcon("locate", __iconNode894);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lock-keyhole-open.js
var __iconNode895 = [
  ["circle", { cx: "12", cy: "16", r: "1", key: "1au0dj" }],
  ["rect", { width: "18", height: "12", x: "3", y: "10", rx: "2", key: "l0tzu3" }],
  ["path", { d: "M7 10V7a5 5 0 0 1 9.33-2.5", key: "car5b7" }]
];
var LockKeyholeOpen = createLucideIcon("lock-keyhole-open", __iconNode895);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lock-keyhole.js
var __iconNode896 = [
  ["circle", { cx: "12", cy: "16", r: "1", key: "1au0dj" }],
  ["rect", { x: "3", y: "10", width: "18", height: "12", rx: "2", key: "6s8ecr" }],
  ["path", { d: "M7 10V7a5 5 0 0 1 10 0v3", key: "1pqi11" }]
];
var LockKeyhole = createLucideIcon("lock-keyhole", __iconNode896);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lock-open.js
var __iconNode897 = [
  ["rect", { width: "18", height: "11", x: "3", y: "11", rx: "2", ry: "2", key: "1w4ew1" }],
  ["path", { d: "M7 11V7a5 5 0 0 1 9.9-1", key: "1mm8w8" }]
];
var LockOpen = createLucideIcon("lock-open", __iconNode897);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/log-in.js
var __iconNode898 = [
  ["path", { d: "m10 17 5-5-5-5", key: "1bsop3" }],
  ["path", { d: "M15 12H3", key: "6jk70r" }],
  ["path", { d: "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4", key: "u53s6r" }]
];
var LogIn = createLucideIcon("log-in", __iconNode898);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/log-out.js
var __iconNode899 = [
  ["path", { d: "m16 17 5-5-5-5", key: "1bji2h" }],
  ["path", { d: "M21 12H9", key: "dn1m92" }],
  ["path", { d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4", key: "1uf3rs" }]
];
var LogOut = createLucideIcon("log-out", __iconNode899);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lock.js
var __iconNode900 = [
  ["rect", { width: "18", height: "11", x: "3", y: "11", rx: "2", ry: "2", key: "1w4ew1" }],
  ["path", { d: "M7 11V7a5 5 0 0 1 10 0v4", key: "fwvmzm" }]
];
var Lock2 = createLucideIcon("lock", __iconNode900);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/logs.js
var __iconNode901 = [
  ["path", { d: "M3 5h1", key: "1mv5vm" }],
  ["path", { d: "M3 12h1", key: "lp3yf2" }],
  ["path", { d: "M3 19h1", key: "w6f3n9" }],
  ["path", { d: "M8 5h1", key: "1nxr5w" }],
  ["path", { d: "M8 12h1", key: "1con00" }],
  ["path", { d: "M8 19h1", key: "k7p10e" }],
  ["path", { d: "M13 5h8", key: "a7qcls" }],
  ["path", { d: "M13 12h8", key: "h98zly" }],
  ["path", { d: "M13 19h8", key: "c3s6r1" }]
];
var Logs = createLucideIcon("logs", __iconNode901);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/lollipop.js
var __iconNode902 = [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }],
  ["path", { d: "M11 11a2 2 0 0 0 4 0 4 4 0 0 0-8 0 6 6 0 0 0 12 0", key: "107gwy" }]
];
var Lollipop = createLucideIcon("lollipop", __iconNode902);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/luggage.js
var __iconNode903 = [
  [
    "path",
    { d: "M6 20a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2", key: "1m57jg" }
  ],
  ["path", { d: "M8 18V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v14", key: "1l99gc" }],
  ["path", { d: "M10 20h4", key: "ni2waw" }],
  ["circle", { cx: "16", cy: "20", r: "2", key: "1vifvg" }],
  ["circle", { cx: "8", cy: "20", r: "2", key: "ckkr5m" }]
];
var Luggage = createLucideIcon("luggage", __iconNode903);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/magnet.js
var __iconNode904 = [
  ["path", { d: "m12 15 4 4", key: "lnac28" }],
  [
    "path",
    {
      d: "M2.352 10.648a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l6.029-6.029a1 1 0 1 1 3 3l-6.029 6.029a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l6.365-6.367A1 1 0 0 0 8.716 4.282z",
      key: "nlhkjb"
    }
  ],
  ["path", { d: "m5 8 4 4", key: "j6kj7e" }]
];
var Magnet = createLucideIcon("magnet", __iconNode904);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-check.js
var __iconNode905 = [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "12jkf8" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
];
var MailCheck = createLucideIcon("mail-check", __iconNode905);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-minus.js
var __iconNode906 = [
  ["path", { d: "M22 15V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "fuxbkv" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }]
];
var MailMinus = createLucideIcon("mail-minus", __iconNode906);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-open.js
var __iconNode907 = [
  [
    "path",
    {
      d: "M21.2 8.4c.5.38.8.97.8 1.6v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V10a2 2 0 0 1 .8-1.6l8-6a2 2 0 0 1 2.4 0l8 6Z",
      key: "1jhwl8"
    }
  ],
  ["path", { d: "m22 10-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 10", key: "1qfld7" }]
];
var MailOpen = createLucideIcon("mail-open", __iconNode907);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-plus.js
var __iconNode908 = [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "12jkf8" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M16 19h6", key: "xwg31i" }]
];
var MailPlus = createLucideIcon("mail-plus", __iconNode908);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-question-mark.js
var __iconNode909 = [
  ["path", { d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5", key: "e61zoh" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  [
    "path",
    {
      d: "M18 15.28c.2-.4.5-.8.9-1a2.1 2.1 0 0 1 2.6.4c.3.4.5.8.5 1.3 0 1.3-2 2-2 2",
      key: "7z9rxb"
    }
  ],
  ["path", { d: "M20 22v.01", key: "12bgn6" }]
];
var MailQuestionMark = createLucideIcon("mail-question-mark", __iconNode909);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-search.js
var __iconNode910 = [
  ["path", { d: "M22 12.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h7.5", key: "w80f2v" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M18 21a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z", key: "8lzu5m" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["path", { d: "m22 22-1.5-1.5", key: "1x83k4" }]
];
var MailSearch = createLucideIcon("mail-search", __iconNode910);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail.js
var __iconNode911 = [
  ["path", { d: "m22 7-8.991 5.727a2 2 0 0 1-2.009 0L2 7", key: "132q7q" }],
  ["rect", { x: "2", y: "4", width: "20", height: "16", rx: "2", key: "izxlao" }]
];
var Mail = createLucideIcon("mail", __iconNode911);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-x.js
var __iconNode912 = [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h9", key: "1j9vog" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "m17 17 4 4", key: "1b3523" }],
  ["path", { d: "m21 17-4 4", key: "uinynz" }]
];
var MailX = createLucideIcon("mail-x", __iconNode912);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mail-warning.js
var __iconNode913 = [
  ["path", { d: "M22 10.5V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h12.5", key: "e61zoh" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "M20 14v4", key: "1hm744" }],
  ["path", { d: "M20 22v.01", key: "12bgn6" }]
];
var MailWarning = createLucideIcon("mail-warning", __iconNode913);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mailbox.js
var __iconNode914 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5C2 7 4 5 6.5 5H18c2.2 0 4 1.8 4 4v8Z",
      key: "1lbycx"
    }
  ],
  ["polyline", { points: "15,9 18,9 18,11", key: "1pm9c0" }],
  ["path", { d: "M6.5 5C9 5 11 7 11 9.5V17a2 2 0 0 1-2 2", key: "15i455" }],
  ["line", { x1: "6", x2: "7", y1: "10", y2: "10", key: "1e2scm" }]
];
var Mailbox = createLucideIcon("mailbox", __iconNode914);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-minus.js
var __iconNode915 = [
  [
    "path",
    {
      d: "m11 19-1.106-.552a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0l4.212 2.106a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619V14",
      key: "40pylx"
    }
  ],
  ["path", { d: "M15 5.764V14", key: "1bab71" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }],
  ["path", { d: "M9 3.236v15", key: "1uimfh" }]
];
var MapMinus = createLucideIcon("map-minus", __iconNode915);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mails.js
var __iconNode916 = [
  ["path", { d: "M17 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 1-1.732", key: "1vyzll" }],
  ["path", { d: "m22 5.5-6.419 4.179a2 2 0 0 1-2.162 0L7 5.5", key: "k7ramc" }],
  ["rect", { x: "7", y: "3", width: "15", height: "12", rx: "2", key: "17196g" }]
];
var Mails = createLucideIcon("mails", __iconNode916);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-check-inside.js
var __iconNode917 = [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }]
];
var MapPinCheckInside = createLucideIcon("map-pin-check-inside", __iconNode917);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-check.js
var __iconNode918 = [
  [
    "path",
    {
      d: "M19.43 12.935c.357-.967.57-1.955.57-2.935a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32.197 32.197 0 0 0 .813-.728",
      key: "1dq61d"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "m16 18 2 2 4-4", key: "1mkfmb" }]
];
var MapPinCheck = createLucideIcon("map-pin-check", __iconNode918);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-house.js
var __iconNode919 = [
  [
    "path",
    {
      d: "M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z",
      key: "1p1rcz"
    }
  ],
  [
    "path",
    {
      d: "M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2",
      key: "mcbcs9"
    }
  ],
  ["path", { d: "M18 22v-3", key: "1t1ugv" }],
  ["circle", { cx: "10", cy: "10", r: "3", key: "1ns7v1" }]
];
var MapPinHouse = createLucideIcon("map-pin-house", __iconNode919);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-minus-inside.js
var __iconNode920 = [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
];
var MapPinMinusInside = createLucideIcon("map-pin-minus-inside", __iconNode920);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-minus.js
var __iconNode921 = [
  [
    "path",
    {
      d: "M18.977 14C19.6 12.701 20 11.343 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738",
      key: "11uxia"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M16 18h6", key: "987eiv" }]
];
var MapPinMinus = createLucideIcon("map-pin-minus", __iconNode921);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-pen.js
var __iconNode922 = [
  ["path", { d: "M17.97 9.304A8 8 0 0 0 2 10c0 4.69 4.887 9.562 7.022 11.468", key: "1fahp3" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["circle", { cx: "10", cy: "10", r: "3", key: "1ns7v1" }]
];
var MapPinPen = createLucideIcon("map-pin-pen", __iconNode922);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-plus-inside.js
var __iconNode923 = [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "M12 7v6", key: "lw1j43" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
];
var MapPinPlusInside = createLucideIcon("map-pin-plus-inside", __iconNode923);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-off.js
var __iconNode924 = [
  ["path", { d: "M12.75 7.09a3 3 0 0 1 2.16 2.16", key: "1d4wjd" }],
  [
    "path",
    {
      d: "M17.072 17.072c-1.634 2.17-3.527 3.912-4.471 4.727a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 1.432-4.568",
      key: "12yil7"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.475 2.818A8 8 0 0 1 20 10c0 1.183-.31 2.377-.81 3.533", key: "lhrkcz" }],
  ["path", { d: "M9.13 9.13a3 3 0 0 0 3.74 3.74", key: "13wojd" }]
];
var MapPinOff = createLucideIcon("map-pin-off", __iconNode924);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-plus.js
var __iconNode925 = [
  [
    "path",
    {
      d: "M19.914 11.105A7.298 7.298 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 32 32 0 0 0 .824-.738",
      key: "fcdtly"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M16 18h6", key: "987eiv" }],
  ["path", { d: "M19 15v6", key: "10aioa" }]
];
var MapPinPlus = createLucideIcon("map-pin-plus", __iconNode925);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-x-inside.js
var __iconNode926 = [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["path", { d: "m14.5 7.5-5 5", key: "3lb6iw" }],
  ["path", { d: "m9.5 7.5 5 5", key: "ko136h" }]
];
var MapPinXInside = createLucideIcon("map-pin-x-inside", __iconNode926);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin.js
var __iconNode927 = [
  [
    "path",
    {
      d: "M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",
      key: "1r0f0z"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }]
];
var MapPin = createLucideIcon("map-pin", __iconNode927);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pin-x.js
var __iconNode928 = [
  [
    "path",
    {
      d: "M19.752 11.901A7.78 7.78 0 0 0 20 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 1.202 0 19 19 0 0 0 .09-.077",
      key: "y0ewhp"
    }
  ],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "m21.5 15.5-5 5", key: "11iqnx" }],
  ["path", { d: "m21.5 20.5-5-5", key: "1bylgx" }]
];
var MapPinX = createLucideIcon("map-pin-x", __iconNode928);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-pinned.js
var __iconNode929 = [
  [
    "path",
    {
      d: "M18 8c0 3.613-3.869 7.429-5.393 8.795a1 1 0 0 1-1.214 0C9.87 15.429 6 11.613 6 8a6 6 0 0 1 12 0",
      key: "11u0oz"
    }
  ],
  ["circle", { cx: "12", cy: "8", r: "2", key: "1822b1" }],
  [
    "path",
    {
      d: "M8.714 14h-3.71a1 1 0 0 0-.948.683l-2.004 6A1 1 0 0 0 3 22h18a1 1 0 0 0 .948-1.316l-2-6a1 1 0 0 0-.949-.684h-3.712",
      key: "q8zwxj"
    }
  ]
];
var MapPinned = createLucideIcon("map-pinned", __iconNode929);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map.js
var __iconNode930 = [
  [
    "path",
    {
      d: "M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0z",
      key: "169xi5"
    }
  ],
  ["path", { d: "M15 5.764v15", key: "1pn4in" }],
  ["path", { d: "M9 3.236v15", key: "1uimfh" }]
];
var Map3 = createLucideIcon("map", __iconNode930);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/map-plus.js
var __iconNode931 = [
  [
    "path",
    {
      d: "m11 19-1.106-.552a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0l4.212 2.106a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619V12",
      key: "svfegj"
    }
  ],
  ["path", { d: "M15 5.764V12", key: "1ocw4k" }],
  ["path", { d: "M18 15v6", key: "9wciyi" }],
  ["path", { d: "M21 18h-6", key: "139f0c" }],
  ["path", { d: "M9 3.236v15", key: "1uimfh" }]
];
var MapPlus = createLucideIcon("map-plus", __iconNode931);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mars-stroke.js
var __iconNode932 = [
  ["path", { d: "m14 6 4 4", key: "1q72g9" }],
  ["path", { d: "M17 3h4v4", key: "19p9u1" }],
  ["path", { d: "m21 3-7.75 7.75", key: "1cjbfd" }],
  ["circle", { cx: "9", cy: "15", r: "6", key: "bx5svt" }]
];
var MarsStroke = createLucideIcon("mars-stroke", __iconNode932);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mars.js
var __iconNode933 = [
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "m21 3-6.75 6.75", key: "pv0uzu" }],
  ["circle", { cx: "10", cy: "14", r: "6", key: "1qwbdc" }]
];
var Mars = createLucideIcon("mars", __iconNode933);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/martini.js
var __iconNode934 = [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M12 11v11", key: "ur9y6a" }],
  ["path", { d: "m19 3-7 8-7-8Z", key: "1sgpiw" }]
];
var Martini = createLucideIcon("martini", __iconNode934);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/maximize.js
var __iconNode935 = [
  ["path", { d: "M8 3H5a2 2 0 0 0-2 2v3", key: "1dcmit" }],
  ["path", { d: "M21 8V5a2 2 0 0 0-2-2h-3", key: "1e4gt3" }],
  ["path", { d: "M3 16v3a2 2 0 0 0 2 2h3", key: "wsl5sc" }],
  ["path", { d: "M16 21h3a2 2 0 0 0 2-2v-3", key: "18trek" }]
];
var Maximize = createLucideIcon("maximize", __iconNode935);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/maximize-2.js
var __iconNode936 = [
  ["path", { d: "M15 3h6v6", key: "1q9fwt" }],
  ["path", { d: "m21 3-7 7", key: "1l2asr" }],
  ["path", { d: "m3 21 7-7", key: "tjx5ai" }],
  ["path", { d: "M9 21H3v-6", key: "wtvkvv" }]
];
var Maximize22 = createLucideIcon("maximize-2", __iconNode936);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/medal.js
var __iconNode937 = [
  [
    "path",
    {
      d: "M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15",
      key: "143lza"
    }
  ],
  ["path", { d: "M11 12 5.12 2.2", key: "qhuxz6" }],
  ["path", { d: "m13 12 5.88-9.8", key: "hbye0f" }],
  ["path", { d: "M8 7h8", key: "i86dvs" }],
  ["circle", { cx: "12", cy: "17", r: "5", key: "qbz8iq" }],
  ["path", { d: "M12 18v-2h-.5", key: "fawc4q" }]
];
var Medal = createLucideIcon("medal", __iconNode937);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/megaphone-off.js
var __iconNode938 = [
  ["path", { d: "M11.636 6A13 13 0 0 0 19.4 3.2 1 1 0 0 1 21 4v11.344", key: "bycexp" }],
  [
    "path",
    { d: "M14.378 14.357A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1", key: "1t17s6" }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M6 14a12 12 0 0 0 2.4 7.2 2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14", key: "1853fq" }],
  ["path", { d: "M8 8v6", key: "aieo6v" }]
];
var MegaphoneOff = createLucideIcon("megaphone-off", __iconNode938);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/megaphone.js
var __iconNode939 = [
  [
    "path",
    {
      d: "M11 6a13 13 0 0 0 8.4-2.8A1 1 0 0 1 21 4v12a1 1 0 0 1-1.6.8A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z",
      key: "q8bfy3"
    }
  ],
  ["path", { d: "M6 14a12 12 0 0 0 2.4 7.2 2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14", key: "1853fq" }],
  ["path", { d: "M8 6v8", key: "15ugcq" }]
];
var Megaphone = createLucideIcon("megaphone", __iconNode939);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/meh.js
var __iconNode940 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["line", { x1: "8", x2: "16", y1: "15", y2: "15", key: "1xb1d9" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
];
var Meh = createLucideIcon("meh", __iconNode940);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/memory-stick.js
var __iconNode941 = [
  ["path", { d: "M6 19v-3", key: "1nvgqn" }],
  ["path", { d: "M10 19v-3", key: "iu8nkm" }],
  ["path", { d: "M14 19v-3", key: "kcehxu" }],
  ["path", { d: "M18 19v-3", key: "1vh91z" }],
  ["path", { d: "M8 11V9", key: "63erz4" }],
  ["path", { d: "M16 11V9", key: "fru6f3" }],
  ["path", { d: "M12 11V9", key: "ha00sb" }],
  ["path", { d: "M2 15h20", key: "16ne18" }],
  [
    "path",
    {
      d: "M2 7a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v1.1a2 2 0 0 0 0 3.837V17a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-5.1a2 2 0 0 0 0-3.837Z",
      key: "lhddv3"
    }
  ]
];
var MemoryStick = createLucideIcon("memory-stick", __iconNode941);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/merge.js
var __iconNode942 = [
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }],
  ["path", { d: "M12 2v10.3a4 4 0 0 1-1.172 2.872L4 22", key: "1hyw0i" }],
  ["path", { d: "m20 22-5-5", key: "1m27yz" }]
];
var Merge = createLucideIcon("merge", __iconNode942);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-code.js
var __iconNode943 = [
  ["path", { d: "m10 9-3 3 3 3", key: "1oro0q" }],
  ["path", { d: "m14 15 3-3-3-3", key: "bz13h7" }],
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ]
];
var MessageCircleCode = createLucideIcon("message-circle-code", __iconNode943);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/menu.js
var __iconNode944 = [
  ["path", { d: "M4 5h16", key: "1tepv9" }],
  ["path", { d: "M4 12h16", key: "1lakjw" }],
  ["path", { d: "M4 19h16", key: "1djgab" }]
];
var Menu2 = createLucideIcon("menu", __iconNode944);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-dashed.js
var __iconNode945 = [
  ["path", { d: "M10.1 2.182a10 10 0 0 1 3.8 0", key: "5ilxe3" }],
  ["path", { d: "M13.9 21.818a10 10 0 0 1-3.8 0", key: "11zvb9" }],
  ["path", { d: "M17.609 3.72a10 10 0 0 1 2.69 2.7", key: "jiglxs" }],
  ["path", { d: "M2.182 13.9a10 10 0 0 1 0-3.8", key: "c0bmvh" }],
  ["path", { d: "M20.28 17.61a10 10 0 0 1-2.7 2.69", key: "elg7ff" }],
  ["path", { d: "M21.818 10.1a10 10 0 0 1 0 3.8", key: "qkgqxc" }],
  ["path", { d: "M3.721 6.391a10 10 0 0 1 2.7-2.69", key: "1mcia2" }],
  ["path", { d: "m6.163 21.117-2.906.85a1 1 0 0 1-1.236-1.169l.965-2.98", key: "1qsu07" }]
];
var MessageCircleDashed = createLucideIcon("message-circle-dashed", __iconNode945);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-heart.js
var __iconNode946 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  [
    "path",
    {
      d: "M7.828 13.07A3 3 0 0 1 12 8.764a3 3 0 0 1 5.004 2.224 3 3 0 0 1-.832 2.083l-3.447 3.62a1 1 0 0 1-1.45-.001z",
      key: "hoo97p"
    }
  ]
];
var MessageCircleHeart = createLucideIcon("message-circle-heart", __iconNode946);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-more.js
var __iconNode947 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }]
];
var MessageCircleMore = createLucideIcon("message-circle-more", __iconNode947);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-off.js
var __iconNode948 = [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M4.93 4.929a10 10 0 0 0-1.938 11.412 2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 0 0 11.302-1.989",
      key: "7il5tn"
    }
  ],
  ["path", { d: "M8.35 2.69A10 10 0 0 1 21.3 15.65", key: "1pfsoa" }]
];
var MessageCircleOff = createLucideIcon("message-circle-off", __iconNode948);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-plus.js
var __iconNode949 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
];
var MessageCirclePlus = createLucideIcon("message-circle-plus", __iconNode949);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-question-mark.js
var __iconNode950 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3", key: "1u773s" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
];
var MessageCircleQuestionMark = createLucideIcon("message-circle-question-mark", __iconNode950);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-reply.js
var __iconNode951 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "m10 15-3-3 3-3", key: "1pgupc" }],
  ["path", { d: "M7 12h8a2 2 0 0 1 2 2v1", key: "89sh1g" }]
];
var MessageCircleReply = createLucideIcon("message-circle-reply", __iconNode951);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-warning.js
var __iconNode952 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  ["path", { d: "M12 16h.01", key: "1drbdi" }]
];
var MessageCircleWarning = createLucideIcon("message-circle-warning", __iconNode952);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle-x.js
var __iconNode953 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
];
var MessageCircleX = createLucideIcon("message-circle-x", __iconNode953);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-circle.js
var __iconNode954 = [
  [
    "path",
    {
      d: "M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719",
      key: "1sd12s"
    }
  ]
];
var MessageCircle = createLucideIcon("message-circle", __iconNode954);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-code.js
var __iconNode955 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "m10 8-3 3 3 3", key: "fp6dz7" }],
  ["path", { d: "m14 14 3-3-3-3", key: "1yrceu" }]
];
var MessageSquareCode = createLucideIcon("message-square-code", __iconNode955);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-dashed.js
var __iconNode956 = [
  ["path", { d: "M12 19h.01", key: "1wutuc" }],
  ["path", { d: "M12 3h.01", key: "n36tog" }],
  ["path", { d: "M16 19h.01", key: "1vcnzz" }],
  ["path", { d: "M16 3h.01", key: "ll0zb8" }],
  ["path", { d: "M2 13h.01", key: "1aptou" }],
  [
    "path",
    { d: "M2 17v4.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H8", key: "4cp7zq" }
  ],
  ["path", { d: "M2 5a2 2 0 0 1 2-2", key: "1iztiu" }],
  ["path", { d: "M2 9h.01", key: "1nzd1v" }],
  ["path", { d: "M20 3a2 2 0 0 1 2 2", key: "m48m3a" }],
  ["path", { d: "M22 13h.01", key: "ke7esy" }],
  ["path", { d: "M22 17a2 2 0 0 1-2 2", key: "17q5fo" }],
  ["path", { d: "M22 9h.01", key: "npkp49" }],
  ["path", { d: "M8 3h.01", key: "133hau" }]
];
var MessageSquareDashed = createLucideIcon("message-square-dashed", __iconNode956);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-diff.js
var __iconNode957 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M10 15h4", key: "192ueg" }],
  ["path", { d: "M10 9h4", key: "u4k05v" }],
  ["path", { d: "M12 7v4", key: "xawao1" }]
];
var MessageSquareDiff = createLucideIcon("message-square-diff", __iconNode957);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-dot.js
var __iconNode958 = [
  [
    "path",
    {
      d: "M12.7 3H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H20a2 2 0 0 0 2-2v-4.7",
      key: "wjb7ig"
    }
  ],
  ["circle", { cx: "19", cy: "6", r: "3", key: "108a5v" }]
];
var MessageSquareDot = createLucideIcon("message-square-dot", __iconNode958);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-heart.js
var __iconNode959 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  [
    "path",
    {
      d: "M7.5 9.5c0 .687.265 1.383.697 1.844l3.009 3.264a1.14 1.14 0 0 0 .407.314 1 1 0 0 0 .783-.004 1.14 1.14 0 0 0 .398-.31l3.008-3.264A2.77 2.77 0 0 0 16.5 9.5 2.5 2.5 0 0 0 12 8a2.5 2.5 0 0 0-4.5 1.5",
      key: "1faxuh"
    }
  ]
];
var MessageSquareHeart = createLucideIcon("message-square-heart", __iconNode959);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-lock.js
var __iconNode960 = [
  [
    "path",
    {
      d: "M22 8.5V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H10",
      key: "fu6chl"
    }
  ],
  ["path", { d: "M20 15v-2a2 2 0 0 0-4 0v2", key: "vl8a78" }],
  ["rect", { x: "14", y: "15", width: "8", height: "5", rx: "1", key: "37aafw" }]
];
var MessageSquareLock = createLucideIcon("message-square-lock", __iconNode960);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-more.js
var __iconNode961 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M12 11h.01", key: "z322tv" }],
  ["path", { d: "M16 11h.01", key: "xkw8gn" }],
  ["path", { d: "M8 11h.01", key: "1dfujw" }]
];
var MessageSquareMore = createLucideIcon("message-square-more", __iconNode961);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-off.js
var __iconNode962 = [
  [
    "path",
    {
      d: "M19 19H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.7.7 0 0 1 2 21.286V5a2 2 0 0 1 1.184-1.826",
      key: "1wyg69"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M8.656 3H20a2 2 0 0 1 2 2v11.344", key: "mhl4k6" }]
];
var MessageSquareOff = createLucideIcon("message-square-off", __iconNode962);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-plus.js
var __iconNode963 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M12 8v6", key: "1ib9pf" }],
  ["path", { d: "M9 11h6", key: "1fldmi" }]
];
var MessageSquarePlus = createLucideIcon("message-square-plus", __iconNode963);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-quote.js
var __iconNode964 = [
  ["path", { d: "M14 14a2 2 0 0 0 2-2V8h-2", key: "1r06pg" }],
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M8 14a2 2 0 0 0 2-2V8H8", key: "1jzu5j" }]
];
var MessageSquareQuote = createLucideIcon("message-square-quote", __iconNode964);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-reply.js
var __iconNode965 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "m10 8-3 3 3 3", key: "fp6dz7" }],
  ["path", { d: "M17 14v-1a2 2 0 0 0-2-2H7", key: "1tkjnz" }]
];
var MessageSquareReply = createLucideIcon("message-square-reply", __iconNode965);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-share.js
var __iconNode966 = [
  [
    "path",
    {
      d: "M12 3H4a2 2 0 0 0-2 2v16.286a.71.71 0 0 0 1.212.502l2.202-2.202A2 2 0 0 1 6.828 19H20a2 2 0 0 0 2-2v-4",
      key: "11da1y"
    }
  ],
  ["path", { d: "M16 3h6v6", key: "1bx56c" }],
  ["path", { d: "m16 9 6-6", key: "m4dnic" }]
];
var MessageSquareShare = createLucideIcon("message-square-share", __iconNode966);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-text.js
var __iconNode967 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M7 11h10", key: "1twpyw" }],
  ["path", { d: "M7 15h6", key: "d9of3u" }],
  ["path", { d: "M7 7h8", key: "af5zfr" }]
];
var MessageSquareText = createLucideIcon("message-square-text", __iconNode967);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-warning.js
var __iconNode968 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "M12 15h.01", key: "q59x07" }],
  ["path", { d: "M12 7v4", key: "xawao1" }]
];
var MessageSquareWarning = createLucideIcon("message-square-warning", __iconNode968);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square-x.js
var __iconNode969 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ],
  ["path", { d: "m14.5 8.5-5 5", key: "19tnj2" }],
  ["path", { d: "m9.5 8.5 5 5", key: "1oa8ql" }]
];
var MessageSquareX = createLucideIcon("message-square-x", __iconNode969);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/message-square.js
var __iconNode970 = [
  [
    "path",
    {
      d: "M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z",
      key: "18887p"
    }
  ]
];
var MessageSquare = createLucideIcon("message-square", __iconNode970);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/messages-square.js
var __iconNode971 = [
  [
    "path",
    {
      d: "M16 10a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 14.286V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z",
      key: "1n2ejm"
    }
  ],
  [
    "path",
    {
      d: "M20 9a2 2 0 0 1 2 2v10.286a.71.71 0 0 1-1.212.502l-2.202-2.202A2 2 0 0 0 17.172 19H10a2 2 0 0 1-2-2v-1",
      key: "1qfcsi"
    }
  ]
];
var MessagesSquare = createLucideIcon("messages-square", __iconNode971);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mic-off.js
var __iconNode972 = [
  ["path", { d: "M12 19v3", key: "npa21l" }],
  ["path", { d: "M15 9.34V5a3 3 0 0 0-5.68-1.33", key: "1gzdoj" }],
  ["path", { d: "M16.95 16.95A7 7 0 0 1 5 12v-2", key: "cqa7eg" }],
  ["path", { d: "M18.89 13.23A7 7 0 0 0 19 12v-2", key: "16hl24" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M9 9v3a3 3 0 0 0 5.12 2.12", key: "r2i35w" }]
];
var MicOff = createLucideIcon("mic-off", __iconNode972);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mic-vocal.js
var __iconNode973 = [
  [
    "path",
    {
      d: "m11 7.601-5.994 8.19a1 1 0 0 0 .1 1.298l.817.818a1 1 0 0 0 1.314.087L15.09 12",
      key: "80a601"
    }
  ],
  [
    "path",
    {
      d: "M16.5 21.174C15.5 20.5 14.372 20 13 20c-2.058 0-3.928 2.356-6 2-2.072-.356-2.775-3.369-1.5-4.5",
      key: "j0ngtp"
    }
  ],
  ["circle", { cx: "16", cy: "7", r: "5", key: "d08jfb" }]
];
var MicVocal = createLucideIcon("mic-vocal", __iconNode973);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mic.js
var __iconNode974 = [
  ["path", { d: "M12 19v3", key: "npa21l" }],
  ["path", { d: "M19 10v2a7 7 0 0 1-14 0v-2", key: "1vc78b" }],
  ["rect", { x: "9", y: "2", width: "6", height: "13", rx: "3", key: "s6n7sd" }]
];
var Mic = createLucideIcon("mic", __iconNode974);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/microchip.js
var __iconNode975 = [
  ["path", { d: "M18 12h2", key: "quuxs7" }],
  ["path", { d: "M18 16h2", key: "zsn3lv" }],
  ["path", { d: "M18 20h2", key: "9x5y9y" }],
  ["path", { d: "M18 4h2", key: "1luxfb" }],
  ["path", { d: "M18 8h2", key: "nxqzg" }],
  ["path", { d: "M4 12h2", key: "1ltxp0" }],
  ["path", { d: "M4 16h2", key: "8a5zha" }],
  ["path", { d: "M4 20h2", key: "27dk57" }],
  ["path", { d: "M4 4h2", key: "10groj" }],
  ["path", { d: "M4 8h2", key: "18vq6w" }],
  [
    "path",
    {
      d: "M8 2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-1.5c-.276 0-.494.227-.562.495a2 2 0 0 1-3.876 0C9.994 2.227 9.776 2 9.5 2z",
      key: "1681fp"
    }
  ]
];
var Microchip = createLucideIcon("microchip", __iconNode975);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/microscope.js
var __iconNode976 = [
  ["path", { d: "M6 18h8", key: "1borvv" }],
  ["path", { d: "M3 22h18", key: "8prr45" }],
  ["path", { d: "M14 22a7 7 0 1 0 0-14h-1", key: "1jwaiy" }],
  ["path", { d: "M9 14h2", key: "197e7h" }],
  ["path", { d: "M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z", key: "1bmzmy" }],
  ["path", { d: "M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3", key: "1drr47" }]
];
var Microscope = createLucideIcon("microscope", __iconNode976);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/microwave.js
var __iconNode977 = [
  ["rect", { width: "20", height: "15", x: "2", y: "4", rx: "2", key: "2no95f" }],
  ["rect", { width: "8", height: "7", x: "6", y: "8", rx: "1", key: "zh9wx" }],
  ["path", { d: "M18 8v7", key: "o5zi4n" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["path", { d: "M18 19v2", key: "1dawf0" }]
];
var Microwave = createLucideIcon("microwave", __iconNode977);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/milestone.js
var __iconNode978 = [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M12 3v3", key: "1n5kay" }],
  [
    "path",
    {
      d: "M4 6a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h13a2 2 0 0 0 1.152-.365l3.424-2.317a1 1 0 0 0 0-1.635l-3.424-2.318A2 2 0 0 0 17 6z",
      key: "1btarq"
    }
  ]
];
var Milestone = createLucideIcon("milestone", __iconNode978);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/milk-off.js
var __iconNode979 = [
  ["path", { d: "M8 2h8", key: "1ssgc1" }],
  [
    "path",
    {
      d: "M9 2v1.343M15 2v2.789a4 4 0 0 0 .672 2.219l.656.984a4 4 0 0 1 .672 2.22v1.131M7.8 7.8l-.128.192A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3",
      key: "y0ejgx"
    }
  ],
  ["path", { d: "M7 15a6.47 6.47 0 0 1 5 0 6.472 6.472 0 0 0 3.435.435", key: "iaxqsy" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var MilkOff = createLucideIcon("milk-off", __iconNode979);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/milk.js
var __iconNode980 = [
  ["path", { d: "M8 2h8", key: "1ssgc1" }],
  [
    "path",
    {
      d: "M9 2v2.789a4 4 0 0 1-.672 2.219l-.656.984A4 4 0 0 0 7 10.212V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-9.789a4 4 0 0 0-.672-2.219l-.656-.984A4 4 0 0 1 15 4.788V2",
      key: "qtp12x"
    }
  ],
  ["path", { d: "M7 15a6.472 6.472 0 0 1 5 0 6.47 6.47 0 0 0 5 0", key: "ygeh44" }]
];
var Milk = createLucideIcon("milk", __iconNode980);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/minimize-2.js
var __iconNode981 = [
  ["path", { d: "m14 10 7-7", key: "oa77jy" }],
  ["path", { d: "M20 10h-6V4", key: "mjg0md" }],
  ["path", { d: "m3 21 7-7", key: "tjx5ai" }],
  ["path", { d: "M4 14h6v6", key: "rmj7iw" }]
];
var Minimize2 = createLucideIcon("minimize-2", __iconNode981);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/minimize.js
var __iconNode982 = [
  ["path", { d: "M8 3v3a2 2 0 0 1-2 2H3", key: "hohbtr" }],
  ["path", { d: "M21 8h-3a2 2 0 0 1-2-2V3", key: "5jw1f3" }],
  ["path", { d: "M3 16h3a2 2 0 0 1 2 2v3", key: "198tvr" }],
  ["path", { d: "M16 21v-3a2 2 0 0 1 2-2h3", key: "ph8mxp" }]
];
var Minimize = createLucideIcon("minimize", __iconNode982);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/minus.js
var __iconNode983 = [["path", { d: "M5 12h14", key: "1ays0h" }]];
var Minus = createLucideIcon("minus", __iconNode983);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-check.js
var __iconNode984 = [
  ["path", { d: "m9 10 2 2 4-4", key: "1gnqz4" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
];
var MonitorCheck = createLucideIcon("monitor-check", __iconNode984);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-cog.js
var __iconNode985 = [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m14.305 7.53.923-.382", key: "1mlnsw" }],
  ["path", { d: "m15.228 4.852-.923-.383", key: "82mpwg" }],
  ["path", { d: "m16.852 3.228-.383-.924", key: "ln4sir" }],
  ["path", { d: "m16.852 8.772-.383.923", key: "1dejw0" }],
  ["path", { d: "m19.148 3.228.383-.924", key: "192kgf" }],
  ["path", { d: "m19.53 9.696-.382-.924", key: "fiavlr" }],
  ["path", { d: "m20.772 4.852.924-.383", key: "1j8mgp" }],
  ["path", { d: "m20.772 7.148.924.383", key: "zix9be" }],
  ["path", { d: "M22 13v2a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7", key: "1tnzv8" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["circle", { cx: "18", cy: "6", r: "3", key: "1h7g24" }]
];
var MonitorCog = createLucideIcon("monitor-cog", __iconNode985);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-dot.js
var __iconNode986 = [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  [
    "path",
    { d: "M22 12.307V15a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h8.693", key: "1dx6ho" }
  ],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["circle", { cx: "19", cy: "6", r: "3", key: "108a5v" }]
];
var MonitorDot = createLucideIcon("monitor-dot", __iconNode986);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-down.js
var __iconNode987 = [
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["path", { d: "m15 10-3 3-3-3", key: "lzhmyn" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
];
var MonitorDown = createLucideIcon("monitor-down", __iconNode987);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-off.js
var __iconNode988 = [
  ["path", { d: "M17 17H4a2 2 0 0 1-2-2V5c0-1.5 1-2 1-2", key: "k0q8oc" }],
  ["path", { d: "M22 15V5a2 2 0 0 0-2-2H9", key: "cp1ac0" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var MonitorOff = createLucideIcon("monitor-off", __iconNode988);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-pause.js
var __iconNode989 = [
  ["path", { d: "M10 13V7", key: "1u13u9" }],
  ["path", { d: "M14 13V7", key: "1vj9om" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
];
var MonitorPause = createLucideIcon("monitor-pause", __iconNode989);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-play.js
var __iconNode990 = [
  [
    "path",
    {
      d: "M15.033 9.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56V7.648a.645.645 0 0 1 .967-.56z",
      key: "vbtd3f"
    }
  ],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["rect", { x: "2", y: "3", width: "20", height: "14", rx: "2", key: "x3v2xh" }]
];
var MonitorPlay = createLucideIcon("monitor-play", __iconNode990);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-smartphone.js
var __iconNode991 = [
  ["path", { d: "M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8", key: "10dyio" }],
  ["path", { d: "M10 19v-3.96 3.15", key: "1irgej" }],
  ["path", { d: "M7 19h5", key: "qswx4l" }],
  ["rect", { width: "6", height: "10", x: "16", y: "12", rx: "2", key: "1egngj" }]
];
var MonitorSmartphone = createLucideIcon("monitor-smartphone", __iconNode991);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-speaker.js
var __iconNode992 = [
  ["path", { d: "M5.5 20H8", key: "1k40s5" }],
  ["path", { d: "M17 9h.01", key: "1j24nn" }],
  ["rect", { width: "10", height: "16", x: "12", y: "4", rx: "2", key: "ixliua" }],
  ["path", { d: "M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4", key: "1mp6e1" }],
  ["circle", { cx: "17", cy: "15", r: "1", key: "tqvash" }]
];
var MonitorSpeaker = createLucideIcon("monitor-speaker", __iconNode992);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-stop.js
var __iconNode993 = [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["rect", { x: "2", y: "3", width: "20", height: "14", rx: "2", key: "x3v2xh" }],
  ["rect", { x: "9", y: "7", width: "6", height: "6", rx: "1", key: "5m2oou" }]
];
var MonitorStop = createLucideIcon("monitor-stop", __iconNode993);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-up.js
var __iconNode994 = [
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }],
  ["path", { d: "M12 13V7", key: "h0r20n" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
];
var MonitorUp = createLucideIcon("monitor-up", __iconNode994);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor-x.js
var __iconNode995 = [
  ["path", { d: "m14.5 12.5-5-5", key: "1jahn5" }],
  ["path", { d: "m9.5 12.5 5-5", key: "1k2t7b" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }]
];
var MonitorX = createLucideIcon("monitor-x", __iconNode995);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/monitor.js
var __iconNode996 = [
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }],
  ["line", { x1: "8", x2: "16", y1: "21", y2: "21", key: "1svkeh" }],
  ["line", { x1: "12", x2: "12", y1: "17", y2: "21", key: "vw1qmm" }]
];
var Monitor = createLucideIcon("monitor", __iconNode996);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/moon-star.js
var __iconNode997 = [
  ["path", { d: "M18 5h4", key: "1lhgn2" }],
  ["path", { d: "M20 3v4", key: "1olli1" }],
  [
    "path",
    {
      d: "M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401",
      key: "kfwtm"
    }
  ]
];
var MoonStar = createLucideIcon("moon-star", __iconNode997);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/moon.js
var __iconNode998 = [
  [
    "path",
    {
      d: "M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401",
      key: "kfwtm"
    }
  ]
];
var Moon = createLucideIcon("moon", __iconNode998);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/motorbike.js
var __iconNode999 = [
  ["path", { d: "m18 14-1-3", key: "bdajw9" }],
  ["path", { d: "m3 9 6 2a2 2 0 0 1 2-2h2a2 2 0 0 1 1.99 1.81", key: "f5fotj" }],
  [
    "path",
    { d: "M8 17h3a1 1 0 0 0 1-1 6 6 0 0 1 6-6 1 1 0 0 0 1-1v-.75A5 5 0 0 0 17 5", key: "3i90e2" }
  ],
  ["circle", { cx: "19", cy: "17", r: "3", key: "1otbdv" }],
  ["circle", { cx: "5", cy: "17", r: "3", key: "1d8p0c" }]
];
var Motorbike = createLucideIcon("motorbike", __iconNode999);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mountain-snow.js
var __iconNode1000 = [
  ["path", { d: "m8 3 4 8 5-5 5 15H2L8 3z", key: "otkl63" }],
  [
    "path",
    { d: "M4.14 15.08c2.62-1.57 5.24-1.43 7.86.42 2.74 1.94 5.49 2 8.23.19", key: "1pvmmp" }
  ]
];
var MountainSnow = createLucideIcon("mountain-snow", __iconNode1000);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mountain.js
var __iconNode1001 = [["path", { d: "m8 3 4 8 5-5 5 15H2L8 3z", key: "otkl63" }]];
var Mountain = createLucideIcon("mountain", __iconNode1001);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse-off.js
var __iconNode1002 = [
  ["path", { d: "M12 6v.343", key: "1gyhex" }],
  ["path", { d: "M18.218 18.218A7 7 0 0 1 5 15V9a7 7 0 0 1 .782-3.218", key: "ukzz01" }],
  ["path", { d: "M19 13.343V9A7 7 0 0 0 8.56 2.902", key: "104jy9" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }]
];
var MouseOff = createLucideIcon("mouse-off", __iconNode1002);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse-pointer-2.js
var __iconNode1003 = [
  [
    "path",
    {
      d: "M4.037 4.688a.495.495 0 0 1 .651-.651l16 6.5a.5.5 0 0 1-.063.947l-6.124 1.58a2 2 0 0 0-1.438 1.435l-1.579 6.126a.5.5 0 0 1-.947.063z",
      key: "edeuup"
    }
  ]
];
var MousePointer2 = createLucideIcon("mouse-pointer-2", __iconNode1003);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse-pointer-ban.js
var __iconNode1004 = [
  [
    "path",
    {
      d: "M2.034 2.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.944L8.204 7.545a1 1 0 0 0-.66.66l-1.066 3.443a.5.5 0 0 1-.944.033z",
      key: "11pp1i"
    }
  ],
  ["circle", { cx: "16", cy: "16", r: "6", key: "qoo3c4" }],
  ["path", { d: "m11.8 11.8 8.4 8.4", key: "oogvdj" }]
];
var MousePointerBan = createLucideIcon("mouse-pointer-ban", __iconNode1004);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse-pointer-click.js
var __iconNode1005 = [
  ["path", { d: "M14 4.1 12 6", key: "ita8i4" }],
  ["path", { d: "m5.1 8-2.9-.8", key: "1go3kf" }],
  ["path", { d: "m6 12-1.9 2", key: "mnht97" }],
  ["path", { d: "M7.2 2.2 8 5.1", key: "1cfko1" }],
  [
    "path",
    {
      d: "M9.037 9.69a.498.498 0 0 1 .653-.653l11 4.5a.5.5 0 0 1-.074.949l-4.349 1.041a1 1 0 0 0-.74.739l-1.04 4.35a.5.5 0 0 1-.95.074z",
      key: "s0h3yz"
    }
  ]
];
var MousePointerClick = createLucideIcon("mouse-pointer-click", __iconNode1005);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse-pointer.js
var __iconNode1006 = [
  ["path", { d: "M12.586 12.586 19 19", key: "ea5xo7" }],
  [
    "path",
    {
      d: "M3.688 3.037a.497.497 0 0 0-.651.651l6.5 15.999a.501.501 0 0 0 .947-.062l1.569-6.083a2 2 0 0 1 1.448-1.479l6.124-1.579a.5.5 0 0 0 .063-.947z",
      key: "277e5u"
    }
  ]
];
var MousePointer = createLucideIcon("mouse-pointer", __iconNode1006);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/mouse.js
var __iconNode1007 = [
  ["rect", { x: "5", y: "2", width: "14", height: "20", rx: "7", key: "11ol66" }],
  ["path", { d: "M12 6v4", key: "16clxf" }]
];
var Mouse = createLucideIcon("mouse", __iconNode1007);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-3d.js
var __iconNode1008 = [
  ["path", { d: "M5 3v16h16", key: "1mqmf9" }],
  ["path", { d: "m5 19 6-6", key: "jh6hbb" }],
  ["path", { d: "m2 6 3-3 3 3", key: "tkyvxa" }],
  ["path", { d: "m18 16 3 3-3 3", key: "1d4glt" }]
];
var Move3d = createLucideIcon("move-3d", __iconNode1008);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-diagonal.js
var __iconNode1009 = [
  ["path", { d: "M11 19H5v-6", key: "8awifj" }],
  ["path", { d: "M13 5h6v6", key: "7voy1q" }],
  ["path", { d: "M19 5 5 19", key: "wwaj1z" }]
];
var MoveDiagonal = createLucideIcon("move-diagonal", __iconNode1009);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-diagonal-2.js
var __iconNode1010 = [
  ["path", { d: "M19 13v6h-6", key: "1hxl6d" }],
  ["path", { d: "M5 11V5h6", key: "12e2xe" }],
  ["path", { d: "m5 5 14 14", key: "11anup" }]
];
var MoveDiagonal2 = createLucideIcon("move-diagonal-2", __iconNode1010);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-down-left.js
var __iconNode1011 = [
  ["path", { d: "M11 19H5V13", key: "1akmht" }],
  ["path", { d: "M19 5L5 19", key: "72u4yj" }]
];
var MoveDownLeft = createLucideIcon("move-down-left", __iconNode1011);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-down-right.js
var __iconNode1012 = [
  ["path", { d: "M19 13V19H13", key: "10vkzq" }],
  ["path", { d: "M5 5L19 19", key: "5zm2fv" }]
];
var MoveDownRight = createLucideIcon("move-down-right", __iconNode1012);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-down.js
var __iconNode1013 = [
  ["path", { d: "M8 18L12 22L16 18", key: "cskvfv" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
];
var MoveDown = createLucideIcon("move-down", __iconNode1013);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-horizontal.js
var __iconNode1014 = [
  ["path", { d: "m18 8 4 4-4 4", key: "1ak13k" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "m6 8-4 4 4 4", key: "15zrgr" }]
];
var MoveHorizontal = createLucideIcon("move-horizontal", __iconNode1014);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-left.js
var __iconNode1015 = [
  ["path", { d: "M6 8L2 12L6 16", key: "kyvwex" }],
  ["path", { d: "M2 12H22", key: "1m8cig" }]
];
var MoveLeft = createLucideIcon("move-left", __iconNode1015);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-right.js
var __iconNode1016 = [
  ["path", { d: "M18 8L22 12L18 16", key: "1r0oui" }],
  ["path", { d: "M2 12H22", key: "1m8cig" }]
];
var MoveRight = createLucideIcon("move-right", __iconNode1016);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-up-left.js
var __iconNode1017 = [
  ["path", { d: "M5 11V5H11", key: "3q78g9" }],
  ["path", { d: "M5 5L19 19", key: "5zm2fv" }]
];
var MoveUpLeft = createLucideIcon("move-up-left", __iconNode1017);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-up-right.js
var __iconNode1018 = [
  ["path", { d: "M13 5H19V11", key: "1n1gyv" }],
  ["path", { d: "M19 5L5 19", key: "72u4yj" }]
];
var MoveUpRight = createLucideIcon("move-up-right", __iconNode1018);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-up.js
var __iconNode1019 = [
  ["path", { d: "M8 6L12 2L16 6", key: "1yvkyx" }],
  ["path", { d: "M12 2V22", key: "r89rzk" }]
];
var MoveUp = createLucideIcon("move-up", __iconNode1019);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move-vertical.js
var __iconNode1020 = [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "m8 18 4 4 4-4", key: "bh5tu3" }],
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }]
];
var MoveVertical = createLucideIcon("move-vertical", __iconNode1020);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/move.js
var __iconNode1021 = [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "m15 19-3 3-3-3", key: "11eu04" }],
  ["path", { d: "m19 9 3 3-3 3", key: "1mg7y2" }],
  ["path", { d: "M2 12h20", key: "9i4pu4" }],
  ["path", { d: "m5 9-3 3 3 3", key: "j64kie" }],
  ["path", { d: "m9 5 3-3 3 3", key: "l8vdw6" }]
];
var Move = createLucideIcon("move", __iconNode1021);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/music-2.js
var __iconNode1022 = [
  ["circle", { cx: "8", cy: "18", r: "4", key: "1fc0mg" }],
  ["path", { d: "M12 18V2l7 4", key: "g04rme" }]
];
var Music2 = createLucideIcon("music-2", __iconNode1022);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/music-3.js
var __iconNode1023 = [
  ["circle", { cx: "12", cy: "18", r: "4", key: "m3r9ws" }],
  ["path", { d: "M16 18V2", key: "40x2m5" }]
];
var Music3 = createLucideIcon("music-3", __iconNode1023);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/music-4.js
var __iconNode1024 = [
  ["path", { d: "M9 18V5l12-2v13", key: "1jmyc2" }],
  ["path", { d: "m9 9 12-2", key: "1e64n2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
];
var Music4 = createLucideIcon("music-4", __iconNode1024);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/music.js
var __iconNode1025 = [
  ["path", { d: "M9 18V5l12-2v13", key: "1jmyc2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["circle", { cx: "18", cy: "16", r: "3", key: "1hluhg" }]
];
var Music = createLucideIcon("music", __iconNode1025);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/navigation-2-off.js
var __iconNode1026 = [
  ["path", { d: "M9.31 9.31 5 21l7-4 7 4-1.17-3.17", key: "qoq2o2" }],
  ["path", { d: "M14.53 8.88 12 2l-1.17 3.17", key: "k3sjzy" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var Navigation2Off = createLucideIcon("navigation-2-off", __iconNode1026);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/navigation-2.js
var __iconNode1027 = [
  ["polygon", { points: "12 2 19 21 12 17 5 21 12 2", key: "x8c0qg" }]
];
var Navigation2 = createLucideIcon("navigation-2", __iconNode1027);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/navigation-off.js
var __iconNode1028 = [
  ["path", { d: "M8.43 8.43 3 11l8 2 2 8 2.57-5.43", key: "1vdtb7" }],
  ["path", { d: "M17.39 11.73 22 2l-9.73 4.61", key: "tya3r6" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var NavigationOff = createLucideIcon("navigation-off", __iconNode1028);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/network.js
var __iconNode1029 = [
  ["rect", { x: "16", y: "16", width: "6", height: "6", rx: "1", key: "4q2zg0" }],
  ["rect", { x: "2", y: "16", width: "6", height: "6", rx: "1", key: "8cvhb9" }],
  ["rect", { x: "9", y: "2", width: "6", height: "6", rx: "1", key: "1egb70" }],
  ["path", { d: "M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3", key: "1jsf9p" }],
  ["path", { d: "M12 12V8", key: "2874zd" }]
];
var Network = createLucideIcon("network", __iconNode1029);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/newspaper.js
var __iconNode1030 = [
  ["path", { d: "M15 18h-5", key: "95g1m2" }],
  ["path", { d: "M18 14h-8", key: "sponae" }],
  [
    "path",
    {
      d: "M4 22h16a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v16a2 2 0 0 1-4 0v-9a2 2 0 0 1 2-2h2",
      key: "39pd36"
    }
  ],
  ["rect", { width: "8", height: "4", x: "10", y: "6", rx: "1", key: "aywv1n" }]
];
var Newspaper = createLucideIcon("newspaper", __iconNode1030);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/navigation.js
var __iconNode1031 = [
  ["polygon", { points: "3 11 22 2 13 21 11 13 3 11", key: "1ltx0t" }]
];
var Navigation = createLucideIcon("navigation", __iconNode1031);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/nfc.js
var __iconNode1032 = [
  ["path", { d: "M6 8.32a7.43 7.43 0 0 1 0 7.36", key: "9iaqei" }],
  ["path", { d: "M9.46 6.21a11.76 11.76 0 0 1 0 11.58", key: "1yha7l" }],
  ["path", { d: "M12.91 4.1a15.91 15.91 0 0 1 .01 15.8", key: "4iu2gk" }],
  ["path", { d: "M16.37 2a20.16 20.16 0 0 1 0 20", key: "sap9u2" }]
];
var Nfc = createLucideIcon("nfc", __iconNode1032);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/non-binary.js
var __iconNode1033 = [
  ["path", { d: "M12 2v10", key: "mnfbl" }],
  ["path", { d: "m8.5 4 7 4", key: "m1xjk3" }],
  ["path", { d: "m8.5 8 7-4", key: "t0m5j6" }],
  ["circle", { cx: "12", cy: "17", r: "5", key: "qbz8iq" }]
];
var NonBinary = createLucideIcon("non-binary", __iconNode1033);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notebook-pen.js
var __iconNode1034 = [
  ["path", { d: "M13.4 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.4", key: "re6nr2" }],
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  [
    "path",
    {
      d: "M21.378 5.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "pqwjuv"
    }
  ]
];
var NotebookPen = createLucideIcon("notebook-pen", __iconNode1034);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notebook-tabs.js
var __iconNode1035 = [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M15 2v20", key: "dcj49h" }],
  ["path", { d: "M15 7h5", key: "1xj5lc" }],
  ["path", { d: "M15 12h5", key: "w5shd9" }],
  ["path", { d: "M15 17h5", key: "1qaofu" }]
];
var NotebookTabs = createLucideIcon("notebook-tabs", __iconNode1035);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notebook-text.js
var __iconNode1036 = [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M9.5 8h5", key: "11mslq" }],
  ["path", { d: "M9.5 12H16", key: "ktog6x" }],
  ["path", { d: "M9.5 16H14", key: "p1seyn" }]
];
var NotebookText = createLucideIcon("notebook-text", __iconNode1036);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notebook.js
var __iconNode1037 = [
  ["path", { d: "M2 6h4", key: "aawbzj" }],
  ["path", { d: "M2 10h4", key: "l0bgd4" }],
  ["path", { d: "M2 14h4", key: "1gsvsf" }],
  ["path", { d: "M2 18h4", key: "1bu2t1" }],
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M16 2v20", key: "rotuqe" }]
];
var Notebook = createLucideIcon("notebook", __iconNode1037);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notepad-text-dashed.js
var __iconNode1038 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["path", { d: "M16 4h2a2 2 0 0 1 2 2v2", key: "j91f56" }],
  ["path", { d: "M20 12v2", key: "w8o0tu" }],
  ["path", { d: "M20 18v2a2 2 0 0 1-2 2h-1", key: "1c9ggx" }],
  ["path", { d: "M13 22h-2", key: "191ugt" }],
  ["path", { d: "M7 22H6a2 2 0 0 1-2-2v-2", key: "1rt9px" }],
  ["path", { d: "M4 14v-2", key: "1v0sqh" }],
  ["path", { d: "M4 8V6a2 2 0 0 1 2-2h2", key: "1mwabg" }],
  ["path", { d: "M8 10h6", key: "3oa6kw" }],
  ["path", { d: "M8 14h8", key: "1fgep2" }],
  ["path", { d: "M8 18h5", key: "17enja" }]
];
var NotepadTextDashed = createLucideIcon("notepad-text-dashed", __iconNode1038);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/notepad-text.js
var __iconNode1039 = [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "16", height: "18", x: "4", y: "4", rx: "2", key: "1u9h20" }],
  ["path", { d: "M8 10h6", key: "3oa6kw" }],
  ["path", { d: "M8 14h8", key: "1fgep2" }],
  ["path", { d: "M8 18h5", key: "17enja" }]
];
var NotepadText = createLucideIcon("notepad-text", __iconNode1039);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/nut-off.js
var __iconNode1040 = [
  ["path", { d: "M12 4V2", key: "1k5q1u" }],
  [
    "path",
    {
      d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592a7.01 7.01 0 0 0 4.125-2.939",
      key: "1xcvy9"
    }
  ],
  ["path", { d: "M19 10v3.343", key: "163tfc" }],
  [
    "path",
    {
      d: "M12 12c-1.349-.573-1.905-1.005-2.5-2-.546.902-1.048 1.353-2.5 2-1.018-.644-1.46-1.08-2-2-1.028.71-1.69.918-3 1 1.081-1.048 1.757-2.03 2-3 .194-.776.84-1.551 1.79-2.21m11.654 5.997c.887-.457 1.28-.891 1.556-1.787 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4-.74 0-1.461.068-2.15.192",
      key: "17914v"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var NutOff = createLucideIcon("nut-off", __iconNode1040);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/octagon-alert.js
var __iconNode1041 = [
  ["path", { d: "M12 16h.01", key: "1drbdi" }],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  [
    "path",
    {
      d: "M15.312 2a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586l-4.688-4.688A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2z",
      key: "1fd625"
    }
  ]
];
var OctagonAlert = createLucideIcon("octagon-alert", __iconNode1041);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/nut.js
var __iconNode1042 = [
  ["path", { d: "M12 4V2", key: "1k5q1u" }],
  [
    "path",
    {
      d: "M5 10v4a7.004 7.004 0 0 0 5.277 6.787c.412.104.802.292 1.102.592L12 22l.621-.621c.3-.3.69-.488 1.102-.592A7.003 7.003 0 0 0 19 14v-4",
      key: "1tgyif"
    }
  ],
  [
    "path",
    {
      d: "M12 4C8 4 4.5 6 4 8c-.243.97-.919 1.952-2 3 1.31-.082 1.972-.29 3-1 .54.92.982 1.356 2 2 1.452-.647 1.954-1.098 2.5-2 .595.995 1.151 1.427 2.5 2 1.31-.621 1.862-1.058 2.5-2 .629.977 1.162 1.423 2.5 2 1.209-.548 1.68-.967 2-2 1.032.916 1.683 1.157 3 1-1.297-1.036-1.758-2.03-2-3-.5-2-4-4-8-4Z",
      key: "tnsqj"
    }
  ]
];
var Nut = createLucideIcon("nut", __iconNode1042);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/octagon-minus.js
var __iconNode1043 = [
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var OctagonMinus = createLucideIcon("octagon-minus", __iconNode1043);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/octagon-pause.js
var __iconNode1044 = [
  ["path", { d: "M10 15V9", key: "1lckn7" }],
  ["path", { d: "M14 15V9", key: "1muqhk" }],
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ]
];
var OctagonPause = createLucideIcon("octagon-pause", __iconNode1044);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/octagon-x.js
var __iconNode1045 = [
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
];
var OctagonX = createLucideIcon("octagon-x", __iconNode1045);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/octagon.js
var __iconNode1046 = [
  [
    "path",
    {
      d: "M2.586 16.726A2 2 0 0 1 2 15.312V8.688a2 2 0 0 1 .586-1.414l4.688-4.688A2 2 0 0 1 8.688 2h6.624a2 2 0 0 1 1.414.586l4.688 4.688A2 2 0 0 1 22 8.688v6.624a2 2 0 0 1-.586 1.414l-4.688 4.688a2 2 0 0 1-1.414.586H8.688a2 2 0 0 1-1.414-.586z",
      key: "2d38gg"
    }
  ]
];
var Octagon = createLucideIcon("octagon", __iconNode1046);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/omega.js
var __iconNode1047 = [
  [
    "path",
    {
      d: "M3 20h4.5a.5.5 0 0 0 .5-.5v-.282a.52.52 0 0 0-.247-.437 8 8 0 1 1 8.494-.001.52.52 0 0 0-.247.438v.282a.5.5 0 0 0 .5.5H21",
      key: "1x94xo"
    }
  ]
];
var Omega = createLucideIcon("omega", __iconNode1047);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/option.js
var __iconNode1048 = [
  ["path", { d: "M3 3h6l6 18h6", key: "ph9rgk" }],
  ["path", { d: "M14 3h7", key: "16f0ms" }]
];
var Option = createLucideIcon("option", __iconNode1048);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/orbit.js
var __iconNode1049 = [
  ["path", { d: "M20.341 6.484A10 10 0 0 1 10.266 21.85", key: "1enhxb" }],
  ["path", { d: "M3.659 17.516A10 10 0 0 1 13.74 2.152", key: "1crzgf" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["circle", { cx: "19", cy: "5", r: "2", key: "mhkx31" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }]
];
var Orbit = createLucideIcon("orbit", __iconNode1049);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/origami.js
var __iconNode1050 = [
  ["path", { d: "M12 12V4a1 1 0 0 1 1-1h6.297a1 1 0 0 1 .651 1.759l-4.696 4.025", key: "1bx4vc" }],
  [
    "path",
    {
      d: "m12 21-7.414-7.414A2 2 0 0 1 4 12.172V6.415a1.002 1.002 0 0 1 1.707-.707L20 20.009",
      key: "1h3km6"
    }
  ],
  [
    "path",
    {
      d: "m12.214 3.381 8.414 14.966a1 1 0 0 1-.167 1.199l-1.168 1.163a1 1 0 0 1-.706.291H6.351a1 1 0 0 1-.625-.219L3.25 18.8a1 1 0 0 1 .631-1.781l4.165.027",
      key: "1hj4wg"
    }
  ]
];
var Origami = createLucideIcon("origami", __iconNode1050);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-2.js
var __iconNode1051 = [
  ["path", { d: "M12 3v6", key: "1holv5" }],
  [
    "path",
    {
      d: "M16.76 3a2 2 0 0 1 1.8 1.1l2.23 4.479a2 2 0 0 1 .21.891V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9.472a2 2 0 0 1 .211-.894L5.45 4.1A2 2 0 0 1 7.24 3z",
      key: "187q7i"
    }
  ],
  ["path", { d: "M3.054 9.013h17.893", key: "grwhos" }]
];
var Package2 = createLucideIcon("package-2", __iconNode1051);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-check.js
var __iconNode1052 = [
  ["path", { d: "m16 16 2 2 4-4", key: "gfu2re" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
];
var PackageCheck = createLucideIcon("package-check", __iconNode1052);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-minus.js
var __iconNode1053 = [
  ["path", { d: "M16 16h6", key: "100bgy" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
];
var PackageMinus = createLucideIcon("package-minus", __iconNode1053);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-open.js
var __iconNode1054 = [
  ["path", { d: "M12 22v-9", key: "x3hkom" }],
  [
    "path",
    {
      d: "M15.17 2.21a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.655 1.655 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z",
      key: "2ntwy6"
    }
  ],
  [
    "path",
    {
      d: "M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13",
      key: "1pmm1c"
    }
  ],
  [
    "path",
    {
      d: "M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.636 1.636 0 0 0 1.63 0z",
      key: "12ttoo"
    }
  ]
];
var PackageOpen = createLucideIcon("package-open", __iconNode1054);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-plus.js
var __iconNode1055 = [
  ["path", { d: "M16 16h6", key: "100bgy" }],
  ["path", { d: "M19 13v6", key: "85cyf1" }],
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }]
];
var PackagePlus = createLucideIcon("package-plus", __iconNode1055);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-search.js
var __iconNode1056 = [
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }],
  ["circle", { cx: "18.5", cy: "15.5", r: "2.5", key: "b5zd12" }],
  ["path", { d: "M20.27 17.27 22 19", key: "1l4muz" }]
];
var PackageSearch = createLucideIcon("package-search", __iconNode1056);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package-x.js
var __iconNode1057 = [
  [
    "path",
    {
      d: "M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",
      key: "e7tb2h"
    }
  ],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["line", { x1: "12", x2: "12", y1: "22", y2: "12", key: "a4e8g8" }],
  ["path", { d: "m17 13 5 5m-5 0 5-5", key: "im3w4b" }]
];
var PackageX = createLucideIcon("package-x", __iconNode1057);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/package.js
var __iconNode1058 = [
  [
    "path",
    {
      d: "M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73z",
      key: "1a0edw"
    }
  ],
  ["path", { d: "M12 22V12", key: "d0xqtd" }],
  ["polyline", { points: "3.29 7 12 12 20.71 7", key: "ousv84" }],
  ["path", { d: "m7.5 4.27 9 5.15", key: "1c824w" }]
];
var Package = createLucideIcon("package", __iconNode1058);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paint-bucket.js
var __iconNode1059 = [
  [
    "path",
    { d: "m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z", key: "irua1i" }
  ],
  ["path", { d: "m5 2 5 5", key: "1lls2c" }],
  ["path", { d: "M2 13h15", key: "1hkzvu" }],
  ["path", { d: "M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z", key: "xk76lq" }]
];
var PaintBucket = createLucideIcon("paint-bucket", __iconNode1059);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paint-roller.js
var __iconNode1060 = [
  ["rect", { width: "16", height: "6", x: "2", y: "2", rx: "2", key: "jcyz7m" }],
  ["path", { d: "M10 16v-2a2 2 0 0 1 2-2h8a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2", key: "1b9h7c" }],
  ["rect", { width: "4", height: "6", x: "8", y: "16", rx: "1", key: "d6e7yl" }]
];
var PaintRoller = createLucideIcon("paint-roller", __iconNode1060);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paintbrush-vertical.js
var __iconNode1061 = [
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M14 2v4", key: "qmzblu" }],
  ["path", { d: "M17 2a1 1 0 0 1 1 1v9H6V3a1 1 0 0 1 1-1z", key: "ycvu00" }],
  [
    "path",
    {
      d: "M6 12a1 1 0 0 0-1 1v1a2 2 0 0 0 2 2h2a1 1 0 0 1 1 1v2.9a2 2 0 1 0 4 0V17a1 1 0 0 1 1-1h2a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1",
      key: "iw4wnp"
    }
  ]
];
var PaintbrushVertical = createLucideIcon("paintbrush-vertical", __iconNode1061);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paintbrush.js
var __iconNode1062 = [
  ["path", { d: "m14.622 17.897-10.68-2.913", key: "vj2p1u" }],
  [
    "path",
    {
      d: "M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0z",
      key: "18tc5c"
    }
  ],
  [
    "path",
    {
      d: "M9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15",
      key: "ytzfxy"
    }
  ]
];
var Paintbrush = createLucideIcon("paintbrush", __iconNode1062);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/palette.js
var __iconNode1063 = [
  [
    "path",
    {
      d: "M12 22a1 1 0 0 1 0-20 10 9 0 0 1 10 9 5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z",
      key: "e79jfc"
    }
  ],
  ["circle", { cx: "13.5", cy: "6.5", r: ".5", fill: "currentColor", key: "1okk4w" }],
  ["circle", { cx: "17.5", cy: "10.5", r: ".5", fill: "currentColor", key: "f64h9f" }],
  ["circle", { cx: "6.5", cy: "12.5", r: ".5", fill: "currentColor", key: "qy21gx" }],
  ["circle", { cx: "8.5", cy: "7.5", r: ".5", fill: "currentColor", key: "fotxhn" }]
];
var Palette = createLucideIcon("palette", __iconNode1063);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panda.js
var __iconNode1064 = [
  ["path", { d: "M11.25 17.25h1.5L12 18z", key: "1wmwwj" }],
  ["path", { d: "m15 12 2 2", key: "k60wz4" }],
  ["path", { d: "M18 6.5a.5.5 0 0 0-.5-.5", key: "1ch4h4" }],
  [
    "path",
    {
      d: "M20.69 9.67a4.5 4.5 0 1 0-7.04-5.5 8.35 8.35 0 0 0-3.3 0 4.5 4.5 0 1 0-7.04 5.5C2.49 11.2 2 12.88 2 14.5 2 19.47 6.48 22 12 22s10-2.53 10-7.5c0-1.62-.48-3.3-1.3-4.83",
      key: "1c660l"
    }
  ],
  ["path", { d: "M6 6.5a.495.495 0 0 1 .5-.5", key: "eviuep" }],
  ["path", { d: "m9 12-2 2", key: "326nkw" }]
];
var Panda = createLucideIcon("panda", __iconNode1064);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-bottom-close.js
var __iconNode1065 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "m15 8-3 3-3-3", key: "1oxy1z" }]
];
var PanelBottomClose = createLucideIcon("panel-bottom-close", __iconNode1065);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-bottom-open.js
var __iconNode1066 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "m9 10 3-3 3 3", key: "11gsxs" }]
];
var PanelBottomOpen = createLucideIcon("panel-bottom-open", __iconNode1066);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-bottom-dashed.js
var __iconNode1067 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M14 15h1", key: "171nev" }],
  ["path", { d: "M19 15h2", key: "1vnucp" }],
  ["path", { d: "M3 15h2", key: "8bym0q" }],
  ["path", { d: "M9 15h1", key: "1tg3ks" }]
];
var PanelBottomDashed = createLucideIcon("panel-bottom-dashed", __iconNode1067);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-bottom.js
var __iconNode1068 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h18", key: "5xshup" }]
];
var PanelBottom = createLucideIcon("panel-bottom", __iconNode1068);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-left-close.js
var __iconNode1069 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "m16 15-3-3 3-3", key: "14y99z" }]
];
var PanelLeftClose = createLucideIcon("panel-left-close", __iconNode1069);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-left-dashed.js
var __iconNode1070 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 14v1", key: "askpd8" }],
  ["path", { d: "M9 19v2", key: "16tejx" }],
  ["path", { d: "M9 3v2", key: "1noubl" }],
  ["path", { d: "M9 9v1", key: "19ebxg" }]
];
var PanelLeftDashed = createLucideIcon("panel-left-dashed", __iconNode1070);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-left-open.js
var __iconNode1071 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "m14 9 3 3-3 3", key: "8010ee" }]
];
var PanelLeftOpen = createLucideIcon("panel-left-open", __iconNode1071);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-left-right-dashed.js
var __iconNode1072 = [
  ["path", { d: "M15 10V9", key: "4dkmfx" }],
  ["path", { d: "M15 15v-1", key: "6a4afx" }],
  ["path", { d: "M15 21v-2", key: "1qshmc" }],
  ["path", { d: "M15 5V3", key: "1fk0mb" }],
  ["path", { d: "M9 10V9", key: "1lazqi" }],
  ["path", { d: "M9 15v-1", key: "9lx740" }],
  ["path", { d: "M9 21v-2", key: "1fwk0n" }],
  ["path", { d: "M9 5V3", key: "2q8zi6" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var PanelLeftRightDashed = createLucideIcon("panel-left-right-dashed", __iconNode1072);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-left.js
var __iconNode1073 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }]
];
var PanelLeft = createLucideIcon("panel-left", __iconNode1073);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-right-close.js
var __iconNode1074 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["path", { d: "m8 9 3 3-3 3", key: "12hl5m" }]
];
var PanelRightClose = createLucideIcon("panel-right-close", __iconNode1074);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-right-dashed.js
var __iconNode1075 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 14v1", key: "ilsfch" }],
  ["path", { d: "M15 19v2", key: "1fst2f" }],
  ["path", { d: "M15 3v2", key: "z204g4" }],
  ["path", { d: "M15 9v1", key: "z2a8b1" }]
];
var PanelRightDashed = createLucideIcon("panel-right-dashed", __iconNode1075);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-right.js
var __iconNode1076 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
];
var PanelRight = createLucideIcon("panel-right", __iconNode1076);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-right-open.js
var __iconNode1077 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["path", { d: "m10 15-3-3 3-3", key: "1pgupc" }]
];
var PanelRightOpen = createLucideIcon("panel-right-open", __iconNode1077);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-top-bottom-dashed.js
var __iconNode1078 = [
  ["path", { d: "M14 15h1", key: "171nev" }],
  ["path", { d: "M14 9h1", key: "l0svgy" }],
  ["path", { d: "M19 15h2", key: "1vnucp" }],
  ["path", { d: "M19 9h2", key: "te2zfg" }],
  ["path", { d: "M3 15h2", key: "8bym0q" }],
  ["path", { d: "M3 9h2", key: "1h4ldw" }],
  ["path", { d: "M9 15h1", key: "1tg3ks" }],
  ["path", { d: "M9 9h1", key: "15jzuz" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var PanelTopBottomDashed = createLucideIcon("panel-top-bottom-dashed", __iconNode1078);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-top-close.js
var __iconNode1079 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "m9 16 3-3 3 3", key: "1idcnm" }]
];
var PanelTopClose = createLucideIcon("panel-top-close", __iconNode1079);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-top-open.js
var __iconNode1080 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "m15 14-3 3-3-3", key: "g215vf" }]
];
var PanelTopOpen = createLucideIcon("panel-top-open", __iconNode1080);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-top.js
var __iconNode1081 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }]
];
var PanelTop = createLucideIcon("panel-top", __iconNode1081);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panel-top-dashed.js
var __iconNode1082 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M14 9h1", key: "l0svgy" }],
  ["path", { d: "M19 9h2", key: "te2zfg" }],
  ["path", { d: "M3 9h2", key: "1h4ldw" }],
  ["path", { d: "M9 9h1", key: "15jzuz" }]
];
var PanelTopDashed = createLucideIcon("panel-top-dashed", __iconNode1082);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panels-left-bottom.js
var __iconNode1083 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 3v18", key: "fh3hqa" }],
  ["path", { d: "M9 15h12", key: "5ijen5" }]
];
var PanelsLeftBottom = createLucideIcon("panels-left-bottom", __iconNode1083);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panels-right-bottom.js
var __iconNode1084 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 15h12", key: "1wkqb3" }],
  ["path", { d: "M15 3v18", key: "14nvp0" }]
];
var PanelsRightBottom = createLucideIcon("panels-right-bottom", __iconNode1084);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/panels-top-left.js
var __iconNode1085 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M9 21V9", key: "1oto5p" }]
];
var PanelsTopLeft = createLucideIcon("panels-top-left", __iconNode1085);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paperclip.js
var __iconNode1086 = [
  [
    "path",
    {
      d: "m16 6-8.414 8.586a2 2 0 0 0 2.829 2.829l8.414-8.586a4 4 0 1 0-5.657-5.657l-8.379 8.551a6 6 0 1 0 8.485 8.485l8.379-8.551",
      key: "1miecu"
    }
  ]
];
var Paperclip = createLucideIcon("paperclip", __iconNode1086);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/parentheses.js
var __iconNode1087 = [
  ["path", { d: "M8 21s-4-3-4-9 4-9 4-9", key: "uto9ud" }],
  ["path", { d: "M16 3s4 3 4 9-4 9-4 9", key: "4w2vsq" }]
];
var Parentheses = createLucideIcon("parentheses", __iconNode1087);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/parking-meter.js
var __iconNode1088 = [
  ["path", { d: "M11 15h2", key: "199qp6" }],
  ["path", { d: "M12 12v3", key: "158kv8" }],
  ["path", { d: "M12 19v3", key: "npa21l" }],
  [
    "path",
    {
      d: "M15.282 19a1 1 0 0 0 .948-.68l2.37-6.988a7 7 0 1 0-13.2 0l2.37 6.988a1 1 0 0 0 .948.68z",
      key: "1jofit"
    }
  ],
  ["path", { d: "M9 9a3 3 0 1 1 6 0", key: "jdoeu8" }]
];
var ParkingMeter = createLucideIcon("parking-meter", __iconNode1088);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/party-popper.js
var __iconNode1089 = [
  ["path", { d: "M5.8 11.3 2 22l10.7-3.79", key: "gwxi1d" }],
  ["path", { d: "M4 3h.01", key: "1vcuye" }],
  ["path", { d: "M22 8h.01", key: "1mrtc2" }],
  ["path", { d: "M15 2h.01", key: "1cjtqr" }],
  ["path", { d: "M22 20h.01", key: "1mrys2" }],
  [
    "path",
    {
      d: "m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10",
      key: "hbicv8"
    }
  ],
  [
    "path",
    { d: "m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17", key: "1i94pl" }
  ],
  ["path", { d: "m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7", key: "1cofks" }],
  [
    "path",
    {
      d: "M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z",
      key: "4kbmks"
    }
  ]
];
var PartyPopper = createLucideIcon("party-popper", __iconNode1089);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pause.js
var __iconNode1090 = [
  ["rect", { x: "14", y: "3", width: "5", height: "18", rx: "1", key: "kaeet6" }],
  ["rect", { x: "5", y: "3", width: "5", height: "18", rx: "1", key: "1wsw3u" }]
];
var Pause = createLucideIcon("pause", __iconNode1090);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/paw-print.js
var __iconNode1091 = [
  ["circle", { cx: "11", cy: "4", r: "2", key: "vol9p0" }],
  ["circle", { cx: "18", cy: "8", r: "2", key: "17gozi" }],
  ["circle", { cx: "20", cy: "16", r: "2", key: "1v9bxh" }],
  [
    "path",
    {
      d: "M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z",
      key: "1ydw1z"
    }
  ]
];
var PawPrint = createLucideIcon("paw-print", __iconNode1091);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pc-case.js
var __iconNode1092 = [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", key: "1uq1d7" }],
  ["path", { d: "M15 14h.01", key: "1kp3bh" }],
  ["path", { d: "M9 6h6", key: "dgm16u" }],
  ["path", { d: "M9 10h6", key: "9gxzsh" }]
];
var PcCase = createLucideIcon("pc-case", __iconNode1092);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pen-line.js
var __iconNode1093 = [
  ["path", { d: "M13 21h8", key: "1jsn5i" }],
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ]
];
var PenLine = createLucideIcon("pen-line", __iconNode1093);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pen-off.js
var __iconNode1094 = [
  [
    "path",
    {
      d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982",
      key: "bjo8r8"
    }
  ],
  ["path", { d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353", key: "16h5ne" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var PenOff = createLucideIcon("pen-off", __iconNode1094);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pen-tool.js
var __iconNode1095 = [
  [
    "path",
    {
      d: "M15.707 21.293a1 1 0 0 1-1.414 0l-1.586-1.586a1 1 0 0 1 0-1.414l5.586-5.586a1 1 0 0 1 1.414 0l1.586 1.586a1 1 0 0 1 0 1.414z",
      key: "nt11vn"
    }
  ],
  [
    "path",
    {
      d: "m18 13-1.375-6.874a1 1 0 0 0-.746-.776L3.235 2.028a1 1 0 0 0-1.207 1.207L5.35 15.879a1 1 0 0 0 .776.746L13 18",
      key: "15qc1e"
    }
  ],
  ["path", { d: "m2.3 2.3 7.286 7.286", key: "1wuzzi" }],
  ["circle", { cx: "11", cy: "11", r: "2", key: "xmgehs" }]
];
var PenTool = createLucideIcon("pen-tool", __iconNode1095);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pencil-line.js
var __iconNode1096 = [
  ["path", { d: "M13 21h8", key: "1jsn5i" }],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }],
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ]
];
var PencilLine = createLucideIcon("pencil-line", __iconNode1096);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pen.js
var __iconNode1097 = [
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ]
];
var Pen = createLucideIcon("pen", __iconNode1097);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pencil-off.js
var __iconNode1098 = [
  [
    "path",
    {
      d: "m10 10-6.157 6.162a2 2 0 0 0-.5.833l-1.322 4.36a.5.5 0 0 0 .622.624l4.358-1.323a2 2 0 0 0 .83-.5L14 13.982",
      key: "bjo8r8"
    }
  ],
  ["path", { d: "m12.829 7.172 4.359-4.346a1 1 0 1 1 3.986 3.986l-4.353 4.353", key: "16h5ne" }],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var PencilOff = createLucideIcon("pencil-off", __iconNode1098);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pencil-ruler.js
var __iconNode1099 = [
  [
    "path",
    { d: "M13 7 8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13", key: "orapub" }
  ],
  ["path", { d: "m8 6 2-2", key: "115y1s" }],
  ["path", { d: "m18 16 2-2", key: "ee94s4" }],
  [
    "path",
    {
      d: "m17 11 4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17",
      key: "cfq27r"
    }
  ],
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }]
];
var PencilRuler = createLucideIcon("pencil-ruler", __iconNode1099);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pencil.js
var __iconNode1100 = [
  [
    "path",
    {
      d: "M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z",
      key: "1a8usu"
    }
  ],
  ["path", { d: "m15 5 4 4", key: "1mk7zo" }]
];
var Pencil = createLucideIcon("pencil", __iconNode1100);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pentagon.js
var __iconNode1101 = [
  [
    "path",
    {
      d: "M10.83 2.38a2 2 0 0 1 2.34 0l8 5.74a2 2 0 0 1 .73 2.25l-3.04 9.26a2 2 0 0 1-1.9 1.37H7.04a2 2 0 0 1-1.9-1.37L2.1 10.37a2 2 0 0 1 .73-2.25z",
      key: "2hea0t"
    }
  ]
];
var Pentagon = createLucideIcon("pentagon", __iconNode1101);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/percent.js
var __iconNode1102 = [
  ["line", { x1: "19", x2: "5", y1: "5", y2: "19", key: "1x9vlm" }],
  ["circle", { cx: "6.5", cy: "6.5", r: "2.5", key: "4mh3h7" }],
  ["circle", { cx: "17.5", cy: "17.5", r: "2.5", key: "1mdrzq" }]
];
var Percent = createLucideIcon("percent", __iconNode1102);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/person-standing.js
var __iconNode1103 = [
  ["circle", { cx: "12", cy: "5", r: "1", key: "gxeob9" }],
  ["path", { d: "m9 20 3-6 3 6", key: "se2kox" }],
  ["path", { d: "m6 8 6 2 6-2", key: "4o3us4" }],
  ["path", { d: "M12 10v4", key: "1kjpxc" }]
];
var PersonStanding = createLucideIcon("person-standing", __iconNode1103);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/philippine-peso.js
var __iconNode1104 = [
  ["path", { d: "M20 11H4", key: "6ut86h" }],
  ["path", { d: "M20 7H4", key: "zbl0bi" }],
  ["path", { d: "M7 21V4a1 1 0 0 1 1-1h4a1 1 0 0 1 0 12H7", key: "1ana5r" }]
];
var PhilippinePeso = createLucideIcon("philippine-peso", __iconNode1104);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-call.js
var __iconNode1105 = [
  ["path", { d: "M13 2a9 9 0 0 1 9 9", key: "1itnx2" }],
  ["path", { d: "M13 6a5 5 0 0 1 5 5", key: "11nki7" }],
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var PhoneCall = createLucideIcon("phone-call", __iconNode1105);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-forwarded.js
var __iconNode1106 = [
  ["path", { d: "M14 6h8", key: "yd68k4" }],
  ["path", { d: "m18 2 4 4-4 4", key: "pucp1d" }],
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var PhoneForwarded = createLucideIcon("phone-forwarded", __iconNode1106);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-incoming.js
var __iconNode1107 = [
  ["path", { d: "M16 2v6h6", key: "1mfrl5" }],
  ["path", { d: "m22 2-6 6", key: "6f0sa0" }],
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var PhoneIncoming = createLucideIcon("phone-incoming", __iconNode1107);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-missed.js
var __iconNode1108 = [
  ["path", { d: "m16 2 6 6", key: "1gw87d" }],
  ["path", { d: "m22 2-6 6", key: "6f0sa0" }],
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var PhoneMissed = createLucideIcon("phone-missed", __iconNode1108);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-off.js
var __iconNode1109 = [
  [
    "path",
    {
      d: "M10.1 13.9a14 14 0 0 0 3.732 2.668 1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2 18 18 0 0 1-12.728-5.272",
      key: "1wngk7"
    }
  ],
  ["path", { d: "M22 2 2 22", key: "y4kqgn" }],
  [
    "path",
    {
      d: "M4.76 13.582A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 .244.473",
      key: "10hv5p"
    }
  ]
];
var PhoneOff = createLucideIcon("phone-off", __iconNode1109);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone-outgoing.js
var __iconNode1110 = [
  ["path", { d: "m16 8 6-6", key: "oawc05" }],
  ["path", { d: "M22 8V2h-6", key: "oqy2zc" }],
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var PhoneOutgoing = createLucideIcon("phone-outgoing", __iconNode1110);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/phone.js
var __iconNode1111 = [
  [
    "path",
    {
      d: "M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384",
      key: "9njp5v"
    }
  ]
];
var Phone = createLucideIcon("phone", __iconNode1111);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pi.js
var __iconNode1112 = [
  ["line", { x1: "9", x2: "9", y1: "4", y2: "20", key: "ovs5a5" }],
  ["path", { d: "M4 7c0-1.7 1.3-3 3-3h13", key: "10pag4" }],
  ["path", { d: "M18 20c-1.7 0-3-1.3-3-3V4", key: "1gaosr" }]
];
var Pi = createLucideIcon("pi", __iconNode1112);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/piano.js
var __iconNode1113 = [
  [
    "path",
    {
      d: "M18.5 8c-1.4 0-2.6-.8-3.2-2A6.87 6.87 0 0 0 2 9v11a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-8.5C22 9.6 20.4 8 18.5 8",
      key: "lag0yf"
    }
  ],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M6 14v4", key: "9ng0ue" }],
  ["path", { d: "M10 14v4", key: "1v8uk5" }],
  ["path", { d: "M14 14v4", key: "1tqops" }],
  ["path", { d: "M18 14v4", key: "18uqwm" }]
];
var Piano = createLucideIcon("piano", __iconNode1113);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pickaxe.js
var __iconNode1114 = [
  ["path", { d: "m14 13-8.381 8.38a1 1 0 0 1-3.001-3L11 9.999", key: "1lw9ds" }],
  [
    "path",
    {
      d: "M15.973 4.027A13 13 0 0 0 5.902 2.373c-1.398.342-1.092 2.158.277 2.601a19.9 19.9 0 0 1 5.822 3.024",
      key: "ffj4ej"
    }
  ],
  [
    "path",
    {
      d: "M16.001 11.999a19.9 19.9 0 0 1 3.024 5.824c.444 1.369 2.26 1.676 2.603.278A13 13 0 0 0 20 8.069",
      key: "8tj4zw"
    }
  ],
  [
    "path",
    {
      d: "M18.352 3.352a1.205 1.205 0 0 0-1.704 0l-5.296 5.296a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l5.296-5.296a1.205 1.205 0 0 0 0-1.704z",
      key: "hh6h97"
    }
  ]
];
var Pickaxe = createLucideIcon("pickaxe", __iconNode1114);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/picture-in-picture-2.js
var __iconNode1115 = [
  ["path", { d: "M21 9V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h4", key: "daa4of" }],
  ["rect", { width: "10", height: "7", x: "12", y: "13", rx: "2", key: "1nb8gs" }]
];
var PictureInPicture2 = createLucideIcon("picture-in-picture-2", __iconNode1115);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/piggy-bank.js
var __iconNode1116 = [
  [
    "path",
    {
      d: "M11 17h3v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a3.16 3.16 0 0 0 2-2h1a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1h-1a5 5 0 0 0-2-4V3a4 4 0 0 0-3.2 1.6l-.3.4H11a6 6 0 0 0-6 6v1a5 5 0 0 0 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1z",
      key: "1piglc"
    }
  ],
  ["path", { d: "M16 10h.01", key: "1m94wz" }],
  ["path", { d: "M2 8v1a2 2 0 0 0 2 2h1", key: "1env43" }]
];
var PiggyBank = createLucideIcon("piggy-bank", __iconNode1116);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/picture-in-picture.js
var __iconNode1117 = [
  ["path", { d: "M2 10h6V4", key: "zwrco" }],
  ["path", { d: "m2 4 6 6", key: "ug085t" }],
  ["path", { d: "M21 10V7a2 2 0 0 0-2-2h-7", key: "git5jr" }],
  ["path", { d: "M3 14v2a2 2 0 0 0 2 2h3", key: "1f7fh3" }],
  ["rect", { x: "12", y: "14", width: "10", height: "7", rx: "1", key: "1wjs3o" }]
];
var PictureInPicture = createLucideIcon("picture-in-picture", __iconNode1117);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pilcrow-left.js
var __iconNode1118 = [
  ["path", { d: "M14 3v11", key: "mlfb7b" }],
  ["path", { d: "M14 9h-3a3 3 0 0 1 0-6h9", key: "1ulc19" }],
  ["path", { d: "M18 3v11", key: "1phi0r" }],
  ["path", { d: "M22 18H2l4-4", key: "yt65j9" }],
  ["path", { d: "m6 22-4-4", key: "6jgyf5" }]
];
var PilcrowLeft = createLucideIcon("pilcrow-left", __iconNode1118);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pilcrow-right.js
var __iconNode1119 = [
  ["path", { d: "M10 3v11", key: "o3l5kj" }],
  ["path", { d: "M10 9H7a1 1 0 0 1 0-6h8", key: "1wb1nc" }],
  ["path", { d: "M14 3v11", key: "mlfb7b" }],
  ["path", { d: "m18 14 4 4H2", key: "4r8io1" }],
  ["path", { d: "m22 18-4 4", key: "1hjjrd" }]
];
var PilcrowRight = createLucideIcon("pilcrow-right", __iconNode1119);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pilcrow.js
var __iconNode1120 = [
  ["path", { d: "M13 4v16", key: "8vvj80" }],
  ["path", { d: "M17 4v16", key: "7dpous" }],
  ["path", { d: "M19 4H9.5a4.5 4.5 0 0 0 0 9H13", key: "sh4n9v" }]
];
var Pilcrow = createLucideIcon("pilcrow", __iconNode1120);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pill-bottle.js
var __iconNode1121 = [
  ["path", { d: "M18 11h-4a1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h4", key: "17ldeb" }],
  ["path", { d: "M6 7v13a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V7", key: "nc37y6" }],
  ["rect", { width: "16", height: "5", x: "4", y: "2", rx: "1", key: "3jeezo" }]
];
var PillBottle = createLucideIcon("pill-bottle", __iconNode1121);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pill.js
var __iconNode1122 = [
  [
    "path",
    { d: "m10.5 20.5 10-10a4.95 4.95 0 1 0-7-7l-10 10a4.95 4.95 0 1 0 7 7Z", key: "wa1lgi" }
  ],
  ["path", { d: "m8.5 8.5 7 7", key: "rvfmvr" }]
];
var Pill = createLucideIcon("pill", __iconNode1122);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pin-off.js
var __iconNode1123 = [
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  ["path", { d: "M15 9.34V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H7.89", key: "znwnzq" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M9 9v1.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h11",
      key: "c9qhm2"
    }
  ]
];
var PinOff = createLucideIcon("pin-off", __iconNode1123);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pin.js
var __iconNode1124 = [
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  [
    "path",
    {
      d: "M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z",
      key: "1nkz8b"
    }
  ]
];
var Pin = createLucideIcon("pin", __iconNode1124);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pipette.js
var __iconNode1125 = [
  [
    "path",
    {
      d: "m12 9-8.414 8.414A2 2 0 0 0 3 18.828v1.344a2 2 0 0 1-.586 1.414A2 2 0 0 1 3.828 21h1.344a2 2 0 0 0 1.414-.586L15 12",
      key: "1y3wsu"
    }
  ],
  [
    "path",
    {
      d: "m18 9 .4.4a1 1 0 1 1-3 3l-3.8-3.8a1 1 0 1 1 3-3l.4.4 3.4-3.4a1 1 0 1 1 3 3z",
      key: "110lr1"
    }
  ],
  ["path", { d: "m2 22 .414-.414", key: "jhxm08" }]
];
var Pipette = createLucideIcon("pipette", __iconNode1125);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pizza.js
var __iconNode1126 = [
  ["path", { d: "m12 14-1 1", key: "11onhr" }],
  ["path", { d: "m13.75 18.25-1.25 1.42", key: "1yisr3" }],
  ["path", { d: "M17.775 5.654a15.68 15.68 0 0 0-12.121 12.12", key: "1qtqk6" }],
  ["path", { d: "M18.8 9.3a1 1 0 0 0 2.1 7.7", key: "fbbbr2" }],
  [
    "path",
    {
      d: "M21.964 20.732a1 1 0 0 1-1.232 1.232l-18-5a1 1 0 0 1-.695-1.232A19.68 19.68 0 0 1 15.732 2.037a1 1 0 0 1 1.232.695z",
      key: "1hyfdd"
    }
  ]
];
var Pizza = createLucideIcon("pizza", __iconNode1126);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plane-landing.js
var __iconNode1127 = [
  ["path", { d: "M2 22h20", key: "272qi7" }],
  [
    "path",
    {
      d: "M3.77 10.77 2 9l2-4.5 1.1.55c.55.28.9.84.9 1.45s.35 1.17.9 1.45L8 8.5l3-6 1.05.53a2 2 0 0 1 1.09 1.52l.72 5.4a2 2 0 0 0 1.09 1.52l4.4 2.2c.42.22.78.55 1.01.96l.6 1.03c.49.88-.06 1.98-1.06 2.1l-1.18.15c-.47.06-.95-.02-1.37-.24L4.29 11.15a2 2 0 0 1-.52-.38Z",
      key: "1ma21e"
    }
  ]
];
var PlaneLanding = createLucideIcon("plane-landing", __iconNode1127);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plane-takeoff.js
var __iconNode1128 = [
  ["path", { d: "M2 22h20", key: "272qi7" }],
  [
    "path",
    {
      d: "M6.36 17.4 4 17l-2-4 1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12 5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.41 2.41 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z",
      key: "fkigj9"
    }
  ]
];
var PlaneTakeoff = createLucideIcon("plane-takeoff", __iconNode1128);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plane.js
var __iconNode1129 = [
  [
    "path",
    {
      d: "M17.8 19.2 16 11l3.5-3.5C21 6 21.5 4 21 3c-1-.5-3 0-4.5 1.5L13 8 4.8 6.2c-.5-.1-.9.1-1.1.5l-.3.5c-.2.5-.1 1 .3 1.3L9 12l-2 3H4l-1 1 3 2 2 3 1-1v-3l3-2 3.5 5.3c.3.4.8.5 1.3.3l.5-.2c.4-.3.6-.7.5-1.2z",
      key: "1v9wt8"
    }
  ]
];
var Plane = createLucideIcon("plane", __iconNode1129);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/play.js
var __iconNode1130 = [
  [
    "path",
    {
      d: "M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z",
      key: "10ikf1"
    }
  ]
];
var Play = createLucideIcon("play", __iconNode1130);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plug-zap.js
var __iconNode1131 = [
  [
    "path",
    { d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z", key: "goz73y" }
  ],
  ["path", { d: "m2 22 3-3", key: "19mgm9" }],
  ["path", { d: "M7.5 13.5 10 11", key: "7xgeeb" }],
  ["path", { d: "M10.5 16.5 13 14", key: "10btkg" }],
  ["path", { d: "m18 3-4 4h6l-4 4", key: "16psg9" }]
];
var PlugZap = createLucideIcon("plug-zap", __iconNode1131);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plug-2.js
var __iconNode1132 = [
  ["path", { d: "M9 2v6", key: "17ngun" }],
  ["path", { d: "M15 2v6", key: "s7yy2p" }],
  ["path", { d: "M12 17v5", key: "bb1du9" }],
  ["path", { d: "M5 8h14", key: "pcz4l3" }],
  ["path", { d: "M6 11V8h12v3a6 6 0 1 1-12 0Z", key: "wtfw2c" }]
];
var Plug2 = createLucideIcon("plug-2", __iconNode1132);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plug.js
var __iconNode1133 = [
  ["path", { d: "M12 22v-5", key: "1ega77" }],
  ["path", { d: "M9 8V2", key: "14iosj" }],
  ["path", { d: "M15 8V2", key: "18g5xt" }],
  ["path", { d: "M18 8v5a4 4 0 0 1-4 4h-4a4 4 0 0 1-4-4V8Z", key: "osxo6l" }]
];
var Plug = createLucideIcon("plug", __iconNode1133);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/plus.js
var __iconNode1134 = [
  ["path", { d: "M5 12h14", key: "1ays0h" }],
  ["path", { d: "M12 5v14", key: "s699le" }]
];
var Plus2 = createLucideIcon("plus", __iconNode1134);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pocket-knife.js
var __iconNode1135 = [
  ["path", { d: "M3 2v1c0 1 2 1 2 2S3 6 3 7s2 1 2 2-2 1-2 2 2 1 2 2", key: "19w3oe" }],
  ["path", { d: "M18 6h.01", key: "1v4wsw" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M20.83 8.83a4 4 0 0 0-5.66-5.66l-12 12a4 4 0 1 0 5.66 5.66Z", key: "6fykxj" }],
  ["path", { d: "M18 11.66V22a4 4 0 0 0 4-4V6", key: "1utzek" }]
];
var PocketKnife = createLucideIcon("pocket-knife", __iconNode1135);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pocket.js
var __iconNode1136 = [
  ["path", { d: "M20 3a2 2 0 0 1 2 2v6a1 1 0 0 1-20 0V5a2 2 0 0 1 2-2z", key: "1uodqw" }],
  ["path", { d: "m8 10 4 4 4-4", key: "1mxd5q" }]
];
var Pocket = createLucideIcon("pocket", __iconNode1136);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/podcast.js
var __iconNode1137 = [
  [
    "path",
    { d: "M13 17a1 1 0 1 0-2 0l.5 4.5a0.5 0.5 0 0 0 1 0z", fill: "currentColor", key: "x1mxqr" }
  ],
  ["path", { d: "M16.85 18.58a9 9 0 1 0-9.7 0", key: "d71mpg" }],
  ["path", { d: "M8 14a5 5 0 1 1 8 0", key: "fc81rn" }],
  ["circle", { cx: "12", cy: "11", r: "1", fill: "currentColor", key: "vqiwd" }]
];
var Podcast = createLucideIcon("podcast", __iconNode1137);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pointer-off.js
var __iconNode1138 = [
  ["path", { d: "M10 4.5V4a2 2 0 0 0-2.41-1.957", key: "jsi14n" }],
  ["path", { d: "M13.9 8.4a2 2 0 0 0-1.26-1.295", key: "hirc7f" }],
  [
    "path",
    { d: "M21.7 16.2A8 8 0 0 0 22 14v-3a2 2 0 1 0-4 0v-1a2 2 0 0 0-3.63-1.158", key: "1jxb2e" }
  ],
  [
    "path",
    {
      d: "m7 15-1.8-1.8a2 2 0 0 0-2.79 2.86L6 19.7a7.74 7.74 0 0 0 6 2.3h2a8 8 0 0 0 5.657-2.343",
      key: "10r7hm"
    }
  ],
  ["path", { d: "M6 6v8", key: "tv5xkp" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var PointerOff = createLucideIcon("pointer-off", __iconNode1138);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pointer.js
var __iconNode1139 = [
  ["path", { d: "M22 14a8 8 0 0 1-8 8", key: "56vcr3" }],
  ["path", { d: "M18 11v-1a2 2 0 0 0-2-2a2 2 0 0 0-2 2", key: "1agjmk" }],
  ["path", { d: "M14 10V9a2 2 0 0 0-2-2a2 2 0 0 0-2 2v1", key: "wdbh2u" }],
  ["path", { d: "M10 9.5V4a2 2 0 0 0-2-2a2 2 0 0 0-2 2v10", key: "1ibuk9" }],
  [
    "path",
    {
      d: "M18 11a2 2 0 1 1 4 0v3a8 8 0 0 1-8 8h-2c-2.8 0-4.5-.86-5.99-2.34l-3.6-3.6a2 2 0 0 1 2.83-2.82L7 15",
      key: "g6ys72"
    }
  ]
];
var Pointer = createLucideIcon("pointer", __iconNode1139);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/popsicle.js
var __iconNode1140 = [
  [
    "path",
    {
      d: "M18.6 14.4c.8-.8.8-2 0-2.8l-8.1-8.1a4.95 4.95 0 1 0-7.1 7.1l8.1 8.1c.9.7 2.1.7 2.9-.1Z",
      key: "1o68ps"
    }
  ],
  ["path", { d: "m22 22-5.5-5.5", key: "17o70y" }]
];
var Popsicle = createLucideIcon("popsicle", __iconNode1140);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/popcorn.js
var __iconNode1141 = [
  [
    "path",
    {
      d: "M18 8a2 2 0 0 0 0-4 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0-4 0 2 2 0 0 0 0 4",
      key: "10td1f"
    }
  ],
  ["path", { d: "M10 22 9 8", key: "yjptiv" }],
  ["path", { d: "m14 22 1-14", key: "8jwc8b" }],
  [
    "path",
    {
      d: "M20 8c.5 0 .9.4.8 1l-2.6 12c-.1.5-.7 1-1.2 1H7c-.6 0-1.1-.4-1.2-1L3.2 9c-.1-.6.3-1 .8-1Z",
      key: "1qo33t"
    }
  ]
];
var Popcorn = createLucideIcon("popcorn", __iconNode1141);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pound-sterling.js
var __iconNode1142 = [
  ["path", { d: "M18 7c0-5.333-8-5.333-8 0", key: "1prm2n" }],
  ["path", { d: "M10 7v14", key: "18tmcs" }],
  ["path", { d: "M6 21h12", key: "4dkmi1" }],
  ["path", { d: "M6 13h10", key: "ybwr4a" }]
];
var PoundSterling = createLucideIcon("pound-sterling", __iconNode1142);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/power-off.js
var __iconNode1143 = [
  ["path", { d: "M18.36 6.64A9 9 0 0 1 20.77 15", key: "dxknvb" }],
  ["path", { d: "M6.16 6.16a9 9 0 1 0 12.68 12.68", key: "1x7qb5" }],
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var PowerOff = createLucideIcon("power-off", __iconNode1143);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/power.js
var __iconNode1144 = [
  ["path", { d: "M12 2v10", key: "mnfbl" }],
  ["path", { d: "M18.4 6.6a9 9 0 1 1-12.77.04", key: "obofu9" }]
];
var Power = createLucideIcon("power", __iconNode1144);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/presentation.js
var __iconNode1145 = [
  ["path", { d: "M2 3h20", key: "91anmk" }],
  ["path", { d: "M21 3v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V3", key: "2k9sn8" }],
  ["path", { d: "m7 21 5-5 5 5", key: "bip4we" }]
];
var Presentation = createLucideIcon("presentation", __iconNode1145);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/printer.js
var __iconNode1146 = [
  [
    "path",
    {
      d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2",
      key: "143wyd"
    }
  ],
  ["path", { d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6", key: "1itne7" }],
  ["rect", { x: "6", y: "14", width: "12", height: "8", rx: "1", key: "1ue0tg" }]
];
var Printer = createLucideIcon("printer", __iconNode1146);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/printer-check.js
var __iconNode1147 = [
  ["path", { d: "M13.5 22H7a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v.5", key: "qeb09x" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }],
  ["path", { d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v2", key: "1md90i" }],
  ["path", { d: "M6 9V3a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v6", key: "1itne7" }]
];
var PrinterCheck = createLucideIcon("printer-check", __iconNode1147);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/projector.js
var __iconNode1148 = [
  ["path", { d: "M5 7 3 5", key: "1yys58" }],
  ["path", { d: "M9 6V3", key: "1ptz9u" }],
  ["path", { d: "m13 7 2-2", key: "1w3vmq" }],
  ["circle", { cx: "9", cy: "13", r: "3", key: "1mma13" }],
  [
    "path",
    {
      d: "M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17",
      key: "2frwzc"
    }
  ],
  ["path", { d: "M16 16h2", key: "dnq2od" }]
];
var Projector = createLucideIcon("projector", __iconNode1148);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/proportions.js
var __iconNode1149 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M12 9v11", key: "1fnkrn" }],
  ["path", { d: "M2 9h13a2 2 0 0 1 2 2v9", key: "11z3ex" }]
];
var Proportions = createLucideIcon("proportions", __iconNode1149);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/puzzle.js
var __iconNode1150 = [
  [
    "path",
    {
      d: "M15.39 4.39a1 1 0 0 0 1.68-.474 2.5 2.5 0 1 1 3.014 3.015 1 1 0 0 0-.474 1.68l1.683 1.682a2.414 2.414 0 0 1 0 3.414L19.61 15.39a1 1 0 0 1-1.68-.474 2.5 2.5 0 1 0-3.014 3.015 1 1 0 0 1 .474 1.68l-1.683 1.682a2.414 2.414 0 0 1-3.414 0L8.61 19.61a1 1 0 0 0-1.68.474 2.5 2.5 0 1 1-3.014-3.015 1 1 0 0 0 .474-1.68l-1.683-1.682a2.414 2.414 0 0 1 0-3.414L4.39 8.61a1 1 0 0 1 1.68.474 2.5 2.5 0 1 0 3.014-3.015 1 1 0 0 1-.474-1.68l1.683-1.682a2.414 2.414 0 0 1 3.414 0z",
      key: "w46dr5"
    }
  ]
];
var Puzzle = createLucideIcon("puzzle", __iconNode1150);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/pyramid.js
var __iconNode1151 = [
  [
    "path",
    {
      d: "M2.5 16.88a1 1 0 0 1-.32-1.43l9-13.02a1 1 0 0 1 1.64 0l9 13.01a1 1 0 0 1-.32 1.44l-8.51 4.86a2 2 0 0 1-1.98 0Z",
      key: "aenxs0"
    }
  ],
  ["path", { d: "M12 2v20", key: "t6zp3m" }]
];
var Pyramid = createLucideIcon("pyramid", __iconNode1151);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/qr-code.js
var __iconNode1152 = [
  ["rect", { width: "5", height: "5", x: "3", y: "3", rx: "1", key: "1tu5fj" }],
  ["rect", { width: "5", height: "5", x: "16", y: "3", rx: "1", key: "1v8r4q" }],
  ["rect", { width: "5", height: "5", x: "3", y: "16", rx: "1", key: "1x03jg" }],
  ["path", { d: "M21 16h-3a2 2 0 0 0-2 2v3", key: "177gqh" }],
  ["path", { d: "M21 21v.01", key: "ents32" }],
  ["path", { d: "M12 7v3a2 2 0 0 1-2 2H7", key: "8crl2c" }],
  ["path", { d: "M3 12h.01", key: "nlz23k" }],
  ["path", { d: "M12 3h.01", key: "n36tog" }],
  ["path", { d: "M12 16v.01", key: "133mhm" }],
  ["path", { d: "M16 12h1", key: "1slzba" }],
  ["path", { d: "M21 12v.01", key: "1lwtk9" }],
  ["path", { d: "M12 21v-1", key: "1880an" }]
];
var QrCode = createLucideIcon("qr-code", __iconNode1152);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/quote.js
var __iconNode1153 = [
  [
    "path",
    {
      d: "M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z",
      key: "rib7q0"
    }
  ],
  [
    "path",
    {
      d: "M5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2 1 1 0 0 1 1 1v1a2 2 0 0 1-2 2 1 1 0 0 0-1 1v2a1 1 0 0 0 1 1 6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z",
      key: "1ymkrd"
    }
  ]
];
var Quote = createLucideIcon("quote", __iconNode1153);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rabbit.js
var __iconNode1154 = [
  ["path", { d: "M13 16a3 3 0 0 1 2.24 5", key: "1epib5" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  [
    "path",
    {
      d: "M18 21h-8a4 4 0 0 1-4-4 7 7 0 0 1 7-7h.2L9.6 6.4a1 1 0 1 1 2.8-2.8L15.8 7h.2c3.3 0 6 2.7 6 6v1a2 2 0 0 1-2 2h-1a3 3 0 0 0-3 3",
      key: "ue9ozu"
    }
  ],
  ["path", { d: "M20 8.54V4a2 2 0 1 0-4 0v3", key: "49iql8" }],
  ["path", { d: "M7.612 12.524a3 3 0 1 0-1.6 4.3", key: "1e33i0" }]
];
var Rabbit = createLucideIcon("rabbit", __iconNode1154);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radar.js
var __iconNode1155 = [
  ["path", { d: "M19.07 4.93A10 10 0 0 0 6.99 3.34", key: "z3du51" }],
  ["path", { d: "M4 6h.01", key: "oypzma" }],
  ["path", { d: "M2.29 9.62A10 10 0 1 0 21.31 8.35", key: "qzzz0" }],
  ["path", { d: "M16.24 7.76A6 6 0 1 0 8.23 16.67", key: "1yjesh" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }],
  ["path", { d: "M17.99 11.66A6 6 0 0 1 15.77 16.67", key: "1u2y91" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }],
  ["path", { d: "m13.41 10.59 5.66-5.66", key: "mhq4k0" }]
];
var Radar = createLucideIcon("radar", __iconNode1155);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radiation.js
var __iconNode1156 = [
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  [
    "path",
    {
      d: "M14 15.4641a4 4 0 0 1-4 0L7.52786 19.74597 A 1 1 0 0 0 7.99303 21.16211 10 10 0 0 0 16.00697 21.16211 1 1 0 0 0 16.47214 19.74597z",
      key: "1y4lzb"
    }
  ],
  [
    "path",
    {
      d: "M16 12a4 4 0 0 0-2-3.464l2.472-4.282a1 1 0 0 1 1.46-.305 10 10 0 0 1 4.006 6.94A1 1 0 0 1 21 12z",
      key: "163ggk"
    }
  ],
  [
    "path",
    {
      d: "M8 12a4 4 0 0 1 2-3.464L7.528 4.254a1 1 0 0 0-1.46-.305 10 10 0 0 0-4.006 6.94A1 1 0 0 0 3 12z",
      key: "1l9i0b"
    }
  ]
];
var Radiation = createLucideIcon("radiation", __iconNode1156);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radical.js
var __iconNode1157 = [
  [
    "path",
    {
      d: "M3 12h3.28a1 1 0 0 1 .948.684l2.298 7.934a.5.5 0 0 0 .96-.044L13.82 4.771A1 1 0 0 1 14.792 4H21",
      key: "1mqj8i"
    }
  ]
];
var Radical = createLucideIcon("radical", __iconNode1157);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radio-receiver.js
var __iconNode1158 = [
  ["path", { d: "M5 16v2", key: "g5qcv5" }],
  ["path", { d: "M19 16v2", key: "1gbaio" }],
  ["rect", { width: "20", height: "8", x: "2", y: "8", rx: "2", key: "vjsjur" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }]
];
var RadioReceiver = createLucideIcon("radio-receiver", __iconNode1158);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radio-tower.js
var __iconNode1159 = [
  ["path", { d: "M4.9 16.1C1 12.2 1 5.8 4.9 1.9", key: "s0qx1y" }],
  ["path", { d: "M7.8 4.7a6.14 6.14 0 0 0-.8 7.5", key: "1idnkw" }],
  ["circle", { cx: "12", cy: "9", r: "2", key: "1092wv" }],
  ["path", { d: "M16.2 4.8c2 2 2.26 5.11.8 7.47", key: "ojru2q" }],
  ["path", { d: "M19.1 1.9a9.96 9.96 0 0 1 0 14.1", key: "rhi7fg" }],
  ["path", { d: "M9.5 18h5", key: "mfy3pd" }],
  ["path", { d: "m8 22 4-11 4 11", key: "25yftu" }]
];
var RadioTower = createLucideIcon("radio-tower", __iconNode1159);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radio.js
var __iconNode1160 = [
  ["path", { d: "M16.247 7.761a6 6 0 0 1 0 8.478", key: "1fwjs5" }],
  ["path", { d: "M19.075 4.933a10 10 0 0 1 0 14.134", key: "ehdyv1" }],
  ["path", { d: "M4.925 19.067a10 10 0 0 1 0-14.134", key: "1q22gi" }],
  ["path", { d: "M7.753 16.239a6 6 0 0 1 0-8.478", key: "r2q7qm" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var Radio = createLucideIcon("radio", __iconNode1160);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/radius.js
var __iconNode1161 = [
  ["path", { d: "M20.34 17.52a10 10 0 1 0-2.82 2.82", key: "fydyku" }],
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["path", { d: "m13.41 13.41 4.18 4.18", key: "1gqbwc" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var Radius = createLucideIcon("radius", __iconNode1161);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rainbow.js
var __iconNode1162 = [
  ["path", { d: "M22 17a10 10 0 0 0-20 0", key: "ozegv" }],
  ["path", { d: "M6 17a6 6 0 0 1 12 0", key: "5giftw" }],
  ["path", { d: "M10 17a2 2 0 0 1 4 0", key: "gnsikk" }]
];
var Rainbow = createLucideIcon("rainbow", __iconNode1162);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rail-symbol.js
var __iconNode1163 = [
  ["path", { d: "M5 15h14", key: "m0yey3" }],
  ["path", { d: "M5 9h14", key: "7tsvo6" }],
  ["path", { d: "m14 20-5-5 6-6-5-5", key: "1jo42i" }]
];
var RailSymbol = createLucideIcon("rail-symbol", __iconNode1163);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rat.js
var __iconNode1164 = [
  ["path", { d: "M13 22H4a2 2 0 0 1 0-4h12", key: "bt3f23" }],
  ["path", { d: "M13.236 18a3 3 0 0 0-2.2-5", key: "1tbvmo" }],
  ["path", { d: "M16 9h.01", key: "1bdo4e" }],
  [
    "path",
    {
      d: "M16.82 3.94a3 3 0 1 1 3.237 4.868l1.815 2.587a1.5 1.5 0 0 1-1.5 2.1l-2.872-.453a3 3 0 0 0-3.5 3",
      key: "9ch7kn"
    }
  ],
  ["path", { d: "M17 4.988a3 3 0 1 0-5.2 2.052A7 7 0 0 0 4 14.015 4 4 0 0 0 8 18", key: "3s7e9i" }]
];
var Rat = createLucideIcon("rat", __iconNode1164);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ratio.js
var __iconNode1165 = [
  ["rect", { width: "12", height: "20", x: "6", y: "2", rx: "2", key: "1oxtiu" }],
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
];
var Ratio = createLucideIcon("ratio", __iconNode1165);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-euro.js
var __iconNode1166 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 12h5", key: "1g6qi8" }],
  ["path", { d: "M16 9.5a4 4 0 1 0 0 5.2", key: "b2px4r" }]
];
var ReceiptEuro = createLucideIcon("receipt-euro", __iconNode1166);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-cent.js
var __iconNode1167 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M12 6.5v11", key: "ecfhkf" }],
  ["path", { d: "M15 9.4a4 4 0 1 0 0 5.2", key: "1makmb" }]
];
var ReceiptCent = createLucideIcon("receipt-cent", __iconNode1167);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-indian-rupee.js
var __iconNode1168 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 7h8", key: "i86dvs" }],
  ["path", { d: "M12 17.5 8 15h1a4 4 0 0 0 0-8", key: "grpkl4" }],
  ["path", { d: "M8 11h8", key: "vwpz6n" }]
];
var ReceiptIndianRupee = createLucideIcon("receipt-indian-rupee", __iconNode1168);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-japanese-yen.js
var __iconNode1169 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "m12 10 3-3", key: "1mc12w" }],
  ["path", { d: "m9 7 3 3v7.5", key: "39i0xv" }],
  ["path", { d: "M9 11h6", key: "1fldmi" }],
  ["path", { d: "M9 15h6", key: "cctwl0" }]
];
var ReceiptJapaneseYen = createLucideIcon("receipt-japanese-yen", __iconNode1169);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-pound-sterling.js
var __iconNode1170 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 13h5", key: "1k9z8w" }],
  ["path", { d: "M10 17V9.5a2.5 2.5 0 0 1 5 0", key: "1dzgp0" }],
  ["path", { d: "M8 17h7", key: "8mjdqu" }]
];
var ReceiptPoundSterling = createLucideIcon("receipt-pound-sterling", __iconNode1170);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-russian-ruble.js
var __iconNode1171 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M8 15h5", key: "vxg57a" }],
  ["path", { d: "M8 11h5a2 2 0 1 0 0-4h-3v10", key: "1usi5u" }]
];
var ReceiptRussianRuble = createLucideIcon("receipt-russian-ruble", __iconNode1171);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-swiss-franc.js
var __iconNode1172 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M10 17V7h5", key: "k7jq18" }],
  ["path", { d: "M10 11h4", key: "1i0mka" }],
  ["path", { d: "M8 15h5", key: "vxg57a" }]
];
var ReceiptSwissFranc = createLucideIcon("receipt-swiss-franc", __iconNode1172);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-text.js
var __iconNode1173 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M14 8H8", key: "1l3xfs" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }],
  ["path", { d: "M13 16H8", key: "wsln4y" }]
];
var ReceiptText = createLucideIcon("receipt-text", __iconNode1173);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt-turkish-lira.js
var __iconNode1174 = [
  ["path", { d: "M10 6.5v11a5.5 5.5 0 0 0 5.5-5.5", key: "nw10mp" }],
  ["path", { d: "m14 8-6 3", key: "2tb98i" }],
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1z", key: "io9ry0" }
  ]
];
var ReceiptTurkishLira = createLucideIcon("receipt-turkish-lira", __iconNode1174);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/receipt.js
var __iconNode1175 = [
  [
    "path",
    { d: "M4 2v20l2-1 2 1 2-1 2 1 2-1 2 1 2-1 2 1V2l-2 1-2-1-2 1-2-1-2 1-2-1-2 1Z", key: "q3az6g" }
  ],
  ["path", { d: "M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8", key: "1h4pet" }],
  ["path", { d: "M12 17.5v-11", key: "1jc1ny" }]
];
var Receipt = createLucideIcon("receipt", __iconNode1175);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rectangle-circle.js
var __iconNode1176 = [
  ["path", { d: "M14 4v16H3a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1z", key: "1m5n7q" }],
  ["circle", { cx: "14", cy: "12", r: "8", key: "1pag6k" }]
];
var RectangleCircle = createLucideIcon("rectangle-circle", __iconNode1176);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rectangle-ellipsis.js
var __iconNode1177 = [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M17 12h.01", key: "1m0b6t" }],
  ["path", { d: "M7 12h.01", key: "eqddd0" }]
];
var RectangleEllipsis = createLucideIcon("rectangle-ellipsis", __iconNode1177);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rectangle-goggles.js
var __iconNode1178 = [
  [
    "path",
    {
      d: "M20 6a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-4a2 2 0 0 1-1.6-.8l-1.6-2.13a1 1 0 0 0-1.6 0L9.6 17.2A2 2 0 0 1 8 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z",
      key: "d5y1f"
    }
  ]
];
var RectangleGoggles = createLucideIcon("rectangle-goggles", __iconNode1178);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rectangle-horizontal.js
var __iconNode1179 = [
  ["rect", { width: "20", height: "12", x: "2", y: "6", rx: "2", key: "9lu3g6" }]
];
var RectangleHorizontal = createLucideIcon("rectangle-horizontal", __iconNode1179);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/recycle.js
var __iconNode1180 = [
  [
    "path",
    {
      d: "M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5",
      key: "x6z5xu"
    }
  ],
  [
    "path",
    {
      d: "M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12",
      key: "1x4zh5"
    }
  ],
  ["path", { d: "m14 16-3 3 3 3", key: "f6jyew" }],
  ["path", { d: "M8.293 13.596 7.196 9.5 3.1 10.598", key: "wf1obh" }],
  [
    "path",
    {
      d: "m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843",
      key: "9tzpgr"
    }
  ],
  ["path", { d: "m13.378 9.633 4.096 1.098 1.097-4.096", key: "1oe83g" }]
];
var Recycle = createLucideIcon("recycle", __iconNode1180);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rectangle-vertical.js
var __iconNode1181 = [
  ["rect", { width: "12", height: "20", x: "6", y: "2", rx: "2", key: "1oxtiu" }]
];
var RectangleVertical = createLucideIcon("rectangle-vertical", __iconNode1181);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/redo-2.js
var __iconNode1182 = [
  ["path", { d: "m15 14 5-5-5-5", key: "12vg1m" }],
  ["path", { d: "M20 9H9.5A5.5 5.5 0 0 0 4 14.5A5.5 5.5 0 0 0 9.5 20H13", key: "6uklza" }]
];
var Redo2 = createLucideIcon("redo-2", __iconNode1182);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/redo-dot.js
var __iconNode1183 = [
  ["circle", { cx: "12", cy: "17", r: "1", key: "1ixnty" }],
  ["path", { d: "M21 7v6h-6", key: "3ptur4" }],
  ["path", { d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7", key: "1kgawr" }]
];
var RedoDot = createLucideIcon("redo-dot", __iconNode1183);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/redo.js
var __iconNode1184 = [
  ["path", { d: "M21 7v6h-6", key: "3ptur4" }],
  ["path", { d: "M3 17a9 9 0 0 1 9-9 9 9 0 0 1 6 2.3l3 2.7", key: "1kgawr" }]
];
var Redo = createLucideIcon("redo", __iconNode1184);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/refresh-ccw-dot.js
var __iconNode1185 = [
  ["path", { d: "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "14sxne" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["path", { d: "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16", key: "1hlbsb" }],
  ["path", { d: "M16 16h5v5", key: "ccwih5" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
];
var RefreshCcwDot = createLucideIcon("refresh-ccw-dot", __iconNode1185);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/refresh-ccw.js
var __iconNode1186 = [
  ["path", { d: "M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "14sxne" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["path", { d: "M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16", key: "1hlbsb" }],
  ["path", { d: "M16 16h5v5", key: "ccwih5" }]
];
var RefreshCcw = createLucideIcon("refresh-ccw", __iconNode1186);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/refresh-cw-off.js
var __iconNode1187 = [
  ["path", { d: "M21 8L18.74 5.74A9.75 9.75 0 0 0 12 3C11 3 10.03 3.16 9.13 3.47", key: "1krf6h" }],
  ["path", { d: "M8 16H3v5", key: "1cv678" }],
  ["path", { d: "M3 12C3 9.51 4 7.26 5.64 5.64", key: "ruvoct" }],
  ["path", { d: "m3 16 2.26 2.26A9.75 9.75 0 0 0 12 21c2.49 0 4.74-1 6.36-2.64", key: "19q130" }],
  ["path", { d: "M21 12c0 1-.16 1.97-.47 2.87", key: "4w8emr" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }],
  ["path", { d: "M22 22 2 2", key: "1r8tn9" }]
];
var RefreshCwOff = createLucideIcon("refresh-cw-off", __iconNode1187);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/refresh-cw.js
var __iconNode1188 = [
  ["path", { d: "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8", key: "v9h5vc" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }],
  ["path", { d: "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16", key: "3uifl3" }],
  ["path", { d: "M8 16H3v5", key: "1cv678" }]
];
var RefreshCw = createLucideIcon("refresh-cw", __iconNode1188);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/refrigerator.js
var __iconNode1189 = [
  [
    "path",
    { d: "M5 6a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6Z", key: "fpq118" }
  ],
  ["path", { d: "M5 10h14", key: "elsbfy" }],
  ["path", { d: "M15 7v6", key: "1nx30x" }]
];
var Refrigerator = createLucideIcon("refrigerator", __iconNode1189);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/regex.js
var __iconNode1190 = [
  ["path", { d: "M17 3v10", key: "15fgeh" }],
  ["path", { d: "m12.67 5.5 8.66 5", key: "1gpheq" }],
  ["path", { d: "m12.67 10.5 8.66-5", key: "1dkfa6" }],
  [
    "path",
    { d: "M9 17a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2z", key: "swwfx4" }
  ]
];
var Regex = createLucideIcon("regex", __iconNode1190);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/remove-formatting.js
var __iconNode1191 = [
  ["path", { d: "M4 7V4h16v3", key: "9msm58" }],
  ["path", { d: "M5 20h6", key: "1h6pxn" }],
  ["path", { d: "M13 4 8 20", key: "kqq6aj" }],
  ["path", { d: "m15 15 5 5", key: "me55sn" }],
  ["path", { d: "m20 15-5 5", key: "11p7ol" }]
];
var RemoveFormatting = createLucideIcon("remove-formatting", __iconNode1191);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/repeat-1.js
var __iconNode1192 = [
  ["path", { d: "m17 2 4 4-4 4", key: "nntrym" }],
  ["path", { d: "M3 11v-1a4 4 0 0 1 4-4h14", key: "84bu3i" }],
  ["path", { d: "m7 22-4-4 4-4", key: "1wqhfi" }],
  ["path", { d: "M21 13v1a4 4 0 0 1-4 4H3", key: "1rx37r" }],
  ["path", { d: "M11 10h1v4", key: "70cz1p" }]
];
var Repeat1 = createLucideIcon("repeat-1", __iconNode1192);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/repeat-2.js
var __iconNode1193 = [
  ["path", { d: "m2 9 3-3 3 3", key: "1ltn5i" }],
  ["path", { d: "M13 18H7a2 2 0 0 1-2-2V6", key: "1r6tfw" }],
  ["path", { d: "m22 15-3 3-3-3", key: "4rnwn2" }],
  ["path", { d: "M11 6h6a2 2 0 0 1 2 2v10", key: "2f72bc" }]
];
var Repeat2 = createLucideIcon("repeat-2", __iconNode1193);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/repeat.js
var __iconNode1194 = [
  ["path", { d: "m17 2 4 4-4 4", key: "nntrym" }],
  ["path", { d: "M3 11v-1a4 4 0 0 1 4-4h14", key: "84bu3i" }],
  ["path", { d: "m7 22-4-4 4-4", key: "1wqhfi" }],
  ["path", { d: "M21 13v1a4 4 0 0 1-4 4H3", key: "1rx37r" }]
];
var Repeat = createLucideIcon("repeat", __iconNode1194);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/replace-all.js
var __iconNode1195 = [
  ["path", { d: "M14 14a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1", key: "zg1ipl" }],
  ["path", { d: "M14 4a1 1 0 0 1 1-1", key: "dhj8ez" }],
  ["path", { d: "M15 10a1 1 0 0 1-1-1", key: "1mnyi5" }],
  ["path", { d: "M19 14a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1", key: "txt6k4" }],
  ["path", { d: "M21 4a1 1 0 0 0-1-1", key: "sfs9ap" }],
  ["path", { d: "M21 9a1 1 0 0 1-1 1", key: "mp6qeo" }],
  ["path", { d: "m3 7 3 3 3-3", key: "x25e72" }],
  ["path", { d: "M6 10V5a2 2 0 0 1 2-2h2", key: "15xut4" }],
  ["rect", { x: "3", y: "14", width: "7", height: "7", rx: "1", key: "1bkyp8" }]
];
var ReplaceAll = createLucideIcon("replace-all", __iconNode1195);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/replace.js
var __iconNode1196 = [
  ["path", { d: "M14 4a1 1 0 0 1 1-1", key: "dhj8ez" }],
  ["path", { d: "M15 10a1 1 0 0 1-1-1", key: "1mnyi5" }],
  ["path", { d: "M21 4a1 1 0 0 0-1-1", key: "sfs9ap" }],
  ["path", { d: "M21 9a1 1 0 0 1-1 1", key: "mp6qeo" }],
  ["path", { d: "m3 7 3 3 3-3", key: "x25e72" }],
  ["path", { d: "M6 10V5a2 2 0 0 1 2-2h2", key: "15xut4" }],
  ["rect", { x: "3", y: "14", width: "7", height: "7", rx: "1", key: "1bkyp8" }]
];
var Replace = createLucideIcon("replace", __iconNode1196);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/reply-all.js
var __iconNode1197 = [
  ["path", { d: "m12 17-5-5 5-5", key: "1s3y5u" }],
  ["path", { d: "M22 18v-2a4 4 0 0 0-4-4H7", key: "1fcyog" }],
  ["path", { d: "m7 17-5-5 5-5", key: "1ed8i2" }]
];
var ReplyAll = createLucideIcon("reply-all", __iconNode1197);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/reply.js
var __iconNode1198 = [
  ["path", { d: "M20 18v-2a4 4 0 0 0-4-4H4", key: "5vmcpk" }],
  ["path", { d: "m9 17-5-5 5-5", key: "nvlc11" }]
];
var Reply = createLucideIcon("reply", __iconNode1198);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rewind.js
var __iconNode1199 = [
  [
    "path",
    { d: "M12 6a2 2 0 0 0-3.414-1.414l-6 6a2 2 0 0 0 0 2.828l6 6A2 2 0 0 0 12 18z", key: "2a1g8i" }
  ],
  [
    "path",
    { d: "M22 6a2 2 0 0 0-3.414-1.414l-6 6a2 2 0 0 0 0 2.828l6 6A2 2 0 0 0 22 18z", key: "rg3s36" }
  ]
];
var Rewind = createLucideIcon("rewind", __iconNode1199);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ribbon.js
var __iconNode1200 = [
  [
    "path",
    { d: "M12 11.22C11 9.997 10 9 10 8a2 2 0 0 1 4 0c0 1-.998 2.002-2.01 3.22", key: "1rnhq3" }
  ],
  ["path", { d: "m12 18 2.57-3.5", key: "116vt7" }],
  ["path", { d: "M6.243 9.016a7 7 0 0 1 11.507-.009", key: "10dq0b" }],
  ["path", { d: "M9.35 14.53 12 11.22", key: "tdsyp2" }],
  [
    "path",
    {
      d: "M9.35 14.53C7.728 12.246 6 10.221 6 7a6 5 0 0 1 12 0c-.005 3.22-1.778 5.235-3.43 7.5l3.557 4.527a1 1 0 0 1-.203 1.43l-1.894 1.36a1 1 0 0 1-1.384-.215L12 18l-2.679 3.593a1 1 0 0 1-1.39.213l-1.865-1.353a1 1 0 0 1-.203-1.422z",
      key: "nmifey"
    }
  ]
];
var Ribbon = createLucideIcon("ribbon", __iconNode1200);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rocket.js
var __iconNode1201 = [
  [
    "path",
    {
      d: "M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z",
      key: "m3kijz"
    }
  ],
  [
    "path",
    {
      d: "m12 15-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z",
      key: "1fmvmk"
    }
  ],
  ["path", { d: "M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0", key: "1f8sc4" }],
  ["path", { d: "M12 15v5s3.03-.55 4-2c1.08-1.62 0-5 0-5", key: "qeys4" }]
];
var Rocket = createLucideIcon("rocket", __iconNode1201);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rocking-chair.js
var __iconNode1202 = [
  ["polyline", { points: "3.5 2 6.5 12.5 18 12.5", key: "y3iy52" }],
  ["line", { x1: "9.5", x2: "5.5", y1: "12.5", y2: "20", key: "19vg5i" }],
  ["line", { x1: "15", x2: "18.5", y1: "12.5", y2: "20", key: "1inpmv" }],
  ["path", { d: "M2.75 18a13 13 0 0 0 18.5 0", key: "1nquas" }]
];
var RockingChair = createLucideIcon("rocking-chair", __iconNode1202);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/roller-coaster.js
var __iconNode1203 = [
  ["path", { d: "M6 19V5", key: "1r845m" }],
  ["path", { d: "M10 19V6.8", key: "9j2tfs" }],
  ["path", { d: "M14 19v-7.8", key: "10s8qv" }],
  ["path", { d: "M18 5v4", key: "1tajlv" }],
  ["path", { d: "M18 19v-6", key: "ielfq3" }],
  ["path", { d: "M22 19V9", key: "158nzp" }],
  ["path", { d: "M2 19V9a4 4 0 0 1 4-4c2 0 4 1.33 6 4s4 4 6 4a4 4 0 1 0-3-6.65", key: "1930oh" }]
];
var RollerCoaster = createLucideIcon("roller-coaster", __iconNode1203);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rose.js
var __iconNode1204 = [
  ["path", { d: "M17 10h-1a4 4 0 1 1 4-4v.534", key: "7qf5zm" }],
  [
    "path",
    { d: "M17 6h1a4 4 0 0 1 1.42 7.74l-2.29.87a6 6 0 0 1-5.339-10.68l2.069-1.31", key: "1et29u" }
  ],
  [
    "path",
    {
      d: "M4.5 17c2.8-.5 4.4 0 5.5.8s1.8 2.2 2.3 3.7c-2 .4-3.5.4-4.8-.3-1.2-.6-2.3-1.9-3-4.2",
      key: "kiv2lz"
    }
  ],
  ["path", { d: "M9.77 12C4 15 2 22 2 22", key: "h28rw0" }],
  ["circle", { cx: "17", cy: "8", r: "2", key: "1330xn" }]
];
var Rose = createLucideIcon("rose", __iconNode1204);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-3d.js
var __iconNode1205 = [
  [
    "path",
    {
      d: "M16.466 7.5C15.643 4.237 13.952 2 12 2 9.239 2 7 6.477 7 12s2.239 10 5 10c.342 0 .677-.069 1-.2",
      key: "10n0gc"
    }
  ],
  ["path", { d: "m15.194 13.707 3.814 1.86-1.86 3.814", key: "16shm9" }],
  [
    "path",
    {
      d: "M19 15.57c-1.804.885-4.274 1.43-7 1.43-5.523 0-10-2.239-10-5s4.477-5 10-5c4.838 0 8.873 1.718 9.8 4",
      key: "1lxi77"
    }
  ]
];
var Rotate3d = createLucideIcon("rotate-3d", __iconNode1205);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-ccw-key.js
var __iconNode1206 = [
  ["path", { d: "m14.5 9.5 1 1", key: "159eiq" }],
  ["path", { d: "m15.5 8.5-4 4", key: "iirg3q" }],
  ["path", { d: "M3 12a9 9 0 1 0 9-9 9.74 9.74 0 0 0-6.74 2.74L3 8", key: "g2jlw" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }],
  ["circle", { cx: "10", cy: "14", r: "2", key: "1239so" }]
];
var RotateCcwKey = createLucideIcon("rotate-ccw-key", __iconNode1206);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-ccw-square.js
var __iconNode1207 = [
  ["path", { d: "M20 9V7a2 2 0 0 0-2-2h-6", key: "19z8uc" }],
  ["path", { d: "m15 2-3 3 3 3", key: "177bxs" }],
  ["path", { d: "M20 13v5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2", key: "d36hnl" }]
];
var RotateCcwSquare = createLucideIcon("rotate-ccw-square", __iconNode1207);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-ccw.js
var __iconNode1208 = [
  ["path", { d: "M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8", key: "1357e3" }],
  ["path", { d: "M3 3v5h5", key: "1xhq8a" }]
];
var RotateCcw = createLucideIcon("rotate-ccw", __iconNode1208);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-cw-square.js
var __iconNode1209 = [
  ["path", { d: "M12 5H6a2 2 0 0 0-2 2v3", key: "l96uqu" }],
  ["path", { d: "m9 8 3-3-3-3", key: "1gzgc3" }],
  ["path", { d: "M4 14v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2", key: "1w2k5h" }]
];
var RotateCwSquare = createLucideIcon("rotate-cw-square", __iconNode1209);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rotate-cw.js
var __iconNode1210 = [
  ["path", { d: "M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8", key: "1p45f6" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }]
];
var RotateCw = createLucideIcon("rotate-cw", __iconNode1210);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/route-off.js
var __iconNode1211 = [
  ["circle", { cx: "6", cy: "19", r: "3", key: "1kj8tv" }],
  ["path", { d: "M9 19h8.5c.4 0 .9-.1 1.3-.2", key: "1effex" }],
  ["path", { d: "M5.2 5.2A3.5 3.53 0 0 0 6.5 12H12", key: "k9y2ds" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M21 15.3a3.5 3.5 0 0 0-3.3-3.3", key: "11nlu2" }],
  ["path", { d: "M15 5h-4.3", key: "6537je" }],
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }]
];
var RouteOff = createLucideIcon("route-off", __iconNode1211);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/route.js
var __iconNode1212 = [
  ["circle", { cx: "6", cy: "19", r: "3", key: "1kj8tv" }],
  ["path", { d: "M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15", key: "1d8sl" }],
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }]
];
var Route = createLucideIcon("route", __iconNode1212);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/router.js
var __iconNode1213 = [
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", key: "w68u3i" }],
  ["path", { d: "M6.01 18H6", key: "19vcac" }],
  ["path", { d: "M10.01 18H10", key: "uamcmx" }],
  ["path", { d: "M15 10v4", key: "qjz1xs" }],
  ["path", { d: "M17.84 7.17a4 4 0 0 0-5.66 0", key: "1rif40" }],
  ["path", { d: "M20.66 4.34a8 8 0 0 0-11.31 0", key: "6a5xfq" }]
];
var Router = createLucideIcon("router", __iconNode1213);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rows-2.js
var __iconNode1214 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }]
];
var Rows2 = createLucideIcon("rows-2", __iconNode1214);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rows-3.js
var __iconNode1215 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 9H3", key: "1338ky" }],
  ["path", { d: "M21 15H3", key: "9uk58r" }]
];
var Rows3 = createLucideIcon("rows-3", __iconNode1215);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rows-4.js
var __iconNode1216 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 7.5H3", key: "1hm9pq" }],
  ["path", { d: "M21 12H3", key: "2avoz0" }],
  ["path", { d: "M21 16.5H3", key: "n7jzkj" }]
];
var Rows4 = createLucideIcon("rows-4", __iconNode1216);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/rss.js
var __iconNode1217 = [
  ["path", { d: "M4 11a9 9 0 0 1 9 9", key: "pv89mb" }],
  ["path", { d: "M4 4a16 16 0 0 1 16 16", key: "k0647b" }],
  ["circle", { cx: "5", cy: "19", r: "1", key: "bfqh0e" }]
];
var Rss = createLucideIcon("rss", __iconNode1217);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ruler-dimension-line.js
var __iconNode1218 = [
  ["path", { d: "M12 15v-3.014", key: "aw6ppf" }],
  ["path", { d: "M16 15v-3.014", key: "9e0vc7" }],
  ["path", { d: "M20 6H4", key: "1lfz86" }],
  ["path", { d: "M20 8V4", key: "1l2g47" }],
  ["path", { d: "M4 8V4", key: "sppxzt" }],
  ["path", { d: "M8 15v-3.014", key: "when08" }],
  ["rect", { x: "3", y: "12", width: "18", height: "7", rx: "1", key: "1ucwdz" }]
];
var RulerDimensionLine = createLucideIcon("ruler-dimension-line", __iconNode1218);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ruler.js
var __iconNode1219 = [
  [
    "path",
    {
      d: "M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z",
      key: "icamh8"
    }
  ],
  ["path", { d: "m14.5 12.5 2-2", key: "inckbg" }],
  ["path", { d: "m11.5 9.5 2-2", key: "fmmyf7" }],
  ["path", { d: "m8.5 6.5 2-2", key: "vc6u1g" }],
  ["path", { d: "m17.5 15.5 2-2", key: "wo5hmg" }]
];
var Ruler = createLucideIcon("ruler", __iconNode1219);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/russian-ruble.js
var __iconNode1220 = [
  ["path", { d: "M6 11h8a4 4 0 0 0 0-8H9v18", key: "18ai8t" }],
  ["path", { d: "M6 15h8", key: "1y8f6l" }]
];
var RussianRuble = createLucideIcon("russian-ruble", __iconNode1220);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sailboat.js
var __iconNode1221 = [
  ["path", { d: "M10 2v15", key: "1qf71f" }],
  [
    "path",
    { d: "M7 22a4 4 0 0 1-4-4 1 1 0 0 1 1-1h16a1 1 0 0 1 1 1 4 4 0 0 1-4 4z", key: "1pxcvx" }
  ],
  [
    "path",
    {
      d: "M9.159 2.46a1 1 0 0 1 1.521-.193l9.977 8.98A1 1 0 0 1 20 13H4a1 1 0 0 1-.824-1.567z",
      key: "5oog16"
    }
  ]
];
var Sailboat = createLucideIcon("sailboat", __iconNode1221);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/salad.js
var __iconNode1222 = [
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z", key: "4rw317" }],
  [
    "path",
    {
      d: "M11.38 12a2.4 2.4 0 0 1-.4-4.77 2.4 2.4 0 0 1 3.2-2.77 2.4 2.4 0 0 1 3.47-.63 2.4 2.4 0 0 1 3.37 3.37 2.4 2.4 0 0 1-1.1 3.7 2.51 2.51 0 0 1 .03 1.1",
      key: "10xrj0"
    }
  ],
  ["path", { d: "m13 12 4-4", key: "1hckqy" }],
  ["path", { d: "M10.9 7.25A3.99 3.99 0 0 0 4 10c0 .73.2 1.41.54 2", key: "1p4srx" }]
];
var Salad = createLucideIcon("salad", __iconNode1222);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sandwich.js
var __iconNode1223 = [
  ["path", { d: "m2.37 11.223 8.372-6.777a2 2 0 0 1 2.516 0l8.371 6.777", key: "f1wd0e" }],
  ["path", { d: "M21 15a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5.25", key: "1pfu07" }],
  ["path", { d: "M3 15a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h9", key: "1oq9qw" }],
  ["path", { d: "m6.67 15 6.13 4.6a2 2 0 0 0 2.8-.4l3.15-4.2", key: "1fnwu5" }],
  ["rect", { width: "20", height: "4", x: "2", y: "11", rx: "1", key: "itshg" }]
];
var Sandwich = createLucideIcon("sandwich", __iconNode1223);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/satellite-dish.js
var __iconNode1224 = [
  ["path", { d: "M4 10a7.31 7.31 0 0 0 10 10Z", key: "1fzpp3" }],
  ["path", { d: "m9 15 3-3", key: "88sc13" }],
  ["path", { d: "M17 13a6 6 0 0 0-6-6", key: "15cc6u" }],
  ["path", { d: "M21 13A10 10 0 0 0 11 3", key: "11nf8s" }]
];
var SatelliteDish = createLucideIcon("satellite-dish", __iconNode1224);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/satellite.js
var __iconNode1225 = [
  [
    "path",
    {
      d: "m13.5 6.5-3.148-3.148a1.205 1.205 0 0 0-1.704 0L6.352 5.648a1.205 1.205 0 0 0 0 1.704L9.5 10.5",
      key: "dzhfyz"
    }
  ],
  ["path", { d: "M16.5 7.5 19 5", key: "1ltcjm" }],
  [
    "path",
    {
      d: "m17.5 10.5 3.148 3.148a1.205 1.205 0 0 1 0 1.704l-2.296 2.296a1.205 1.205 0 0 1-1.704 0L13.5 14.5",
      key: "nfoymv"
    }
  ],
  ["path", { d: "M9 21a6 6 0 0 0-6-6", key: "1iajcf" }],
  [
    "path",
    {
      d: "M9.352 10.648a1.205 1.205 0 0 0 0 1.704l2.296 2.296a1.205 1.205 0 0 0 1.704 0l4.296-4.296a1.205 1.205 0 0 0 0-1.704l-2.296-2.296a1.205 1.205 0 0 0-1.704 0z",
      key: "nv9zqy"
    }
  ]
];
var Satellite = createLucideIcon("satellite", __iconNode1225);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/saudi-riyal.js
var __iconNode1226 = [
  ["path", { d: "m20 19.5-5.5 1.2", key: "1aenhr" }],
  ["path", { d: "M14.5 4v11.22a1 1 0 0 0 1.242.97L20 15.2", key: "2rtezt" }],
  ["path", { d: "m2.978 19.351 5.549-1.363A2 2 0 0 0 10 16V2", key: "1kbm92" }],
  ["path", { d: "M20 10 4 13.5", key: "8nums9" }]
];
var SaudiRiyal = createLucideIcon("saudi-riyal", __iconNode1226);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/save-all.js
var __iconNode1227 = [
  ["path", { d: "M10 2v3a1 1 0 0 0 1 1h5", key: "1xspal" }],
  ["path", { d: "M18 18v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6", key: "1ra60u" }],
  ["path", { d: "M18 22H4a2 2 0 0 1-2-2V6", key: "pblm9e" }],
  [
    "path",
    {
      d: "M8 18a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9.172a2 2 0 0 1 1.414.586l2.828 2.828A2 2 0 0 1 22 6.828V16a2 2 0 0 1-2.01 2z",
      key: "1yve0x"
    }
  ]
];
var SaveAll = createLucideIcon("save-all", __iconNode1227);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/save-off.js
var __iconNode1228 = [
  ["path", { d: "M13 13H8a1 1 0 0 0-1 1v7", key: "h8g396" }],
  ["path", { d: "M14 8h1", key: "1lfen6" }],
  ["path", { d: "M17 21v-4", key: "1yknxs" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    { d: "M20.41 20.41A2 2 0 0 1 19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 .59-1.41", key: "1t4vdl" }
  ],
  ["path", { d: "M29.5 11.5s5 5 4 5", key: "zzn4i6" }],
  ["path", { d: "M9 3h6.2a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V15", key: "24cby9" }]
];
var SaveOff = createLucideIcon("save-off", __iconNode1228);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/save.js
var __iconNode1229 = [
  [
    "path",
    {
      d: "M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z",
      key: "1c8476"
    }
  ],
  ["path", { d: "M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7", key: "1ydtos" }],
  ["path", { d: "M7 3v4a1 1 0 0 0 1 1h7", key: "t51u73" }]
];
var Save = createLucideIcon("save", __iconNode1229);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scale-3d.js
var __iconNode1230 = [
  ["path", { d: "M5 7v11a1 1 0 0 0 1 1h11", key: "13dt1j" }],
  ["path", { d: "M5.293 18.707 11 13", key: "ezgbsx" }],
  ["circle", { cx: "19", cy: "19", r: "2", key: "17f5cg" }],
  ["circle", { cx: "5", cy: "5", r: "2", key: "1gwv83" }]
];
var Scale3d = createLucideIcon("scale-3d", __iconNode1230);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scale.js
var __iconNode1231 = [
  ["path", { d: "m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z", key: "7g6ntu" }],
  ["path", { d: "m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z", key: "ijws7r" }],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2", key: "3gwbw2" }]
];
var Scale = createLucideIcon("scale", __iconNode1231);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scaling.js
var __iconNode1232 = [
  ["path", { d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7", key: "1m0v6g" }],
  ["path", { d: "M14 15H9v-5", key: "pi4jk9" }],
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M21 3 9 15", key: "15kdhq" }]
];
var Scaling = createLucideIcon("scaling", __iconNode1232);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-barcode.js
var __iconNode1233 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M8 7v10", key: "23sfjj" }],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M17 7v10", key: "578dap" }]
];
var ScanBarcode = createLucideIcon("scan-barcode", __iconNode1233);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-eye.js
var __iconNode1234 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0",
      key: "11ak4c"
    }
  ]
];
var ScanEye = createLucideIcon("scan-eye", __iconNode1234);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-face.js
var __iconNode1235 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }]
];
var ScanFace = createLucideIcon("scan-face", __iconNode1235);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-heart.js
var __iconNode1236 = [
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  [
    "path",
    {
      d: "M7.828 13.07A3 3 0 0 1 12 8.764a3 3 0 0 1 4.172 4.306l-3.447 3.62a1 1 0 0 1-1.449 0z",
      key: "1ak1ef"
    }
  ]
];
var ScanHeart = createLucideIcon("scan-heart", __iconNode1236);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-line.js
var __iconNode1237 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }]
];
var ScanLine = createLucideIcon("scan-line", __iconNode1237);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-qr-code.js
var __iconNode1238 = [
  ["path", { d: "M17 12v4a1 1 0 0 1-1 1h-4", key: "uk4fdo" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M17 8V7", key: "q2g9wo" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M7 17h.01", key: "19xn7k" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["rect", { x: "7", y: "7", width: "5", height: "5", rx: "1", key: "m9kyts" }]
];
var ScanQrCode = createLucideIcon("scan-qr-code", __iconNode1238);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-search.js
var __iconNode1239 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "m16 16-1.9-1.9", key: "1dq9hf" }]
];
var ScanSearch = createLucideIcon("scan-search", __iconNode1239);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan-text.js
var __iconNode1240 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }],
  ["path", { d: "M7 8h8", key: "1jbsf9" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M7 16h6", key: "1vyc9m" }]
];
var ScanText = createLucideIcon("scan-text", __iconNode1240);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scan.js
var __iconNode1241 = [
  ["path", { d: "M3 7V5a2 2 0 0 1 2-2h2", key: "aa7l1z" }],
  ["path", { d: "M17 3h2a2 2 0 0 1 2 2v2", key: "4qcy5o" }],
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2h-2", key: "6vwrx8" }],
  ["path", { d: "M7 21H5a2 2 0 0 1-2-2v-2", key: "ioqczr" }]
];
var Scan = createLucideIcon("scan", __iconNode1241);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/school.js
var __iconNode1242 = [
  ["path", { d: "M14 21v-3a2 2 0 0 0-4 0v3", key: "1rgiei" }],
  ["path", { d: "M18 5v16", key: "1ethyx" }],
  ["path", { d: "m4 6 7.106-3.79a2 2 0 0 1 1.788 0L20 6", key: "zywc2d" }],
  [
    "path",
    {
      d: "m6 11-3.52 2.147a1 1 0 0 0-.48.854V19a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a1 1 0 0 0-.48-.853L18 11",
      key: "1d4ql0"
    }
  ],
  ["path", { d: "M6 5v16", key: "1sn0nx" }],
  ["circle", { cx: "12", cy: "9", r: "2", key: "1092wv" }]
];
var School = createLucideIcon("school", __iconNode1242);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scissors-line-dashed.js
var __iconNode1243 = [
  ["path", { d: "M5.42 9.42 8 12", key: "12pkuq" }],
  ["circle", { cx: "4", cy: "8", r: "2", key: "107mxr" }],
  ["path", { d: "m14 6-8.58 8.58", key: "gvzu5l" }],
  ["circle", { cx: "4", cy: "16", r: "2", key: "1ehqvc" }],
  ["path", { d: "M10.8 14.8 14 18", key: "ax7m9r" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }]
];
var ScissorsLineDashed = createLucideIcon("scissors-line-dashed", __iconNode1243);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scissors.js
var __iconNode1244 = [
  ["circle", { cx: "6", cy: "6", r: "3", key: "1lh9wr" }],
  ["path", { d: "M8.12 8.12 12 12", key: "1alkpv" }],
  ["path", { d: "M20 4 8.12 15.88", key: "xgtan2" }],
  ["circle", { cx: "6", cy: "18", r: "3", key: "fqmcym" }],
  ["path", { d: "M14.8 14.8 20 20", key: "ptml3r" }]
];
var Scissors = createLucideIcon("scissors", __iconNode1244);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/screen-share-off.js
var __iconNode1245 = [
  ["path", { d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3", key: "i8wdob" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m22 3-5 5", key: "12jva0" }],
  ["path", { d: "m17 3 5 5", key: "k36vhe" }]
];
var ScreenShareOff = createLucideIcon("screen-share-off", __iconNode1245);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/screen-share.js
var __iconNode1246 = [
  ["path", { d: "M13 3H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-3", key: "i8wdob" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "m17 8 5-5", key: "fqif7o" }],
  ["path", { d: "M17 3h5v5", key: "1o3tu8" }]
];
var ScreenShare = createLucideIcon("screen-share", __iconNode1246);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scroll.js
var __iconNode1247 = [
  ["path", { d: "M19 17V5a2 2 0 0 0-2-2H4", key: "zz82l3" }],
  [
    "path",
    {
      d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3",
      key: "1ph1d7"
    }
  ]
];
var Scroll = createLucideIcon("scroll", __iconNode1247);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/scroll-text.js
var __iconNode1248 = [
  ["path", { d: "M15 12h-5", key: "r7krc0" }],
  ["path", { d: "M15 8h-5", key: "1khuty" }],
  ["path", { d: "M19 17V5a2 2 0 0 0-2-2H4", key: "zz82l3" }],
  [
    "path",
    {
      d: "M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3",
      key: "1ph1d7"
    }
  ]
];
var ScrollText = createLucideIcon("scroll-text", __iconNode1248);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/search-check.js
var __iconNode1249 = [
  ["path", { d: "m8 11 2 2 4-4", key: "1sed1v" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
];
var SearchCheck = createLucideIcon("search-check", __iconNode1249);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/search-code.js
var __iconNode1250 = [
  ["path", { d: "m13 13.5 2-2.5-2-2.5", key: "1rvxrh" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }],
  ["path", { d: "M9 8.5 7 11l2 2.5", key: "6ffwbx" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }]
];
var SearchCode = createLucideIcon("search-code", __iconNode1250);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/search-slash.js
var __iconNode1251 = [
  ["path", { d: "m13.5 8.5-5 5", key: "1cs55j" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
];
var SearchSlash = createLucideIcon("search-slash", __iconNode1251);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/search-x.js
var __iconNode1252 = [
  ["path", { d: "m13.5 8.5-5 5", key: "1cs55j" }],
  ["path", { d: "m8.5 8.5 5 5", key: "a8mexj" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["path", { d: "m21 21-4.3-4.3", key: "1qie3q" }]
];
var SearchX = createLucideIcon("search-x", __iconNode1252);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/search.js
var __iconNode1253 = [
  ["path", { d: "m21 21-4.34-4.34", key: "14j7rj" }],
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }]
];
var Search = createLucideIcon("search", __iconNode1253);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/section.js
var __iconNode1254 = [
  ["path", { d: "M16 5a4 3 0 0 0-8 0c0 4 8 3 8 7a4 3 0 0 1-8 0", key: "vqan6v" }],
  ["path", { d: "M8 19a4 3 0 0 0 8 0c0-4-8-3-8-7a4 3 0 0 1 8 0", key: "wdjd8o" }]
];
var Section = createLucideIcon("section", __iconNode1254);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/send-horizontal.js
var __iconNode1255 = [
  [
    "path",
    {
      d: "M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904z",
      key: "117uat"
    }
  ],
  ["path", { d: "M6 12h16", key: "s4cdu5" }]
];
var SendHorizontal = createLucideIcon("send-horizontal", __iconNode1255);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/send-to-back.js
var __iconNode1256 = [
  ["rect", { x: "14", y: "14", width: "8", height: "8", rx: "2", key: "1b0bso" }],
  ["rect", { x: "2", y: "2", width: "8", height: "8", rx: "2", key: "1x09vl" }],
  ["path", { d: "M7 14v1a2 2 0 0 0 2 2h1", key: "pao6x6" }],
  ["path", { d: "M14 7h1a2 2 0 0 1 2 2v1", key: "19tdru" }]
];
var SendToBack = createLucideIcon("send-to-back", __iconNode1256);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/send.js
var __iconNode1257 = [
  [
    "path",
    {
      d: "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z",
      key: "1ffxy3"
    }
  ],
  ["path", { d: "m21.854 2.147-10.94 10.939", key: "12cjpa" }]
];
var Send = createLucideIcon("send", __iconNode1257);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/separator-horizontal.js
var __iconNode1258 = [
  ["path", { d: "m16 16-4 4-4-4", key: "3dv8je" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "m8 8 4-4 4 4", key: "2bscm2" }]
];
var SeparatorHorizontal = createLucideIcon("separator-horizontal", __iconNode1258);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/separator-vertical.js
var __iconNode1259 = [
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["path", { d: "m16 16 4-4-4-4", key: "1js579" }],
  ["path", { d: "m8 8-4 4 4 4", key: "1whems" }]
];
var SeparatorVertical = createLucideIcon("separator-vertical", __iconNode1259);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/server-cog.js
var __iconNode1260 = [
  ["path", { d: "m10.852 14.772-.383.923", key: "11vil6" }],
  ["path", { d: "M13.148 14.772a3 3 0 1 0-2.296-5.544l-.383-.923", key: "1v3clb" }],
  ["path", { d: "m13.148 9.228.383-.923", key: "t2zzyc" }],
  ["path", { d: "m13.53 15.696-.382-.924a3 3 0 1 1-2.296-5.544", key: "1bxfiv" }],
  ["path", { d: "m14.772 10.852.923-.383", key: "k9m8cz" }],
  ["path", { d: "m14.772 13.148.923.383", key: "1xvhww" }],
  [
    "path",
    {
      d: "M4.5 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-.5",
      key: "tn8das"
    }
  ],
  [
    "path",
    {
      d: "M4.5 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-.5",
      key: "1g2pve"
    }
  ],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "M6 6h.01", key: "1utrut" }],
  ["path", { d: "m9.228 10.852-.923-.383", key: "1wtb30" }],
  ["path", { d: "m9.228 13.148-.923.383", key: "1a830x" }]
];
var ServerCog = createLucideIcon("server-cog", __iconNode1260);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/server-crash.js
var __iconNode1261 = [
  [
    "path",
    {
      d: "M6 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-2",
      key: "4b9dqc"
    }
  ],
  [
    "path",
    {
      d: "M6 14H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-2",
      key: "22nnkd"
    }
  ],
  ["path", { d: "M6 6h.01", key: "1utrut" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "m13 6-4 6h6l-4 6", key: "14hqih" }]
];
var ServerCrash = createLucideIcon("server-crash", __iconNode1261);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/server-off.js
var __iconNode1262 = [
  ["path", { d: "M7 2h13a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-5", key: "bt2siv" }],
  ["path", { d: "M10 10 2.5 2.5C2 2 2 2.5 2 5v3a2 2 0 0 0 2 2h6z", key: "1hjrv1" }],
  ["path", { d: "M22 17v-1a2 2 0 0 0-2-2h-1", key: "1iynyr" }],
  ["path", { d: "M4 14a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h16.5l1-.5.5.5-8-8H4z", key: "161ggg" }],
  ["path", { d: "M6 18h.01", key: "uhywen" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var ServerOff = createLucideIcon("server-off", __iconNode1262);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/server.js
var __iconNode1263 = [
  ["rect", { width: "20", height: "8", x: "2", y: "2", rx: "2", ry: "2", key: "ngkwjq" }],
  ["rect", { width: "20", height: "8", x: "2", y: "14", rx: "2", ry: "2", key: "iecqi9" }],
  ["line", { x1: "6", x2: "6.01", y1: "6", y2: "6", key: "16zg32" }],
  ["line", { x1: "6", x2: "6.01", y1: "18", y2: "18", key: "nzw8ys" }]
];
var Server = createLucideIcon("server", __iconNode1263);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/settings-2.js
var __iconNode1264 = [
  ["path", { d: "M14 17H5", key: "gfn3mx" }],
  ["path", { d: "M19 7h-9", key: "6i9tg" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }],
  ["circle", { cx: "7", cy: "7", r: "3", key: "dfmy0x" }]
];
var Settings2 = createLucideIcon("settings-2", __iconNode1264);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/settings.js
var __iconNode1265 = [
  [
    "path",
    {
      d: "M9.671 4.136a2.34 2.34 0 0 1 4.659 0 2.34 2.34 0 0 0 3.319 1.915 2.34 2.34 0 0 1 2.33 4.033 2.34 2.34 0 0 0 0 3.831 2.34 2.34 0 0 1-2.33 4.033 2.34 2.34 0 0 0-3.319 1.915 2.34 2.34 0 0 1-4.659 0 2.34 2.34 0 0 0-3.32-1.915 2.34 2.34 0 0 1-2.33-4.033 2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915",
      key: "1i5ecw"
    }
  ],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }]
];
var Settings = createLucideIcon("settings", __iconNode1265);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shapes.js
var __iconNode1266 = [
  [
    "path",
    {
      d: "M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z",
      key: "1bo67w"
    }
  ],
  ["rect", { x: "3", y: "14", width: "7", height: "7", rx: "1", key: "1bkyp8" }],
  ["circle", { cx: "17.5", cy: "17.5", r: "3.5", key: "w3z12y" }]
];
var Shapes = createLucideIcon("shapes", __iconNode1266);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/share-2.js
var __iconNode1267 = [
  ["circle", { cx: "18", cy: "5", r: "3", key: "gq8acd" }],
  ["circle", { cx: "6", cy: "12", r: "3", key: "w7nqdw" }],
  ["circle", { cx: "18", cy: "19", r: "3", key: "1xt0gg" }],
  ["line", { x1: "8.59", x2: "15.42", y1: "13.51", y2: "17.49", key: "47mynk" }],
  ["line", { x1: "15.41", x2: "8.59", y1: "6.51", y2: "10.49", key: "1n3mei" }]
];
var Share2 = createLucideIcon("share-2", __iconNode1267);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/share.js
var __iconNode1268 = [
  ["path", { d: "M12 2v13", key: "1km8f5" }],
  ["path", { d: "m16 6-4-4-4 4", key: "13yo43" }],
  ["path", { d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8", key: "1b2hhj" }]
];
var Share = createLucideIcon("share", __iconNode1268);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sheet.js
var __iconNode1269 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["line", { x1: "3", x2: "21", y1: "9", y2: "9", key: "1vqk6q" }],
  ["line", { x1: "3", x2: "21", y1: "15", y2: "15", key: "o2sbyz" }],
  ["line", { x1: "9", x2: "9", y1: "9", y2: "21", key: "1ib60c" }],
  ["line", { x1: "15", x2: "15", y1: "9", y2: "21", key: "1n26ft" }]
];
var Sheet = createLucideIcon("sheet", __iconNode1269);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shell.js
var __iconNode1270 = [
  [
    "path",
    {
      d: "M14 11a2 2 0 1 1-4 0 4 4 0 0 1 8 0 6 6 0 0 1-12 0 8 8 0 0 1 16 0 10 10 0 1 1-20 0 11.93 11.93 0 0 1 2.42-7.22 2 2 0 1 1 3.16 2.44",
      key: "1cn552"
    }
  ]
];
var Shell = createLucideIcon("shell", __iconNode1270);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-alert.js
var __iconNode1271 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M12 8v4", key: "1got3b" }],
  ["path", { d: "M12 16h.01", key: "1drbdi" }]
];
var ShieldAlert = createLucideIcon("shield-alert", __iconNode1271);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-ban.js
var __iconNode1272 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m4.243 5.21 14.39 12.472", key: "1c9a7c" }]
];
var ShieldBan = createLucideIcon("shield-ban", __iconNode1272);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-check.js
var __iconNode1273 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
];
var ShieldCheck = createLucideIcon("shield-check", __iconNode1273);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-half.js
var __iconNode1274 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M12 22V2", key: "zs6s6o" }]
];
var ShieldHalf = createLucideIcon("shield-half", __iconNode1274);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-ellipsis.js
var __iconNode1275 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M8 12h.01", key: "czm47f" }],
  ["path", { d: "M12 12h.01", key: "1mp3jc" }],
  ["path", { d: "M16 12h.01", key: "1l6xoz" }]
];
var ShieldEllipsis = createLucideIcon("shield-ellipsis", __iconNode1275);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-minus.js
var __iconNode1276 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }]
];
var ShieldMinus = createLucideIcon("shield-minus", __iconNode1276);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-off.js
var __iconNode1277 = [
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "M5 5a1 1 0 0 0-1 1v7c0 5 3.5 7.5 7.67 8.94a1 1 0 0 0 .67.01c2.35-.82 4.48-1.97 5.9-3.71",
      key: "1jlk70"
    }
  ],
  [
    "path",
    {
      d: "M9.309 3.652A12.252 12.252 0 0 0 11.24 2.28a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1v7a9.784 9.784 0 0 1-.08 1.264",
      key: "18rp1v"
    }
  ]
];
var ShieldOff = createLucideIcon("shield-off", __iconNode1277);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-plus.js
var __iconNode1278 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M12 9v6", key: "199k2o" }]
];
var ShieldPlus = createLucideIcon("shield-plus", __iconNode1278);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-question-mark.js
var __iconNode1279 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M9.1 9a3 3 0 0 1 5.82 1c0 2-3 3-3 3", key: "mhlwft" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
];
var ShieldQuestionMark = createLucideIcon("shield-question-mark", __iconNode1279);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-user.js
var __iconNode1280 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "M6.376 18.91a6 6 0 0 1 11.249.003", key: "hnjrf2" }],
  ["circle", { cx: "12", cy: "11", r: "4", key: "1gt34v" }]
];
var ShieldUser = createLucideIcon("shield-user", __iconNode1280);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield-x.js
var __iconNode1281 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ],
  ["path", { d: "m14.5 9.5-5 5", key: "17q4r4" }],
  ["path", { d: "m9.5 9.5 5 5", key: "18nt4w" }]
];
var ShieldX = createLucideIcon("shield-x", __iconNode1281);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shield.js
var __iconNode1282 = [
  [
    "path",
    {
      d: "M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",
      key: "oel41y"
    }
  ]
];
var Shield = createLucideIcon("shield", __iconNode1282);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ship.js
var __iconNode1283 = [
  ["path", { d: "M12 10.189V14", key: "1p8cqu" }],
  ["path", { d: "M12 2v3", key: "qbqxhf" }],
  ["path", { d: "M19 13V7a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2v6", key: "qpkstq" }],
  [
    "path",
    {
      d: "M19.38 20A11.6 11.6 0 0 0 21 14l-8.188-3.639a2 2 0 0 0-1.624 0L3 14a11.6 11.6 0 0 0 2.81 7.76",
      key: "7tigtc"
    }
  ],
  [
    "path",
    {
      d: "M2 21c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1s1.2 1 2.5 1c2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "1924j5"
    }
  ]
];
var Ship = createLucideIcon("ship", __iconNode1283);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ship-wheel.js
var __iconNode1284 = [
  ["circle", { cx: "12", cy: "12", r: "8", key: "46899m" }],
  ["path", { d: "M12 2v7.5", key: "1e5rl5" }],
  ["path", { d: "m19 5-5.23 5.23", key: "1ezxxf" }],
  ["path", { d: "M22 12h-7.5", key: "le1719" }],
  ["path", { d: "m19 19-5.23-5.23", key: "p3fmgn" }],
  ["path", { d: "M12 14.5V22", key: "dgcmos" }],
  ["path", { d: "M10.23 13.77 5 19", key: "qwopd4" }],
  ["path", { d: "M9.5 12H2", key: "r7bup8" }],
  ["path", { d: "M10.23 10.23 5 5", key: "k2y7lj" }],
  ["circle", { cx: "12", cy: "12", r: "2.5", key: "ix0uyj" }]
];
var ShipWheel = createLucideIcon("ship-wheel", __iconNode1284);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shirt.js
var __iconNode1285 = [
  [
    "path",
    {
      d: "M20.38 3.46 16 2a4 4 0 0 1-8 0L3.62 3.46a2 2 0 0 0-1.34 2.23l.58 3.47a1 1 0 0 0 .99.84H6v10c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V10h2.15a1 1 0 0 0 .99-.84l.58-3.47a2 2 0 0 0-1.34-2.23z",
      key: "1wgbhj"
    }
  ]
];
var Shirt = createLucideIcon("shirt", __iconNode1285);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shopping-bag.js
var __iconNode1286 = [
  ["path", { d: "M16 10a4 4 0 0 1-8 0", key: "1ltviw" }],
  ["path", { d: "M3.103 6.034h17.794", key: "awc11p" }],
  [
    "path",
    {
      d: "M3.4 5.467a2 2 0 0 0-.4 1.2V20a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6.667a2 2 0 0 0-.4-1.2l-2-2.667A2 2 0 0 0 17 2H7a2 2 0 0 0-1.6.8z",
      key: "o988cm"
    }
  ]
];
var ShoppingBag = createLucideIcon("shopping-bag", __iconNode1286);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shopping-basket.js
var __iconNode1287 = [
  ["path", { d: "m15 11-1 9", key: "5wnq3a" }],
  ["path", { d: "m19 11-4-7", key: "cnml18" }],
  ["path", { d: "M2 11h20", key: "3eubbj" }],
  ["path", { d: "m3.5 11 1.6 7.4a2 2 0 0 0 2 1.6h9.8a2 2 0 0 0 2-1.6l1.7-7.4", key: "yiazzp" }],
  ["path", { d: "M4.5 15.5h15", key: "13mye1" }],
  ["path", { d: "m5 11 4-7", key: "116ra9" }],
  ["path", { d: "m9 11 1 9", key: "1ojof7" }]
];
var ShoppingBasket = createLucideIcon("shopping-basket", __iconNode1287);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shopping-cart.js
var __iconNode1288 = [
  ["circle", { cx: "8", cy: "21", r: "1", key: "jimo8o" }],
  ["circle", { cx: "19", cy: "21", r: "1", key: "13723u" }],
  [
    "path",
    {
      d: "M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12",
      key: "9zh506"
    }
  ]
];
var ShoppingCart = createLucideIcon("shopping-cart", __iconNode1288);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shovel.js
var __iconNode1289 = [
  [
    "path",
    {
      d: "M21.56 4.56a1.5 1.5 0 0 1 0 2.122l-.47.47a3 3 0 0 1-4.212-.03 3 3 0 0 1 0-4.243l.44-.44a1.5 1.5 0 0 1 2.121 0z",
      key: "1gcedi"
    }
  ],
  [
    "path",
    {
      d: "M3 22a1 1 0 0 1-1-1v-3.586a1 1 0 0 1 .293-.707l3.355-3.355a1.205 1.205 0 0 1 1.704 0l3.296 3.296a1.205 1.205 0 0 1 0 1.704l-3.355 3.355a1 1 0 0 1-.707.293z",
      key: "pg9kv3"
    }
  ],
  ["path", { d: "m9 15 7.879-7.878", key: "1o1zgh" }]
];
var Shovel = createLucideIcon("shovel", __iconNode1289);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shower-head.js
var __iconNode1290 = [
  ["path", { d: "m4 4 2.5 2.5", key: "uv2vmf" }],
  ["path", { d: "M13.5 6.5a4.95 4.95 0 0 0-7 7", key: "frdkwv" }],
  ["path", { d: "M15 5 5 15", key: "1ag8rq" }],
  ["path", { d: "M14 17v.01", key: "eokfpp" }],
  ["path", { d: "M10 16v.01", key: "14uyyl" }],
  ["path", { d: "M13 13v.01", key: "1v1k97" }],
  ["path", { d: "M16 10v.01", key: "5169yg" }],
  ["path", { d: "M11 20v.01", key: "cj92p8" }],
  ["path", { d: "M17 14v.01", key: "11cswd" }],
  ["path", { d: "M20 11v.01", key: "19e0od" }]
];
var ShowerHead = createLucideIcon("shower-head", __iconNode1290);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shredder.js
var __iconNode1291 = [
  ["path", { d: "M10 22v-5", key: "sfixh4" }],
  ["path", { d: "M14 19v-2", key: "pdve8j" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M18 20v-3", key: "uox2gk" }],
  ["path", { d: "M2 13h20", key: "5evz65" }],
  ["path", { d: "M20 13V7l-5-5H6a2 2 0 0 0-2 2v9", key: "1rnpe2" }],
  ["path", { d: "M6 20v-3", key: "c6pdcb" }]
];
var Shredder = createLucideIcon("shredder", __iconNode1291);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shrimp.js
var __iconNode1292 = [
  ["path", { d: "M11 12h.01", key: "1lr4k6" }],
  ["path", { d: "M13 22c.5-.5 1.12-1 2.5-1-1.38 0-2-.5-2.5-1", key: "fatpdi" }],
  [
    "path",
    {
      d: "M14 2a3.28 3.28 0 0 1-3.227 1.798l-6.17-.561A2.387 2.387 0 1 0 4.387 8H15.5a1 1 0 0 1 0 13 1 1 0 0 0 0-5H12a7 7 0 0 1-7-7V8",
      key: "kehrqe"
    }
  ],
  ["path", { d: "M14 8a8.5 8.5 0 0 1 0 8", key: "1imjx2" }],
  ["path", { d: "M16 16c2 0 4.5-4 4-6", key: "z0nejz" }]
];
var Shrimp = createLucideIcon("shrimp", __iconNode1292);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shrink.js
var __iconNode1293 = [
  ["path", { d: "m15 15 6 6m-6-6v4.8m0-4.8h4.8", key: "17vawe" }],
  ["path", { d: "M9 19.8V15m0 0H4.2M9 15l-6 6", key: "chjx8e" }],
  ["path", { d: "M15 4.2V9m0 0h4.8M15 9l6-6", key: "lav6yq" }],
  ["path", { d: "M9 4.2V9m0 0H4.2M9 9 3 3", key: "1pxi2q" }]
];
var Shrink = createLucideIcon("shrink", __iconNode1293);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shrub.js
var __iconNode1294 = [
  ["path", { d: "M12 22v-5.172a2 2 0 0 0-.586-1.414L9.5 13.5", key: "1p17fm" }],
  ["path", { d: "M14.5 14.5 12 17", key: "dy5w4y" }],
  ["path", { d: "M17 8.8A6 6 0 0 1 13.8 20H10A6.5 6.5 0 0 1 7 8a5 5 0 0 1 10 0z", key: "6z7b3o" }]
];
var Shrub = createLucideIcon("shrub", __iconNode1294);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/shuffle.js
var __iconNode1295 = [
  ["path", { d: "m18 14 4 4-4 4", key: "10pe0f" }],
  ["path", { d: "m18 2 4 4-4 4", key: "pucp1d" }],
  ["path", { d: "M2 18h1.973a4 4 0 0 0 3.3-1.7l5.454-8.6a4 4 0 0 1 3.3-1.7H22", key: "1ailkh" }],
  ["path", { d: "M2 6h1.972a4 4 0 0 1 3.6 2.2", key: "km57vx" }],
  ["path", { d: "M22 18h-6.041a4 4 0 0 1-3.3-1.8l-.359-.45", key: "os18l9" }]
];
var Shuffle = createLucideIcon("shuffle", __iconNode1295);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sigma.js
var __iconNode1296 = [
  [
    "path",
    {
      d: "M18 7V5a1 1 0 0 0-1-1H6.5a.5.5 0 0 0-.4.8l4.5 6a2 2 0 0 1 0 2.4l-4.5 6a.5.5 0 0 0 .4.8H17a1 1 0 0 0 1-1v-2",
      key: "wuwx1p"
    }
  ]
];
var Sigma = createLucideIcon("sigma", __iconNode1296);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signal-high.js
var __iconNode1297 = [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M17 20V8", key: "1tkaf5" }]
];
var SignalHigh = createLucideIcon("signal-high", __iconNode1297);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signal-low.js
var __iconNode1298 = [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }]
];
var SignalLow = createLucideIcon("signal-low", __iconNode1298);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signal-medium.js
var __iconNode1299 = [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }]
];
var SignalMedium = createLucideIcon("signal-medium", __iconNode1299);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signal-zero.js
var __iconNode1300 = [["path", { d: "M2 20h.01", key: "4haj6o" }]];
var SignalZero = createLucideIcon("signal-zero", __iconNode1300);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signal.js
var __iconNode1301 = [
  ["path", { d: "M2 20h.01", key: "4haj6o" }],
  ["path", { d: "M7 20v-4", key: "j294jx" }],
  ["path", { d: "M12 20v-8", key: "i3yub9" }],
  ["path", { d: "M17 20V8", key: "1tkaf5" }],
  ["path", { d: "M22 4v16", key: "sih9yq" }]
];
var Signal = createLucideIcon("signal", __iconNode1301);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signature.js
var __iconNode1302 = [
  [
    "path",
    {
      d: "m21 17-2.156-1.868A.5.5 0 0 0 18 15.5v.5a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1c0-2.545-3.991-3.97-8.5-4a1 1 0 0 0 0 5c4.153 0 4.745-11.295 5.708-13.5a2.5 2.5 0 1 1 3.31 3.284",
      key: "y32ogt"
    }
  ],
  ["path", { d: "M3 21h18", key: "itz85i" }]
];
var Signature = createLucideIcon("signature", __iconNode1302);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signpost.js
var __iconNode1303 = [
  ["path", { d: "M12 13v8", key: "1l5pq0" }],
  ["path", { d: "M12 3v3", key: "1n5kay" }],
  [
    "path",
    {
      d: "M18 6a2 2 0 0 1 1.387.56l2.307 2.22a1 1 0 0 1 0 1.44l-2.307 2.22A2 2 0 0 1 18 13H6a2 2 0 0 1-1.387-.56l-2.306-2.22a1 1 0 0 1 0-1.44l2.306-2.22A2 2 0 0 1 6 6z",
      key: "gqqp9m"
    }
  ]
];
var Signpost = createLucideIcon("signpost", __iconNode1303);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/signpost-big.js
var __iconNode1304 = [
  ["path", { d: "M10 9H4L2 7l2-2h6", key: "1hq7x2" }],
  ["path", { d: "M14 5h6l2 2-2 2h-6", key: "bv62ej" }],
  ["path", { d: "M10 22V4a2 2 0 1 1 4 0v18", key: "eqpcf2" }],
  ["path", { d: "M8 22h8", key: "rmew8v" }]
];
var SignpostBig = createLucideIcon("signpost-big", __iconNode1304);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/siren.js
var __iconNode1305 = [
  ["path", { d: "M7 18v-6a5 5 0 1 1 10 0v6", key: "pcx96s" }],
  [
    "path",
    { d: "M5 21a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a2 2 0 0 0-2-2H7a2 2 0 0 0-2 2z", key: "1b4s83" }
  ],
  ["path", { d: "M21 12h1", key: "jtio3y" }],
  ["path", { d: "M18.5 4.5 18 5", key: "g5sp9y" }],
  ["path", { d: "M2 12h1", key: "1uaihz" }],
  ["path", { d: "M12 2v1", key: "11qlp1" }],
  ["path", { d: "m4.929 4.929.707.707", key: "1i51kw" }],
  ["path", { d: "M12 12v6", key: "3ahymv" }]
];
var Siren = createLucideIcon("siren", __iconNode1305);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/skip-back.js
var __iconNode1306 = [
  [
    "path",
    {
      d: "M17.971 4.285A2 2 0 0 1 21 6v12a2 2 0 0 1-3.029 1.715l-9.997-5.998a2 2 0 0 1-.003-3.432z",
      key: "15892j"
    }
  ],
  ["path", { d: "M3 20V4", key: "1ptbpl" }]
];
var SkipBack = createLucideIcon("skip-back", __iconNode1306);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/skip-forward.js
var __iconNode1307 = [
  ["path", { d: "M21 4v16", key: "7j8fe9" }],
  [
    "path",
    {
      d: "M6.029 4.285A2 2 0 0 0 3 6v12a2 2 0 0 0 3.029 1.715l9.997-5.998a2 2 0 0 0 .003-3.432z",
      key: "zs4d6"
    }
  ]
];
var SkipForward = createLucideIcon("skip-forward", __iconNode1307);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/skull.js
var __iconNode1308 = [
  ["path", { d: "m12.5 17-.5-1-.5 1h1z", key: "3me087" }],
  [
    "path",
    {
      d: "M15 22a1 1 0 0 0 1-1v-1a2 2 0 0 0 1.56-3.25 8 8 0 1 0-11.12 0A2 2 0 0 0 8 20v1a1 1 0 0 0 1 1z",
      key: "1o5pge"
    }
  ],
  ["circle", { cx: "15", cy: "12", r: "1", key: "1tmaij" }],
  ["circle", { cx: "9", cy: "12", r: "1", key: "1vctgf" }]
];
var Skull = createLucideIcon("skull", __iconNode1308);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/slack.js
var __iconNode1309 = [
  ["rect", { width: "3", height: "8", x: "13", y: "2", rx: "1.5", key: "diqz80" }],
  ["path", { d: "M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5", key: "183iwg" }],
  ["rect", { width: "3", height: "8", x: "8", y: "14", rx: "1.5", key: "hqg7r1" }],
  ["path", { d: "M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5", key: "76g71w" }],
  ["rect", { width: "8", height: "3", x: "14", y: "13", rx: "1.5", key: "1kmz0a" }],
  ["path", { d: "M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5", key: "jc4sz0" }],
  ["rect", { width: "8", height: "3", x: "2", y: "8", rx: "1.5", key: "1omvl4" }],
  ["path", { d: "M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5", key: "16f3cl" }]
];
var Slack = createLucideIcon("slack", __iconNode1309);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/slash.js
var __iconNode1310 = [["path", { d: "M22 2 2 22", key: "y4kqgn" }]];
var Slash = createLucideIcon("slash", __iconNode1310);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/slice.js
var __iconNode1311 = [
  [
    "path",
    {
      d: "M11 16.586V19a1 1 0 0 1-1 1H2L18.37 3.63a1 1 0 1 1 3 3l-9.663 9.663a1 1 0 0 1-1.414 0L8 14",
      key: "1sllp5"
    }
  ]
];
var Slice = createLucideIcon("slice", __iconNode1311);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sliders-horizontal.js
var __iconNode1312 = [
  ["path", { d: "M10 5H3", key: "1qgfaw" }],
  ["path", { d: "M12 19H3", key: "yhmn1j" }],
  ["path", { d: "M14 3v4", key: "1sua03" }],
  ["path", { d: "M16 17v4", key: "1q0r14" }],
  ["path", { d: "M21 12h-9", key: "1o4lsq" }],
  ["path", { d: "M21 19h-5", key: "1rlt1p" }],
  ["path", { d: "M21 5h-7", key: "1oszz2" }],
  ["path", { d: "M8 10v4", key: "tgpxqk" }],
  ["path", { d: "M8 12H3", key: "a7s4jb" }]
];
var SlidersHorizontal = createLucideIcon("sliders-horizontal", __iconNode1312);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sliders-vertical.js
var __iconNode1313 = [
  ["path", { d: "M10 8h4", key: "1sr2af" }],
  ["path", { d: "M12 21v-9", key: "17s77i" }],
  ["path", { d: "M12 8V3", key: "13r4qs" }],
  ["path", { d: "M17 16h4", key: "h1uq16" }],
  ["path", { d: "M19 12V3", key: "o1uvq1" }],
  ["path", { d: "M19 21v-5", key: "qua636" }],
  ["path", { d: "M3 14h4", key: "bcjad9" }],
  ["path", { d: "M5 10V3", key: "cb8scm" }],
  ["path", { d: "M5 21v-7", key: "1w1uti" }]
];
var SlidersVertical = createLucideIcon("sliders-vertical", __iconNode1313);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/smartphone-charging.js
var __iconNode1314 = [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", ry: "2", key: "1yt0o3" }],
  ["path", { d: "M12.667 8 10 12h4l-2.667 4", key: "h9lk2d" }]
];
var SmartphoneCharging = createLucideIcon("smartphone-charging", __iconNode1314);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/smartphone-nfc.js
var __iconNode1315 = [
  ["rect", { width: "7", height: "12", x: "2", y: "6", rx: "1", key: "5nje8w" }],
  ["path", { d: "M13 8.32a7.43 7.43 0 0 1 0 7.36", key: "1g306n" }],
  ["path", { d: "M16.46 6.21a11.76 11.76 0 0 1 0 11.58", key: "uqvjvo" }],
  ["path", { d: "M19.91 4.1a15.91 15.91 0 0 1 .01 15.8", key: "ujntz3" }]
];
var SmartphoneNfc = createLucideIcon("smartphone-nfc", __iconNode1315);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/smile-plus.js
var __iconNode1316 = [
  ["path", { d: "M22 11v1a10 10 0 1 1-9-10", key: "ew0xw9" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }],
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 2v6", key: "4bpg5p" }]
];
var SmilePlus = createLucideIcon("smile-plus", __iconNode1316);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/smartphone.js
var __iconNode1317 = [
  ["rect", { width: "14", height: "20", x: "5", y: "2", rx: "2", ry: "2", key: "1yt0o3" }],
  ["path", { d: "M12 18h.01", key: "mhygvu" }]
];
var Smartphone = createLucideIcon("smartphone", __iconNode1317);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/smile.js
var __iconNode1318 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }]
];
var Smile = createLucideIcon("smile", __iconNode1318);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/snail.js
var __iconNode1319 = [
  ["path", { d: "M2 13a6 6 0 1 0 12 0 4 4 0 1 0-8 0 2 2 0 0 0 4 0", key: "hneq2s" }],
  ["circle", { cx: "10", cy: "13", r: "8", key: "194lz3" }],
  ["path", { d: "M2 21h12c4.4 0 8-3.6 8-8V7a2 2 0 1 0-4 0v6", key: "ixqyt7" }],
  ["path", { d: "M18 3 19.1 5.2", key: "9tjm43" }],
  ["path", { d: "M22 3 20.9 5.2", key: "j3odrs" }]
];
var Snail = createLucideIcon("snail", __iconNode1319);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/snowflake.js
var __iconNode1320 = [
  ["path", { d: "m10 20-1.25-2.5L6 18", key: "18frcb" }],
  ["path", { d: "M10 4 8.75 6.5 6 6", key: "7mghy3" }],
  ["path", { d: "m14 20 1.25-2.5L18 18", key: "1chtki" }],
  ["path", { d: "m14 4 1.25 2.5L18 6", key: "1b4wsy" }],
  ["path", { d: "m17 21-3-6h-4", key: "15hhxa" }],
  ["path", { d: "m17 3-3 6 1.5 3", key: "11697g" }],
  ["path", { d: "M2 12h6.5L10 9", key: "kv9z4n" }],
  ["path", { d: "m20 10-1.5 2 1.5 2", key: "1swlpi" }],
  ["path", { d: "M22 12h-6.5L14 15", key: "1mxi28" }],
  ["path", { d: "m4 10 1.5 2L4 14", key: "k9enpj" }],
  ["path", { d: "m7 21 3-6-1.5-3", key: "j8hb9u" }],
  ["path", { d: "m7 3 3 6h4", key: "1otusx" }]
];
var Snowflake = createLucideIcon("snowflake", __iconNode1320);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/soap-dispenser-droplet.js
var __iconNode1321 = [
  ["path", { d: "M10.5 2v4", key: "1xt6in" }],
  ["path", { d: "M14 2H7a2 2 0 0 0-2 2", key: "e6xig3" }],
  [
    "path",
    {
      d: "M19.29 14.76A6.67 6.67 0 0 1 17 11a6.6 6.6 0 0 1-2.29 3.76c-1.15.92-1.71 2.04-1.71 3.19 0 2.22 1.8 4.05 4 4.05s4-1.83 4-4.05c0-1.16-.57-2.26-1.71-3.19",
      key: "adq7uc"
    }
  ],
  [
    "path",
    {
      d: "M9.607 21H6a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h7V7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3",
      key: "t9hm96"
    }
  ]
];
var SoapDispenserDroplet = createLucideIcon("soap-dispenser-droplet", __iconNode1321);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sofa.js
var __iconNode1322 = [
  ["path", { d: "M20 9V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v3", key: "1dgpiv" }],
  [
    "path",
    {
      d: "M2 16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-5a2 2 0 0 0-4 0v1.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V11a2 2 0 0 0-4 0z",
      key: "xacw8m"
    }
  ],
  ["path", { d: "M4 18v2", key: "jwo5n2" }],
  ["path", { d: "M20 18v2", key: "1ar1qi" }],
  ["path", { d: "M12 4v9", key: "oqhhn3" }]
];
var Sofa = createLucideIcon("sofa", __iconNode1322);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/soup.js
var __iconNode1323 = [
  ["path", { d: "M12 21a9 9 0 0 0 9-9H3a9 9 0 0 0 9 9Z", key: "4rw317" }],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["path", { d: "M19.5 12 22 6", key: "shfsr5" }],
  [
    "path",
    {
      d: "M16.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.73 1.62",
      key: "rpc6vp"
    }
  ],
  [
    "path",
    {
      d: "M11.25 3c.27.1.8.53.74 1.36-.05.83-.93 1.2-.98 2.02-.06.78.33 1.24.72 1.62",
      key: "1lf63m"
    }
  ],
  [
    "path",
    { d: "M6.25 3c.27.1.8.53.75 1.36-.06.83-.93 1.2-1 2.02-.05.78.34 1.24.74 1.62", key: "97tijn" }
  ]
];
var Soup = createLucideIcon("soup", __iconNode1323);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/space.js
var __iconNode1324 = [
  ["path", { d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1", key: "lt2kga" }]
];
var Space = createLucideIcon("space", __iconNode1324);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spade.js
var __iconNode1325 = [
  ["path", { d: "M12 18v4", key: "jadmvz" }],
  [
    "path",
    {
      d: "M2 14.499a5.5 5.5 0 0 0 9.591 3.675.6.6 0 0 1 .818.001A5.5 5.5 0 0 0 22 14.5c0-2.29-1.5-4-3-5.5l-5.492-5.312a2 2 0 0 0-3-.02L5 8.999c-1.5 1.5-3 3.2-3 5.5",
      key: "1aw2pz"
    }
  ]
];
var Spade = createLucideIcon("spade", __iconNode1325);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sparkle.js
var __iconNode1326 = [
  [
    "path",
    {
      d: "M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z",
      key: "1s2grr"
    }
  ]
];
var Sparkle = createLucideIcon("sparkle", __iconNode1326);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sparkles.js
var __iconNode1327 = [
  [
    "path",
    {
      d: "M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z",
      key: "1s2grr"
    }
  ],
  ["path", { d: "M20 2v4", key: "1rf3ol" }],
  ["path", { d: "M22 4h-4", key: "gwowj6" }],
  ["circle", { cx: "4", cy: "20", r: "2", key: "6kqj1y" }]
];
var Sparkles = createLucideIcon("sparkles", __iconNode1327);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/speaker.js
var __iconNode1328 = [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", key: "1nb95v" }],
  ["path", { d: "M12 6h.01", key: "1vi96p" }],
  ["circle", { cx: "12", cy: "14", r: "4", key: "1jruaj" }],
  ["path", { d: "M12 14h.01", key: "1etili" }]
];
var Speaker = createLucideIcon("speaker", __iconNode1328);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/speech.js
var __iconNode1329 = [
  [
    "path",
    {
      d: "M8.8 20v-4.1l1.9.2a2.3 2.3 0 0 0 2.164-2.1V8.3A5.37 5.37 0 0 0 2 8.25c0 2.8.656 3.054 1 4.55a5.77 5.77 0 0 1 .029 2.758L2 20",
      key: "11atix"
    }
  ],
  ["path", { d: "M19.8 17.8a7.5 7.5 0 0 0 .003-10.603", key: "yol142" }],
  ["path", { d: "M17 15a3.5 3.5 0 0 0-.025-4.975", key: "ssbmkc" }]
];
var Speech = createLucideIcon("speech", __iconNode1329);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spell-check-2.js
var __iconNode1330 = [
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  [
    "path",
    {
      d: "M4 21c1.1 0 1.1-1 2.3-1s1.1 1 2.3 1c1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1 1.1 0 1.1 1 2.3 1 1.1 0 1.1-1 2.3-1",
      key: "8mdmtu"
    }
  ]
];
var SpellCheck2 = createLucideIcon("spell-check-2", __iconNode1330);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spell-check.js
var __iconNode1331 = [
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m16 20 2 2 4-4", key: "13tcca" }]
];
var SpellCheck = createLucideIcon("spell-check", __iconNode1331);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spline-pointer.js
var __iconNode1332 = [
  [
    "path",
    {
      d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z",
      key: "xwnzip"
    }
  ],
  ["path", { d: "M5 17A12 12 0 0 1 17 5", key: "1okkup" }],
  ["circle", { cx: "19", cy: "5", r: "2", key: "mhkx31" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }]
];
var SplinePointer = createLucideIcon("spline-pointer", __iconNode1332);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spline.js
var __iconNode1333 = [
  ["circle", { cx: "19", cy: "5", r: "2", key: "mhkx31" }],
  ["circle", { cx: "5", cy: "19", r: "2", key: "v8kfzx" }],
  ["path", { d: "M5 17A12 12 0 0 1 17 5", key: "1okkup" }]
];
var Spline = createLucideIcon("spline", __iconNode1333);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/split.js
var __iconNode1334 = [
  ["path", { d: "M16 3h5v5", key: "1806ms" }],
  ["path", { d: "M8 3H3v5", key: "15dfkv" }],
  ["path", { d: "M12 22v-8.3a4 4 0 0 0-1.172-2.872L3 3", key: "1qrqzj" }],
  ["path", { d: "m15 9 6-6", key: "ko1vev" }]
];
var Split = createLucideIcon("split", __iconNode1334);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spool.js
var __iconNode1335 = [
  [
    "path",
    {
      d: "M17 13.44 4.442 17.082A2 2 0 0 0 4.982 21H19a2 2 0 0 0 .558-3.921l-1.115-.32A2 2 0 0 1 17 14.837V7.66",
      key: "13vns8"
    }
  ],
  [
    "path",
    {
      d: "m7 10.56 12.558-3.642A2 2 0 0 0 19.018 3H5a2 2 0 0 0-.558 3.921l1.115.32A2 2 0 0 1 7 9.163v7.178",
      key: "s8x3u0"
    }
  ]
];
var Spool = createLucideIcon("spool", __iconNode1335);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spotlight.js
var __iconNode1336 = [
  ["path", { d: "M15.295 19.562 16 22", key: "31jsb7" }],
  ["path", { d: "m17 16 3.758 2.098", key: "121ar7" }],
  ["path", { d: "m19 12.5 3.026-.598", key: "19ukd3" }],
  [
    "path",
    {
      d: "M7.61 6.3a3 3 0 0 0-3.92 1.3l-1.38 2.79a3 3 0 0 0 1.3 3.91l6.89 3.597a1 1 0 0 0 1.342-.447l3.106-6.211a1 1 0 0 0-.447-1.341z",
      key: "lwb9l9"
    }
  ],
  ["path", { d: "M8 9V2", key: "1xa0v7" }]
];
var Spotlight = createLucideIcon("spotlight", __iconNode1336);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/spray-can.js
var __iconNode1337 = [
  ["path", { d: "M3 3h.01", key: "159qn6" }],
  ["path", { d: "M7 5h.01", key: "1hq22a" }],
  ["path", { d: "M11 7h.01", key: "1osv80" }],
  ["path", { d: "M3 7h.01", key: "1xzrh3" }],
  ["path", { d: "M7 9h.01", key: "19b3jx" }],
  ["path", { d: "M3 11h.01", key: "1eifu7" }],
  ["rect", { width: "4", height: "4", x: "15", y: "5", key: "mri9e4" }],
  ["path", { d: "m19 9 2 2v10c0 .6-.4 1-1 1h-6c-.6 0-1-.4-1-1V11l2-2", key: "aib6hk" }],
  ["path", { d: "m13 14 8-2", key: "1d7bmk" }],
  ["path", { d: "m13 19 8-2", key: "1y2vml" }]
];
var SprayCan = createLucideIcon("spray-can", __iconNode1337);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sprout.js
var __iconNode1338 = [
  [
    "path",
    {
      d: "M14 9.536V7a4 4 0 0 1 4-4h1.5a.5.5 0 0 1 .5.5V5a4 4 0 0 1-4 4 4 4 0 0 0-4 4c0 2 1 3 1 5a5 5 0 0 1-1 3",
      key: "139s4v"
    }
  ],
  ["path", { d: "M4 9a5 5 0 0 1 8 4 5 5 0 0 1-8-4", key: "1dlkgp" }],
  ["path", { d: "M5 21h14", key: "11awu3" }]
];
var Sprout = createLucideIcon("sprout", __iconNode1338);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-activity.js
var __iconNode1339 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M17 12h-2l-2 5-2-10-2 5H7", key: "15hlnc" }]
];
var SquareActivity = createLucideIcon("square-activity", __iconNode1339);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-down-left.js
var __iconNode1340 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 8-8 8", key: "166keh" }],
  ["path", { d: "M16 16H8V8", key: "1w2ppm" }]
];
var SquareArrowDownLeft = createLucideIcon("square-arrow-down-left", __iconNode1340);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-down-right.js
var __iconNode1341 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m8 8 8 8", key: "1imecy" }],
  ["path", { d: "M16 8v8H8", key: "1lbpgo" }]
];
var SquareArrowDownRight = createLucideIcon("square-arrow-down-right", __iconNode1341);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-down.js
var __iconNode1342 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8 12 4 4 4-4", key: "k98ssh" }]
];
var SquareArrowDown = createLucideIcon("square-arrow-down", __iconNode1342);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-left.js
var __iconNode1343 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m12 8-4 4 4 4", key: "15vm53" }],
  ["path", { d: "M16 12H8", key: "1fr5h0" }]
];
var SquareArrowLeft = createLucideIcon("square-arrow-left", __iconNode1343);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-out-down-left.js
var __iconNode1344 = [
  ["path", { d: "M13 21h6a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6", key: "14qz4y" }],
  ["path", { d: "m3 21 9-9", key: "1jfql5" }],
  ["path", { d: "M9 21H3v-6", key: "wtvkvv" }]
];
var SquareArrowOutDownLeft = createLucideIcon("square-arrow-out-down-left", __iconNode1344);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-out-down-right.js
var __iconNode1345 = [
  ["path", { d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "14rsvq" }],
  ["path", { d: "m21 21-9-9", key: "1et2py" }],
  ["path", { d: "M21 15v6h-6", key: "1jko0i" }]
];
var SquareArrowOutDownRight = createLucideIcon("square-arrow-out-down-right", __iconNode1345);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-out-up-left.js
var __iconNode1346 = [
  ["path", { d: "M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-6", key: "14mv1t" }],
  ["path", { d: "m3 3 9 9", key: "rks13r" }],
  ["path", { d: "M3 9V3h6", key: "ira0h2" }]
];
var SquareArrowOutUpLeft = createLucideIcon("square-arrow-out-up-left", __iconNode1346);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-out-up-right.js
var __iconNode1347 = [
  ["path", { d: "M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6", key: "y09zxi" }],
  ["path", { d: "m21 3-9 9", key: "mpx6sq" }],
  ["path", { d: "M15 3h6v6", key: "1q9fwt" }]
];
var SquareArrowOutUpRight = createLucideIcon("square-arrow-out-up-right", __iconNode1347);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-right.js
var __iconNode1348 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m12 16 4-4-4-4", key: "1i9zcv" }]
];
var SquareArrowRight = createLucideIcon("square-arrow-right", __iconNode1348);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-up-left.js
var __iconNode1349 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 16V8h8", key: "19xb1h" }],
  ["path", { d: "M16 16 8 8", key: "1qdy8n" }]
];
var SquareArrowUpLeft = createLucideIcon("square-arrow-up-left", __iconNode1349);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-up-right.js
var __iconNode1350 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 8h8v8", key: "b65dnt" }],
  ["path", { d: "m8 16 8-8", key: "13b9ih" }]
];
var SquareArrowUpRight = createLucideIcon("square-arrow-up-right", __iconNode1350);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-arrow-up.js
var __iconNode1351 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 12-4-4-4 4", key: "177agl" }],
  ["path", { d: "M12 16V8", key: "1sbj14" }]
];
var SquareArrowUp = createLucideIcon("square-arrow-up", __iconNode1351);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-asterisk.js
var __iconNode1352 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 8v8", key: "napkw2" }],
  ["path", { d: "m8.5 14 7-4", key: "12hpby" }],
  ["path", { d: "m8.5 10 7 4", key: "wwy2dy" }]
];
var SquareAsterisk = createLucideIcon("square-asterisk", __iconNode1352);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-bottom-dashed-scissors.js
var __iconNode1353 = [
  [
    "path",
    { d: "M4 22a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2", key: "1vzg26" }
  ],
  ["path", { d: "M10 22H8", key: "euku7a" }],
  ["path", { d: "M16 22h-2", key: "18d249" }],
  ["circle", { cx: "8", cy: "8", r: "2", key: "14cg06" }],
  ["path", { d: "M9.414 9.414 12 12", key: "qz4lzr" }],
  ["path", { d: "M14.8 14.8 18 18", key: "11flf1" }],
  ["circle", { cx: "8", cy: "16", r: "2", key: "1acxsx" }],
  ["path", { d: "m18 6-8.586 8.586", key: "11kzk1" }]
];
var SquareBottomDashedScissors = createLucideIcon("square-bottom-dashed-scissors", __iconNode1353);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-chart-gantt.js
var __iconNode1354 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 8h7", key: "kbo1nt" }],
  ["path", { d: "M8 12h6", key: "ikassy" }],
  ["path", { d: "M11 16h5", key: "oq65wt" }]
];
var SquareChartGantt = createLucideIcon("square-chart-gantt", __iconNode1354);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-check-big.js
var __iconNode1355 = [
  [
    "path",
    { d: "M21 10.656V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h12.344", key: "2acyp4" }
  ],
  ["path", { d: "m9 11 3 3L22 4", key: "1pflzl" }]
];
var SquareCheckBig = createLucideIcon("square-check-big", __iconNode1355);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-check.js
var __iconNode1356 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
];
var SquareCheck2 = createLucideIcon("square-check", __iconNode1356);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-chevron-left.js
var __iconNode1357 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m14 16-4-4 4-4", key: "ojs7w8" }]
];
var SquareChevronLeft = createLucideIcon("square-chevron-left", __iconNode1357);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-chevron-down.js
var __iconNode1358 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m16 10-4 4-4-4", key: "894hmk" }]
];
var SquareChevronDown = createLucideIcon("square-chevron-down", __iconNode1358);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-chevron-right.js
var __iconNode1359 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m10 8 4 4-4 4", key: "1wy4r4" }]
];
var SquareChevronRight = createLucideIcon("square-chevron-right", __iconNode1359);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-chevron-up.js
var __iconNode1360 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m8 14 4-4 4 4", key: "fy2ptz" }]
];
var SquareChevronUp = createLucideIcon("square-chevron-up", __iconNode1360);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-code.js
var __iconNode1361 = [
  ["path", { d: "m10 9-3 3 3 3", key: "1oro0q" }],
  ["path", { d: "m14 15 3-3-3-3", key: "bz13h7" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var SquareCode = createLucideIcon("square-code", __iconNode1361);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed-bottom.js
var __iconNode1362 = [
  [
    "path",
    { d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2", key: "as5y1o" }
  ],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }]
];
var SquareDashedBottom = createLucideIcon("square-dashed-bottom", __iconNode1362);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed-bottom-code.js
var __iconNode1363 = [
  ["path", { d: "M10 9.5 8 12l2 2.5", key: "3mjy60" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "m14 9.5 2 2.5-2 2.5", key: "1bir2l" }],
  [
    "path",
    { d: "M5 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2", key: "as5y1o" }
  ],
  ["path", { d: "M9 21h1", key: "15o7lz" }]
];
var SquareDashedBottomCode = createLucideIcon("square-dashed-bottom-code", __iconNode1363);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed-kanban.js
var __iconNode1364 = [
  ["path", { d: "M8 7v7", key: "1x2jlm" }],
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M16 7v9", key: "1hp2iy" }],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M21 14v1", key: "169vum" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }]
];
var SquareDashedKanban = createLucideIcon("square-dashed-kanban", __iconNode1364);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed-mouse-pointer.js
var __iconNode1365 = [
  [
    "path",
    {
      d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z",
      key: "xwnzip"
    }
  ],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M9 21h2", key: "1qve2z" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M21 9v2", key: "p14lih" }],
  ["path", { d: "M3 14v1", key: "vnatye" }]
];
var SquareDashedMousePointer = createLucideIcon("square-dashed-mouse-pointer", __iconNode1365);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed-top-solid.js
var __iconNode1366 = [
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M21 14v1", key: "169vum" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2", key: "89voep" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }]
];
var SquareDashedTopSolid = createLucideIcon("square-dashed-top-solid", __iconNode1366);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dashed.js
var __iconNode1367 = [
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M9 3h1", key: "1yesri" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M21 14v1", key: "169vum" }]
];
var SquareDashed = createLucideIcon("square-dashed", __iconNode1367);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-divide.js
var __iconNode1368 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["line", { x1: "8", x2: "16", y1: "12", y2: "12", key: "1jonct" }],
  ["line", { x1: "12", x2: "12", y1: "16", y2: "16", key: "aqc6ln" }],
  ["line", { x1: "12", x2: "12", y1: "8", y2: "8", key: "1mkcni" }]
];
var SquareDivide = createLucideIcon("square-divide", __iconNode1368);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-dot.js
var __iconNode1369 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }]
];
var SquareDot = createLucideIcon("square-dot", __iconNode1369);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-equal.js
var __iconNode1370 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M7 14h10", key: "1mhdw3" }]
];
var SquareEqual = createLucideIcon("square-equal", __iconNode1370);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-function.js
var __iconNode1371 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "M9 17c2 0 2.8-1 2.8-2.8V10c0-2 1-3.3 3.2-3", key: "m1af9g" }],
  ["path", { d: "M9 11.2h5.7", key: "3zgcl2" }]
];
var SquareFunction = createLucideIcon("square-function", __iconNode1371);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-kanban.js
var __iconNode1372 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 7v7", key: "1x2jlm" }],
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M16 7v9", key: "1hp2iy" }]
];
var SquareKanban = createLucideIcon("square-kanban", __iconNode1372);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-library.js
var __iconNode1373 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7v10", key: "d5nglc" }],
  ["path", { d: "M11 7v10", key: "pptsnr" }],
  ["path", { d: "m15 7 2 10", key: "1m7qm5" }]
];
var SquareLibrary = createLucideIcon("square-library", __iconNode1373);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-m.js
var __iconNode1374 = [
  [
    "path",
    {
      d: "M8 16V8.5a.5.5 0 0 1 .9-.3l2.7 3.599a.5.5 0 0 0 .8 0l2.7-3.6a.5.5 0 0 1 .9.3V16",
      key: "1ywlsj"
    }
  ],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var SquareM = createLucideIcon("square-m", __iconNode1374);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-menu.js
var __iconNode1375 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 8h10", key: "1jw688" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M7 16h10", key: "wp8him" }]
];
var SquareMenu = createLucideIcon("square-menu", __iconNode1375);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-minus.js
var __iconNode1376 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
];
var SquareMinus = createLucideIcon("square-minus", __iconNode1376);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-mouse-pointer.js
var __iconNode1377 = [
  [
    "path",
    {
      d: "M12.034 12.681a.498.498 0 0 1 .647-.647l9 3.5a.5.5 0 0 1-.033.943l-3.444 1.068a1 1 0 0 0-.66.66l-1.067 3.443a.5.5 0 0 1-.943.033z",
      key: "xwnzip"
    }
  ],
  ["path", { d: "M21 11V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6", key: "14rsvq" }]
];
var SquareMousePointer = createLucideIcon("square-mouse-pointer", __iconNode1377);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-parking-off.js
var __iconNode1378 = [
  ["path", { d: "M3.6 3.6A2 2 0 0 1 5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-.59 1.41", key: "9l1ft6" }],
  ["path", { d: "M3 8.7V19a2 2 0 0 0 2 2h10.3", key: "17knke" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M13 13a3 3 0 1 0 0-6H9v2", key: "uoagbd" }],
  ["path", { d: "M9 17v-2.3", key: "1jxgo2" }]
];
var SquareParkingOff = createLucideIcon("square-parking-off", __iconNode1378);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-parking.js
var __iconNode1379 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M9 17V7h4a3 3 0 0 1 0 6H9", key: "1dfk2c" }]
];
var SquareParking = createLucideIcon("square-parking", __iconNode1379);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-pause.js
var __iconNode1380 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["line", { x1: "10", x2: "10", y1: "15", y2: "9", key: "c1nkhi" }],
  ["line", { x1: "14", x2: "14", y1: "15", y2: "9", key: "h65svq" }]
];
var SquarePause = createLucideIcon("square-pause", __iconNode1380);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-pen.js
var __iconNode1381 = [
  ["path", { d: "M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7", key: "1m0v6g" }],
  [
    "path",
    {
      d: "M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",
      key: "ohrbg2"
    }
  ]
];
var SquarePen = createLucideIcon("square-pen", __iconNode1381);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-percent.js
var __iconNode1382 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
];
var SquarePercent = createLucideIcon("square-percent", __iconNode1382);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-pi.js
var __iconNode1383 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M7 7h10", key: "udp07y" }],
  ["path", { d: "M10 7v10", key: "i1d9ee" }],
  ["path", { d: "M16 17a2 2 0 0 1-2-2V7", key: "ftwdc7" }]
];
var SquarePi = createLucideIcon("square-pi", __iconNode1383);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-pilcrow.js
var __iconNode1384 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M12 12H9.5a2.5 2.5 0 0 1 0-5H17", key: "1l9586" }],
  ["path", { d: "M12 7v10", key: "jspqdw" }],
  ["path", { d: "M16 7v10", key: "lavkr4" }]
];
var SquarePilcrow = createLucideIcon("square-pilcrow", __iconNode1384);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-plus.js
var __iconNode1385 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
];
var SquarePlus = createLucideIcon("square-plus", __iconNode1385);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-play.js
var __iconNode1386 = [
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }],
  [
    "path",
    {
      d: "M9 9.003a1 1 0 0 1 1.517-.859l4.997 2.997a1 1 0 0 1 0 1.718l-4.997 2.997A1 1 0 0 1 9 14.996z",
      key: "kmsa83"
    }
  ]
];
var SquarePlay = createLucideIcon("square-play", __iconNode1386);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-power.js
var __iconNode1387 = [
  ["path", { d: "M12 7v4", key: "xawao1" }],
  ["path", { d: "M7.998 9.003a5 5 0 1 0 8-.005", key: "1pek45" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var SquarePower = createLucideIcon("square-power", __iconNode1387);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-radical.js
var __iconNode1388 = [
  ["path", { d: "M7 12h2l2 5 2-10h4", key: "1fxv6h" }],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var SquareRadical = createLucideIcon("square-radical", __iconNode1388);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-round-corner.js
var __iconNode1389 = [
  ["path", { d: "M21 11a8 8 0 0 0-8-8", key: "1lxwo5" }],
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4", key: "1dv2y5" }]
];
var SquareRoundCorner = createLucideIcon("square-round-corner", __iconNode1389);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-scissors.js
var __iconNode1390 = [
  ["rect", { width: "20", height: "20", x: "2", y: "2", rx: "2", key: "1btzen" }],
  ["circle", { cx: "8", cy: "8", r: "2", key: "14cg06" }],
  ["path", { d: "M9.414 9.414 12 12", key: "qz4lzr" }],
  ["path", { d: "M14.8 14.8 18 18", key: "11flf1" }],
  ["circle", { cx: "8", cy: "16", r: "2", key: "1acxsx" }],
  ["path", { d: "m18 6-8.586 8.586", key: "11kzk1" }]
];
var SquareScissors = createLucideIcon("square-scissors", __iconNode1390);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-sigma.js
var __iconNode1391 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M16 8.9V7H8l4 5-4 5h8v-1.9", key: "9nih0i" }]
];
var SquareSigma = createLucideIcon("square-sigma", __iconNode1391);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-slash.js
var __iconNode1392 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["line", { x1: "9", x2: "15", y1: "15", y2: "9", key: "1dfufj" }]
];
var SquareSlash = createLucideIcon("square-slash", __iconNode1392);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-split-horizontal.js
var __iconNode1393 = [
  ["path", { d: "M8 19H5c-1 0-2-1-2-2V7c0-1 1-2 2-2h3", key: "lubmu8" }],
  ["path", { d: "M16 5h3c1 0 2 1 2 2v10c0 1-1 2-2 2h-3", key: "1ag34g" }],
  ["line", { x1: "12", x2: "12", y1: "4", y2: "20", key: "1tx1rr" }]
];
var SquareSplitHorizontal = createLucideIcon("square-split-horizontal", __iconNode1393);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-split-vertical.js
var __iconNode1394 = [
  ["path", { d: "M5 8V5c0-1 1-2 2-2h10c1 0 2 1 2 2v3", key: "1pi83i" }],
  ["path", { d: "M19 16v3c0 1-1 2-2 2H7c-1 0-2-1-2-2v-3", key: "ido5k7" }],
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }]
];
var SquareSplitVertical = createLucideIcon("square-split-vertical", __iconNode1394);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-square.js
var __iconNode1395 = [
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }],
  ["rect", { x: "8", y: "8", width: "8", height: "8", rx: "1", key: "z9xiuo" }]
];
var SquareSquare = createLucideIcon("square-square", __iconNode1395);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-stack.js
var __iconNode1396 = [
  ["path", { d: "M4 10c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2", key: "4i38lg" }],
  ["path", { d: "M10 16c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h4c1.1 0 2 .9 2 2", key: "mlte4a" }],
  ["rect", { width: "8", height: "8", x: "14", y: "14", rx: "2", key: "1fa9i4" }]
];
var SquareStack = createLucideIcon("square-stack", __iconNode1396);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-star.js
var __iconNode1397 = [
  [
    "path",
    {
      d: "M11.035 7.69a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.866l-1.156-1.153a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z",
      key: "13edca"
    }
  ],
  ["rect", { x: "3", y: "3", width: "18", height: "18", rx: "2", key: "h1oib" }]
];
var SquareStar = createLucideIcon("square-star", __iconNode1397);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-stop.js
var __iconNode1398 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["rect", { x: "9", y: "9", width: "6", height: "6", rx: "1", key: "1ssd4o" }]
];
var SquareStop = createLucideIcon("square-stop", __iconNode1398);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-terminal.js
var __iconNode1399 = [
  ["path", { d: "m7 11 2-2-2-2", key: "1lz0vl" }],
  ["path", { d: "M11 13h4", key: "1p7l4v" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }]
];
var SquareTerminal = createLucideIcon("square-terminal", __iconNode1399);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-user.js
var __iconNode1400 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2", key: "1m6ac2" }]
];
var SquareUser = createLucideIcon("square-user", __iconNode1400);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-user-round.js
var __iconNode1401 = [
  ["path", { d: "M18 21a6 6 0 0 0-12 0", key: "kaz2du" }],
  ["circle", { cx: "12", cy: "11", r: "4", key: "1gt34v" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
];
var SquareUserRound = createLucideIcon("square-user-round", __iconNode1401);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square-x.js
var __iconNode1402 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "m9 9 6 6", key: "z0biqf" }]
];
var SquareX = createLucideIcon("square-x", __iconNode1402);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/square.js
var __iconNode1403 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
];
var Square2 = createLucideIcon("square", __iconNode1403);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squares-exclude.js
var __iconNode1404 = [
  [
    "path",
    {
      d: "M16 12v2a2 2 0 0 1-2 2H9a1 1 0 0 0-1 1v3a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2h0",
      key: "1mcohs"
    }
  ],
  [
    "path",
    {
      d: "M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 1-1 1h-5a2 2 0 0 0-2 2v2",
      key: "1r1efp"
    }
  ]
];
var SquaresExclude = createLucideIcon("squares-exclude", __iconNode1404);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squares-intersect.js
var __iconNode1405 = [
  ["path", { d: "M10 22a2 2 0 0 1-2-2", key: "i7yj1i" }],
  ["path", { d: "M14 2a2 2 0 0 1 2 2", key: "170a0m" }],
  ["path", { d: "M16 22h-2", key: "18d249" }],
  ["path", { d: "M2 10V8", key: "7yj4fe" }],
  ["path", { d: "M2 4a2 2 0 0 1 2-2", key: "ddgnws" }],
  ["path", { d: "M20 8a2 2 0 0 1 2 2", key: "1770vt" }],
  ["path", { d: "M22 14v2", key: "iot8ja" }],
  ["path", { d: "M22 20a2 2 0 0 1-2 2", key: "qj8q6g" }],
  ["path", { d: "M4 16a2 2 0 0 1-2-2", key: "1dnafg" }],
  [
    "path",
    { d: "M8 10a2 2 0 0 1 2-2h5a1 1 0 0 1 1 1v5a2 2 0 0 1-2 2H9a1 1 0 0 1-1-1z", key: "ci6f0b" }
  ],
  ["path", { d: "M8 2h2", key: "1gmkwm" }]
];
var SquaresIntersect = createLucideIcon("squares-intersect", __iconNode1405);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squares-subtract.js
var __iconNode1406 = [
  ["path", { d: "M10 22a2 2 0 0 1-2-2", key: "i7yj1i" }],
  ["path", { d: "M16 22h-2", key: "18d249" }],
  [
    "path",
    {
      d: "M16 4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-5a2 2 0 0 1 2-2h5a1 1 0 0 0 1-1z",
      key: "1njgbb"
    }
  ],
  ["path", { d: "M20 8a2 2 0 0 1 2 2", key: "1770vt" }],
  ["path", { d: "M22 14v2", key: "iot8ja" }],
  ["path", { d: "M22 20a2 2 0 0 1-2 2", key: "qj8q6g" }]
];
var SquaresSubtract = createLucideIcon("squares-subtract", __iconNode1406);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squares-unite.js
var __iconNode1407 = [
  [
    "path",
    {
      d: "M4 16a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v3a1 1 0 0 0 1 1h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-3a1 1 0 0 0-1-1z",
      key: "17jnth"
    }
  ]
];
var SquaresUnite = createLucideIcon("squares-unite", __iconNode1407);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squircle-dashed.js
var __iconNode1408 = [
  ["path", { d: "M13.77 3.043a34 34 0 0 0-3.54 0", key: "1oaobr" }],
  ["path", { d: "M13.771 20.956a33 33 0 0 1-3.541.001", key: "95iq0j" }],
  ["path", { d: "M20.18 17.74c-.51 1.15-1.29 1.93-2.439 2.44", key: "1u6qty" }],
  ["path", { d: "M20.18 6.259c-.51-1.148-1.291-1.929-2.44-2.438", key: "1ew6g6" }],
  ["path", { d: "M20.957 10.23a33 33 0 0 1 0 3.54", key: "1l9npr" }],
  ["path", { d: "M3.043 10.23a34 34 0 0 0 .001 3.541", key: "1it6jm" }],
  ["path", { d: "M6.26 20.179c-1.15-.508-1.93-1.29-2.44-2.438", key: "14uchd" }],
  ["path", { d: "M6.26 3.82c-1.149.51-1.93 1.291-2.44 2.44", key: "8k4agb" }]
];
var SquircleDashed = createLucideIcon("squircle-dashed", __iconNode1408);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squircle.js
var __iconNode1409 = [
  ["path", { d: "M12 3c7.2 0 9 1.8 9 9s-1.8 9-9 9-9-1.8-9-9 1.8-9 9-9", key: "garfkc" }]
];
var Squircle = createLucideIcon("squircle", __iconNode1409);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/squirrel.js
var __iconNode1410 = [
  ["path", { d: "M15.236 22a3 3 0 0 0-2.2-5", key: "21bitc" }],
  ["path", { d: "M16 20a3 3 0 0 1 3-3h1a2 2 0 0 0 2-2v-2a4 4 0 0 0-4-4V4", key: "oh0fg0" }],
  ["path", { d: "M18 13h.01", key: "9veqaj" }],
  [
    "path",
    {
      d: "M18 6a4 4 0 0 0-4 4 7 7 0 0 0-7 7c0-5 4-5 4-10.5a4.5 4.5 0 1 0-9 0 2.5 2.5 0 0 0 5 0C7 10 3 11 3 17c0 2.8 2.2 5 5 5h10",
      key: "980v8a"
    }
  ]
];
var Squirrel = createLucideIcon("squirrel", __iconNode1410);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/stamp.js
var __iconNode1411 = [
  ["path", { d: "M14 13V8.5C14 7 15 7 15 5a3 3 0 0 0-6 0c0 2 1 2 1 3.5V13", key: "i9gjdv" }],
  [
    "path",
    {
      d: "M20 15.5a2.5 2.5 0 0 0-2.5-2.5h-11A2.5 2.5 0 0 0 4 15.5V17a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1z",
      key: "1vzg3v"
    }
  ],
  ["path", { d: "M5 22h14", key: "ehvnwv" }]
];
var Stamp = createLucideIcon("stamp", __iconNode1411);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/star-half.js
var __iconNode1412 = [
  [
    "path",
    {
      d: "M12 18.338a2.1 2.1 0 0 0-.987.244L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16l2.309-4.679A.53.53 0 0 1 12 2",
      key: "2ksp49"
    }
  ]
];
var StarHalf = createLucideIcon("star-half", __iconNode1412);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/star-off.js
var __iconNode1413 = [
  ["path", { d: "M8.34 8.34 2 9.27l5 4.87L5.82 21 12 17.77 18.18 21l-.59-3.43", key: "16m0ql" }],
  ["path", { d: "M18.42 12.76 22 9.27l-6.91-1L12 2l-1.44 2.91", key: "1vt8nq" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var StarOff = createLucideIcon("star-off", __iconNode1413);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/star.js
var __iconNode1414 = [
  [
    "path",
    {
      d: "M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z",
      key: "r04s7s"
    }
  ]
];
var Star = createLucideIcon("star", __iconNode1414);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/step-back.js
var __iconNode1415 = [
  [
    "path",
    {
      d: "M13.971 4.285A2 2 0 0 1 17 6v12a2 2 0 0 1-3.029 1.715l-9.997-5.998a2 2 0 0 1-.003-3.432z",
      key: "19qhus"
    }
  ],
  ["path", { d: "M21 20V4", key: "cb8qj8" }]
];
var StepBack = createLucideIcon("step-back", __iconNode1415);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/step-forward.js
var __iconNode1416 = [
  [
    "path",
    {
      d: "M10.029 4.285A2 2 0 0 0 7 6v12a2 2 0 0 0 3.029 1.715l9.997-5.998a2 2 0 0 0 .003-3.432z",
      key: "1ystz2"
    }
  ],
  ["path", { d: "M3 4v16", key: "1ph11n" }]
];
var StepForward = createLucideIcon("step-forward", __iconNode1416);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/stethoscope.js
var __iconNode1417 = [
  ["path", { d: "M11 2v2", key: "1539x4" }],
  ["path", { d: "M5 2v2", key: "1yf1q8" }],
  ["path", { d: "M5 3H4a2 2 0 0 0-2 2v4a6 6 0 0 0 12 0V5a2 2 0 0 0-2-2h-1", key: "rb5t3r" }],
  ["path", { d: "M8 15a6 6 0 0 0 12 0v-3", key: "x18d4x" }],
  ["circle", { cx: "20", cy: "10", r: "2", key: "ts1r5v" }]
];
var Stethoscope = createLucideIcon("stethoscope", __iconNode1417);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sticky-note.js
var __iconNode1418 = [
  ["path", { d: "M16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V8Z", key: "qazsjp" }],
  ["path", { d: "M15 3v4a2 2 0 0 0 2 2h4", key: "40519r" }]
];
var StickyNote = createLucideIcon("sticky-note", __iconNode1418);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sticker.js
var __iconNode1419 = [
  [
    "path",
    { d: "M15.5 3H5a2 2 0 0 0-2 2v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V8.5L15.5 3Z", key: "1wis1t" }
  ],
  ["path", { d: "M14 3v4a2 2 0 0 0 2 2h4", key: "36rjfy" }],
  ["path", { d: "M8 13h.01", key: "1sbv64" }],
  ["path", { d: "M16 13h.01", key: "wip0gl" }],
  ["path", { d: "M10 16s.8 1 2 1c1.3 0 2-1 2-1", key: "1vvgv3" }]
];
var Sticker = createLucideIcon("sticker", __iconNode1419);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/stretch-horizontal.js
var __iconNode1420 = [
  ["rect", { width: "20", height: "6", x: "2", y: "4", rx: "2", key: "qdearl" }],
  ["rect", { width: "20", height: "6", x: "2", y: "14", rx: "2", key: "1xrn6j" }]
];
var StretchHorizontal = createLucideIcon("stretch-horizontal", __iconNode1420);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/store.js
var __iconNode1421 = [
  ["path", { d: "M15 21v-5a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v5", key: "slp6dd" }],
  [
    "path",
    {
      d: "M17.774 10.31a1.12 1.12 0 0 0-1.549 0 2.5 2.5 0 0 1-3.451 0 1.12 1.12 0 0 0-1.548 0 2.5 2.5 0 0 1-3.452 0 1.12 1.12 0 0 0-1.549 0 2.5 2.5 0 0 1-3.77-3.248l2.889-4.184A2 2 0 0 1 7 2h10a2 2 0 0 1 1.653.873l2.895 4.192a2.5 2.5 0 0 1-3.774 3.244",
      key: "o0xfot"
    }
  ],
  ["path", { d: "M4 10.95V19a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8.05", key: "wn3emo" }]
];
var Store = createLucideIcon("store", __iconNode1421);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/stretch-vertical.js
var __iconNode1422 = [
  ["rect", { width: "6", height: "20", x: "4", y: "2", rx: "2", key: "19qu7m" }],
  ["rect", { width: "6", height: "20", x: "14", y: "2", rx: "2", key: "24v0nk" }]
];
var StretchVertical = createLucideIcon("stretch-vertical", __iconNode1422);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/strikethrough.js
var __iconNode1423 = [
  ["path", { d: "M16 4H9a3 3 0 0 0-2.83 4", key: "43sutm" }],
  ["path", { d: "M14 12a4 4 0 0 1 0 8H6", key: "nlfj13" }],
  ["line", { x1: "4", x2: "20", y1: "12", y2: "12", key: "1e0a9i" }]
];
var Strikethrough = createLucideIcon("strikethrough", __iconNode1423);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/subscript.js
var __iconNode1424 = [
  ["path", { d: "m4 5 8 8", key: "1eunvl" }],
  ["path", { d: "m12 5-8 8", key: "1ah0jp" }],
  [
    "path",
    {
      d: "M20 19h-4c0-1.5.44-2 1.5-2.5S20 15.33 20 14c0-.47-.17-.93-.48-1.29a2.11 2.11 0 0 0-2.62-.44c-.42.24-.74.62-.9 1.07",
      key: "e8ta8j"
    }
  ]
];
var Subscript = createLucideIcon("subscript", __iconNode1424);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sun-dim.js
var __iconNode1425 = [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 4h.01", key: "1ujb9j" }],
  ["path", { d: "M20 12h.01", key: "1ykeid" }],
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M4 12h.01", key: "158zrr" }],
  ["path", { d: "M17.657 6.343h.01", key: "31pqzk" }],
  ["path", { d: "M17.657 17.657h.01", key: "jehnf4" }],
  ["path", { d: "M6.343 17.657h.01", key: "gdk6ow" }],
  ["path", { d: "M6.343 6.343h.01", key: "1uurf0" }]
];
var SunDim = createLucideIcon("sun-dim", __iconNode1425);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sun-medium.js
var __iconNode1426 = [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 3v1", key: "1asbbs" }],
  ["path", { d: "M12 20v1", key: "1wcdkc" }],
  ["path", { d: "M3 12h1", key: "lp3yf2" }],
  ["path", { d: "M20 12h1", key: "1vloll" }],
  ["path", { d: "m18.364 5.636-.707.707", key: "1hakh0" }],
  ["path", { d: "m6.343 17.657-.707.707", key: "18m9nf" }],
  ["path", { d: "m5.636 5.636.707.707", key: "1xv1c5" }],
  ["path", { d: "m17.657 17.657.707.707", key: "vl76zb" }]
];
var SunMedium = createLucideIcon("sun-medium", __iconNode1426);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sun-moon.js
var __iconNode1427 = [
  ["path", { d: "M12 2v2", key: "tus03m" }],
  [
    "path",
    {
      d: "M14.837 16.385a6 6 0 1 1-7.223-7.222c.624-.147.97.66.715 1.248a4 4 0 0 0 5.26 5.259c.589-.255 1.396.09 1.248.715",
      key: "xlf6rm"
    }
  ],
  ["path", { d: "M16 12a4 4 0 0 0-4-4", key: "6vsxu" }],
  ["path", { d: "m19 5-1.256 1.256", key: "1yg6a6" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }]
];
var SunMoon = createLucideIcon("sun-moon", __iconNode1427);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sun-snow.js
var __iconNode1428 = [
  ["path", { d: "M10 21v-1", key: "1u8rkd" }],
  ["path", { d: "M10 4V3", key: "pkzwkn" }],
  ["path", { d: "M10 9a3 3 0 0 0 0 6", key: "gv75dk" }],
  ["path", { d: "m14 20 1.25-2.5L18 18", key: "1chtki" }],
  ["path", { d: "m14 4 1.25 2.5L18 6", key: "1b4wsy" }],
  ["path", { d: "m17 21-3-6 1.5-3H22", key: "o5qa3v" }],
  ["path", { d: "m17 3-3 6 1.5 3", key: "11697g" }],
  ["path", { d: "M2 12h1", key: "1uaihz" }],
  ["path", { d: "m20 10-1.5 2 1.5 2", key: "1swlpi" }],
  ["path", { d: "m3.64 18.36.7-.7", key: "105rm9" }],
  ["path", { d: "m4.34 6.34-.7-.7", key: "d3unjp" }]
];
var SunSnow = createLucideIcon("sun-snow", __iconNode1428);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sun.js
var __iconNode1429 = [
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m4.93 4.93 1.41 1.41", key: "149t6j" }],
  ["path", { d: "m17.66 17.66 1.41 1.41", key: "ptbguv" }],
  ["path", { d: "M2 12h2", key: "1t8f8n" }],
  ["path", { d: "M20 12h2", key: "1q8mjw" }],
  ["path", { d: "m6.34 17.66-1.41 1.41", key: "1m8zz5" }],
  ["path", { d: "m19.07 4.93-1.41 1.41", key: "1shlcs" }]
];
var Sun = createLucideIcon("sun", __iconNode1429);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sunrise.js
var __iconNode1430 = [
  ["path", { d: "M12 2v8", key: "1q4o3n" }],
  ["path", { d: "m4.93 10.93 1.41 1.41", key: "2a7f42" }],
  ["path", { d: "M2 18h2", key: "j10viu" }],
  ["path", { d: "M20 18h2", key: "wocana" }],
  ["path", { d: "m19.07 10.93-1.41 1.41", key: "15zs5n" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }],
  ["path", { d: "m8 6 4-4 4 4", key: "ybng9g" }],
  ["path", { d: "M16 18a4 4 0 0 0-8 0", key: "1lzouq" }]
];
var Sunrise = createLucideIcon("sunrise", __iconNode1430);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sunset.js
var __iconNode1431 = [
  ["path", { d: "M12 10V2", key: "16sf7g" }],
  ["path", { d: "m4.93 10.93 1.41 1.41", key: "2a7f42" }],
  ["path", { d: "M2 18h2", key: "j10viu" }],
  ["path", { d: "M20 18h2", key: "wocana" }],
  ["path", { d: "m19.07 10.93-1.41 1.41", key: "15zs5n" }],
  ["path", { d: "M22 22H2", key: "19qnx5" }],
  ["path", { d: "m16 6-4 4-4-4", key: "6wukr" }],
  ["path", { d: "M16 18a4 4 0 0 0-8 0", key: "1lzouq" }]
];
var Sunset = createLucideIcon("sunset", __iconNode1431);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/superscript.js
var __iconNode1432 = [
  ["path", { d: "m4 19 8-8", key: "hr47gm" }],
  ["path", { d: "m12 19-8-8", key: "1dhhmo" }],
  [
    "path",
    {
      d: "M20 12h-4c0-1.5.442-2 1.5-2.5S20 8.334 20 7.002c0-.472-.17-.93-.484-1.29a2.105 2.105 0 0 0-2.617-.436c-.42.239-.738.614-.899 1.06",
      key: "1dfcux"
    }
  ]
];
var Superscript = createLucideIcon("superscript", __iconNode1432);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/swatch-book.js
var __iconNode1433 = [
  ["path", { d: "M11 17a4 4 0 0 1-8 0V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2Z", key: "1ldrpk" }],
  ["path", { d: "M16.7 13H19a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H7", key: "11i5po" }],
  ["path", { d: "M 7 17h.01", key: "1euzgo" }],
  [
    "path",
    {
      d: "m11 8 2.3-2.3a2.4 2.4 0 0 1 3.404.004L18.6 7.6a2.4 2.4 0 0 1 .026 3.434L9.9 19.8",
      key: "o2gii7"
    }
  ]
];
var SwatchBook = createLucideIcon("swatch-book", __iconNode1433);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/swiss-franc.js
var __iconNode1434 = [
  ["path", { d: "M10 21V3h8", key: "br2l0g" }],
  ["path", { d: "M6 16h9", key: "2py0wn" }],
  ["path", { d: "M10 9.5h7", key: "13dmhz" }]
];
var SwissFranc = createLucideIcon("swiss-franc", __iconNode1434);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/switch-camera.js
var __iconNode1435 = [
  ["path", { d: "M11 19H4a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h5", key: "mtk2lu" }],
  ["path", { d: "M13 5h7a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-5", key: "120jsl" }],
  ["circle", { cx: "12", cy: "12", r: "3", key: "1v7zrd" }],
  ["path", { d: "m18 22-3-3 3-3", key: "kgdoj7" }],
  ["path", { d: "m6 2 3 3-3 3", key: "1fnbkv" }]
];
var SwitchCamera = createLucideIcon("switch-camera", __iconNode1435);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/sword.js
var __iconNode1436 = [
  ["polyline", { points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5", key: "1hfsw2" }],
  ["line", { x1: "13", x2: "19", y1: "19", y2: "13", key: "1vrmhu" }],
  ["line", { x1: "16", x2: "20", y1: "16", y2: "20", key: "1bron3" }],
  ["line", { x1: "19", x2: "21", y1: "21", y2: "19", key: "13pww6" }]
];
var Sword = createLucideIcon("sword", __iconNode1436);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/swords.js
var __iconNode1437 = [
  ["polyline", { points: "14.5 17.5 3 6 3 3 6 3 17.5 14.5", key: "1hfsw2" }],
  ["line", { x1: "13", x2: "19", y1: "19", y2: "13", key: "1vrmhu" }],
  ["line", { x1: "16", x2: "20", y1: "16", y2: "20", key: "1bron3" }],
  ["line", { x1: "19", x2: "21", y1: "21", y2: "19", key: "13pww6" }],
  ["polyline", { points: "14.5 6.5 18 3 21 3 21 6 17.5 9.5", key: "hbey2j" }],
  ["line", { x1: "5", x2: "9", y1: "14", y2: "18", key: "1hf58s" }],
  ["line", { x1: "7", x2: "4", y1: "17", y2: "20", key: "pidxm4" }],
  ["line", { x1: "3", x2: "5", y1: "19", y2: "21", key: "1pehsh" }]
];
var Swords = createLucideIcon("swords", __iconNode1437);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/syringe.js
var __iconNode1438 = [
  ["path", { d: "m18 2 4 4", key: "22kx64" }],
  ["path", { d: "m17 7 3-3", key: "1w1zoj" }],
  ["path", { d: "M19 9 8.7 19.3c-1 1-2.5 1-3.4 0l-.6-.6c-1-1-1-2.5 0-3.4L15 5", key: "1exhtz" }],
  ["path", { d: "m9 11 4 4", key: "rovt3i" }],
  ["path", { d: "m5 19-3 3", key: "59f2uf" }],
  ["path", { d: "m14 4 6 6", key: "yqp9t2" }]
];
var Syringe = createLucideIcon("syringe", __iconNode1438);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-2.js
var __iconNode1439 = [
  [
    "path",
    {
      d: "M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18",
      key: "gugj83"
    }
  ]
];
var Table2 = createLucideIcon("table-2", __iconNode1439);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-cells-merge.js
var __iconNode1440 = [
  ["path", { d: "M12 21v-6", key: "lihzve" }],
  ["path", { d: "M12 9V3", key: "da5inc" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
];
var TableCellsMerge = createLucideIcon("table-cells-merge", __iconNode1440);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-cells-split.js
var __iconNode1441 = [
  ["path", { d: "M12 15V9", key: "8c7uyn" }],
  ["path", { d: "M3 15h18", key: "5xshup" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }]
];
var TableCellsSplit = createLucideIcon("table-cells-split", __iconNode1441);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-columns-split.js
var __iconNode1442 = [
  ["path", { d: "M14 14v2", key: "w2a1xv" }],
  ["path", { d: "M14 20v2", key: "1lq872" }],
  ["path", { d: "M14 2v2", key: "6buw04" }],
  ["path", { d: "M14 8v2", key: "i67w9a" }],
  ["path", { d: "M2 15h8", key: "82wtch" }],
  ["path", { d: "M2 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2", key: "up0l64" }],
  ["path", { d: "M2 9h8", key: "yelfik" }],
  ["path", { d: "M22 15h-4", key: "1es58f" }],
  ["path", { d: "M22 3h-2a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h2", key: "pdjoqf" }],
  ["path", { d: "M22 9h-4", key: "1luja7" }],
  ["path", { d: "M5 3v18", key: "14hmio" }]
];
var TableColumnsSplit = createLucideIcon("table-columns-split", __iconNode1442);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-of-contents.js
var __iconNode1443 = [
  ["path", { d: "M16 5H3", key: "m91uny" }],
  ["path", { d: "M16 12H3", key: "1a2rj7" }],
  ["path", { d: "M16 19H3", key: "zzsher" }],
  ["path", { d: "M21 5h.01", key: "wa75ra" }],
  ["path", { d: "M21 12h.01", key: "msek7k" }],
  ["path", { d: "M21 19h.01", key: "qvbq2j" }]
];
var TableOfContents = createLucideIcon("table-of-contents", __iconNode1443);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-properties.js
var __iconNode1444 = [
  ["path", { d: "M15 3v18", key: "14nvp0" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M21 9H3", key: "1338ky" }],
  ["path", { d: "M21 15H3", key: "9uk58r" }]
];
var TableProperties = createLucideIcon("table-properties", __iconNode1444);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table-rows-split.js
var __iconNode1445 = [
  ["path", { d: "M14 10h2", key: "1lstlu" }],
  ["path", { d: "M15 22v-8", key: "1fwwgm" }],
  ["path", { d: "M15 2v4", key: "1044rn" }],
  ["path", { d: "M2 10h2", key: "1r8dkt" }],
  ["path", { d: "M20 10h2", key: "1ug425" }],
  ["path", { d: "M3 19h18", key: "awlh7x" }],
  ["path", { d: "M3 22v-6a2 2 135 0 1 2-2h14a2 2 45 0 1 2 2v6", key: "ibqhof" }],
  ["path", { d: "M3 2v2a2 2 45 0 0 2 2h14a2 2 135 0 0 2-2V2", key: "1uenja" }],
  ["path", { d: "M8 10h2", key: "66od0" }],
  ["path", { d: "M9 22v-8", key: "fmnu31" }],
  ["path", { d: "M9 2v4", key: "j1yeou" }]
];
var TableRowsSplit = createLucideIcon("table-rows-split", __iconNode1445);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/table.js
var __iconNode1446 = [
  ["path", { d: "M12 3v18", key: "108xh3" }],
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9h18", key: "1pudct" }],
  ["path", { d: "M3 15h18", key: "5xshup" }]
];
var Table = createLucideIcon("table", __iconNode1446);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tablet-smartphone.js
var __iconNode1447 = [
  ["rect", { width: "10", height: "14", x: "3", y: "8", rx: "2", key: "1vrsiq" }],
  ["path", { d: "M5 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2h-2.4", key: "1j4zmg" }],
  ["path", { d: "M8 18h.01", key: "lrp35t" }]
];
var TabletSmartphone = createLucideIcon("tablet-smartphone", __iconNode1447);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tablet.js
var __iconNode1448 = [
  ["rect", { width: "16", height: "20", x: "4", y: "2", rx: "2", ry: "2", key: "76otgf" }],
  ["line", { x1: "12", x2: "12.01", y1: "18", y2: "18", key: "1dp563" }]
];
var Tablet = createLucideIcon("tablet", __iconNode1448);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tablets.js
var __iconNode1449 = [
  ["circle", { cx: "7", cy: "7", r: "5", key: "x29byf" }],
  ["circle", { cx: "17", cy: "17", r: "5", key: "1op1d2" }],
  ["path", { d: "M12 17h10", key: "ls21zv" }],
  ["path", { d: "m3.46 10.54 7.08-7.08", key: "1rehiu" }]
];
var Tablets = createLucideIcon("tablets", __iconNode1449);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tag.js
var __iconNode1450 = [
  [
    "path",
    {
      d: "M12.586 2.586A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v7.172a2 2 0 0 0 .586 1.414l8.704 8.704a2.426 2.426 0 0 0 3.42 0l6.58-6.58a2.426 2.426 0 0 0 0-3.42z",
      key: "vktsd0"
    }
  ],
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }]
];
var Tag = createLucideIcon("tag", __iconNode1450);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tags.js
var __iconNode1451 = [
  [
    "path",
    {
      d: "M13.172 2a2 2 0 0 1 1.414.586l6.71 6.71a2.4 2.4 0 0 1 0 3.408l-4.592 4.592a2.4 2.4 0 0 1-3.408 0l-6.71-6.71A2 2 0 0 1 6 9.172V3a1 1 0 0 1 1-1z",
      key: "16rjxf"
    }
  ],
  [
    "path",
    { d: "M2 7v6.172a2 2 0 0 0 .586 1.414l6.71 6.71a2.4 2.4 0 0 0 3.191.193", key: "178nd4" }
  ],
  ["circle", { cx: "10.5", cy: "6.5", r: ".5", fill: "currentColor", key: "12ikhr" }]
];
var Tags = createLucideIcon("tags", __iconNode1451);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tally-1.js
var __iconNode1452 = [["path", { d: "M4 4v16", key: "6qkkli" }]];
var Tally1 = createLucideIcon("tally-1", __iconNode1452);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tally-2.js
var __iconNode1453 = [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }]
];
var Tally2 = createLucideIcon("tally-2", __iconNode1453);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tally-3.js
var __iconNode1454 = [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }]
];
var Tally3 = createLucideIcon("tally-3", __iconNode1454);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tally-5.js
var __iconNode1455 = [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }],
  ["path", { d: "M19 4v16", key: "8ij5ei" }],
  ["path", { d: "M22 6 2 18", key: "h9moai" }]
];
var Tally5 = createLucideIcon("tally-5", __iconNode1455);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tally-4.js
var __iconNode1456 = [
  ["path", { d: "M4 4v16", key: "6qkkli" }],
  ["path", { d: "M9 4v16", key: "81ygyz" }],
  ["path", { d: "M14 4v16", key: "12vmem" }],
  ["path", { d: "M19 4v16", key: "8ij5ei" }]
];
var Tally4 = createLucideIcon("tally-4", __iconNode1456);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tangent.js
var __iconNode1457 = [
  ["circle", { cx: "17", cy: "4", r: "2", key: "y5j2s2" }],
  ["path", { d: "M15.59 5.41 5.41 15.59", key: "l0vprr" }],
  ["circle", { cx: "4", cy: "17", r: "2", key: "9p4efm" }],
  ["path", { d: "M12 22s-4-9-1.5-11.5S22 12 22 12", key: "1twk4o" }]
];
var Tangent = createLucideIcon("tangent", __iconNode1457);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/target.js
var __iconNode1458 = [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["circle", { cx: "12", cy: "12", r: "6", key: "1vlfrh" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var Target = createLucideIcon("target", __iconNode1458);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/telescope.js
var __iconNode1459 = [
  [
    "path",
    {
      d: "m10.065 12.493-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44",
      key: "k4qptu"
    }
  ],
  ["path", { d: "m13.56 11.747 4.332-.924", key: "19l80z" }],
  ["path", { d: "m16 21-3.105-6.21", key: "7oh9d" }],
  [
    "path",
    {
      d: "M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455z",
      key: "m7xp4m"
    }
  ],
  ["path", { d: "m6.158 8.633 1.114 4.456", key: "74o979" }],
  ["path", { d: "m8 21 3.105-6.21", key: "1fvxut" }],
  ["circle", { cx: "12", cy: "13", r: "2", key: "1c1ljs" }]
];
var Telescope = createLucideIcon("telescope", __iconNode1459);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tent-tree.js
var __iconNode1460 = [
  ["circle", { cx: "4", cy: "4", r: "2", key: "bt5ra8" }],
  ["path", { d: "m14 5 3-3 3 3", key: "1sorif" }],
  ["path", { d: "m14 10 3-3 3 3", key: "1jyi9h" }],
  ["path", { d: "M17 14V2", key: "8ymqnk" }],
  ["path", { d: "M17 14H7l-5 8h20Z", key: "13ar7p" }],
  ["path", { d: "M8 14v8", key: "1ghmqk" }],
  ["path", { d: "m9 14 5 8", key: "13pgi6" }]
];
var TentTree = createLucideIcon("tent-tree", __iconNode1460);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tent.js
var __iconNode1461 = [
  ["path", { d: "M3.5 21 14 3", key: "1szst5" }],
  ["path", { d: "M20.5 21 10 3", key: "1310c3" }],
  ["path", { d: "M15.5 21 12 15l-3.5 6", key: "1ddtfw" }],
  ["path", { d: "M2 21h20", key: "1nyx9w" }]
];
var Tent = createLucideIcon("tent", __iconNode1461);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/test-tube-diagonal.js
var __iconNode1462 = [
  [
    "path",
    { d: "M21 7 6.82 21.18a2.83 2.83 0 0 1-3.99-.01a2.83 2.83 0 0 1 0-4L17 3", key: "1ub6xw" }
  ],
  ["path", { d: "m16 2 6 6", key: "1gw87d" }],
  ["path", { d: "M12 16H4", key: "1cjfip" }]
];
var TestTubeDiagonal = createLucideIcon("test-tube-diagonal", __iconNode1462);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/terminal.js
var __iconNode1463 = [
  ["path", { d: "M12 19h8", key: "baeox8" }],
  ["path", { d: "m4 17 6-6-6-6", key: "1yngyt" }]
];
var Terminal = createLucideIcon("terminal", __iconNode1463);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/test-tube.js
var __iconNode1464 = [
  ["path", { d: "M14.5 2v17.5c0 1.4-1.1 2.5-2.5 2.5c-1.4 0-2.5-1.1-2.5-2.5V2", key: "125lnx" }],
  ["path", { d: "M8.5 2h7", key: "csnxdl" }],
  ["path", { d: "M14.5 16h-5", key: "1ox875" }]
];
var TestTube = createLucideIcon("test-tube", __iconNode1464);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/test-tubes.js
var __iconNode1465 = [
  ["path", { d: "M9 2v17.5A2.5 2.5 0 0 1 6.5 22A2.5 2.5 0 0 1 4 19.5V2", key: "1hjrqt" }],
  ["path", { d: "M20 2v17.5a2.5 2.5 0 0 1-2.5 2.5a2.5 2.5 0 0 1-2.5-2.5V2", key: "16lc8n" }],
  ["path", { d: "M3 2h7", key: "7s29d5" }],
  ["path", { d: "M14 2h7", key: "7sicin" }],
  ["path", { d: "M9 16H4", key: "1bfye3" }],
  ["path", { d: "M20 16h-5", key: "ddnjpe" }]
];
var TestTubes = createLucideIcon("test-tubes", __iconNode1465);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-align-center.js
var __iconNode1466 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M17 12H7", key: "16if0g" }],
  ["path", { d: "M19 19H5", key: "vjpgq2" }]
];
var TextAlignCenter = createLucideIcon("text-align-center", __iconNode1466);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-align-end.js
var __iconNode1467 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M21 12H9", key: "dn1m92" }],
  ["path", { d: "M21 19H7", key: "4cu937" }]
];
var TextAlignEnd = createLucideIcon("text-align-end", __iconNode1467);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-align-justify.js
var __iconNode1468 = [
  ["path", { d: "M3 5h18", key: "1u36vt" }],
  ["path", { d: "M3 12h18", key: "1i2n21" }],
  ["path", { d: "M3 19h18", key: "awlh7x" }]
];
var TextAlignJustify = createLucideIcon("text-align-justify", __iconNode1468);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-align-start.js
var __iconNode1469 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M15 12H3", key: "6jk70r" }],
  ["path", { d: "M17 19H3", key: "z6ezky" }]
];
var TextAlignStart = createLucideIcon("text-align-start", __iconNode1469);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-cursor-input.js
var __iconNode1470 = [
  ["path", { d: "M12 20h-1a2 2 0 0 1-2-2 2 2 0 0 1-2 2H6", key: "1528k5" }],
  ["path", { d: "M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7", key: "13ksps" }],
  ["path", { d: "M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1", key: "1n9rhb" }],
  ["path", { d: "M6 4h1a2 2 0 0 1 2 2 2 2 0 0 1 2-2h1", key: "1mj8rg" }],
  ["path", { d: "M9 6v12", key: "velyjx" }]
];
var TextCursorInput = createLucideIcon("text-cursor-input", __iconNode1470);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-cursor.js
var __iconNode1471 = [
  ["path", { d: "M17 22h-1a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h1", key: "uvaxm9" }],
  ["path", { d: "M7 22h1a4 4 0 0 0 4-4v-1", key: "11xy8d" }],
  ["path", { d: "M7 2h1a4 4 0 0 1 4 4v1", key: "1uw06m" }]
];
var TextCursor = createLucideIcon("text-cursor", __iconNode1471);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-initial.js
var __iconNode1472 = [
  ["path", { d: "M15 5h6", key: "1pr8yx" }],
  ["path", { d: "M15 12h6", key: "upa0zy" }],
  ["path", { d: "M3 19h18", key: "awlh7x" }],
  ["path", { d: "m3 12 3.553-7.724a.5.5 0 0 1 .894 0L11 12", key: "6lvno8" }],
  ["path", { d: "M3.92 10h6.16", key: "1tl8ex" }]
];
var TextInitial = createLucideIcon("text-initial", __iconNode1472);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-quote.js
var __iconNode1473 = [
  ["path", { d: "M17 5H3", key: "1cn7zz" }],
  ["path", { d: "M21 12H8", key: "scolzb" }],
  ["path", { d: "M21 19H8", key: "13qgcb" }],
  ["path", { d: "M3 12v7", key: "1ri8j3" }]
];
var TextQuote = createLucideIcon("text-quote", __iconNode1473);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-search.js
var __iconNode1474 = [
  ["path", { d: "M21 5H3", key: "1fi0y6" }],
  ["path", { d: "M10 12H3", key: "1ulcyk" }],
  ["path", { d: "M10 19H3", key: "108z41" }],
  ["circle", { cx: "17", cy: "15", r: "3", key: "1upz2a" }],
  ["path", { d: "m21 19-1.9-1.9", key: "dwi7p8" }]
];
var TextSearch = createLucideIcon("text-search", __iconNode1474);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-select.js
var __iconNode1475 = [
  ["path", { d: "M14 21h1", key: "v9vybs" }],
  ["path", { d: "M14 3h1", key: "1ec4yj" }],
  ["path", { d: "M19 3a2 2 0 0 1 2 2", key: "18rm91" }],
  ["path", { d: "M21 14v1", key: "169vum" }],
  ["path", { d: "M21 19a2 2 0 0 1-2 2", key: "1j7049" }],
  ["path", { d: "M21 9v1", key: "mxsmne" }],
  ["path", { d: "M3 14v1", key: "vnatye" }],
  ["path", { d: "M3 9v1", key: "1r0deq" }],
  ["path", { d: "M5 21a2 2 0 0 1-2-2", key: "sbafld" }],
  ["path", { d: "M5 3a2 2 0 0 0-2 2", key: "y57alp" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["path", { d: "M7 16h6", key: "1vyc9m" }],
  ["path", { d: "M7 8h8", key: "1jbsf9" }],
  ["path", { d: "M9 21h1", key: "15o7lz" }],
  ["path", { d: "M9 3h1", key: "1yesri" }]
];
var TextSelect = createLucideIcon("text-select", __iconNode1475);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/text-wrap.js
var __iconNode1476 = [
  ["path", { d: "m16 16-3 3 3 3", key: "117b85" }],
  ["path", { d: "M3 12h14.5a1 1 0 0 1 0 7H13", key: "18xa6z" }],
  ["path", { d: "M3 19h6", key: "1ygdsz" }],
  ["path", { d: "M3 5h18", key: "1u36vt" }]
];
var TextWrap = createLucideIcon("text-wrap", __iconNode1476);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/theater.js
var __iconNode1477 = [
  ["path", { d: "M2 10s3-3 3-8", key: "3xiif0" }],
  ["path", { d: "M22 10s-3-3-3-8", key: "ioaa5q" }],
  ["path", { d: "M10 2c0 4.4-3.6 8-8 8", key: "16fkpi" }],
  ["path", { d: "M14 2c0 4.4 3.6 8 8 8", key: "b9eulq" }],
  ["path", { d: "M2 10s2 2 2 5", key: "1au1lb" }],
  ["path", { d: "M22 10s-2 2-2 5", key: "qi2y5e" }],
  ["path", { d: "M8 15h8", key: "45n4r" }],
  ["path", { d: "M2 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1", key: "1vsc2m" }],
  ["path", { d: "M14 22v-1a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v1", key: "hrha4u" }]
];
var Theater = createLucideIcon("theater", __iconNode1477);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/thermometer-snowflake.js
var __iconNode1478 = [
  ["path", { d: "m10 20-1.25-2.5L6 18", key: "18frcb" }],
  ["path", { d: "M10 4 8.75 6.5 6 6", key: "7mghy3" }],
  ["path", { d: "M10.585 15H10", key: "4nqulp" }],
  ["path", { d: "M2 12h6.5L10 9", key: "kv9z4n" }],
  ["path", { d: "M20 14.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0z", key: "yu0u2z" }],
  ["path", { d: "m4 10 1.5 2L4 14", key: "k9enpj" }],
  ["path", { d: "m7 21 3-6-1.5-3", key: "j8hb9u" }],
  ["path", { d: "m7 3 3 6h2", key: "1bbqgq" }]
];
var ThermometerSnowflake = createLucideIcon("thermometer-snowflake", __iconNode1478);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/thermometer-sun.js
var __iconNode1479 = [
  ["path", { d: "M12 9a4 4 0 0 0-2 7.5", key: "1jvsq6" }],
  ["path", { d: "M12 3v2", key: "1w22ol" }],
  ["path", { d: "m6.6 18.4-1.4 1.4", key: "w2yidj" }],
  ["path", { d: "M20 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z", key: "iof6y5" }],
  ["path", { d: "M4 13H2", key: "118le4" }],
  ["path", { d: "M6.34 7.34 4.93 5.93", key: "1brd51" }]
];
var ThermometerSun = createLucideIcon("thermometer-sun", __iconNode1479);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/thermometer.js
var __iconNode1480 = [
  ["path", { d: "M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z", key: "17jzev" }]
];
var Thermometer = createLucideIcon("thermometer", __iconNode1480);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/thumbs-down.js
var __iconNode1481 = [
  ["path", { d: "M17 14V2", key: "8ymqnk" }],
  [
    "path",
    {
      d: "M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z",
      key: "m61m77"
    }
  ]
];
var ThumbsDown = createLucideIcon("thumbs-down", __iconNode1481);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/thumbs-up.js
var __iconNode1482 = [
  ["path", { d: "M7 10v12", key: "1qc93n" }],
  [
    "path",
    {
      d: "M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z",
      key: "emmmcr"
    }
  ]
];
var ThumbsUp = createLucideIcon("thumbs-up", __iconNode1482);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-check.js
var __iconNode1483 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }]
];
var TicketCheck = createLucideIcon("ticket-check", __iconNode1483);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-minus.js
var __iconNode1484 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }]
];
var TicketMinus = createLucideIcon("ticket-minus", __iconNode1484);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-percent.js
var __iconNode1485 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 1 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 1 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "1l48ns"
    }
  ],
  ["path", { d: "M9 9h.01", key: "1q5me6" }],
  ["path", { d: "m15 9-6 6", key: "1uzhvr" }],
  ["path", { d: "M15 15h.01", key: "lqbp3k" }]
];
var TicketPercent = createLucideIcon("ticket-percent", __iconNode1485);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-plus.js
var __iconNode1486 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M9 12h6", key: "1c52cq" }],
  ["path", { d: "M12 9v6", key: "199k2o" }]
];
var TicketPlus = createLucideIcon("ticket-plus", __iconNode1486);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-slash.js
var __iconNode1487 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9.5 14.5 5-5", key: "qviqfa" }]
];
var TicketSlash = createLucideIcon("ticket-slash", __iconNode1487);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket-x.js
var __iconNode1488 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "m9.5 14.5 5-5", key: "qviqfa" }],
  ["path", { d: "m9.5 9.5 5 5", key: "18nt4w" }]
];
var TicketX = createLucideIcon("ticket-x", __iconNode1488);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ticket.js
var __iconNode1489 = [
  [
    "path",
    {
      d: "M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z",
      key: "qn84l0"
    }
  ],
  ["path", { d: "M13 5v2", key: "dyzc3o" }],
  ["path", { d: "M13 17v2", key: "1ont0d" }],
  ["path", { d: "M13 11v2", key: "1wjjxi" }]
];
var Ticket = createLucideIcon("ticket", __iconNode1489);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tickets-plane.js
var __iconNode1490 = [
  ["path", { d: "M10.5 17h1.227a2 2 0 0 0 1.345-.52L18 12", key: "16muxl" }],
  ["path", { d: "m12 13.5 3.75.5", key: "1i9qhk" }],
  ["path", { d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8", key: "12lg5p" }],
  ["path", { d: "M6 10V8", key: "1y41hn" }],
  ["path", { d: "M6 14v1", key: "cao2tf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["rect", { x: "2", y: "8", width: "20", height: "13", rx: "2", key: "p3bz5l" }]
];
var TicketsPlane = createLucideIcon("tickets-plane", __iconNode1490);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tickets.js
var __iconNode1491 = [
  ["path", { d: "m4.5 8 10.58-5.06a1 1 0 0 1 1.342.488L18.5 8", key: "12lg5p" }],
  ["path", { d: "M6 10V8", key: "1y41hn" }],
  ["path", { d: "M6 14v1", key: "cao2tf" }],
  ["path", { d: "M6 19v2", key: "1loha6" }],
  ["rect", { x: "2", y: "8", width: "20", height: "13", rx: "2", key: "p3bz5l" }]
];
var Tickets = createLucideIcon("tickets", __iconNode1491);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/timer-off.js
var __iconNode1492 = [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  ["path", { d: "M4.6 11a8 8 0 0 0 1.7 8.7 8 8 0 0 0 8.7 1.7", key: "10he05" }],
  ["path", { d: "M7.4 7.4a8 8 0 0 1 10.3 1 8 8 0 0 1 .9 10.2", key: "15f7sh" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M12 12v-2", key: "fwoke6" }]
];
var TimerOff = createLucideIcon("timer-off", __iconNode1492);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/timer-reset.js
var __iconNode1493 = [
  ["path", { d: "M10 2h4", key: "n1abiw" }],
  ["path", { d: "M12 14v-4", key: "1evpnu" }],
  ["path", { d: "M4 13a8 8 0 0 1 8-7 8 8 0 1 1-5.3 14L4 17.6", key: "1ts96g" }],
  ["path", { d: "M9 17H4v5", key: "8t5av" }]
];
var TimerReset = createLucideIcon("timer-reset", __iconNode1493);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/timer.js
var __iconNode1494 = [
  ["line", { x1: "10", x2: "14", y1: "2", y2: "2", key: "14vaq8" }],
  ["line", { x1: "12", x2: "15", y1: "14", y2: "11", key: "17fdiu" }],
  ["circle", { cx: "12", cy: "14", r: "8", key: "1e1u0o" }]
];
var Timer = createLucideIcon("timer", __iconNode1494);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/toggle-left.js
var __iconNode1495 = [
  ["circle", { cx: "9", cy: "12", r: "3", key: "u3jwor" }],
  ["rect", { width: "20", height: "14", x: "2", y: "5", rx: "7", key: "g7kal2" }]
];
var ToggleLeft = createLucideIcon("toggle-left", __iconNode1495);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/toggle-right.js
var __iconNode1496 = [
  ["circle", { cx: "15", cy: "12", r: "3", key: "1afu0r" }],
  ["rect", { width: "20", height: "14", x: "2", y: "5", rx: "7", key: "g7kal2" }]
];
var ToggleRight = createLucideIcon("toggle-right", __iconNode1496);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/toilet.js
var __iconNode1497 = [
  [
    "path",
    {
      d: "M7 12h13a1 1 0 0 1 1 1 5 5 0 0 1-5 5h-.598a.5.5 0 0 0-.424.765l1.544 2.47a.5.5 0 0 1-.424.765H5.402a.5.5 0 0 1-.424-.765L7 18",
      key: "kc4kqr"
    }
  ],
  ["path", { d: "M8 18a5 5 0 0 1-5-5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8", key: "1tqs57" }]
];
var Toilet = createLucideIcon("toilet", __iconNode1497);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tool-case.js
var __iconNode1498 = [
  ["path", { d: "M10 15h4", key: "192ueg" }],
  [
    "path",
    {
      d: "m14.817 10.995-.971-1.45 1.034-1.232a2 2 0 0 0-2.025-3.238l-1.82.364L9.91 3.885a2 2 0 0 0-3.625.748L6.141 6.55l-1.725.426a2 2 0 0 0-.19 3.756l.657.27",
      key: "xbnumr"
    }
  ],
  [
    "path",
    {
      d: "m18.822 10.995 2.26-5.38a1 1 0 0 0-.557-1.318L16.954 2.9a1 1 0 0 0-1.281.533l-.924 2.122",
      key: "eaw7gc"
    }
  ],
  [
    "path",
    {
      d: "M4 12.006A1 1 0 0 1 4.994 11H19a1 1 0 0 1 1 1v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z",
      key: "1vaooh"
    }
  ]
];
var ToolCase = createLucideIcon("tool-case", __iconNode1498);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tornado.js
var __iconNode1499 = [
  ["path", { d: "M21 4H3", key: "1hwok0" }],
  ["path", { d: "M18 8H6", key: "41n648" }],
  ["path", { d: "M19 12H9", key: "1g4lpz" }],
  ["path", { d: "M16 16h-6", key: "1j5d54" }],
  ["path", { d: "M11 20H9", key: "39obr8" }]
];
var Tornado = createLucideIcon("tornado", __iconNode1499);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/torus.js
var __iconNode1500 = [
  ["ellipse", { cx: "12", cy: "11", rx: "3", ry: "2", key: "1b2qxu" }],
  ["ellipse", { cx: "12", cy: "12.5", rx: "10", ry: "8.5", key: "h8emeu" }]
];
var Torus = createLucideIcon("torus", __iconNode1500);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/touchpad.js
var __iconNode1501 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M2 14h20", key: "myj16y" }],
  ["path", { d: "M12 20v-6", key: "1rm09r" }]
];
var Touchpad = createLucideIcon("touchpad", __iconNode1501);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/touchpad-off.js
var __iconNode1502 = [
  ["path", { d: "M12 20v-6", key: "1rm09r" }],
  ["path", { d: "M19.656 14H22", key: "170xzr" }],
  ["path", { d: "M2 14h12", key: "d8icqz" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M20 20H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2", key: "s23sx2" }],
  ["path", { d: "M9.656 4H20a2 2 0 0 1 2 2v10.344", key: "ovjcvl" }]
];
var TouchpadOff = createLucideIcon("touchpad-off", __iconNode1502);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tower-control.js
var __iconNode1503 = [
  [
    "path",
    { d: "M18.2 12.27 20 6H4l1.8 6.27a1 1 0 0 0 .95.73h10.5a1 1 0 0 0 .96-.73Z", key: "1pledb" }
  ],
  ["path", { d: "M8 13v9", key: "hmv0ci" }],
  ["path", { d: "M16 22v-9", key: "ylnf1u" }],
  ["path", { d: "m9 6 1 7", key: "dpdgam" }],
  ["path", { d: "m15 6-1 7", key: "ls7zgu" }],
  ["path", { d: "M12 6V2", key: "1pj48d" }],
  ["path", { d: "M13 2h-2", key: "mj6ths" }]
];
var TowerControl = createLucideIcon("tower-control", __iconNode1503);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/toy-brick.js
var __iconNode1504 = [
  ["rect", { width: "18", height: "12", x: "3", y: "8", rx: "1", key: "158fvp" }],
  ["path", { d: "M10 8V5c0-.6-.4-1-1-1H6a1 1 0 0 0-1 1v3", key: "s0042v" }],
  ["path", { d: "M19 8V5c0-.6-.4-1-1-1h-3a1 1 0 0 0-1 1v3", key: "9wmeh2" }]
];
var ToyBrick = createLucideIcon("toy-brick", __iconNode1504);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tractor.js
var __iconNode1505 = [
  ["path", { d: "m10 11 11 .9a1 1 0 0 1 .8 1.1l-.665 4.158a1 1 0 0 1-.988.842H20", key: "she1j9" }],
  ["path", { d: "M16 18h-5", key: "bq60fd" }],
  ["path", { d: "M18 5a1 1 0 0 0-1 1v5.573", key: "1kv8ia" }],
  ["path", { d: "M3 4h8.129a1 1 0 0 1 .99.863L13 11.246", key: "1q1ert" }],
  ["path", { d: "M4 11V4", key: "9ft8pt" }],
  ["path", { d: "M7 15h.01", key: "k5ht0j" }],
  ["path", { d: "M8 10.1V4", key: "1jgyzo" }],
  ["circle", { cx: "18", cy: "18", r: "2", key: "1emm8v" }],
  ["circle", { cx: "7", cy: "15", r: "5", key: "ddtuc" }]
];
var Tractor = createLucideIcon("tractor", __iconNode1505);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/train-front-tunnel.js
var __iconNode1506 = [
  ["path", { d: "M2 22V12a10 10 0 1 1 20 0v10", key: "o0fyp0" }],
  ["path", { d: "M15 6.8v1.4a3 2.8 0 1 1-6 0V6.8", key: "m8q3n9" }],
  ["path", { d: "M10 15h.01", key: "44in9x" }],
  ["path", { d: "M14 15h.01", key: "5mohn5" }],
  ["path", { d: "M10 19a4 4 0 0 1-4-4v-3a6 6 0 1 1 12 0v3a4 4 0 0 1-4 4Z", key: "hckbmu" }],
  ["path", { d: "m9 19-2 3", key: "iij7hm" }],
  ["path", { d: "m15 19 2 3", key: "npx8sa" }]
];
var TrainFrontTunnel = createLucideIcon("train-front-tunnel", __iconNode1506);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/traffic-cone.js
var __iconNode1507 = [
  ["path", { d: "M16.05 10.966a5 2.5 0 0 1-8.1 0", key: "m5jpwb" }],
  [
    "path",
    {
      d: "m16.923 14.049 4.48 2.04a1 1 0 0 1 .001 1.831l-8.574 3.9a2 2 0 0 1-1.66 0l-8.574-3.91a1 1 0 0 1 0-1.83l4.484-2.04",
      key: "rbg3g8"
    }
  ],
  ["path", { d: "M16.949 14.14a5 2.5 0 1 1-9.9 0L10.063 3.5a2 2 0 0 1 3.874 0z", key: "vap8c8" }],
  ["path", { d: "M9.194 6.57a5 2.5 0 0 0 5.61 0", key: "15hn5c" }]
];
var TrafficCone = createLucideIcon("traffic-cone", __iconNode1507);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/train-front.js
var __iconNode1508 = [
  ["path", { d: "M8 3.1V7a4 4 0 0 0 8 0V3.1", key: "1v71zp" }],
  ["path", { d: "m9 15-1-1", key: "1yrq24" }],
  ["path", { d: "m15 15 1-1", key: "1t0d6s" }],
  ["path", { d: "M9 19c-2.8 0-5-2.2-5-5v-4a8 8 0 0 1 16 0v4c0 2.8-2.2 5-5 5Z", key: "1p0hjs" }],
  ["path", { d: "m8 19-2 3", key: "13i0xs" }],
  ["path", { d: "m16 19 2 3", key: "xo31yx" }]
];
var TrainFront = createLucideIcon("train-front", __iconNode1508);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/train-track.js
var __iconNode1509 = [
  ["path", { d: "M2 17 17 2", key: "18b09t" }],
  ["path", { d: "m2 14 8 8", key: "1gv9hu" }],
  ["path", { d: "m5 11 8 8", key: "189pqp" }],
  ["path", { d: "m8 8 8 8", key: "1imecy" }],
  ["path", { d: "m11 5 8 8", key: "ummqn6" }],
  ["path", { d: "m14 2 8 8", key: "1vk7dn" }],
  ["path", { d: "M7 22 22 7", key: "15mb1i" }]
];
var TrainTrack = createLucideIcon("train-track", __iconNode1509);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tram-front.js
var __iconNode1510 = [
  ["rect", { width: "16", height: "16", x: "4", y: "3", rx: "2", key: "1wxw4b" }],
  ["path", { d: "M4 11h16", key: "mpoxn0" }],
  ["path", { d: "M12 3v8", key: "1h2ygw" }],
  ["path", { d: "m8 19-2 3", key: "13i0xs" }],
  ["path", { d: "m18 22-2-3", key: "1p0ohu" }],
  ["path", { d: "M8 15h.01", key: "a7atzg" }],
  ["path", { d: "M16 15h.01", key: "rnfrdf" }]
];
var TramFront = createLucideIcon("tram-front", __iconNode1510);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/transgender.js
var __iconNode1511 = [
  ["path", { d: "M12 16v6", key: "c8a4gj" }],
  ["path", { d: "M14 20h-4", key: "m8m19d" }],
  ["path", { d: "M18 2h4v4", key: "1341mj" }],
  ["path", { d: "m2 2 7.17 7.17", key: "13q8l2" }],
  ["path", { d: "M2 5.355V2h3.357", key: "18136r" }],
  ["path", { d: "m22 2-7.17 7.17", key: "1epvy4" }],
  ["path", { d: "M8 5 5 8", key: "mgbjhz" }],
  ["circle", { cx: "12", cy: "12", r: "4", key: "4exip2" }]
];
var Transgender = createLucideIcon("transgender", __iconNode1511);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trash-2.js
var __iconNode1512 = [
  ["path", { d: "M10 11v6", key: "nco0om" }],
  ["path", { d: "M14 11v6", key: "outv1u" }],
  ["path", { d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6", key: "miytrc" }],
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2", key: "e791ji" }]
];
var Trash2 = createLucideIcon("trash-2", __iconNode1512);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trash.js
var __iconNode1513 = [
  ["path", { d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6", key: "miytrc" }],
  ["path", { d: "M3 6h18", key: "d0wm0j" }],
  ["path", { d: "M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2", key: "e791ji" }]
];
var Trash = createLucideIcon("trash", __iconNode1513);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tree-deciduous.js
var __iconNode1514 = [
  [
    "path",
    {
      d: "M8 19a4 4 0 0 1-2.24-7.32A3.5 3.5 0 0 1 9 6.03V6a3 3 0 1 1 6 0v.04a3.5 3.5 0 0 1 3.24 5.65A4 4 0 0 1 16 19Z",
      key: "oadzkq"
    }
  ],
  ["path", { d: "M12 19v3", key: "npa21l" }]
];
var TreeDeciduous = createLucideIcon("tree-deciduous", __iconNode1514);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tree-pine.js
var __iconNode1515 = [
  [
    "path",
    {
      d: "m17 14 3 3.3a1 1 0 0 1-.7 1.7H4.7a1 1 0 0 1-.7-1.7L7 14h-.3a1 1 0 0 1-.7-1.7L9 9h-.2A1 1 0 0 1 8 7.3L12 3l4 4.3a1 1 0 0 1-.8 1.7H15l3 3.3a1 1 0 0 1-.7 1.7H17Z",
      key: "cpyugq"
    }
  ],
  ["path", { d: "M12 22v-3", key: "kmzjlo" }]
];
var TreePine = createLucideIcon("tree-pine", __iconNode1515);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trees.js
var __iconNode1516 = [
  ["path", { d: "M10 10v.2A3 3 0 0 1 8.9 16H5a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z", key: "1l6gj6" }],
  ["path", { d: "M7 16v6", key: "1a82de" }],
  ["path", { d: "M13 19v3", key: "13sx9i" }],
  [
    "path",
    {
      d: "M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5",
      key: "1sj9kv"
    }
  ]
];
var Trees = createLucideIcon("trees", __iconNode1516);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tree-palm.js
var __iconNode1517 = [
  ["path", { d: "M13 8c0-2.76-2.46-5-5.5-5S2 5.24 2 8h2l1-1 1 1h4", key: "foxbe7" }],
  [
    "path",
    { d: "M13 7.14A5.82 5.82 0 0 1 16.5 6c3.04 0 5.5 2.24 5.5 5h-3l-1-1-1 1h-3", key: "18arnh" }
  ],
  [
    "path",
    {
      d: "M5.89 9.71c-2.15 2.15-2.3 5.47-.35 7.43l4.24-4.25.7-.7.71-.71 2.12-2.12c-1.95-1.96-5.27-1.8-7.42.35",
      key: "ywahnh"
    }
  ],
  ["path", { d: "M11 15.5c.5 2.5-.17 4.5-1 6.5h4c2-5.5-.5-12-1-14", key: "ft0feo" }]
];
var TreePalm = createLucideIcon("tree-palm", __iconNode1517);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trello.js
var __iconNode1518 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", ry: "2", key: "1m3agn" }],
  ["rect", { width: "3", height: "9", x: "7", y: "7", key: "14n3xi" }],
  ["rect", { width: "3", height: "5", x: "14", y: "7", key: "s4azjd" }]
];
var Trello = createLucideIcon("trello", __iconNode1518);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trending-down.js
var __iconNode1519 = [
  ["path", { d: "M16 17h6v-6", key: "t6n2it" }],
  ["path", { d: "m22 17-8.5-8.5-5 5L2 7", key: "x473p" }]
];
var TrendingDown = createLucideIcon("trending-down", __iconNode1519);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trending-up-down.js
var __iconNode1520 = [
  ["path", { d: "M14.828 14.828 21 21", key: "ar5fw7" }],
  ["path", { d: "M21 16v5h-5", key: "1ck2sf" }],
  ["path", { d: "m21 3-9 9-4-4-6 6", key: "1h02xo" }],
  ["path", { d: "M21 8V3h-5", key: "1qoq8a" }]
];
var TrendingUpDown = createLucideIcon("trending-up-down", __iconNode1520);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trending-up.js
var __iconNode1521 = [
  ["path", { d: "M16 7h6v6", key: "box55l" }],
  ["path", { d: "m22 7-8.5 8.5-5-5L2 17", key: "1t1m79" }]
];
var TrendingUp = createLucideIcon("trending-up", __iconNode1521);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/triangle-alert.js
var __iconNode1522 = [
  [
    "path",
    {
      d: "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",
      key: "wmoenq"
    }
  ],
  ["path", { d: "M12 9v4", key: "juzpu7" }],
  ["path", { d: "M12 17h.01", key: "p32p05" }]
];
var TriangleAlert = createLucideIcon("triangle-alert", __iconNode1522);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/triangle-dashed.js
var __iconNode1523 = [
  ["path", { d: "M10.17 4.193a2 2 0 0 1 3.666.013", key: "pltmmw" }],
  ["path", { d: "M14 21h2", key: "v4qezv" }],
  ["path", { d: "m15.874 7.743 1 1.732", key: "10m0iw" }],
  ["path", { d: "m18.849 12.952 1 1.732", key: "zadnam" }],
  ["path", { d: "M21.824 18.18a2 2 0 0 1-1.835 2.824", key: "fvwuk4" }],
  ["path", { d: "M4.024 21a2 2 0 0 1-1.839-2.839", key: "1e1kah" }],
  ["path", { d: "m5.136 12.952-1 1.732", key: "1u4ldi" }],
  ["path", { d: "M8 21h2", key: "i9zjee" }],
  ["path", { d: "m8.102 7.743-1 1.732", key: "1zzo4u" }]
];
var TriangleDashed = createLucideIcon("triangle-dashed", __iconNode1523);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/triangle-right.js
var __iconNode1524 = [
  [
    "path",
    {
      d: "M22 18a2 2 0 0 1-2 2H3c-1.1 0-1.3-.6-.4-1.3L20.4 4.3c.9-.7 1.6-.4 1.6.7Z",
      key: "183wce"
    }
  ]
];
var TriangleRight = createLucideIcon("triangle-right", __iconNode1524);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/trophy.js
var __iconNode1525 = [
  ["path", { d: "M10 14.66v1.626a2 2 0 0 1-.976 1.696A5 5 0 0 0 7 21.978", key: "1n3hpd" }],
  ["path", { d: "M14 14.66v1.626a2 2 0 0 0 .976 1.696A5 5 0 0 1 17 21.978", key: "rfe1zi" }],
  ["path", { d: "M18 9h1.5a1 1 0 0 0 0-5H18", key: "7xy6bh" }],
  ["path", { d: "M4 22h16", key: "57wxv0" }],
  ["path", { d: "M6 9a6 6 0 0 0 12 0V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z", key: "1mhfuq" }],
  ["path", { d: "M6 9H4.5a1 1 0 0 1 0-5H6", key: "tex48p" }]
];
var Trophy = createLucideIcon("trophy", __iconNode1525);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/triangle.js
var __iconNode1526 = [
  [
    "path",
    { d: "M13.73 4a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z", key: "14u9p9" }
  ]
];
var Triangle = createLucideIcon("triangle", __iconNode1526);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/truck-electric.js
var __iconNode1527 = [
  ["path", { d: "M14 19V7a2 2 0 0 0-2-2H9", key: "15peso" }],
  ["path", { d: "M15 19H9", key: "18q6dt" }],
  [
    "path",
    {
      d: "M19 19h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.62L18.3 9.38a1 1 0 0 0-.78-.38H14",
      key: "1dkp3j"
    }
  ],
  ["path", { d: "M2 13v5a1 1 0 0 0 1 1h2", key: "pkmmzz" }],
  [
    "path",
    { d: "M4 3 2.15 5.15a.495.495 0 0 0 .35.86h2.15a.47.47 0 0 1 .35.86L3 9.02", key: "1n26pd" }
  ],
  ["circle", { cx: "17", cy: "19", r: "2", key: "1nxcgd" }],
  ["circle", { cx: "7", cy: "19", r: "2", key: "gzo7y7" }]
];
var TruckElectric = createLucideIcon("truck-electric", __iconNode1527);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/truck.js
var __iconNode1528 = [
  ["path", { d: "M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2", key: "wrbu53" }],
  ["path", { d: "M15 18H9", key: "1lyqi6" }],
  [
    "path",
    {
      d: "M19 18h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14",
      key: "lysw3i"
    }
  ],
  ["circle", { cx: "17", cy: "18", r: "2", key: "332jqn" }],
  ["circle", { cx: "7", cy: "18", r: "2", key: "19iecd" }]
];
var Truck = createLucideIcon("truck", __iconNode1528);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/turkish-lira.js
var __iconNode1529 = [
  ["path", { d: "M15 4 5 9", key: "14bkc9" }],
  ["path", { d: "m15 8.5-10 5", key: "1grtsx" }],
  ["path", { d: "M18 12a9 9 0 0 1-9 9V3", key: "1sst7f" }]
];
var TurkishLira = createLucideIcon("turkish-lira", __iconNode1529);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/turntable.js
var __iconNode1530 = [
  ["path", { d: "M10 12.01h.01", key: "7rp0yl" }],
  ["path", { d: "M18 8v4a8 8 0 0 1-1.07 4", key: "1st48v" }],
  ["circle", { cx: "10", cy: "12", r: "4", key: "19levz" }],
  ["rect", { x: "2", y: "4", width: "20", height: "16", rx: "2", key: "izxlao" }]
];
var Turntable = createLucideIcon("turntable", __iconNode1530);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/turtle.js
var __iconNode1531 = [
  [
    "path",
    {
      d: "m12 10 2 4v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3a8 8 0 1 0-16 0v3a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-3l2-4h4Z",
      key: "1lbbv7"
    }
  ],
  ["path", { d: "M4.82 7.9 8 10", key: "m9wose" }],
  ["path", { d: "M15.18 7.9 12 10", key: "p8dp2u" }],
  ["path", { d: "M16.93 10H20a2 2 0 0 1 0 4H2", key: "12nsm7" }]
];
var Turtle = createLucideIcon("turtle", __iconNode1531);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tv-minimal-play.js
var __iconNode1532 = [
  [
    "path",
    {
      d: "M15.033 9.44a.647.647 0 0 1 0 1.12l-4.065 2.352a.645.645 0 0 1-.968-.56V7.648a.645.645 0 0 1 .967-.56z",
      key: "vbtd3f"
    }
  ],
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }]
];
var TvMinimalPlay = createLucideIcon("tv-minimal-play", __iconNode1532);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tv-minimal.js
var __iconNode1533 = [
  ["path", { d: "M7 21h10", key: "1b0cd5" }],
  ["rect", { width: "20", height: "14", x: "2", y: "3", rx: "2", key: "48i651" }]
];
var TvMinimal = createLucideIcon("tv-minimal", __iconNode1533);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/tv.js
var __iconNode1534 = [
  ["path", { d: "m17 2-5 5-5-5", key: "16satq" }],
  ["rect", { width: "20", height: "15", x: "2", y: "7", rx: "2", key: "1e6viu" }]
];
var Tv = createLucideIcon("tv", __iconNode1534);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/twitter.js
var __iconNode1535 = [
  [
    "path",
    {
      d: "M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z",
      key: "pff0z6"
    }
  ]
];
var Twitter = createLucideIcon("twitter", __iconNode1535);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/type-outline.js
var __iconNode1536 = [
  [
    "path",
    {
      d: "M14 16.5a.5.5 0 0 0 .5.5h.5a2 2 0 0 1 0 4H9a2 2 0 0 1 0-4h.5a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V8a2 2 0 0 1-4 0V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v3a2 2 0 0 1-4 0v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5Z",
      key: "1reda3"
    }
  ]
];
var TypeOutline = createLucideIcon("type-outline", __iconNode1536);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/twitch.js
var __iconNode1537 = [
  ["path", { d: "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7", key: "c0yzno" }]
];
var Twitch = createLucideIcon("twitch", __iconNode1537);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/type.js
var __iconNode1538 = [
  ["path", { d: "M12 4v16", key: "1654pz" }],
  ["path", { d: "M4 7V5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2", key: "e0r10z" }],
  ["path", { d: "M9 20h6", key: "s66wpe" }]
];
var Type = createLucideIcon("type", __iconNode1538);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/umbrella-off.js
var __iconNode1539 = [
  ["path", { d: "M12 13v7a2 2 0 0 0 4 0", key: "rpgb42" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  [
    "path",
    { d: "M18.656 13h2.336a1 1 0 0 0 .97-1.274 10.284 10.284 0 0 0-12.07-7.51", key: "yawknk" }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  ["path", { d: "M5.961 5.957a10.28 10.28 0 0 0-3.922 5.769A1 1 0 0 0 3 13h10", key: "5sfalc" }]
];
var UmbrellaOff = createLucideIcon("umbrella-off", __iconNode1539);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/umbrella.js
var __iconNode1540 = [
  ["path", { d: "M12 13v7a2 2 0 0 0 4 0", key: "rpgb42" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  [
    "path",
    {
      d: "M20.992 13a1 1 0 0 0 .97-1.274 10.284 10.284 0 0 0-19.923 0A1 1 0 0 0 3 13z",
      key: "124nyo"
    }
  ]
];
var Umbrella = createLucideIcon("umbrella", __iconNode1540);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/undo-2.js
var __iconNode1541 = [
  ["path", { d: "M9 14 4 9l5-5", key: "102s5s" }],
  ["path", { d: "M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11", key: "f3b9sd" }]
];
var Undo2 = createLucideIcon("undo-2", __iconNode1541);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/undo-dot.js
var __iconNode1542 = [
  ["path", { d: "M21 17a9 9 0 0 0-15-6.7L3 13", key: "8mp6z9" }],
  ["path", { d: "M3 7v6h6", key: "1v2h90" }],
  ["circle", { cx: "12", cy: "17", r: "1", key: "1ixnty" }]
];
var UndoDot = createLucideIcon("undo-dot", __iconNode1542);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/underline.js
var __iconNode1543 = [
  ["path", { d: "M6 4v6a6 6 0 0 0 12 0V4", key: "9kb039" }],
  ["line", { x1: "4", x2: "20", y1: "20", y2: "20", key: "nun2al" }]
];
var Underline = createLucideIcon("underline", __iconNode1543);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/undo.js
var __iconNode1544 = [
  ["path", { d: "M3 7v6h6", key: "1v2h90" }],
  ["path", { d: "M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13", key: "1r6uu6" }]
];
var Undo = createLucideIcon("undo", __iconNode1544);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/unfold-horizontal.js
var __iconNode1545 = [
  ["path", { d: "M16 12h6", key: "15xry1" }],
  ["path", { d: "M8 12H2", key: "1jqql6" }],
  ["path", { d: "M12 2v2", key: "tus03m" }],
  ["path", { d: "M12 8v2", key: "1woqiv" }],
  ["path", { d: "M12 14v2", key: "8jcxud" }],
  ["path", { d: "M12 20v2", key: "1lh1kg" }],
  ["path", { d: "m19 15 3-3-3-3", key: "wjy7rq" }],
  ["path", { d: "m5 9-3 3 3 3", key: "j64kie" }]
];
var UnfoldHorizontal = createLucideIcon("unfold-horizontal", __iconNode1545);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/unfold-vertical.js
var __iconNode1546 = [
  ["path", { d: "M12 22v-6", key: "6o8u61" }],
  ["path", { d: "M12 8V2", key: "1wkif3" }],
  ["path", { d: "M4 12H2", key: "rhcxmi" }],
  ["path", { d: "M10 12H8", key: "s88cx1" }],
  ["path", { d: "M16 12h-2", key: "10asgb" }],
  ["path", { d: "M22 12h-2", key: "14jgyd" }],
  ["path", { d: "m15 19-3 3-3-3", key: "11eu04" }],
  ["path", { d: "m15 5-3-3-3 3", key: "itvq4r" }]
];
var UnfoldVertical = createLucideIcon("unfold-vertical", __iconNode1546);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/university.js
var __iconNode1547 = [
  ["path", { d: "M14 21v-3a2 2 0 0 0-4 0v3", key: "1rgiei" }],
  ["path", { d: "M18 12h.01", key: "yjnet6" }],
  ["path", { d: "M18 16h.01", key: "plv8zi" }],
  [
    "path",
    {
      d: "M22 7a1 1 0 0 0-1-1h-2a2 2 0 0 1-1.143-.359L13.143 2.36a2 2 0 0 0-2.286-.001L6.143 5.64A2 2 0 0 1 5 6H3a1 1 0 0 0-1 1v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2z",
      key: "1ogmi3"
    }
  ],
  ["path", { d: "M6 12h.01", key: "c2rlol" }],
  ["path", { d: "M6 16h.01", key: "1pmjb7" }],
  ["circle", { cx: "12", cy: "10", r: "2", key: "1yojzk" }]
];
var University = createLucideIcon("university", __iconNode1547);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/ungroup.js
var __iconNode1548 = [
  ["rect", { width: "8", height: "6", x: "5", y: "4", rx: "1", key: "nzclkv" }],
  ["rect", { width: "8", height: "6", x: "11", y: "14", rx: "1", key: "4tytwb" }]
];
var Ungroup = createLucideIcon("ungroup", __iconNode1548);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/unlink-2.js
var __iconNode1549 = [
  ["path", { d: "M15 7h2a5 5 0 0 1 0 10h-2m-6 0H7A5 5 0 0 1 7 7h2", key: "1re2ne" }]
];
var Unlink2 = createLucideIcon("unlink-2", __iconNode1549);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/unlink.js
var __iconNode1550 = [
  [
    "path",
    {
      d: "m18.84 12.25 1.72-1.71h-.02a5.004 5.004 0 0 0-.12-7.07 5.006 5.006 0 0 0-6.95 0l-1.72 1.71",
      key: "yqzxt4"
    }
  ],
  [
    "path",
    {
      d: "m5.17 11.75-1.71 1.71a5.004 5.004 0 0 0 .12 7.07 5.006 5.006 0 0 0 6.95 0l1.71-1.71",
      key: "4qinb0"
    }
  ],
  ["line", { x1: "8", x2: "8", y1: "2", y2: "5", key: "1041cp" }],
  ["line", { x1: "2", x2: "5", y1: "8", y2: "8", key: "14m1p5" }],
  ["line", { x1: "16", x2: "16", y1: "19", y2: "22", key: "rzdirn" }],
  ["line", { x1: "19", x2: "22", y1: "16", y2: "16", key: "ox905f" }]
];
var Unlink = createLucideIcon("unlink", __iconNode1550);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/unplug.js
var __iconNode1551 = [
  ["path", { d: "m19 5 3-3", key: "yk6iyv" }],
  ["path", { d: "m2 22 3-3", key: "19mgm9" }],
  [
    "path",
    { d: "M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z", key: "goz73y" }
  ],
  ["path", { d: "M7.5 13.5 10 11", key: "7xgeeb" }],
  ["path", { d: "M10.5 16.5 13 14", key: "10btkg" }],
  [
    "path",
    { d: "m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z", key: "1snsnr" }
  ]
];
var Unplug = createLucideIcon("unplug", __iconNode1551);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/upload.js
var __iconNode1552 = [
  ["path", { d: "M12 3v12", key: "1x0j5s" }],
  ["path", { d: "m17 8-5-5-5 5", key: "7q97r8" }],
  ["path", { d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4", key: "ih7n3h" }]
];
var Upload = createLucideIcon("upload", __iconNode1552);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/usb.js
var __iconNode1553 = [
  ["circle", { cx: "10", cy: "7", r: "1", key: "dypaad" }],
  ["circle", { cx: "4", cy: "20", r: "1", key: "22iqad" }],
  ["path", { d: "M4.7 19.3 19 5", key: "1enqfc" }],
  ["path", { d: "m21 3-3 1 2 2Z", key: "d3ov82" }],
  ["path", { d: "M9.26 7.68 5 12l2 5", key: "1esawj" }],
  ["path", { d: "m10 14 5 2 3.5-3.5", key: "v8oal5" }],
  ["path", { d: "m18 12 1-1 1 1-1 1Z", key: "1bh22v" }]
];
var Usb = createLucideIcon("usb", __iconNode1553);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-check.js
var __iconNode1554 = [
  ["path", { d: "m16 11 2 2 4-4", key: "9rsbq5" }],
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }]
];
var UserCheck = createLucideIcon("user-check", __iconNode1554);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-cog.js
var __iconNode1555 = [
  ["path", { d: "M10 15H6a4 4 0 0 0-4 4v2", key: "1nfge6" }],
  ["path", { d: "m14.305 16.53.923-.382", key: "1itpsq" }],
  ["path", { d: "m15.228 13.852-.923-.383", key: "eplpkm" }],
  ["path", { d: "m16.852 12.228-.383-.923", key: "13v3q0" }],
  ["path", { d: "m16.852 17.772-.383.924", key: "1i8mnm" }],
  ["path", { d: "m19.148 12.228.383-.923", key: "1q8j1v" }],
  ["path", { d: "m19.53 18.696-.382-.924", key: "vk1qj3" }],
  ["path", { d: "m20.772 13.852.924-.383", key: "n880s0" }],
  ["path", { d: "m20.772 16.148.924.383", key: "1g6xey" }],
  ["circle", { cx: "18", cy: "15", r: "3", key: "gjjjvw" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }]
];
var UserCog = createLucideIcon("user-cog", __iconNode1555);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-lock.js
var __iconNode1556 = [
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }],
  ["path", { d: "M10.3 15H7a4 4 0 0 0-4 4v2", key: "3bnktk" }],
  ["path", { d: "M15 15.5V14a2 2 0 0 1 4 0v1.5", key: "12ym5i" }],
  ["rect", { width: "8", height: "5", x: "13", y: "16", rx: ".899", key: "4p176n" }]
];
var UserLock = createLucideIcon("user-lock", __iconNode1556);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-minus.js
var __iconNode1557 = [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "22", x2: "16", y1: "11", y2: "11", key: "1shjgl" }]
];
var UserMinus = createLucideIcon("user-minus", __iconNode1557);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-pen.js
var __iconNode1558 = [
  ["path", { d: "M11.5 15H7a4 4 0 0 0-4 4v2", key: "15lzij" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }]
];
var UserPen = createLucideIcon("user-pen", __iconNode1558);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-plus.js
var __iconNode1559 = [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "19", x2: "19", y1: "8", y2: "14", key: "1bvyxn" }],
  ["line", { x1: "22", x2: "16", y1: "11", y2: "11", key: "1shjgl" }]
];
var UserPlus = createLucideIcon("user-plus", __iconNode1559);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-check.js
var __iconNode1560 = [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
];
var UserRoundCheck = createLucideIcon("user-round-check", __iconNode1560);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-cog.js
var __iconNode1561 = [
  ["path", { d: "m14.305 19.53.923-.382", key: "3m78fa" }],
  ["path", { d: "m15.228 16.852-.923-.383", key: "npixar" }],
  ["path", { d: "m16.852 15.228-.383-.923", key: "5xggr7" }],
  ["path", { d: "m16.852 20.772-.383.924", key: "dpfhf9" }],
  ["path", { d: "m19.148 15.228.383-.923", key: "1reyyz" }],
  ["path", { d: "m19.53 21.696-.382-.924", key: "1goivc" }],
  ["path", { d: "M2 21a8 8 0 0 1 10.434-7.62", key: "1yezr2" }],
  ["path", { d: "m20.772 16.852.924-.383", key: "htqkph" }],
  ["path", { d: "m20.772 19.148.924.383", key: "9w9pjp" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var UserRoundCog = createLucideIcon("user-round-cog", __iconNode1561);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-minus.js
var __iconNode1562 = [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M22 19h-6", key: "vcuq98" }]
];
var UserRoundMinus = createLucideIcon("user-round-minus", __iconNode1562);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-pen.js
var __iconNode1563 = [
  ["path", { d: "M2 21a8 8 0 0 1 10.821-7.487", key: "1c8h7z" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }]
];
var UserRoundPen = createLucideIcon("user-round-pen", __iconNode1563);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-search.js
var __iconNode1564 = [
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M2 21a8 8 0 0 1 10.434-7.62", key: "1yezr2" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }],
  ["path", { d: "m22 22-1.9-1.9", key: "1e5ubv" }]
];
var UserRoundSearch = createLucideIcon("user-round-search", __iconNode1564);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-plus.js
var __iconNode1565 = [
  ["path", { d: "M2 21a8 8 0 0 1 13.292-6", key: "bjp14o" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M19 16v6", key: "tddt3s" }],
  ["path", { d: "M22 19h-6", key: "vcuq98" }]
];
var UserRoundPlus = createLucideIcon("user-round-plus", __iconNode1565);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round-x.js
var __iconNode1566 = [
  ["path", { d: "M2 21a8 8 0 0 1 11.873-7", key: "74fkxq" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "m17 17 5 5", key: "p7ous7" }],
  ["path", { d: "m22 17-5 5", key: "gqnmv0" }]
];
var UserRoundX = createLucideIcon("user-round-x", __iconNode1566);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-round.js
var __iconNode1567 = [
  ["circle", { cx: "12", cy: "8", r: "5", key: "1hypcn" }],
  ["path", { d: "M20 21a8 8 0 0 0-16 0", key: "rfgkzh" }]
];
var UserRound = createLucideIcon("user-round", __iconNode1567);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-search.js
var __iconNode1568 = [
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }],
  ["path", { d: "M10.3 15H7a4 4 0 0 0-4 4v2", key: "3bnktk" }],
  ["circle", { cx: "17", cy: "17", r: "3", key: "18b49y" }],
  ["path", { d: "m21 21-1.9-1.9", key: "1g2n9r" }]
];
var UserSearch = createLucideIcon("user-search", __iconNode1568);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-star.js
var __iconNode1569 = [
  [
    "path",
    {
      d: "M16.051 12.616a1 1 0 0 1 1.909.024l.737 1.452a1 1 0 0 0 .737.535l1.634.256a1 1 0 0 1 .588 1.806l-1.172 1.168a1 1 0 0 0-.282.866l.259 1.613a1 1 0 0 1-1.541 1.134l-1.465-.75a1 1 0 0 0-.912 0l-1.465.75a1 1 0 0 1-1.539-1.133l.258-1.613a1 1 0 0 0-.282-.866l-1.156-1.153a1 1 0 0 1 .572-1.822l1.633-.256a1 1 0 0 0 .737-.535z",
      key: "1m8t9f"
    }
  ],
  ["path", { d: "M8 15H7a4 4 0 0 0-4 4v2", key: "l9tmp8" }],
  ["circle", { cx: "10", cy: "7", r: "4", key: "e45bow" }]
];
var UserStar = createLucideIcon("user-star", __iconNode1569);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user-x.js
var __iconNode1570 = [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }],
  ["line", { x1: "17", x2: "22", y1: "8", y2: "13", key: "3nzzx3" }],
  ["line", { x1: "22", x2: "17", y1: "8", y2: "13", key: "1swrse" }]
];
var UserX = createLucideIcon("user-x", __iconNode1570);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/users-round.js
var __iconNode1571 = [
  ["path", { d: "M18 21a8 8 0 0 0-16 0", key: "3ypg7q" }],
  ["circle", { cx: "10", cy: "8", r: "5", key: "o932ke" }],
  ["path", { d: "M22 20c0-3.37-2-6.5-4-8a5 5 0 0 0-.45-8.3", key: "10s06x" }]
];
var UsersRound = createLucideIcon("users-round", __iconNode1571);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/users.js
var __iconNode1572 = [
  ["path", { d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2", key: "1yyitq" }],
  ["path", { d: "M16 3.128a4 4 0 0 1 0 7.744", key: "16gr8j" }],
  ["path", { d: "M22 21v-2a4 4 0 0 0-3-3.87", key: "kshegd" }],
  ["circle", { cx: "9", cy: "7", r: "4", key: "nufk8" }]
];
var Users = createLucideIcon("users", __iconNode1572);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/user.js
var __iconNode1573 = [
  ["path", { d: "M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2", key: "975kel" }],
  ["circle", { cx: "12", cy: "7", r: "4", key: "17ys0d" }]
];
var User = createLucideIcon("user", __iconNode1573);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/utensils-crossed.js
var __iconNode1574 = [
  ["path", { d: "m16 2-2.3 2.3a3 3 0 0 0 0 4.2l1.8 1.8a3 3 0 0 0 4.2 0L22 8", key: "n7qcjb" }],
  [
    "path",
    { d: "M15 15 3.3 3.3a4.2 4.2 0 0 0 0 6l7.3 7.3c.7.7 2 .7 2.8 0L15 15Zm0 0 7 7", key: "d0u48b" }
  ],
  ["path", { d: "m2.1 21.8 6.4-6.3", key: "yn04lh" }],
  ["path", { d: "m19 5-7 7", key: "194lzd" }]
];
var UtensilsCrossed = createLucideIcon("utensils-crossed", __iconNode1574);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/utensils.js
var __iconNode1575 = [
  ["path", { d: "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2", key: "cjf0a3" }],
  ["path", { d: "M7 2v20", key: "1473qp" }],
  ["path", { d: "M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7", key: "j28e5" }]
];
var Utensils = createLucideIcon("utensils", __iconNode1575);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/utility-pole.js
var __iconNode1576 = [
  ["path", { d: "M12 2v20", key: "t6zp3m" }],
  ["path", { d: "M2 5h20", key: "1fs1ex" }],
  ["path", { d: "M3 3v2", key: "9imdir" }],
  ["path", { d: "M7 3v2", key: "n0os7" }],
  ["path", { d: "M17 3v2", key: "1l2re6" }],
  ["path", { d: "M21 3v2", key: "1duuac" }],
  ["path", { d: "m19 5-7 7-7-7", key: "133zxf" }]
];
var UtilityPole = createLucideIcon("utility-pole", __iconNode1576);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vault.js
var __iconNode1577 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["circle", { cx: "7.5", cy: "7.5", r: ".5", fill: "currentColor", key: "kqv944" }],
  ["path", { d: "m7.9 7.9 2.7 2.7", key: "hpeyl3" }],
  ["circle", { cx: "16.5", cy: "7.5", r: ".5", fill: "currentColor", key: "w0ekpg" }],
  ["path", { d: "m13.4 10.6 2.7-2.7", key: "264c1n" }],
  ["circle", { cx: "7.5", cy: "16.5", r: ".5", fill: "currentColor", key: "nkw3mc" }],
  ["path", { d: "m7.9 16.1 2.7-2.7", key: "p81g5e" }],
  ["circle", { cx: "16.5", cy: "16.5", r: ".5", fill: "currentColor", key: "fubopw" }],
  ["path", { d: "m13.4 13.4 2.7 2.7", key: "abhel3" }],
  ["circle", { cx: "12", cy: "12", r: "2", key: "1c9p78" }]
];
var Vault = createLucideIcon("vault", __iconNode1577);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vector-square.js
var __iconNode1578 = [
  ["path", { d: "M19.5 7a24 24 0 0 1 0 10", key: "8n60xe" }],
  ["path", { d: "M4.5 7a24 24 0 0 0 0 10", key: "2lmadr" }],
  ["path", { d: "M7 19.5a24 24 0 0 0 10 0", key: "1q94o2" }],
  ["path", { d: "M7 4.5a24 24 0 0 1 10 0", key: "2z8ypa" }],
  ["rect", { x: "17", y: "17", width: "5", height: "5", rx: "1", key: "1ac74s" }],
  ["rect", { x: "17", y: "2", width: "5", height: "5", rx: "1", key: "1e7h5j" }],
  ["rect", { x: "2", y: "17", width: "5", height: "5", rx: "1", key: "1t4eah" }],
  ["rect", { x: "2", y: "2", width: "5", height: "5", rx: "1", key: "940dhs" }]
];
var VectorSquare = createLucideIcon("vector-square", __iconNode1578);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/variable.js
var __iconNode1579 = [
  ["path", { d: "M8 21s-4-3-4-9 4-9 4-9", key: "uto9ud" }],
  ["path", { d: "M16 3s4 3 4 9-4 9-4 9", key: "4w2vsq" }],
  ["line", { x1: "15", x2: "9", y1: "9", y2: "15", key: "f7djnv" }],
  ["line", { x1: "9", x2: "15", y1: "9", y2: "15", key: "1shsy8" }]
];
var Variable = createLucideIcon("variable", __iconNode1579);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vegan.js
var __iconNode1580 = [
  ["path", { d: "M16 8q6 0 6-6-6 0-6 6", key: "qsyyc4" }],
  ["path", { d: "M17.41 3.59a10 10 0 1 0 3 3", key: "41m9h7" }],
  ["path", { d: "M2 2a26.6 26.6 0 0 1 10 20c.9-6.82 1.5-9.5 4-14", key: "qiv7li" }]
];
var Vegan = createLucideIcon("vegan", __iconNode1580);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/venetian-mask.js
var __iconNode1581 = [
  ["path", { d: "M18 11c-1.5 0-2.5.5-3 2", key: "1fod00" }],
  [
    "path",
    {
      d: "M4 6a2 2 0 0 0-2 2v4a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V8a2 2 0 0 0-2-2h-3a8 8 0 0 0-5 2 8 8 0 0 0-5-2z",
      key: "d70hit"
    }
  ],
  ["path", { d: "M6 11c1.5 0 2.5.5 3 2", key: "136fht" }]
];
var VenetianMask = createLucideIcon("venetian-mask", __iconNode1581);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/venus-and-mars.js
var __iconNode1582 = [
  ["path", { d: "M10 20h4", key: "ni2waw" }],
  ["path", { d: "M12 16v6", key: "c8a4gj" }],
  ["path", { d: "M17 2h4v4", key: "vhe59" }],
  ["path", { d: "m21 2-5.46 5.46", key: "19kypf" }],
  ["circle", { cx: "12", cy: "11", r: "5", key: "16gxyc" }]
];
var VenusAndMars = createLucideIcon("venus-and-mars", __iconNode1582);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/venus.js
var __iconNode1583 = [
  ["path", { d: "M12 15v7", key: "t2xh3l" }],
  ["path", { d: "M9 19h6", key: "456am0" }],
  ["circle", { cx: "12", cy: "9", r: "6", key: "1nw4tq" }]
];
var Venus = createLucideIcon("venus", __iconNode1583);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vibrate.js
var __iconNode1584 = [
  ["path", { d: "m2 8 2 2-2 2 2 2-2 2", key: "sv1b1" }],
  ["path", { d: "m22 8-2 2 2 2-2 2 2 2", key: "101i4y" }],
  ["rect", { width: "8", height: "14", x: "8", y: "5", rx: "1", key: "1oyrl4" }]
];
var Vibrate = createLucideIcon("vibrate", __iconNode1584);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vibrate-off.js
var __iconNode1585 = [
  ["path", { d: "m2 8 2 2-2 2 2 2-2 2", key: "sv1b1" }],
  ["path", { d: "m22 8-2 2 2 2-2 2 2 2", key: "101i4y" }],
  ["path", { d: "M8 8v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2", key: "1hbad5" }],
  ["path", { d: "M16 10.34V6c0-.55-.45-1-1-1h-4.34", key: "1x5tf0" }],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var VibrateOff = createLucideIcon("vibrate-off", __iconNode1585);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/video-off.js
var __iconNode1586 = [
  [
    "path",
    { d: "M10.66 6H14a2 2 0 0 1 2 2v2.5l5.248-3.062A.5.5 0 0 1 22 7.87v8.196", key: "w8jjjt" }
  ],
  ["path", { d: "M16 16a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2", key: "1xawa7" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var VideoOff = createLucideIcon("video-off", __iconNode1586);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/video.js
var __iconNode1587 = [
  [
    "path",
    {
      d: "m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5",
      key: "ftymec"
    }
  ],
  ["rect", { x: "2", y: "6", width: "14", height: "12", rx: "2", key: "158x01" }]
];
var Video = createLucideIcon("video", __iconNode1587);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/videotape.js
var __iconNode1588 = [
  ["rect", { width: "20", height: "16", x: "2", y: "4", rx: "2", key: "18n3k1" }],
  ["path", { d: "M2 8h20", key: "d11cs7" }],
  ["circle", { cx: "8", cy: "14", r: "2", key: "1k2qr5" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["circle", { cx: "16", cy: "14", r: "2", key: "14k7lr" }]
];
var Videotape = createLucideIcon("videotape", __iconNode1588);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/view.js
var __iconNode1589 = [
  ["path", { d: "M21 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2", key: "mrq65r" }],
  ["path", { d: "M21 7V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v2", key: "be3xqs" }],
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  [
    "path",
    {
      d: "M18.944 12.33a1 1 0 0 0 0-.66 7.5 7.5 0 0 0-13.888 0 1 1 0 0 0 0 .66 7.5 7.5 0 0 0 13.888 0",
      key: "11ak4c"
    }
  ]
];
var View = createLucideIcon("view", __iconNode1589);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/voicemail.js
var __iconNode1590 = [
  ["circle", { cx: "6", cy: "12", r: "4", key: "1ehtga" }],
  ["circle", { cx: "18", cy: "12", r: "4", key: "4vafl8" }],
  ["line", { x1: "6", x2: "18", y1: "16", y2: "16", key: "pmt8us" }]
];
var Voicemail = createLucideIcon("voicemail", __iconNode1590);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volleyball.js
var __iconNode1591 = [
  ["path", { d: "M11.1 7.1a16.55 16.55 0 0 1 10.9 4", key: "2880wi" }],
  ["path", { d: "M12 12a12.6 12.6 0 0 1-8.7 5", key: "113sja" }],
  ["path", { d: "M16.8 13.6a16.55 16.55 0 0 1-9 7.5", key: "1qmsgl" }],
  ["path", { d: "M20.7 17a12.8 12.8 0 0 0-8.7-5 13.3 13.3 0 0 1 0-10", key: "1bmeqp" }],
  ["path", { d: "M6.3 3.8a16.55 16.55 0 0 0 1.9 11.5", key: "iekzv9" }],
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }]
];
var Volleyball = createLucideIcon("volleyball", __iconNode1591);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volume-1.js
var __iconNode1592 = [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["path", { d: "M16 9a5 5 0 0 1 0 6", key: "1q6k2b" }]
];
var Volume1 = createLucideIcon("volume-1", __iconNode1592);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volume-2.js
var __iconNode1593 = [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["path", { d: "M16 9a5 5 0 0 1 0 6", key: "1q6k2b" }],
  ["path", { d: "M19.364 18.364a9 9 0 0 0 0-12.728", key: "ijwkga" }]
];
var Volume2 = createLucideIcon("volume-2", __iconNode1593);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volume-off.js
var __iconNode1594 = [
  ["path", { d: "M16 9a5 5 0 0 1 .95 2.293", key: "1fgyg8" }],
  ["path", { d: "M19.364 5.636a9 9 0 0 1 1.889 9.96", key: "l3zxae" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }],
  [
    "path",
    {
      d: "m7 7-.587.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298V11",
      key: "1gbwow"
    }
  ],
  ["path", { d: "M9.828 4.172A.686.686 0 0 1 11 4.657v.686", key: "s2je0y" }]
];
var VolumeOff = createLucideIcon("volume-off", __iconNode1594);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volume-x.js
var __iconNode1595 = [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ],
  ["line", { x1: "22", x2: "16", y1: "9", y2: "15", key: "1ewh16" }],
  ["line", { x1: "16", x2: "22", y1: "9", y2: "15", key: "5ykzw1" }]
];
var VolumeX = createLucideIcon("volume-x", __iconNode1595);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/volume.js
var __iconNode1596 = [
  [
    "path",
    {
      d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z",
      key: "uqj9uw"
    }
  ]
];
var Volume = createLucideIcon("volume", __iconNode1596);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/vote.js
var __iconNode1597 = [
  ["path", { d: "m9 12 2 2 4-4", key: "dzmm74" }],
  ["path", { d: "M5 7c0-1.1.9-2 2-2h10a2 2 0 0 1 2 2v12H5V7Z", key: "1ezoue" }],
  ["path", { d: "M22 19H2", key: "nuriw5" }]
];
var Vote = createLucideIcon("vote", __iconNode1597);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wallet-cards.js
var __iconNode1598 = [
  ["rect", { width: "18", height: "18", x: "3", y: "3", rx: "2", key: "afitv7" }],
  ["path", { d: "M3 9a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2", key: "4125el" }],
  [
    "path",
    {
      d: "M3 11h3c.8 0 1.6.3 2.1.9l1.1.9c1.6 1.6 4.1 1.6 5.7 0l1.1-.9c.5-.5 1.3-.9 2.1-.9H21",
      key: "1dpki6"
    }
  ]
];
var WalletCards = createLucideIcon("wallet-cards", __iconNode1598);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wallet-minimal.js
var __iconNode1599 = [
  ["path", { d: "M17 14h.01", key: "7oqj8z" }],
  [
    "path",
    {
      d: "M7 7h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14",
      key: "u1rqew"
    }
  ]
];
var WalletMinimal = createLucideIcon("wallet-minimal", __iconNode1599);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wallet.js
var __iconNode1600 = [
  [
    "path",
    {
      d: "M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1",
      key: "18etb6"
    }
  ],
  ["path", { d: "M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4", key: "xoc0q4" }]
];
var Wallet = createLucideIcon("wallet", __iconNode1600);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wallpaper.js
var __iconNode1601 = [
  ["path", { d: "M12 17v4", key: "1riwvh" }],
  ["path", { d: "M8 21h8", key: "1ev6f3" }],
  ["path", { d: "m9 17 6.1-6.1a2 2 0 0 1 2.81.01L22 15", key: "1sl52q" }],
  ["circle", { cx: "8", cy: "9", r: "2", key: "gjzl9d" }],
  ["rect", { x: "2", y: "3", width: "20", height: "14", rx: "2", key: "x3v2xh" }]
];
var Wallpaper = createLucideIcon("wallpaper", __iconNode1601);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wand.js
var __iconNode1602 = [
  ["path", { d: "M15 4V2", key: "z1p9b7" }],
  ["path", { d: "M15 16v-2", key: "px0unx" }],
  ["path", { d: "M8 9h2", key: "1g203m" }],
  ["path", { d: "M20 9h2", key: "19tzq7" }],
  ["path", { d: "M17.8 11.8 19 13", key: "yihg8r" }],
  ["path", { d: "M15 9h.01", key: "x1ddxp" }],
  ["path", { d: "M17.8 6.2 19 5", key: "fd4us0" }],
  ["path", { d: "m3 21 9-9", key: "1jfql5" }],
  ["path", { d: "M12.2 6.2 11 5", key: "i3da3b" }]
];
var Wand = createLucideIcon("wand", __iconNode1602);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wand-sparkles.js
var __iconNode1603 = [
  [
    "path",
    {
      d: "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72",
      key: "ul74o6"
    }
  ],
  ["path", { d: "m14 7 3 3", key: "1r5n42" }],
  ["path", { d: "M5 6v4", key: "ilb8ba" }],
  ["path", { d: "M19 14v4", key: "blhpug" }],
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M7 8H3", key: "zfb6yr" }],
  ["path", { d: "M21 16h-4", key: "1cnmox" }],
  ["path", { d: "M11 3H9", key: "1obp7u" }]
];
var WandSparkles = createLucideIcon("wand-sparkles", __iconNode1603);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/warehouse.js
var __iconNode1604 = [
  ["path", { d: "M18 21V10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v11", key: "pb2vm6" }],
  [
    "path",
    {
      d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 1.132-1.803l7.95-3.974a2 2 0 0 1 1.837 0l7.948 3.974A2 2 0 0 1 22 8z",
      key: "doq5xv"
    }
  ],
  ["path", { d: "M6 13h12", key: "yf64js" }],
  ["path", { d: "M6 17h12", key: "1jwigz" }]
];
var Warehouse = createLucideIcon("warehouse", __iconNode1604);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/washing-machine.js
var __iconNode1605 = [
  ["path", { d: "M3 6h3", key: "155dbl" }],
  ["path", { d: "M17 6h.01", key: "e2y6kg" }],
  ["rect", { width: "18", height: "20", x: "3", y: "2", rx: "2", key: "od3kk9" }],
  ["circle", { cx: "12", cy: "13", r: "5", key: "nlbqau" }],
  ["path", { d: "M12 18a2.5 2.5 0 0 0 0-5 2.5 2.5 0 0 1 0-5", key: "17lach" }]
];
var WashingMachine = createLucideIcon("washing-machine", __iconNode1605);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/watch.js
var __iconNode1606 = [
  ["path", { d: "M12 10v2.2l1.6 1", key: "n3r21l" }],
  [
    "path",
    { d: "m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05", key: "18k57s" }
  ],
  ["path", { d: "m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05", key: "16ny36" }],
  ["circle", { cx: "12", cy: "12", r: "6", key: "1vlfrh" }]
];
var Watch = createLucideIcon("watch", __iconNode1606);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/waves-ladder.js
var __iconNode1607 = [
  ["path", { d: "M19 5a2 2 0 0 0-2 2v11", key: "s41o68" }],
  [
    "path",
    {
      d: "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "rd2r6e"
    }
  ],
  ["path", { d: "M7 13h10", key: "1rwob1" }],
  ["path", { d: "M7 9h10", key: "12czzb" }],
  ["path", { d: "M9 5a2 2 0 0 0-2 2v11", key: "x0q4gh" }]
];
var WavesLadder = createLucideIcon("waves-ladder", __iconNode1607);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/waves.js
var __iconNode1608 = [
  [
    "path",
    {
      d: "M2 6c.6.5 1.2 1 2.5 1C7 7 7 5 9.5 5c2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "knzxuh"
    }
  ],
  [
    "path",
    {
      d: "M2 12c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "2jd2cc"
    }
  ],
  [
    "path",
    {
      d: "M2 18c.6.5 1.2 1 2.5 1 2.5 0 2.5-2 5-2 2.6 0 2.4 2 5 2 2.5 0 2.5-2 5-2 1.3 0 1.9.5 2.5 1",
      key: "rd2r6e"
    }
  ]
];
var Waves = createLucideIcon("waves", __iconNode1608);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/waypoints.js
var __iconNode1609 = [
  ["circle", { cx: "12", cy: "4.5", r: "2.5", key: "r5ysbb" }],
  ["path", { d: "m10.2 6.3-3.9 3.9", key: "1nzqf6" }],
  ["circle", { cx: "4.5", cy: "12", r: "2.5", key: "jydg6v" }],
  ["path", { d: "M7 12h10", key: "b7w52i" }],
  ["circle", { cx: "19.5", cy: "12", r: "2.5", key: "1piiel" }],
  ["path", { d: "m13.8 17.7 3.9-3.9", key: "1wyg1y" }],
  ["circle", { cx: "12", cy: "19.5", r: "2.5", key: "13o1pw" }]
];
var Waypoints = createLucideIcon("waypoints", __iconNode1609);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/webcam.js
var __iconNode1610 = [
  ["circle", { cx: "12", cy: "10", r: "8", key: "1gshiw" }],
  ["circle", { cx: "12", cy: "10", r: "3", key: "ilqhr7" }],
  ["path", { d: "M7 22h10", key: "10w4w3" }],
  ["path", { d: "M12 22v-4", key: "1utk9m" }]
];
var Webcam = createLucideIcon("webcam", __iconNode1610);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/webhook-off.js
var __iconNode1611 = [
  ["path", { d: "M17 17h-5c-1.09-.02-1.94.92-2.5 1.9A3 3 0 1 1 2.57 15", key: "1tvl6x" }],
  ["path", { d: "M9 3.4a4 4 0 0 1 6.52.66", key: "q04jfq" }],
  ["path", { d: "m6 17 3.1-5.8a2.5 2.5 0 0 0 .057-2.05", key: "azowf0" }],
  ["path", { d: "M20.3 20.3a4 4 0 0 1-2.3.7", key: "5joiws" }],
  ["path", { d: "M18.6 13a4 4 0 0 1 3.357 3.414", key: "cangb8" }],
  ["path", { d: "m12 6 .6 1", key: "tpjl1n" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var WebhookOff = createLucideIcon("webhook-off", __iconNode1611);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/webhook.js
var __iconNode1612 = [
  [
    "path",
    {
      d: "M18 16.98h-5.99c-1.1 0-1.95.94-2.48 1.9A4 4 0 0 1 2 17c.01-.7.2-1.4.57-2",
      key: "q3hayz"
    }
  ],
  ["path", { d: "m6 17 3.13-5.78c.53-.97.1-2.18-.5-3.1a4 4 0 1 1 6.89-4.06", key: "1go1hn" }],
  ["path", { d: "m12 6 3.13 5.73C15.66 12.7 16.9 13 18 13a4 4 0 0 1 0 8", key: "qlwsc0" }]
];
var Webhook = createLucideIcon("webhook", __iconNode1612);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/weight.js
var __iconNode1613 = [
  ["circle", { cx: "12", cy: "5", r: "3", key: "rqqgnr" }],
  [
    "path",
    {
      d: "M6.5 8a2 2 0 0 0-1.905 1.46L2.1 18.5A2 2 0 0 0 4 21h16a2 2 0 0 0 1.925-2.54L19.4 9.5A2 2 0 0 0 17.48 8Z",
      key: "56o5sh"
    }
  ]
];
var Weight = createLucideIcon("weight", __iconNode1613);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wheat-off.js
var __iconNode1614 = [
  ["path", { d: "m2 22 10-10", key: "28ilpk" }],
  ["path", { d: "m16 8-1.17 1.17", key: "1qqm82" }],
  [
    "path",
    {
      d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1rdhi6"
    }
  ],
  [
    "path",
    { d: "m8 8-.53.53a3.5 3.5 0 0 0 0 4.94L9 15l1.53-1.53c.55-.55.88-1.25.98-1.97", key: "4wz8re" }
  ],
  [
    "path",
    { d: "M10.91 5.26c.15-.26.34-.51.56-.73L13 3l1.53 1.53a3.5 3.5 0 0 1 .28 4.62", key: "rves66" }
  ],
  ["path", { d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z", key: "19rau1" }],
  [
    "path",
    {
      d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "tc8ph9"
    }
  ],
  [
    "path",
    {
      d: "m16 16-.53.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.49 3.49 0 0 1 1.97-.98",
      key: "ak46r"
    }
  ],
  [
    "path",
    {
      d: "M18.74 13.09c.26-.15.51-.34.73-.56L21 11l-1.53-1.53a3.5 3.5 0 0 0-4.62-.28",
      key: "1tw520"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var WheatOff = createLucideIcon("wheat-off", __iconNode1614);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wheat.js
var __iconNode1615 = [
  ["path", { d: "M2 22 16 8", key: "60hf96" }],
  [
    "path",
    {
      d: "M3.47 12.53 5 11l1.53 1.53a3.5 3.5 0 0 1 0 4.94L5 19l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1rdhi6"
    }
  ],
  [
    "path",
    {
      d: "M7.47 8.53 9 7l1.53 1.53a3.5 3.5 0 0 1 0 4.94L9 15l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "1sdzmb"
    }
  ],
  [
    "path",
    {
      d: "M11.47 4.53 13 3l1.53 1.53a3.5 3.5 0 0 1 0 4.94L13 11l-1.53-1.53a3.5 3.5 0 0 1 0-4.94Z",
      key: "eoatbi"
    }
  ],
  ["path", { d: "M20 2h2v2a4 4 0 0 1-4 4h-2V6a4 4 0 0 1 4-4Z", key: "19rau1" }],
  [
    "path",
    {
      d: "M11.47 17.47 13 19l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L5 19l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "tc8ph9"
    }
  ],
  [
    "path",
    {
      d: "M15.47 13.47 17 15l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L9 15l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "2m8kc5"
    }
  ],
  [
    "path",
    {
      d: "M19.47 9.47 21 11l-1.53 1.53a3.5 3.5 0 0 1-4.94 0L13 11l1.53-1.53a3.5 3.5 0 0 1 4.94 0Z",
      key: "vex3ng"
    }
  ]
];
var Wheat = createLucideIcon("wheat", __iconNode1615);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/whole-word.js
var __iconNode1616 = [
  ["circle", { cx: "7", cy: "12", r: "3", key: "12clwm" }],
  ["path", { d: "M10 9v6", key: "17i7lo" }],
  ["circle", { cx: "17", cy: "12", r: "3", key: "gl7c2s" }],
  ["path", { d: "M14 7v8", key: "dl84cr" }],
  ["path", { d: "M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1", key: "lt2kga" }]
];
var WholeWord = createLucideIcon("whole-word", __iconNode1616);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-cog.js
var __iconNode1617 = [
  ["path", { d: "m14.305 19.53.923-.382", key: "3m78fa" }],
  ["path", { d: "m15.228 16.852-.923-.383", key: "npixar" }],
  ["path", { d: "m16.852 15.228-.383-.923", key: "5xggr7" }],
  ["path", { d: "m16.852 20.772-.383.924", key: "dpfhf9" }],
  ["path", { d: "m19.148 15.228.383-.923", key: "1reyyz" }],
  ["path", { d: "m19.53 21.696-.382-.924", key: "1goivc" }],
  ["path", { d: "M2 7.82a15 15 0 0 1 20 0", key: "1ovjuk" }],
  ["path", { d: "m20.772 16.852.924-.383", key: "htqkph" }],
  ["path", { d: "m20.772 19.148.924.383", key: "9w9pjp" }],
  ["path", { d: "M5 11.858a10 10 0 0 1 11.5-1.785", key: "3sn16i" }],
  ["path", { d: "M8.5 15.429a5 5 0 0 1 2.413-1.31", key: "1pxovh" }],
  ["circle", { cx: "18", cy: "18", r: "3", key: "1xkwt0" }]
];
var WifiCog = createLucideIcon("wifi-cog", __iconNode1617);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-high.js
var __iconNode1618 = [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 14 0", key: "1x1e6c" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
];
var WifiHigh = createLucideIcon("wifi-high", __iconNode1618);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-low.js
var __iconNode1619 = [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
];
var WifiLow = createLucideIcon("wifi-low", __iconNode1619);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-off.js
var __iconNode1620 = [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 5.17-2.69", key: "1dl1wf" }],
  ["path", { d: "M19 12.859a10 10 0 0 0-2.007-1.523", key: "4k23kn" }],
  ["path", { d: "M2 8.82a15 15 0 0 1 4.177-2.643", key: "1grhjp" }],
  ["path", { d: "M22 8.82a15 15 0 0 0-11.288-3.764", key: "z3jwby" }],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var WifiOff = createLucideIcon("wifi-off", __iconNode1620);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-pen.js
var __iconNode1621 = [
  ["path", { d: "M2 8.82a15 15 0 0 1 20 0", key: "dnpr2z" }],
  [
    "path",
    {
      d: "M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z",
      key: "1817ys"
    }
  ],
  ["path", { d: "M5 12.859a10 10 0 0 1 10.5-2.222", key: "rpb7oy" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 3-1.406", key: "r8bmzl" }]
];
var WifiPen = createLucideIcon("wifi-pen", __iconNode1621);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-sync.js
var __iconNode1622 = [
  ["path", { d: "M11.965 10.105v4L13.5 12.5a5 5 0 0 1 8 1.5", key: "1immaq" }],
  ["path", { d: "M11.965 14.105h4", key: "uejny8" }],
  ["path", { d: "M17.965 18.105h4L20.43 19.71a5 5 0 0 1-8-1.5", key: "1i3a7e" }],
  ["path", { d: "M2 8.82a15 15 0 0 1 20 0", key: "dnpr2z" }],
  ["path", { d: "M21.965 22.105v-4", key: "1ku6vx" }],
  ["path", { d: "M5 12.86a10 10 0 0 1 3-2.032", key: "pemdtu" }],
  ["path", { d: "M8.5 16.429h.01", key: "2bm739" }]
];
var WifiSync = createLucideIcon("wifi-sync", __iconNode1622);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi-zero.js
var __iconNode1623 = [["path", { d: "M12 20h.01", key: "zekei9" }]];
var WifiZero = createLucideIcon("wifi-zero", __iconNode1623);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wifi.js
var __iconNode1624 = [
  ["path", { d: "M12 20h.01", key: "zekei9" }],
  ["path", { d: "M2 8.82a15 15 0 0 1 20 0", key: "dnpr2z" }],
  ["path", { d: "M5 12.859a10 10 0 0 1 14 0", key: "1x1e6c" }],
  ["path", { d: "M8.5 16.429a5 5 0 0 1 7 0", key: "1bycff" }]
];
var Wifi = createLucideIcon("wifi", __iconNode1624);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wind-arrow-down.js
var __iconNode1625 = [
  ["path", { d: "M10 2v8", key: "d4bbey" }],
  ["path", { d: "M12.8 21.6A2 2 0 1 0 14 18H2", key: "19kp1d" }],
  ["path", { d: "M17.5 10a2.5 2.5 0 1 1 2 4H2", key: "19kpjc" }],
  ["path", { d: "m6 6 4 4 4-4", key: "k13n16" }]
];
var WindArrowDown = createLucideIcon("wind-arrow-down", __iconNode1625);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wind.js
var __iconNode1626 = [
  ["path", { d: "M12.8 19.6A2 2 0 1 0 14 16H2", key: "148xed" }],
  ["path", { d: "M17.5 8a2.5 2.5 0 1 1 2 4H2", key: "1u4tom" }],
  ["path", { d: "M9.8 4.4A2 2 0 1 1 11 8H2", key: "75valh" }]
];
var Wind = createLucideIcon("wind", __iconNode1626);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wine-off.js
var __iconNode1627 = [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M7 10h3m7 0h-1.343", key: "v48bem" }],
  ["path", { d: "M12 15v7", key: "t2xh3l" }],
  [
    "path",
    {
      d: "M7.307 7.307A12.33 12.33 0 0 0 7 10a5 5 0 0 0 7.391 4.391M8.638 2.981C8.75 2.668 8.872 2.34 9 2h6c1.5 4 2 6 2 8 0 .407-.05.809-.145 1.198",
      key: "1ymjlu"
    }
  ],
  ["line", { x1: "2", x2: "22", y1: "2", y2: "22", key: "a6p6uj" }]
];
var WineOff = createLucideIcon("wine-off", __iconNode1627);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wine.js
var __iconNode1628 = [
  ["path", { d: "M8 22h8", key: "rmew8v" }],
  ["path", { d: "M7 10h10", key: "1101jm" }],
  ["path", { d: "M12 15v7", key: "t2xh3l" }],
  [
    "path",
    { d: "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z", key: "10ffi3" }
  ]
];
var Wine = createLucideIcon("wine", __iconNode1628);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/workflow.js
var __iconNode1629 = [
  ["rect", { width: "8", height: "8", x: "3", y: "3", rx: "2", key: "by2w9f" }],
  ["path", { d: "M7 11v4a2 2 0 0 0 2 2h4", key: "xkn7yn" }],
  ["rect", { width: "8", height: "8", x: "13", y: "13", rx: "2", key: "1cgmvn" }]
];
var Workflow = createLucideIcon("workflow", __iconNode1629);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/worm.js
var __iconNode1630 = [
  ["path", { d: "m19 12-1.5 3", key: "9bcu4o" }],
  ["path", { d: "M19.63 18.81 22 20", key: "121v98" }],
  [
    "path",
    {
      d: "M6.47 8.23a1.68 1.68 0 0 1 2.44 1.93l-.64 2.08a6.76 6.76 0 0 0 10.16 7.67l.42-.27a1 1 0 1 0-2.73-4.21l-.42.27a1.76 1.76 0 0 1-2.63-1.99l.64-2.08A6.66 6.66 0 0 0 3.94 3.9l-.7.4a1 1 0 1 0 2.55 4.34z",
      key: "1tij6q"
    }
  ]
];
var Worm = createLucideIcon("worm", __iconNode1630);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/wrench.js
var __iconNode1631 = [
  [
    "path",
    {
      d: "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.106-3.105c.32-.322.863-.22.983.218a6 6 0 0 1-8.259 7.057l-7.91 7.91a1 1 0 0 1-2.999-3l7.91-7.91a6 6 0 0 1 7.057-8.259c.438.12.54.662.219.984z",
      key: "1ngwbx"
    }
  ]
];
var Wrench = createLucideIcon("wrench", __iconNode1631);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/x.js
var __iconNode1632 = [
  ["path", { d: "M18 6 6 18", key: "1bl5f8" }],
  ["path", { d: "m6 6 12 12", key: "d8bk6v" }]
];
var X2 = createLucideIcon("x", __iconNode1632);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/youtube.js
var __iconNode1633 = [
  [
    "path",
    {
      d: "M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17",
      key: "1q2vi4"
    }
  ],
  ["path", { d: "m10 15 5-3-5-3z", key: "1jp15x" }]
];
var Youtube = createLucideIcon("youtube", __iconNode1633);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/zap-off.js
var __iconNode1634 = [
  ["path", { d: "M10.513 4.856 13.12 2.17a.5.5 0 0 1 .86.46l-1.377 4.317", key: "193nxd" }],
  ["path", { d: "M15.656 10H20a1 1 0 0 1 .78 1.63l-1.72 1.773", key: "27a7lr" }],
  [
    "path",
    {
      d: "M16.273 16.273 10.88 21.83a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14H4a1 1 0 0 1-.78-1.63l4.507-4.643",
      key: "1e0qe9"
    }
  ],
  ["path", { d: "m2 2 20 20", key: "1ooewy" }]
];
var ZapOff = createLucideIcon("zap-off", __iconNode1634);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/zap.js
var __iconNode1635 = [
  [
    "path",
    {
      d: "M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z",
      key: "1xq2db"
    }
  ]
];
var Zap = createLucideIcon("zap", __iconNode1635);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/zoom-in.js
var __iconNode1636 = [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["line", { x1: "21", x2: "16.65", y1: "21", y2: "16.65", key: "13gj7c" }],
  ["line", { x1: "11", x2: "11", y1: "8", y2: "14", key: "1vmskp" }],
  ["line", { x1: "8", x2: "14", y1: "11", y2: "11", key: "durymu" }]
];
var ZoomIn = createLucideIcon("zoom-in", __iconNode1636);

// ../../packages/aitable/node_modules/lucide-react/dist/esm/icons/zoom-out.js
var __iconNode1637 = [
  ["circle", { cx: "11", cy: "11", r: "8", key: "4ej97u" }],
  ["line", { x1: "21", x2: "16.65", y1: "21", y2: "16.65", key: "13gj7c" }],
  ["line", { x1: "8", x2: "14", y1: "11", y2: "11", key: "durymu" }]
];
var ZoomOut = createLucideIcon("zoom-out", __iconNode1637);

// ../../packages/aitable/src/ui/Toast.tsx
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1);
var defaultToastContext = {
  showToast: () => {
  },
  hideToast: () => {
  }
};
var ToastContext = (0, import_react106.createContext)(defaultToastContext);
function useToast() {
  const context = (0, import_react106.useContext)(ToastContext);
  return context;
}
function ToastProvider({ children }) {
  const [toasts, setToasts] = (0, import_react106.useState)([]);
  const showToast = (0, import_react106.useCallback)((toast2) => {
    const id = `toast-${Date.now()}-${Math.random()}`;
    const newToast = {
      id,
      duration: 3e3,
      ...toast2
    };
    setToasts((prev) => [...prev, newToast]);
    if (newToast.duration && newToast.duration > 0) {
      setTimeout(() => {
        hideToast(id);
      }, newToast.duration);
    }
  }, []);
  const hideToast = (0, import_react106.useCallback)((id) => {
    setToasts((prev) => prev.filter((t) => t.id !== id));
  }, []);
  return (0, import_jsx_runtime6.jsxs)(ToastContext.Provider, { value: { showToast, hideToast }, children: [
    children,
    (0, import_jsx_runtime6.jsx)(ToastContainer, { toasts, onClose: hideToast })
  ] });
}
function ToastContainer({ toasts, onClose }) {
  if (typeof window === "undefined") return null;
  return (0, import_react_dom.createPortal)(
    (0, import_jsx_runtime6.jsx)(
      "div",
      {
        className: "fixed top-4 right-4 z-[9999] flex flex-col gap-2 pointer-events-none",
        "aria-live": "polite",
        "aria-atomic": "true",
        children: toasts.map((toast2) => (0, import_jsx_runtime6.jsx)(Toast, { toast: toast2, onClose }, toast2.id))
      }
    ),
    document.body
  );
}
function Toast({ toast: toast2, onClose }) {
  const [isExiting, setIsExiting] = (0, import_react106.useState)(false);
  const handleClose = (0, import_react106.useCallback)(() => {
    setIsExiting(true);
    setTimeout(() => {
      onClose(toast2.id);
    }, 200);
  }, [toast2.id, onClose]);
  const iconConfig = {
    success: {
      icon: toast2.icon || (0, import_jsx_runtime6.jsx)(CircleCheckBig, { size: 20 }),
      color: tokens.colors.text.success,
      bgColor: tokens.colors.semantic.success.bg
    },
    error: {
      icon: toast2.icon || (0, import_jsx_runtime6.jsx)(CircleX, { size: 20 }),
      color: tokens.colors.text.error,
      bgColor: tokens.colors.semantic.error.bg
    },
    warning: {
      icon: toast2.icon || (0, import_jsx_runtime6.jsx)(CircleAlert, { size: 20 }),
      color: tokens.colors.text.warning,
      bgColor: tokens.colors.semantic.warning.bg
    },
    info: {
      icon: toast2.icon || (0, import_jsx_runtime6.jsx)(Info, { size: 20 }),
      color: tokens.colors.text.accent,
      bgColor: tokens.colors.semantic.info.bg
    }
  };
  const config = iconConfig[toast2.type];
  return (0, import_jsx_runtime6.jsxs)(
    "div",
    {
      role: "alert",
      className: cn2(
        "pointer-events-auto",
        "flex items-start gap-3 p-4 pr-3",
        "min-w-[320px] max-w-[420px]",
        "bg-white rounded-lg border shadow-lg",
        "transition-all duration-200 ease-out",
        // 进入动画
        !isExiting && "animate-in slide-in-from-right-8 fade-in-0",
        // 退出动画
        isExiting && "animate-out slide-out-to-right-8 fade-out-0"
      ),
      style: {
        backgroundColor: tokens.colors.surface.base,
        borderColor: tokens.colors.border.subtle,
        boxShadow: elevation.lg
      },
      children: [
        (0, import_jsx_runtime6.jsx)(
          "div",
          {
            className: "flex-shrink-0 flex items-center justify-center w-10 h-10 rounded-full",
            style: {
              color: config.color,
              backgroundColor: config.bgColor
            },
            children: config.icon
          }
        ),
        (0, import_jsx_runtime6.jsxs)("div", { className: "flex-1 min-w-0 pt-0.5", children: [
          toast2.title && (0, import_jsx_runtime6.jsx)(
            "div",
            {
              className: "font-semibold text-sm mb-0.5",
              style: { color: tokens.colors.text.primary },
              children: toast2.title
            }
          ),
          (0, import_jsx_runtime6.jsx)(
            "div",
            {
              className: "text-sm leading-relaxed",
              style: { color: tokens.colors.text.secondary },
              children: toast2.message
            }
          )
        ] }),
        (0, import_jsx_runtime6.jsx)(
          "button",
          {
            onClick: handleClose,
            className: cn2(
              "flex-shrink-0 p-1 rounded-md",
              "transition-colors duration-150",
              "hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
            ),
            style: {
              color: tokens.colors.text.tertiary
            },
            "aria-label": "关闭通知",
            children: (0, import_jsx_runtime6.jsx)(X2, { size: 16 })
          }
        )
      ]
    }
  );
}
var toastEmitter = null;
function setToastEmitter(emitter) {
  toastEmitter = emitter;
}
var toast = {
  success: (message2, title) => {
    toastEmitter?.showToast({ type: "success", message: message2, title });
  },
  error: (message2, title) => {
    toastEmitter?.showToast({ type: "error", message: message2, title });
  },
  warning: (message2, title) => {
    toastEmitter?.showToast({ type: "warning", message: message2, title });
  },
  info: (message2, title) => {
    toastEmitter?.showToast({ type: "info", message: message2, title });
  }
};
function ToastProviderWithEmitter({
  children
}) {
  return (0, import_jsx_runtime6.jsxs)(ToastProvider, { children: [
    (0, import_jsx_runtime6.jsx)(ToastEmitterSetup, {}),
    children
  ] });
}
function ToastEmitterSetup() {
  const toastContext = useToast();
  (0, import_react106.useEffect)(() => {
    setToastEmitter(toastContext);
    return () => {
      setToastEmitter(null);
    };
  }, [toastContext]);
  return null;
}

// ../../packages/aitable/src/grid/components/editors/basic/TextEditor.tsx
var import_react131 = __toESM(require_react(), 1);

// ../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t = arguments[e2];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// ../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e2) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e2.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}

// ../../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js
var React9 = __toESM(require_react());

// ../../node_modules/use-latest/dist/use-latest.esm.js
var import_react108 = __toESM(require_react());

// ../../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js
var import_react107 = __toESM(require_react());
var index = import_react107.useLayoutEffect;

// ../../node_modules/use-latest/dist/use-latest.esm.js
var useLatest = function useLatest2(value) {
  var ref = import_react108.default.useRef(value);
  index(function() {
    ref.current = value;
  });
  return ref;
};

// ../../node_modules/use-composed-ref/dist/use-composed-ref.esm.js
var import_react109 = __toESM(require_react());
var updateRef = function updateRef2(ref, value) {
  if (typeof ref === "function") {
    ref(value);
    return;
  }
  ref.current = value;
};
var useComposedRef = function useComposedRef2(libRef, userRef) {
  var prevUserRef = import_react109.default.useRef();
  return import_react109.default.useCallback(function(instance) {
    libRef.current = instance;
    if (prevUserRef.current) {
      updateRef(prevUserRef.current, null);
    }
    prevUserRef.current = userRef;
    if (!userRef) {
      return;
    }
    updateRef(userRef, instance);
  }, [userRef]);
};

// ../../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.development.esm.js
var HIDDEN_TEXTAREA_STYLE = {
  "min-height": "0",
  "max-height": "none",
  height: "0",
  visibility: "hidden",
  overflow: "hidden",
  position: "absolute",
  "z-index": "-1000",
  top: "0",
  right: "0",
  display: "block"
};
var forceHiddenStyles = function forceHiddenStyles2(node) {
  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function(key) {
    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], "important");
  });
};
var forceHiddenStyles$1 = forceHiddenStyles;
var hiddenTextarea = null;
var getHeight = function getHeight2(node, sizingData) {
  var height = node.scrollHeight;
  if (sizingData.sizingStyle.boxSizing === "border-box") {
    return height + sizingData.borderSize;
  }
  return height - sizingData.paddingSize;
};
function calculateNodeHeight(sizingData, value, minRows, maxRows) {
  if (minRows === void 0) {
    minRows = 1;
  }
  if (maxRows === void 0) {
    maxRows = Infinity;
  }
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    hiddenTextarea.setAttribute("tabindex", "-1");
    hiddenTextarea.setAttribute("aria-hidden", "true");
    forceHiddenStyles$1(hiddenTextarea);
  }
  if (hiddenTextarea.parentNode === null) {
    document.body.appendChild(hiddenTextarea);
  }
  var paddingSize = sizingData.paddingSize, borderSize = sizingData.borderSize, sizingStyle = sizingData.sizingStyle;
  var boxSizing = sizingStyle.boxSizing;
  Object.keys(sizingStyle).forEach(function(_key) {
    var key = _key;
    hiddenTextarea.style[key] = sizingStyle[key];
  });
  forceHiddenStyles$1(hiddenTextarea);
  hiddenTextarea.value = value;
  var height = getHeight(hiddenTextarea, sizingData);
  hiddenTextarea.value = value;
  height = getHeight(hiddenTextarea, sizingData);
  hiddenTextarea.value = "x";
  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;
  var minHeight = rowHeight * minRows;
  if (boxSizing === "border-box") {
    minHeight = minHeight + paddingSize + borderSize;
  }
  height = Math.max(minHeight, height);
  var maxHeight = rowHeight * maxRows;
  if (boxSizing === "border-box") {
    maxHeight = maxHeight + paddingSize + borderSize;
  }
  height = Math.min(maxHeight, height);
  return [height, rowHeight];
}
var noop3 = function noop4() {
};
var pick2 = function pick3(props, obj) {
  return props.reduce(function(acc, prop) {
    acc[prop] = obj[prop];
    return acc;
  }, {});
};
var SIZING_STYLE = [
  "borderBottomWidth",
  "borderLeftWidth",
  "borderRightWidth",
  "borderTopWidth",
  "boxSizing",
  "fontFamily",
  "fontSize",
  "fontStyle",
  "fontWeight",
  "letterSpacing",
  "lineHeight",
  "paddingBottom",
  "paddingLeft",
  "paddingRight",
  "paddingTop",
  // non-standard
  "tabSize",
  "textIndent",
  // non-standard
  "textRendering",
  "textTransform",
  "width",
  "wordBreak",
  "wordSpacing",
  "scrollbarGutter"
];
var isIE = !!document.documentElement.currentStyle;
var getSizingData = function getSizingData2(node) {
  var style = window.getComputedStyle(node);
  if (style === null) {
    return null;
  }
  var sizingStyle = pick2(SIZING_STYLE, style);
  var boxSizing = sizingStyle.boxSizing;
  if (boxSizing === "") {
    return null;
  }
  if (isIE && boxSizing === "border-box") {
    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + "px";
  }
  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);
  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);
  return {
    sizingStyle,
    paddingSize,
    borderSize
  };
};
var getSizingData$1 = getSizingData;
function useListener(target, type, listener) {
  var latestListener = useLatest(listener);
  React9.useLayoutEffect(function() {
    var handler = function handler2(ev) {
      return latestListener.current(ev);
    };
    if (!target) {
      return;
    }
    target.addEventListener(type, handler);
    return function() {
      return target.removeEventListener(type, handler);
    };
  }, []);
}
var useFormResetListener = function useFormResetListener2(libRef, listener) {
  useListener(document.body, "reset", function(ev) {
    if (libRef.current.form === ev.target) {
      listener(ev);
    }
  });
};
var useWindowResizeListener = function useWindowResizeListener2(listener) {
  useListener(window, "resize", listener);
};
var useFontsLoadedListener = function useFontsLoadedListener2(listener) {
  useListener(document.fonts, "loadingdone", listener);
};
var _excluded = ["cacheMeasurements", "maxRows", "minRows", "onChange", "onHeightChange"];
var TextareaAutosize = function TextareaAutosize2(_ref, userRef) {
  var cacheMeasurements = _ref.cacheMeasurements, maxRows = _ref.maxRows, minRows = _ref.minRows, _ref$onChange = _ref.onChange, onChange = _ref$onChange === void 0 ? noop3 : _ref$onChange, _ref$onHeightChange = _ref.onHeightChange, onHeightChange = _ref$onHeightChange === void 0 ? noop3 : _ref$onHeightChange, props = _objectWithoutPropertiesLoose(_ref, _excluded);
  if (props.style) {
    if ("maxHeight" in props.style) {
      throw new Error("Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.");
    }
    if ("minHeight" in props.style) {
      throw new Error("Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.");
    }
  }
  var isControlled = props.value !== void 0;
  var libRef = React9.useRef(null);
  var ref = useComposedRef(libRef, userRef);
  var heightRef = React9.useRef(0);
  var measurementsCacheRef = React9.useRef();
  var resizeTextarea = function resizeTextarea2() {
    var node = libRef.current;
    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData$1(node);
    if (!nodeSizingData) {
      return;
    }
    measurementsCacheRef.current = nodeSizingData;
    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || "x", minRows, maxRows), height = _calculateNodeHeight[0], rowHeight = _calculateNodeHeight[1];
    if (heightRef.current !== height) {
      heightRef.current = height;
      node.style.setProperty("height", height + "px", "important");
      onHeightChange(height, {
        rowHeight
      });
    }
  };
  var handleChange = function handleChange2(event) {
    if (!isControlled) {
      resizeTextarea();
    }
    onChange(event);
  };
  {
    React9.useLayoutEffect(resizeTextarea);
    useFormResetListener(libRef, function() {
      if (!isControlled) {
        var currentValue = libRef.current.value;
        requestAnimationFrame(function() {
          var node = libRef.current;
          if (node && currentValue !== node.value) {
            resizeTextarea();
          }
        });
      }
    });
    useWindowResizeListener(resizeTextarea);
    useFontsLoadedListener(resizeTextarea);
    return React9.createElement("textarea", _extends({}, props, {
      onChange: handleChange,
      ref
    }));
  }
};
var index2 = React9.forwardRef(TextareaAutosize);

// ../../packages/aitable/src/grid/components/editors/basic/TextEditor.tsx
var import_ts_keycode_enum = __toESM(require_Key_enum(), 1);

// ../../packages/aitable/src/grid/configs/grid.ts
var GRID_CONTAINER_ATTR = "data-t-grid-container";
var GRID_DEFAULT = {
  // Row
  rowHeight: 32,
  rowHeadWidth: 70,
  rowHeadIconPaddingTop: 8,
  appendRowHeight: 32,
  groupHeaderHeight: 48,
  maxRowCount: 5,
  // Column
  columnWidth: 150,
  columnHeadHeight: 32,
  columnHeadMenuSize: 12,
  columnHeadMenuClickableSize: 20,
  columnHeadPadding: 8,
  columnAppendBtnWidth: 100,
  columnResizeHandlerWidth: 5,
  columnResizeHandlerPaddingTop: 4,
  columnFreezeHandlerWidth: 8,
  columnFreezeHandlerHeight: 30,
  // Cell
  cellHorizontalPadding: 8,
  cellVerticalPaddingXS: 3,
  cellVerticalPaddingSM: 6,
  cellVerticalPaddingMD: 10,
  cellVerticalPaddingLG: 16,
  cellTextLineHeight: 22,
  fillHandlerSize: 5,
  // Statistics
  columnStatisticHeight: 40,
  minColumnStatisticWidth: 110,
  // Others
  scrollBuffer: 100,
  cellScrollBuffer: 16,
  cellScrollBarWidth: 5,
  cellScrollBarMinHeight: 16,
  cellScrollBarPaddingX: 1,
  cellScrollBarPaddingY: 4,
  cellEditorEdgePadding: 32
};
var DEFAULT_MOUSE_STATE = {
  x: 0,
  y: 0,
  rowIndex: -Infinity,
  columnIndex: -Infinity,
  type: "None" /* None */,
  isOutOfBounds: true
};
var DEFAULT_SCROLL_STATE = {
  scrollTop: 0,
  scrollLeft: 0,
  isScrolling: false
};
var DEFAULT_COLUMN_RESIZE_STATE = {
  columnIndex: -1,
  width: 0,
  x: 0
};
var DEFAULT_DRAG_STATE = {
  type: "None" /* None */,
  ranges: [],
  delta: 0,
  isDragging: false
};
var DEFAULT_FREEZE_COLUMN_STATE = {
  sourceIndex: -1,
  targetIndex: -1,
  isFreezing: false
};
var ROW_RELATED_REGIONS = /* @__PURE__ */ new Set([
  "Cell" /* Cell */,
  "RowHeader" /* RowHeader */,
  "RowHeaderCheckbox" /* RowHeaderCheckbox */,
  "RowHeaderDragHandler" /* RowHeaderDragHandler */,
  "RowHeaderExpandHandler" /* RowHeaderExpandHandler */
]);

// ../../node_modules/tailwindcss/dist/chunk-HTB5LLOP.mjs
var l = { inherit: "inherit", current: "currentcolor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "oklch(98.4% 0.003 247.858)", 100: "oklch(96.8% 0.007 247.896)", 200: "oklch(92.9% 0.013 255.508)", 300: "oklch(86.9% 0.022 252.894)", 400: "oklch(70.4% 0.04 256.788)", 500: "oklch(55.4% 0.046 257.417)", 600: "oklch(44.6% 0.043 257.281)", 700: "oklch(37.2% 0.044 257.287)", 800: "oklch(27.9% 0.041 260.031)", 900: "oklch(20.8% 0.042 265.755)", 950: "oklch(12.9% 0.042 264.695)" }, gray: { 50: "oklch(98.5% 0.002 247.839)", 100: "oklch(96.7% 0.003 264.542)", 200: "oklch(92.8% 0.006 264.531)", 300: "oklch(87.2% 0.01 258.338)", 400: "oklch(70.7% 0.022 261.325)", 500: "oklch(55.1% 0.027 264.364)", 600: "oklch(44.6% 0.03 256.802)", 700: "oklch(37.3% 0.034 259.733)", 800: "oklch(27.8% 0.033 256.848)", 900: "oklch(21% 0.034 264.665)", 950: "oklch(13% 0.028 261.692)" }, zinc: { 50: "oklch(98.5% 0 0)", 100: "oklch(96.7% 0.001 286.375)", 200: "oklch(92% 0.004 286.32)", 300: "oklch(87.1% 0.006 286.286)", 400: "oklch(70.5% 0.015 286.067)", 500: "oklch(55.2% 0.016 285.938)", 600: "oklch(44.2% 0.017 285.786)", 700: "oklch(37% 0.013 285.805)", 800: "oklch(27.4% 0.006 286.033)", 900: "oklch(21% 0.006 285.885)", 950: "oklch(14.1% 0.005 285.823)" }, neutral: { 50: "oklch(98.5% 0 0)", 100: "oklch(97% 0 0)", 200: "oklch(92.2% 0 0)", 300: "oklch(87% 0 0)", 400: "oklch(70.8% 0 0)", 500: "oklch(55.6% 0 0)", 600: "oklch(43.9% 0 0)", 700: "oklch(37.1% 0 0)", 800: "oklch(26.9% 0 0)", 900: "oklch(20.5% 0 0)", 950: "oklch(14.5% 0 0)" }, stone: { 50: "oklch(98.5% 0.001 106.423)", 100: "oklch(97% 0.001 106.424)", 200: "oklch(92.3% 0.003 48.717)", 300: "oklch(86.9% 0.005 56.366)", 400: "oklch(70.9% 0.01 56.259)", 500: "oklch(55.3% 0.013 58.071)", 600: "oklch(44.4% 0.011 73.639)", 700: "oklch(37.4% 0.01 67.558)", 800: "oklch(26.8% 0.007 34.298)", 900: "oklch(21.6% 0.006 56.043)", 950: "oklch(14.7% 0.004 49.25)" }, red: { 50: "oklch(97.1% 0.013 17.38)", 100: "oklch(93.6% 0.032 17.717)", 200: "oklch(88.5% 0.062 18.334)", 300: "oklch(80.8% 0.114 19.571)", 400: "oklch(70.4% 0.191 22.216)", 500: "oklch(63.7% 0.237 25.331)", 600: "oklch(57.7% 0.245 27.325)", 700: "oklch(50.5% 0.213 27.518)", 800: "oklch(44.4% 0.177 26.899)", 900: "oklch(39.6% 0.141 25.723)", 950: "oklch(25.8% 0.092 26.042)" }, orange: { 50: "oklch(98% 0.016 73.684)", 100: "oklch(95.4% 0.038 75.164)", 200: "oklch(90.1% 0.076 70.697)", 300: "oklch(83.7% 0.128 66.29)", 400: "oklch(75% 0.183 55.934)", 500: "oklch(70.5% 0.213 47.604)", 600: "oklch(64.6% 0.222 41.116)", 700: "oklch(55.3% 0.195 38.402)", 800: "oklch(47% 0.157 37.304)", 900: "oklch(40.8% 0.123 38.172)", 950: "oklch(26.6% 0.079 36.259)" }, amber: { 50: "oklch(98.7% 0.022 95.277)", 100: "oklch(96.2% 0.059 95.617)", 200: "oklch(92.4% 0.12 95.746)", 300: "oklch(87.9% 0.169 91.605)", 400: "oklch(82.8% 0.189 84.429)", 500: "oklch(76.9% 0.188 70.08)", 600: "oklch(66.6% 0.179 58.318)", 700: "oklch(55.5% 0.163 48.998)", 800: "oklch(47.3% 0.137 46.201)", 900: "oklch(41.4% 0.112 45.904)", 950: "oklch(27.9% 0.077 45.635)" }, yellow: { 50: "oklch(98.7% 0.026 102.212)", 100: "oklch(97.3% 0.071 103.193)", 200: "oklch(94.5% 0.129 101.54)", 300: "oklch(90.5% 0.182 98.111)", 400: "oklch(85.2% 0.199 91.936)", 500: "oklch(79.5% 0.184 86.047)", 600: "oklch(68.1% 0.162 75.834)", 700: "oklch(55.4% 0.135 66.442)", 800: "oklch(47.6% 0.114 61.907)", 900: "oklch(42.1% 0.095 57.708)", 950: "oklch(28.6% 0.066 53.813)" }, lime: { 50: "oklch(98.6% 0.031 120.757)", 100: "oklch(96.7% 0.067 122.328)", 200: "oklch(93.8% 0.127 124.321)", 300: "oklch(89.7% 0.196 126.665)", 400: "oklch(84.1% 0.238 128.85)", 500: "oklch(76.8% 0.233 130.85)", 600: "oklch(64.8% 0.2 131.684)", 700: "oklch(53.2% 0.157 131.589)", 800: "oklch(45.3% 0.124 130.933)", 900: "oklch(40.5% 0.101 131.063)", 950: "oklch(27.4% 0.072 132.109)" }, green: { 50: "oklch(98.2% 0.018 155.826)", 100: "oklch(96.2% 0.044 156.743)", 200: "oklch(92.5% 0.084 155.995)", 300: "oklch(87.1% 0.15 154.449)", 400: "oklch(79.2% 0.209 151.711)", 500: "oklch(72.3% 0.219 149.579)", 600: "oklch(62.7% 0.194 149.214)", 700: "oklch(52.7% 0.154 150.069)", 800: "oklch(44.8% 0.119 151.328)", 900: "oklch(39.3% 0.095 152.535)", 950: "oklch(26.6% 0.065 152.934)" }, emerald: { 50: "oklch(97.9% 0.021 166.113)", 100: "oklch(95% 0.052 163.051)", 200: "oklch(90.5% 0.093 164.15)", 300: "oklch(84.5% 0.143 164.978)", 400: "oklch(76.5% 0.177 163.223)", 500: "oklch(69.6% 0.17 162.48)", 600: "oklch(59.6% 0.145 163.225)", 700: "oklch(50.8% 0.118 165.612)", 800: "oklch(43.2% 0.095 166.913)", 900: "oklch(37.8% 0.077 168.94)", 950: "oklch(26.2% 0.051 172.552)" }, teal: { 50: "oklch(98.4% 0.014 180.72)", 100: "oklch(95.3% 0.051 180.801)", 200: "oklch(91% 0.096 180.426)", 300: "oklch(85.5% 0.138 181.071)", 400: "oklch(77.7% 0.152 181.912)", 500: "oklch(70.4% 0.14 182.503)", 600: "oklch(60% 0.118 184.704)", 700: "oklch(51.1% 0.096 186.391)", 800: "oklch(43.7% 0.078 188.216)", 900: "oklch(38.6% 0.063 188.416)", 950: "oklch(27.7% 0.046 192.524)" }, cyan: { 50: "oklch(98.4% 0.019 200.873)", 100: "oklch(95.6% 0.045 203.388)", 200: "oklch(91.7% 0.08 205.041)", 300: "oklch(86.5% 0.127 207.078)", 400: "oklch(78.9% 0.154 211.53)", 500: "oklch(71.5% 0.143 215.221)", 600: "oklch(60.9% 0.126 221.723)", 700: "oklch(52% 0.105 223.128)", 800: "oklch(45% 0.085 224.283)", 900: "oklch(39.8% 0.07 227.392)", 950: "oklch(30.2% 0.056 229.695)" }, sky: { 50: "oklch(97.7% 0.013 236.62)", 100: "oklch(95.1% 0.026 236.824)", 200: "oklch(90.1% 0.058 230.902)", 300: "oklch(82.8% 0.111 230.318)", 400: "oklch(74.6% 0.16 232.661)", 500: "oklch(68.5% 0.169 237.323)", 600: "oklch(58.8% 0.158 241.966)", 700: "oklch(50% 0.134 242.749)", 800: "oklch(44.3% 0.11 240.79)", 900: "oklch(39.1% 0.09 240.876)", 950: "oklch(29.3% 0.066 243.157)" }, blue: { 50: "oklch(97% 0.014 254.604)", 100: "oklch(93.2% 0.032 255.585)", 200: "oklch(88.2% 0.059 254.128)", 300: "oklch(80.9% 0.105 251.813)", 400: "oklch(70.7% 0.165 254.624)", 500: "oklch(62.3% 0.214 259.815)", 600: "oklch(54.6% 0.245 262.881)", 700: "oklch(48.8% 0.243 264.376)", 800: "oklch(42.4% 0.199 265.638)", 900: "oklch(37.9% 0.146 265.522)", 950: "oklch(28.2% 0.091 267.935)" }, indigo: { 50: "oklch(96.2% 0.018 272.314)", 100: "oklch(93% 0.034 272.788)", 200: "oklch(87% 0.065 274.039)", 300: "oklch(78.5% 0.115 274.713)", 400: "oklch(67.3% 0.182 276.935)", 500: "oklch(58.5% 0.233 277.117)", 600: "oklch(51.1% 0.262 276.966)", 700: "oklch(45.7% 0.24 277.023)", 800: "oklch(39.8% 0.195 277.366)", 900: "oklch(35.9% 0.144 278.697)", 950: "oklch(25.7% 0.09 281.288)" }, violet: { 50: "oklch(96.9% 0.016 293.756)", 100: "oklch(94.3% 0.029 294.588)", 200: "oklch(89.4% 0.057 293.283)", 300: "oklch(81.1% 0.111 293.571)", 400: "oklch(70.2% 0.183 293.541)", 500: "oklch(60.6% 0.25 292.717)", 600: "oklch(54.1% 0.281 293.009)", 700: "oklch(49.1% 0.27 292.581)", 800: "oklch(43.2% 0.232 292.759)", 900: "oklch(38% 0.189 293.745)", 950: "oklch(28.3% 0.141 291.089)" }, purple: { 50: "oklch(97.7% 0.014 308.299)", 100: "oklch(94.6% 0.033 307.174)", 200: "oklch(90.2% 0.063 306.703)", 300: "oklch(82.7% 0.119 306.383)", 400: "oklch(71.4% 0.203 305.504)", 500: "oklch(62.7% 0.265 303.9)", 600: "oklch(55.8% 0.288 302.321)", 700: "oklch(49.6% 0.265 301.924)", 800: "oklch(43.8% 0.218 303.724)", 900: "oklch(38.1% 0.176 304.987)", 950: "oklch(29.1% 0.149 302.717)" }, fuchsia: { 50: "oklch(97.7% 0.017 320.058)", 100: "oklch(95.2% 0.037 318.852)", 200: "oklch(90.3% 0.076 319.62)", 300: "oklch(83.3% 0.145 321.434)", 400: "oklch(74% 0.238 322.16)", 500: "oklch(66.7% 0.295 322.15)", 600: "oklch(59.1% 0.293 322.896)", 700: "oklch(51.8% 0.253 323.949)", 800: "oklch(45.2% 0.211 324.591)", 900: "oklch(40.1% 0.17 325.612)", 950: "oklch(29.3% 0.136 325.661)" }, pink: { 50: "oklch(97.1% 0.014 343.198)", 100: "oklch(94.8% 0.028 342.258)", 200: "oklch(89.9% 0.061 343.231)", 300: "oklch(82.3% 0.12 346.018)", 400: "oklch(71.8% 0.202 349.761)", 500: "oklch(65.6% 0.241 354.308)", 600: "oklch(59.2% 0.249 0.584)", 700: "oklch(52.5% 0.223 3.958)", 800: "oklch(45.9% 0.187 3.815)", 900: "oklch(40.8% 0.153 2.432)", 950: "oklch(28.4% 0.109 3.907)" }, rose: { 50: "oklch(96.9% 0.015 12.422)", 100: "oklch(94.1% 0.03 12.58)", 200: "oklch(89.2% 0.058 10.001)", 300: "oklch(81% 0.117 11.638)", 400: "oklch(71.2% 0.194 13.428)", 500: "oklch(64.5% 0.246 16.439)", 600: "oklch(58.6% 0.253 17.585)", 700: "oklch(51.4% 0.222 16.935)", 800: "oklch(45.5% 0.188 13.697)", 900: "oklch(41% 0.159 10.272)", 950: "oklch(27.1% 0.105 12.094)" } };

// ../../packages/aitable/src/grid/utils/core/measure.ts
var MeasuredCanvas = (defaults3 = {}) => {
  const {
    fontFamily = "Inter, Roboto, -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Ubuntu, noto, arial, sans-serif"
  } = defaults3;
  if (typeof window === "undefined" || document?.fonts?.ready == null) {
    return;
  }
  const canvas = document.createElement("canvas");
  const ctx = canvas ? canvas.getContext("2d") : null;
  const setFontSize = (fontSize) => {
    if (ctx) {
      ctx.font = `${fontSize}px ${fontFamily}`;
    }
  };
  const reset = () => setFontSize(13);
  setFontSize(13);
  return {
    ctx,
    reset,
    setFontSize
  };
};
var measuredCanvas = MeasuredCanvas();

// ../../packages/aitable/src/grid/utils/core/range.ts
var isRangeWithinRanges = (checkedRange, ranges) => {
  const [checkedStart, checkedEnd] = checkedRange;
  for (const range2 of ranges) {
    const [rangeStart, rangeEnd] = range2;
    if (rangeStart <= checkedStart && rangeEnd >= checkedEnd) {
      return true;
    }
  }
  return false;
};
var flatRanges = (ranges) => {
  const result2 = [];
  for (const range2 of ranges) {
    for (let i = range2[0]; i <= range2[1]; i++) {
      result2.push(i);
    }
  }
  return result2;
};
var isPointInsideRectangle = (checkPoint, startPoint, endPoint) => {
  const [checkX, checkY] = checkPoint;
  const [startX, startY] = startPoint;
  const [endX, endY] = endPoint;
  const minX = Math.min(startX, endX);
  const maxX = Math.max(startX, endX);
  const minY = Math.min(startY, endY);
  const maxY = Math.max(startY, endY);
  return checkX >= minX && checkX <= maxX && checkY >= minY && checkY <= maxY;
};
var inRange2 = (num, start, end) => {
  if (start > end) {
    return num >= end && num <= start;
  }
  return num >= start && num <= end;
};
var serializedRanges = (ranges) => {
  if (ranges.length <= 1) {
    return ranges;
  }
  const sortedRanges = [...ranges].sort((a, b2) => a[0] - b2[0]);
  const mergedRanges = [];
  let currentRange = [...sortedRanges[0]];
  for (let i = 1; i < sortedRanges.length; i++) {
    const nextRange = sortedRanges[i];
    if (nextRange[0] <= currentRange[1] + 1) {
      currentRange = [currentRange[0], Math.max(currentRange[1], nextRange[1])];
    } else {
      mergedRanges.push(currentRange);
      currentRange = [...nextRange];
    }
  }
  mergedRanges.push(currentRange);
  return mergedRanges;
};
var mixRanges = (ranges, newRange) => {
  const result2 = [];
  let added = false;
  for (const range2 of ranges) {
    if (!added && range2[0] === newRange[0] && newRange[1] === range2[1]) {
      added = true;
    } else if (!added && newRange[0] > range2[0] && newRange[1] < range2[1]) {
      result2.push([range2[0], newRange[0] - 1]);
      result2.push([newRange[1] + 1, range2[1]]);
      added = true;
    } else if (!added && newRange[0] <= range2[1] && newRange[1] >= range2[0]) {
      if (newRange[0] > range2[0]) {
        result2.push([range2[0], newRange[0] - 1]);
      }
      if (newRange[1] < range2[1]) {
        result2.push([newRange[1] + 1, range2[1]]);
      }
      added = true;
    } else {
      result2.push([...range2]);
    }
  }
  if (!added) {
    result2.push(newRange);
  }
  return serializedRanges(result2);
};
var calculateMaxRange = (selection) => {
  const { isCellSelection, ranges } = selection;
  if (isCellSelection) {
    const [startColIndex, startRowIndex] = ranges[0];
    const [endColIndex, endRowIndex] = ranges[1];
    return [
      Math.max(startColIndex, endColIndex),
      Math.max(startRowIndex, endRowIndex)
    ];
  }
  return null;
};
var checkIfRowOrCellActive = (activeCell, rowIndex, columnIndex) => {
  if (activeCell == null) {
    return {
      isRowActive: false,
      isCellActive: false
    };
  }
  const [activeColumnIndex, activeRowIndex] = activeCell;
  return {
    isRowActive: activeRowIndex === rowIndex,
    isCellActive: activeRowIndex === rowIndex && activeColumnIndex === columnIndex
  };
};
var checkIfRowOrCellSelected = (selection, rowIndex, columnIndex) => {
  const { isRowSelection, isCellSelection } = selection;
  if (isRowSelection && selection.includes([rowIndex, rowIndex])) {
    return {
      isRowSelected: true,
      isCellSelected: true
    };
  }
  if (isCellSelection && selection.includes([columnIndex, rowIndex])) {
    return {
      isRowSelected: false,
      isCellSelected: true
    };
  }
  return {
    isRowSelected: false,
    isCellSelected: false
  };
};

// ../../packages/aitable/src/grid/utils/core/region.ts
var rowControlDefinitions = {
  ["Drag" /* Drag */]: "RowHeaderDragHandler" /* RowHeaderDragHandler */,
  ["Checkbox" /* Checkbox */]: "RowHeaderCheckbox" /* RowHeaderCheckbox */,
  ["Expand" /* Expand */]: "RowHeaderExpandHandler" /* RowHeaderExpandHandler */
};
var BLANK_REGION_DATA = {
  type: "Blank" /* Blank */,
  x: Infinity,
  y: Infinity,
  width: 0,
  height: 0
};
var {
  groupHeaderHeight,
  columnHeadPadding,
  columnResizeHandlerWidth,
  rowHeadIconPaddingTop,
  columnStatisticHeight,
  columnFreezeHandlerWidth,
  minColumnStatisticWidth
} = GRID_DEFAULT;
var getRegionData = (props) => {
  return checkIfFreezing(props) || checkIsActiveCell(props) || checkIsOutOfBounds(props) || checkIfSelecting(props) || checkIfColumnResizing(props) || checkIfDragging(props) || checkIsFreezeColumnHandler(props) || checkIsAppendColumn(props) || checkIsColumnStatistic(props) || checkIsAllCheckbox(props) || checkIsAppendRow(props) || checkIsRowHeader(props) || checkIsRowGroupHeader(props) || // checkIsFillHandler(props) ||
  checkIsCell(props) || checkIsColumnHeader(props) || BLANK_REGION_DATA;
};
var checkIfFreezing = (props) => {
  const { isFreezing } = props;
  if (!isFreezing) {
    return null;
  }
  return { ...BLANK_REGION_DATA, type: "ColumnFreezeHandler" /* ColumnFreezeHandler */ };
};
var checkIsActiveCell = (props) => {
  const {
    coordInstance,
    scrollState,
    position,
    activeCell,
    activeCellBound,
    real2RowIndex
  } = props;
  if (activeCell == null || activeCellBound == null) {
    return null;
  }
  const { x: x2, y } = position;
  const { scrollTop, scrollLeft } = scrollState;
  const [columnIndex, rowIndex] = activeCell;
  const linearRowIndex = real2RowIndex(rowIndex);
  const offsetY = coordInstance.getRowOffset(linearRowIndex) - scrollTop;
  const offsetX = coordInstance.getColumnRelativeOffset(
    columnIndex,
    scrollLeft
  );
  const { width, height } = activeCellBound;
  if (inRange2(x2, offsetX, offsetX + width) && inRange2(y, offsetY, offsetY + height)) {
    return {
      type: "ActiveCell" /* ActiveCell */,
      x: offsetX,
      y: offsetY,
      width,
      height,
      rowIndex: linearRowIndex,
      columnIndex,
      isOutOfBounds: false
    };
  }
  return null;
};
var checkIsOutOfBounds = (props) => {
  const { isOutOfBounds } = props;
  return isOutOfBounds ? BLANK_REGION_DATA : null;
};
var checkIfSelecting = (props) => {
  const { selection, isSelecting } = props;
  if (!isSelecting || !selection.isCellSelection) {
    return null;
  }
  return { ...BLANK_REGION_DATA, type: "Cell" /* Cell */ };
};
var checkIfColumnResizing = (props) => {
  const { columnIndex } = props.columnResizeState;
  if (columnIndex <= -1) {
    return null;
  }
  return { ...BLANK_REGION_DATA, type: "ColumnResizeHandler" /* ColumnResizeHandler */ };
};
var checkIfDragging = (props) => {
  const { isDragging } = props.dragState;
  if (!isDragging) {
    return null;
  }
  return { ...BLANK_REGION_DATA, type: "ColumnHeader" /* ColumnHeader */ };
};
var checkIsFreezeColumnHandler = (props) => {
  const { position, scrollState, coordInstance, isColumnFreezable } = props;
  if (!isColumnFreezable) {
    return null;
  }
  const { x: x2, y } = position;
  const { scrollTop } = scrollState;
  const { freezeRegionWidth, rowInitSize, rowCount, containerHeight } = coordInstance;
  const offsetY = coordInstance.getRowOffset(rowCount) - scrollTop;
  const maxY = Math.min(offsetY, containerHeight - columnStatisticHeight);
  const halfWidth = columnFreezeHandlerWidth / 2;
  if (inRange2(x2, freezeRegionWidth - halfWidth, freezeRegionWidth + halfWidth) && inRange2(y, rowInitSize, maxY)) {
    return { ...BLANK_REGION_DATA, type: "ColumnFreezeHandler" /* ColumnFreezeHandler */ };
  }
  return null;
};
var checkIsAppendColumn = (props) => {
  const { position, isColumnAppendEnable } = props;
  const { rowIndex, columnIndex } = position;
  if (isColumnAppendEnable && rowIndex >= -1 && columnIndex === -2) {
    return { ...BLANK_REGION_DATA, type: "AppendColumn" /* AppendColumn */ };
  }
  return null;
};
var getColumnStatisticData = (props) => {
  const {
    columnStatistics,
    scrollState,
    coordInstance,
    getLinearRow,
    position,
    height
  } = props;
  if (columnStatistics == null) {
    return null;
  }
  const { scrollLeft, scrollTop } = scrollState;
  const { x: x2, y, rowIndex, columnIndex } = position;
  if (rowIndex > -1 && columnIndex > -1) {
    const { type } = getLinearRow(rowIndex);
    const isFirstColumn = columnIndex === 0;
    const columnWidth = coordInstance.getColumnWidth(columnIndex);
    const columnOffsetX = coordInstance.getColumnRelativeOffset(
      columnIndex,
      scrollLeft
    );
    const groupedStatisticX = isFirstColumn ? columnOffsetX + columnWidth - minColumnStatisticWidth : columnOffsetX;
    if (type === "GROUP" /* Group */ && inRange2(
      x2,
      groupedStatisticX,
      groupedStatisticX + (isFirstColumn ? minColumnStatisticWidth : columnWidth)
    )) {
      return {
        type: "GroupStatistic" /* GroupStatistic */,
        x: columnOffsetX,
        y: coordInstance.getRowOffset(rowIndex) - scrollTop,
        width: columnWidth,
        height: columnStatisticHeight
      };
    }
  }
  const isBottomRegion = inRange2(y, height - columnStatisticHeight, height);
  const isColumnStatistic = isBottomRegion && columnIndex > -1;
  const isRowCountLabel = isBottomRegion && columnIndex === -1;
  if (isRowCountLabel) {
    return {
      type: "RowCountLabel" /* RowCountLabel */,
      x: 0,
      y: height - columnStatisticHeight,
      width: coordInstance.columnInitSize,
      height: columnStatisticHeight
    };
  }
  if (isColumnStatistic) {
    const { scrollLeft: scrollLeft2 } = scrollState;
    return {
      type: "ColumnStatistic" /* ColumnStatistic */,
      x: coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft2),
      y: height - columnStatisticHeight,
      width: coordInstance.getColumnWidth(columnIndex),
      height: columnStatisticHeight
    };
  }
  return null;
};
var checkIsColumnStatistic = (props) => {
  return getColumnStatisticData(props);
};
var checkIsAllCheckbox = (props) => {
  const {
    position,
    theme,
    rowControls,
    coordInstance,
    isMultiSelectionEnable
  } = props;
  const { x: x2, y, rowIndex, columnIndex } = position;
  if (!isMultiSelectionEnable || rowIndex !== -1 || columnIndex !== -1 || !rowControls.some((item) => item.type === "Checkbox" /* Checkbox */)) {
    return null;
  }
  const { iconSizeXS } = theme;
  const halfIconSize = iconSizeXS / 2;
  const { rowInitSize, columnInitSize } = coordInstance;
  const minX = columnInitSize / 2 - halfIconSize;
  const minY = rowInitSize / 2 - halfIconSize;
  if (inRange2(x2, minX, minX + iconSizeXS) && inRange2(y, minY, minY + iconSizeXS)) {
    return {
      type: "AllCheckbox" /* AllCheckbox */,
      x: minX,
      y: minY,
      width: iconSizeXS,
      height: iconSizeXS
    };
  }
  return null;
};
var checkIsAppendRow = (props) => {
  const { position, getLinearRow } = props;
  const { rowIndex, columnIndex } = position;
  if (columnIndex >= -1 && rowIndex > -1) {
    const { type } = getLinearRow(rowIndex);
    if (type !== "APPEND" /* Append */) {
      return null;
    }
    return { ...BLANK_REGION_DATA, type: "AppendRow" /* AppendRow */ };
  }
  return null;
};
var checkIsRowHeader = (props) => {
  const { position, theme, rowControls, scrollState, coordInstance } = props;
  const { x: x2, y, rowIndex, columnIndex } = position;
  if (rowIndex <= -1 || columnIndex !== -1) {
    return null;
  }
  const linearRow = props.getLinearRow(rowIndex);
  if (linearRow.type === "GROUP" /* Group */) {
    return { ...BLANK_REGION_DATA, type: "RowGroupControl" /* RowGroupControl */ };
  }
  if (linearRow.type !== "ROW" /* Row */) {
    return null;
  }
  const { iconSizeXS } = theme;
  const { scrollTop } = scrollState;
  const { columnInitSize } = coordInstance;
  const halfIconSize = iconSizeXS / 2;
  const controlSize = columnInitSize / (rowControls.length || 1);
  const offsetY = coordInstance.getRowOffset(rowIndex) - scrollTop;
  for (let i = 0; i < rowControls.length; i++) {
    const type = rowControls[i].type;
    const regionType = rowControlDefinitions[type];
    if (!rowControls.some((item) => item.type === type)) {
      continue;
    }
    const minX = controlSize * (i + 0.5) - halfIconSize;
    const minY = offsetY + rowHeadIconPaddingTop;
    const inControlXRange = inRange2(x2, minX, minX + iconSizeXS);
    const inYRangeRowHeader = inRange2(y, minY, minY + iconSizeXS);
    if (regionType && inControlXRange && inYRangeRowHeader) {
      return {
        type: regionType,
        x: minX,
        y: minY,
        width: iconSizeXS,
        height: iconSizeXS
      };
    }
  }
  return { ...BLANK_REGION_DATA, type: "RowHeader" /* RowHeader */ };
};
var checkIsRowGroupHeader = (props) => {
  const { position, scrollState, coordInstance, getLinearRow } = props;
  const { scrollLeft } = scrollState;
  const { x: x2, y, rowIndex, columnIndex } = position;
  if (rowIndex <= -1 || columnIndex !== 0) {
    return null;
  }
  const { type } = getLinearRow(rowIndex);
  if (type !== "GROUP" /* Group */) {
    return null;
  }
  const columnWidth = coordInstance.getColumnWidth(columnIndex);
  const columnOffsetX = coordInstance.getColumnRelativeOffset(
    columnIndex,
    scrollLeft
  );
  if (inRange2(x2, columnOffsetX, columnOffsetX + columnWidth)) {
    return {
      type: "RowGroupHeader" /* RowGroupHeader */,
      x: columnOffsetX,
      y,
      width: columnWidth,
      height: groupHeaderHeight
    };
  }
  return null;
};
var checkIsCell = (props) => {
  const { coordInstance, position, scrollState, getLinearRow } = props;
  const { rowIndex, columnIndex } = position;
  const { scrollLeft, scrollTop } = scrollState;
  if (rowIndex > -1 && columnIndex > -1) {
    const linearRow = getLinearRow(rowIndex);
    if (linearRow.type !== "ROW" /* Row */) {
      return null;
    }
    const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
    const y = coordInstance.getRowOffset(rowIndex) - scrollTop;
    const width = coordInstance.getColumnWidth(columnIndex);
    const height = coordInstance.rowHeight;
    return {
      type: "Cell" /* Cell */,
      x: x2,
      y,
      width,
      height
    };
  }
  return null;
};
var checkIsColumnHeader = (props) => {
  const {
    position,
    scrollState,
    coordInstance,
    columns,
    theme,
    isColumnResizable,
    isColumnHeaderMenuVisible
  } = props;
  const { x: x2, y, rowIndex, columnIndex } = position;
  const { iconSizeXS } = theme;
  if (rowIndex === -1 && columnIndex > -1) {
    const { scrollLeft } = scrollState;
    const { rowInitSize } = coordInstance;
    const {
      isPrimary,
      description: description2,
      hasMenu: hasColumnMenu
    } = columns[columnIndex];
    const hasMenu = hasColumnMenu && isColumnHeaderMenuVisible;
    const width = coordInstance.getColumnWidth(columnIndex);
    const startOffsetX = coordInstance.getColumnRelativeOffset(
      columnIndex,
      scrollLeft
    );
    const endOffsetX = startOffsetX + width;
    const columnMenuX = hasMenu ? endOffsetX - columnHeadPadding / 2 - iconSizeXS : endOffsetX;
    if (hasMenu && inRange2(x2, columnMenuX, columnMenuX + iconSizeXS)) {
      return {
        type: "ColumnHeaderMenu" /* ColumnHeaderMenu */,
        x: startOffsetX,
        y: 0,
        width: iconSizeXS,
        height: rowInitSize
      };
    }
    const descriptionX = columnMenuX - iconSizeXS - columnHeadPadding / 2;
    const descriptionY = (rowInitSize - iconSizeXS) / 2;
    if (description2 && inRange2(x2, descriptionX, descriptionX + iconSizeXS) && inRange2(y, descriptionY, descriptionY + iconSizeXS)) {
      return {
        type: "ColumnDescription" /* ColumnDescription */,
        x: descriptionX,
        y: descriptionY,
        width: iconSizeXS,
        height: iconSizeXS
      };
    }
    const primaryIconX = startOffsetX + iconSizeXS / 2;
    const primaryIconY = (rowInitSize - iconSizeXS) / 2;
    if (isPrimary && inRange2(x2, primaryIconX, primaryIconX + iconSizeXS) && inRange2(y, primaryIconY, primaryIconY + iconSizeXS)) {
      return {
        type: "ColumnPrimaryIcon" /* ColumnPrimaryIcon */,
        x: primaryIconX,
        y: primaryIconY,
        width: iconSizeXS,
        height: iconSizeXS
      };
    }
    if (isColumnResizable && (columnIndex !== 0 && inRange2(
      x2,
      startOffsetX,
      startOffsetX + columnResizeHandlerWidth / 2
    ) || inRange2(x2, endOffsetX - columnResizeHandlerWidth / 2, endOffsetX))) {
      return { ...BLANK_REGION_DATA, type: "ColumnResizeHandler" /* ColumnResizeHandler */ };
    }
    return {
      type: "ColumnHeader" /* ColumnHeader */,
      x: startOffsetX,
      y: 0,
      width,
      height: rowInitSize
    };
  }
  return null;
};

// ../../packages/aitable/src/grid/utils/core/menu-position.ts
function calculateMenuPosition(triggerPosition, menuSize, options = {}) {
  const {
    offset = { x: 0, y: 0 },
    preferredPlacement = "bottom-start",
    container,
    padding = 8
  } = options;
  const viewportWidth = window.innerWidth;
  const viewportHeight = window.innerHeight;
  const scrollX = container ? container.scrollLeft : window.scrollX;
  const scrollY = container ? container.scrollTop : window.scrollY;
  const absoluteX = triggerPosition.x + offset.x;
  const absoluteY = triggerPosition.y + offset.y;
  let left = absoluteX;
  let top = absoluteY;
  let transformOrigin = "top left";
  switch (preferredPlacement) {
    case "bottom-start":
      left = absoluteX;
      top = absoluteY;
      transformOrigin = "top left";
      break;
    case "bottom-end":
      left = absoluteX - menuSize.width;
      top = absoluteY;
      transformOrigin = "top right";
      break;
    case "top-start":
      left = absoluteX;
      top = absoluteY - menuSize.height;
      transformOrigin = "bottom left";
      break;
    case "top-end":
      left = absoluteX - menuSize.width;
      top = absoluteY - menuSize.height;
      transformOrigin = "bottom right";
      break;
    case "right":
      left = absoluteX;
      top = absoluteY - menuSize.height / 2;
      transformOrigin = "left center";
      break;
    case "left":
      left = absoluteX - menuSize.width;
      top = absoluteY - menuSize.height / 2;
      transformOrigin = "right center";
      break;
  }
  if (left + menuSize.width > viewportWidth - padding) {
    left = viewportWidth - menuSize.width - padding;
    if (transformOrigin.includes("left")) {
      transformOrigin = transformOrigin.replace("left", "right");
    }
  }
  if (left < padding) {
    left = padding;
    if (transformOrigin.includes("right")) {
      transformOrigin = transformOrigin.replace("right", "left");
    }
  }
  if (top + menuSize.height > viewportHeight - padding) {
    top = viewportHeight - menuSize.height - padding;
    if (top < absoluteY) {
      top = absoluteY - menuSize.height;
      if (transformOrigin.includes("top")) {
        transformOrigin = transformOrigin.replace("top", "bottom");
      }
    }
  }
  if (top < padding) {
    top = padding;
    if (transformOrigin.includes("bottom")) {
      transformOrigin = transformOrigin.replace("bottom", "top");
    }
  }
  return {
    left: Math.round(left),
    top: Math.round(top),
    transformOrigin
  };
}

// ../../packages/aitable/src/grid/utils/core/hotkey.ts
var Key2 = {
  Shift: "Shift"
};
var KeyCode = {
  Space: 32,
  A: 65,
  Z: 90,
  ClosedParen: 48,
  OpenParen: 57,
  Numpad0: 96,
  Numpad9: 105,
  SemiColon: 186,
  Tilde: 192,
  OpenBracket: 219,
  Quote: 222,
  Multiply: 106,
  Divide: 111
};
var isPrintableKey = (event) => {
  const { keyCode } = event;
  const { metaKey, ctrlKey } = event;
  if (metaKey || ctrlKey || keyCode === KeyCode.Space) {
    return false;
  }
  return keyCode >= KeyCode.A && keyCode <= KeyCode.Z || keyCode >= KeyCode.ClosedParen && keyCode <= KeyCode.OpenParen || keyCode >= KeyCode.Numpad0 && keyCode <= KeyCode.Numpad9 || keyCode >= KeyCode.SemiColon && keyCode <= KeyCode.Tilde || keyCode >= KeyCode.OpenBracket && keyCode <= KeyCode.Quote || keyCode >= KeyCode.Multiply && keyCode <= KeyCode.Divide || keyCode === KeyCode.Space || keyCode === 61 || keyCode === 173 || (keyCode === 229 || keyCode === 0) && event.key !== Key2.Shift;
};

// ../../node_modules/date-fns/constants.js
var daysInYear = 365.2425;
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
var minTime = -maxTime;
var millisecondsInWeek = 6048e5;
var millisecondsInDay = 864e5;
var millisecondsInMinute = 6e4;
var millisecondsInHour = 36e5;
var millisecondsInSecond = 1e3;
var secondsInHour = 3600;
var secondsInDay = secondsInHour * 24;
var secondsInWeek = secondsInDay * 7;
var secondsInYear = secondsInDay * daysInYear;
var secondsInMonth = secondsInYear / 12;
var secondsInQuarter = secondsInMonth * 3;
var constructFromSymbol = Symbol.for("constructDateFrom");

// ../../node_modules/date-fns/constructFrom.js
function constructFrom(date, value) {
  if (typeof date === "function") return date(value);
  if (date && typeof date === "object" && constructFromSymbol in date)
    return date[constructFromSymbol](value);
  if (date instanceof Date) return new date.constructor(value);
  return new Date(value);
}

// ../../node_modules/date-fns/toDate.js
function toDate(argument, context) {
  return constructFrom(context || argument, argument);
}

// ../../node_modules/date-fns/addDays.js
function addDays(date, amount, options) {
  const _date = toDate(date, options?.in);
  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);
  if (!amount) return _date;
  _date.setDate(_date.getDate() + amount);
  return _date;
}

// ../../node_modules/date-fns/addMonths.js
function addMonths(date, amount, options) {
  const _date = toDate(date, options?.in);
  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);
  if (!amount) {
    return _date;
  }
  const dayOfMonth = _date.getDate();
  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());
  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);
  const daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    _date.setFullYear(
      endOfDesiredMonth.getFullYear(),
      endOfDesiredMonth.getMonth(),
      dayOfMonth
    );
    return _date;
  }
}

// ../../node_modules/date-fns/_lib/defaultOptions.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

// ../../node_modules/date-fns/startOfWeek.js
function startOfWeek(date, options) {
  const defaultOptions2 = getDefaultOptions();
  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions2.weekStartsOn ?? defaultOptions2.locale?.options?.weekStartsOn ?? 0;
  const _date = toDate(date, options?.in);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  _date.setDate(_date.getDate() - diff);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// ../../node_modules/date-fns/startOfISOWeek.js
function startOfISOWeek(date, options) {
  return startOfWeek(date, { ...options, weekStartsOn: 1 });
}

// ../../node_modules/date-fns/getISOWeekYear.js
function getISOWeekYear(date, options) {
  const _date = toDate(date, options?.in);
  const year = _date.getFullYear();
  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);
  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);
  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);
  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);
  if (_date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (_date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// ../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js
function getTimezoneOffsetInMilliseconds(date) {
  const _date = toDate(date);
  const utcDate = new Date(
    Date.UTC(
      _date.getFullYear(),
      _date.getMonth(),
      _date.getDate(),
      _date.getHours(),
      _date.getMinutes(),
      _date.getSeconds(),
      _date.getMilliseconds()
    )
  );
  utcDate.setUTCFullYear(_date.getFullYear());
  return +date - +utcDate;
}

// ../../node_modules/date-fns/_lib/normalizeDates.js
function normalizeDates(context, ...dates) {
  const normalize = constructFrom.bind(
    null,
    context || dates.find((date) => typeof date === "object")
  );
  return dates.map(normalize);
}

// ../../node_modules/date-fns/startOfDay.js
function startOfDay(date, options) {
  const _date = toDate(date, options?.in);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// ../../node_modules/date-fns/differenceInCalendarDays.js
function differenceInCalendarDays(laterDate, earlierDate, options) {
  const [laterDate_, earlierDate_] = normalizeDates(
    options?.in,
    laterDate,
    earlierDate
  );
  const laterStartOfDay = startOfDay(laterDate_);
  const earlierStartOfDay = startOfDay(earlierDate_);
  const laterTimestamp = +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);
  const earlierTimestamp = +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);
  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);
}

// ../../node_modules/date-fns/startOfISOWeekYear.js
function startOfISOWeekYear(date, options) {
  const year = getISOWeekYear(date, options);
  const fourthOfJanuary = constructFrom(options?.in || date, 0);
  fourthOfJanuary.setFullYear(year, 0, 4);
  fourthOfJanuary.setHours(0, 0, 0, 0);
  return startOfISOWeek(fourthOfJanuary);
}

// ../../node_modules/date-fns/addWeeks.js
function addWeeks(date, amount, options) {
  return addDays(date, amount * 7, options);
}

// ../../node_modules/date-fns/addYears.js
function addYears(date, amount, options) {
  return addMonths(date, amount * 12, options);
}

// ../../node_modules/date-fns/max.js
function max2(dates, options) {
  let result2;
  let context = options?.in;
  dates.forEach((date) => {
    if (!context && typeof date === "object")
      context = constructFrom.bind(null, date);
    const date_ = toDate(date, context);
    if (!result2 || result2 < date_ || isNaN(+date_)) result2 = date_;
  });
  return constructFrom(context, result2 || NaN);
}

// ../../node_modules/date-fns/min.js
function min2(dates, options) {
  let result2;
  let context = options?.in;
  dates.forEach((date) => {
    if (!context && typeof date === "object")
      context = constructFrom.bind(null, date);
    const date_ = toDate(date, context);
    if (!result2 || result2 > date_ || isNaN(+date_)) result2 = date_;
  });
  return constructFrom(context, result2 || NaN);
}

// ../../node_modules/date-fns/isSameDay.js
function isSameDay(laterDate, earlierDate, options) {
  const [dateLeft_, dateRight_] = normalizeDates(
    options?.in,
    laterDate,
    earlierDate
  );
  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);
}

// ../../node_modules/date-fns/isDate.js
function isDate2(value) {
  return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
}

// ../../node_modules/date-fns/isValid.js
function isValid(date) {
  return !(!isDate2(date) && typeof date !== "number" || isNaN(+toDate(date)));
}

// ../../node_modules/date-fns/differenceInCalendarMonths.js
function differenceInCalendarMonths(laterDate, earlierDate, options) {
  const [laterDate_, earlierDate_] = normalizeDates(
    options?.in,
    laterDate,
    earlierDate
  );
  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();
  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();
  return yearsDiff * 12 + monthsDiff;
}

// ../../node_modules/date-fns/endOfMonth.js
function endOfMonth(date, options) {
  const _date = toDate(date, options?.in);
  const month = _date.getMonth();
  _date.setFullYear(_date.getFullYear(), month + 1, 0);
  _date.setHours(23, 59, 59, 999);
  return _date;
}

// ../../node_modules/date-fns/_lib/normalizeInterval.js
function normalizeInterval(context, interval) {
  const [start, end] = normalizeDates(context, interval.start, interval.end);
  return { start, end };
}

// ../../node_modules/date-fns/eachMonthOfInterval.js
function eachMonthOfInterval(interval, options) {
  const { start, end } = normalizeInterval(options?.in, interval);
  let reversed = +start > +end;
  const endTime = reversed ? +start : +end;
  const date = reversed ? end : start;
  date.setHours(0, 0, 0, 0);
  date.setDate(1);
  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }
  const dates = [];
  while (+date <= endTime) {
    dates.push(constructFrom(start, date));
    date.setMonth(date.getMonth() + step);
  }
  return reversed ? dates.reverse() : dates;
}

// ../../node_modules/date-fns/startOfMonth.js
function startOfMonth(date, options) {
  const _date = toDate(date, options?.in);
  _date.setDate(1);
  _date.setHours(0, 0, 0, 0);
  return _date;
}

// ../../node_modules/date-fns/endOfYear.js
function endOfYear(date, options) {
  const _date = toDate(date, options?.in);
  const year = _date.getFullYear();
  _date.setFullYear(year + 1, 0, 0);
  _date.setHours(23, 59, 59, 999);
  return _date;
}

// ../../node_modules/date-fns/startOfYear.js
function startOfYear(date, options) {
  const date_ = toDate(date, options?.in);
  date_.setFullYear(date_.getFullYear(), 0, 1);
  date_.setHours(0, 0, 0, 0);
  return date_;
}

// ../../node_modules/date-fns/eachYearOfInterval.js
function eachYearOfInterval(interval, options) {
  const { start, end } = normalizeInterval(options?.in, interval);
  let reversed = +start > +end;
  const endTime = reversed ? +start : +end;
  const date = reversed ? end : start;
  date.setHours(0, 0, 0, 0);
  date.setMonth(0, 1);
  let step = options?.step ?? 1;
  if (!step) return [];
  if (step < 0) {
    step = -step;
    reversed = !reversed;
  }
  const dates = [];
  while (+date <= endTime) {
    dates.push(constructFrom(start, date));
    date.setFullYear(date.getFullYear() + step);
  }
  return reversed ? dates.reverse() : dates;
}

// ../../node_modules/date-fns/endOfWeek.js
function endOfWeek(date, options) {
  const defaultOptions2 = getDefaultOptions();
  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions2.weekStartsOn ?? defaultOptions2.locale?.options?.weekStartsOn ?? 0;
  const _date = toDate(date, options?.in);
  const day = _date.getDay();
  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
  _date.setDate(_date.getDate() + diff);
  _date.setHours(23, 59, 59, 999);
  return _date;
}

// ../../node_modules/date-fns/endOfISOWeek.js
function endOfISOWeek(date, options) {
  return endOfWeek(date, { ...options, weekStartsOn: 1 });
}

// ../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
};
var formatDistance = (token, count, options) => {
  let result2;
  const tokenValue = formatDistanceLocale[token];
  if (typeof tokenValue === "string") {
    result2 = tokenValue;
  } else if (count === 1) {
    result2 = tokenValue.one;
  } else {
    result2 = tokenValue.other.replace("{{count}}", count.toString());
  }
  if (options?.addSuffix) {
    if (options.comparison && options.comparison > 0) {
      return "in " + result2;
    } else {
      return result2 + " ago";
    }
  }
  return result2;
};

// ../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js
function buildFormatLongFn(args) {
  return (options = {}) => {
    const width = options.width ? String(options.width) : args.defaultWidth;
    const format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}

// ../../node_modules/date-fns/locale/en-US/_lib/formatLong.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};

// ../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
};
var formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];

// ../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js
function buildLocalizeFn(args) {
  return (value, options) => {
    const context = options?.context ? String(options.context) : "standalone";
    let valuesArray;
    if (context === "formatting" && args.formattingValues) {
      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      const width = options?.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      const defaultWidth = args.defaultWidth;
      const width = options?.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[width] || args.values[defaultWidth];
    }
    const index3 = args.argumentCallback ? args.argumentCallback(value) : value;
    return valuesArray[index3];
  };
}

// ../../node_modules/date-fns/locale/en-US/_lib/localize.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ],
  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = (dirtyNumber, _options) => {
  const number = Number(dirtyNumber);
  const rem100 = number % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + "st";
      case 2:
        return number + "nd";
      case 3:
        return number + "rd";
    }
  }
  return number + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: (quarter) => quarter - 1
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};

// ../../node_modules/date-fns/locale/_lib/buildMatchFn.js
function buildMatchFn(args) {
  return (string, options = {}) => {
    const width = options.width;
    const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    const matchResult = string.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    const matchedString = matchResult[0];
    const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    const key = Array.isArray(parsePatterns) ? findIndex2(parsePatterns, (pattern) => pattern.test(matchedString)) : (
      // [TODO] -- I challenge you to fix the type
      findKey2(parsePatterns, (pattern) => pattern.test(matchedString))
    );
    let value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? (
      // [TODO] -- I challenge you to fix the type
      options.valueCallback(value)
    ) : value;
    const rest2 = string.slice(matchedString.length);
    return { value, rest: rest2 };
  };
}
function findKey2(object, predicate) {
  for (const key in object) {
    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex2(array, predicate) {
  for (let key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}

// ../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js
function buildMatchPatternFn(args) {
  return (string, options = {}) => {
    const matchResult = string.match(args.matchPattern);
    if (!matchResult) return null;
    const matchedString = matchResult[0];
    const parseResult = string.match(args.parsePattern);
    if (!parseResult) return null;
    let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    const rest2 = string.slice(matchedString.length);
    return { value, rest: rest2 };
  };
}

// ../../node_modules/date-fns/locale/en-US/_lib/match.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i
  ],
  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^may/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i
  ]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: (value) => parseInt(value, 10)
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: (index3) => index3 + 1
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// ../../node_modules/date-fns/locale/en-US.js
var enUS = {
  code: "en-US",
  formatDistance,
  formatLong,
  formatRelative,
  localize,
  match,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};

// ../../node_modules/date-fns/getDayOfYear.js
function getDayOfYear(date, options) {
  const _date = toDate(date, options?.in);
  const diff = differenceInCalendarDays(_date, startOfYear(_date));
  const dayOfYear = diff + 1;
  return dayOfYear;
}

// ../../node_modules/date-fns/getISOWeek.js
function getISOWeek(date, options) {
  const _date = toDate(date, options?.in);
  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);
  return Math.round(diff / millisecondsInWeek) + 1;
}

// ../../node_modules/date-fns/getWeekYear.js
function getWeekYear(date, options) {
  const _date = toDate(date, options?.in);
  const year = _date.getFullYear();
  const defaultOptions2 = getDefaultOptions();
  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions2.firstWeekContainsDate ?? defaultOptions2.locale?.options?.firstWeekContainsDate ?? 1;
  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);
  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setHours(0, 0, 0, 0);
  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);
  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);
  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setHours(0, 0, 0, 0);
  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);
  if (+_date >= +startOfNextYear) {
    return year + 1;
  } else if (+_date >= +startOfThisYear) {
    return year;
  } else {
    return year - 1;
  }
}

// ../../node_modules/date-fns/startOfWeekYear.js
function startOfWeekYear(date, options) {
  const defaultOptions2 = getDefaultOptions();
  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions2.firstWeekContainsDate ?? defaultOptions2.locale?.options?.firstWeekContainsDate ?? 1;
  const year = getWeekYear(date, options);
  const firstWeek = constructFrom(options?.in || date, 0);
  firstWeek.setFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setHours(0, 0, 0, 0);
  const _date = startOfWeek(firstWeek, options);
  return _date;
}

// ../../node_modules/date-fns/getWeek.js
function getWeek(date, options) {
  const _date = toDate(date, options?.in);
  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);
  return Math.round(diff / millisecondsInWeek) + 1;
}

// ../../node_modules/date-fns/_lib/addLeadingZeros.js
function addLeadingZeros(number, targetLength) {
  const sign = number < 0 ? "-" : "";
  const output = Math.abs(number).toString().padStart(targetLength, "0");
  return sign + output;
}

// ../../node_modules/date-fns/_lib/format/lightFormatters.js
var lightFormatters = {
  // Year
  y(date, token) {
    const signedYear = date.getFullYear();
    const year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M(date, token) {
    const month = date.getMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d(date, token) {
    return addLeadingZeros(date.getDate(), token.length);
  },
  // AM or PM
  a(date, token) {
    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h(date, token) {
    return addLeadingZeros(date.getHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H(date, token) {
    return addLeadingZeros(date.getHours(), token.length);
  },
  // Minute
  m(date, token) {
    return addLeadingZeros(date.getMinutes(), token.length);
  },
  // Second
  s(date, token) {
    return addLeadingZeros(date.getSeconds(), token.length);
  },
  // Fraction of second
  S(date, token) {
    const numberOfDigits = token.length;
    const milliseconds = date.getMilliseconds();
    const fractionalSeconds = Math.trunc(
      milliseconds * Math.pow(10, numberOfDigits - 3)
    );
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};

// ../../node_modules/date-fns/_lib/format/formatters.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
};
var formatters = {
  // Era
  G: function(date, token, localize2) {
    const era = date.getFullYear() > 0 ? 1 : 0;
    switch (token) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, { width: "abbreviated" });
      // A, B
      case "GGGGG":
        return localize2.era(era, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return localize2.era(era, { width: "wide" });
    }
  },
  // Year
  y: function(date, token, localize2) {
    if (token === "yo") {
      const signedYear = date.getFullYear();
      const year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, { unit: "year" });
    }
    return lightFormatters.y(date, token);
  },
  // Local week-numbering year
  Y: function(date, token, localize2, options) {
    const signedWeekYear = getWeekYear(date, options);
    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      const twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    if (token === "Yo") {
      return localize2.ordinalNumber(weekYear, { unit: "year" });
    }
    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function(date, token) {
    const isoWeekYear = getISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function(date, token) {
    const year = date.getFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function(date, token, localize2) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "Q":
        return String(quarter);
      // 01, 02, 03, 04
      case "QQ":
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return localize2.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function(date, token, localize2) {
    const quarter = Math.ceil((date.getMonth() + 1) / 3);
    switch (token) {
      // 1, 2, 3, 4
      case "q":
        return String(quarter);
      // 01, 02, 03, 04
      case "qq":
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return localize2.ordinalNumber(quarter, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function(date, token, localize2) {
    const month = date.getMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th
      case "Mo":
        return localize2.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      // J, F, ..., D
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return localize2.month(month, { width: "wide", context: "formatting" });
    }
  },
  // Stand-alone month
  L: function(date, token, localize2) {
    const month = date.getMonth();
    switch (token) {
      // 1, 2, ..., 12
      case "L":
        return String(month + 1);
      // 01, 02, ..., 12
      case "LL":
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th
      case "Lo":
        return localize2.ordinalNumber(month + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      // J, F, ..., D
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return localize2.month(month, { width: "wide", context: "standalone" });
    }
  },
  // Local week of year
  w: function(date, token, localize2, options) {
    const week = getWeek(date, options);
    if (token === "wo") {
      return localize2.ordinalNumber(week, { unit: "week" });
    }
    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function(date, token, localize2) {
    const isoWeek = getISOWeek(date);
    if (token === "Io") {
      return localize2.ordinalNumber(isoWeek, { unit: "week" });
    }
    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function(date, token, localize2) {
    if (token === "do") {
      return localize2.ordinalNumber(date.getDate(), { unit: "date" });
    }
    return lightFormatters.d(date, token);
  },
  // Day of year
  D: function(date, token, localize2) {
    const dayOfYear = getDayOfYear(date);
    if (token === "Do") {
      return localize2.ordinalNumber(dayOfYear, { unit: "dayOfYear" });
    }
    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function(date, token, localize2) {
    const dayOfWeek = date.getDay();
    switch (token) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function(date, token, localize2, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case "e":
        return String(localDayOfWeek);
      // Padded numerical value
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function(date, token, localize2, options) {
    const dayOfWeek = date.getDay();
    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      // Numerical value (same as in `e`)
      case "c":
        return String(localDayOfWeek);
      // Padded numerical value
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, { unit: "day" });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      // T
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      // Tu
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      // Tuesday
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function(date, token, localize2) {
    const dayOfWeek = date.getDay();
    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      // 2
      case "i":
        return String(isoDayOfWeek);
      // 02
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, { unit: "day" });
      // Tue
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function(date, token, localize2) {
    const hours = date.getHours();
    const dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function(date, token, localize2) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    }
    switch (token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function(date, token, localize2) {
    const hours = date.getHours();
    let dayPeriodEnumValue;
    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function(date, token, localize2) {
    if (token === "ho") {
      let hours = date.getHours() % 12;
      if (hours === 0) hours = 12;
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return lightFormatters.h(date, token);
  },
  // Hour [0-23]
  H: function(date, token, localize2) {
    if (token === "Ho") {
      return localize2.ordinalNumber(date.getHours(), { unit: "hour" });
    }
    return lightFormatters.H(date, token);
  },
  // Hour [0-11]
  K: function(date, token, localize2) {
    const hours = date.getHours() % 12;
    if (token === "Ko") {
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function(date, token, localize2) {
    let hours = date.getHours();
    if (hours === 0) hours = 24;
    if (token === "ko") {
      return localize2.ordinalNumber(hours, { unit: "hour" });
    }
    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function(date, token, localize2) {
    if (token === "mo") {
      return localize2.ordinalNumber(date.getMinutes(), { unit: "minute" });
    }
    return lightFormatters.m(date, token);
  },
  // Second
  s: function(date, token, localize2) {
    if (token === "so") {
      return localize2.ordinalNumber(date.getSeconds(), { unit: "second" });
    }
    return lightFormatters.s(date, token);
  },
  // Fraction of second
  S: function(date, token) {
    return lightFormatters.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function(date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();
    if (timezoneOffset === 0) {
      return "Z";
    }
    switch (token) {
      // Hours and optional minutes
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case "XXXXX":
      case "XXX":
      // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function(date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();
    switch (token) {
      // Hours and optional minutes
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case "xxxxx":
      case "xxx":
      // Hours and minutes with `:` delimiter
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function(date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();
    switch (token) {
      // Short
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function(date, token, _localize) {
    const timezoneOffset = date.getTimezoneOffset();
    switch (token) {
      // Short
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      // Long
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function(date, token, _localize) {
    const timestamp = Math.trunc(+date / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function(date, token, _localize) {
    return addLeadingZeros(+date, token.length);
  }
};
function formatTimezoneShort(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = Math.trunc(absOffset / 60);
  const minutes = absOffset % 60;
  if (minutes === 0) {
    return sign + String(hours);
  }
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset, delimiter) {
  if (offset % 60 === 0) {
    const sign = offset > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }
  return formatTimezone(offset, delimiter);
}
function formatTimezone(offset, delimiter = "") {
  const sign = offset > 0 ? "-" : "+";
  const absOffset = Math.abs(offset);
  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);
  const minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

// ../../node_modules/date-fns/_lib/format/longFormatters.js
var dateLongFormatter = (pattern, formatLong2) => {
  switch (pattern) {
    case "P":
      return formatLong2.date({ width: "short" });
    case "PP":
      return formatLong2.date({ width: "medium" });
    case "PPP":
      return formatLong2.date({ width: "long" });
    case "PPPP":
    default:
      return formatLong2.date({ width: "full" });
  }
};
var timeLongFormatter = (pattern, formatLong2) => {
  switch (pattern) {
    case "p":
      return formatLong2.time({ width: "short" });
    case "pp":
      return formatLong2.time({ width: "medium" });
    case "ppp":
      return formatLong2.time({ width: "long" });
    case "pppp":
    default:
      return formatLong2.time({ width: "full" });
  }
};
var dateTimeLongFormatter = (pattern, formatLong2) => {
  const matchResult = pattern.match(/(P+)(p+)?/) || [];
  const datePattern = matchResult[1];
  const timePattern = matchResult[2];
  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong2);
  }
  let dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({ width: "short" });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({ width: "medium" });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({ width: "full" });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
};
var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};

// ../../node_modules/date-fns/_lib/protectedTokens.js
var dayOfYearTokenRE = /^D+$/;
var weekYearTokenRE = /^Y+$/;
var throwTokens = ["D", "DD", "YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return dayOfYearTokenRE.test(token);
}
function isProtectedWeekYearToken(token) {
  return weekYearTokenRE.test(token);
}
function warnOrThrowProtectedError(token, format3, input) {
  const _message = message(token, format3, input);
  console.warn(_message);
  if (throwTokens.includes(token)) throw new RangeError(_message);
}
function message(token, format3, input) {
  const subject = token[0] === "Y" ? "years" : "days of the month";
  return `Use \`${token.toLowerCase()}\` instead of \`${token}\` (in \`${format3}\`) for formatting ${subject} to the input \`${input}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}

// ../../node_modules/date-fns/format.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(date, formatStr, options) {
  const defaultOptions2 = getDefaultOptions();
  const locale = options?.locale ?? defaultOptions2.locale ?? enUS;
  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions2.firstWeekContainsDate ?? defaultOptions2.locale?.options?.firstWeekContainsDate ?? 1;
  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions2.weekStartsOn ?? defaultOptions2.locale?.options?.weekStartsOn ?? 0;
  const originalDate = toDate(date, options?.in);
  if (!isValid(originalDate)) {
    throw new RangeError("Invalid time value");
  }
  let parts = formatStr.match(longFormattingTokensRegExp).map((substring) => {
    const firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      const longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map((substring) => {
    if (substring === "''") {
      return { isToken: false, value: "'" };
    }
    const firstCharacter = substring[0];
    if (firstCharacter === "'") {
      return { isToken: false, value: cleanEscapedString(substring) };
    }
    if (formatters[firstCharacter]) {
      return { isToken: true, value: substring };
    }
    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError(
        "Format string contains an unescaped latin alphabet character `" + firstCharacter + "`"
      );
    }
    return { isToken: false, value: substring };
  });
  if (locale.localize.preprocessor) {
    parts = locale.localize.preprocessor(originalDate, parts);
  }
  const formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale
  };
  return parts.map((part) => {
    if (!part.isToken) return part.value;
    const token = part.value;
    if (!options?.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token) || !options?.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {
      warnOrThrowProtectedError(token, formatStr, String(date));
    }
    const formatter = formatters[token[0]];
    return formatter(originalDate, token, locale.localize, formatterOptions);
  }).join("");
}
function cleanEscapedString(input) {
  const matched = input.match(escapedStringRegExp);
  if (!matched) {
    return input;
  }
  return matched[1].replace(doubleQuoteRegExp, "'");
}

// ../../node_modules/date-fns/getDaysInMonth.js
function getDaysInMonth(date, options) {
  const _date = toDate(date, options?.in);
  const year = _date.getFullYear();
  const monthIndex = _date.getMonth();
  const lastDayOfMonth2 = constructFrom(_date, 0);
  lastDayOfMonth2.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}

// ../../node_modules/date-fns/getDefaultOptions.js
function getDefaultOptions2() {
  return Object.assign({}, getDefaultOptions());
}

// ../../node_modules/date-fns/getISODay.js
function getISODay(date, options) {
  const day = toDate(date, options?.in).getDay();
  return day === 0 ? 7 : day;
}

// ../../node_modules/date-fns/getMonth.js
function getMonth(date, options) {
  return toDate(date, options?.in).getMonth();
}

// ../../node_modules/date-fns/getYear.js
function getYear(date, options) {
  return toDate(date, options?.in).getFullYear();
}

// ../../node_modules/date-fns/isAfter.js
function isAfter(date, dateToCompare) {
  return +toDate(date) > +toDate(dateToCompare);
}

// ../../node_modules/date-fns/isBefore.js
function isBefore(date, dateToCompare) {
  return +toDate(date) < +toDate(dateToCompare);
}

// ../../node_modules/date-fns/transpose.js
function transpose(date, constructor) {
  const date_ = isConstructor(constructor) ? new constructor(0) : constructFrom(constructor, 0);
  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
  date_.setHours(
    date.getHours(),
    date.getMinutes(),
    date.getSeconds(),
    date.getMilliseconds()
  );
  return date_;
}
function isConstructor(constructor) {
  return typeof constructor === "function" && constructor.prototype?.constructor === constructor;
}

// ../../node_modules/date-fns/parse/_lib/Setter.js
var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = class {
  subPriority = 0;
  validate(_utcDate, _options) {
    return true;
  }
};
var ValueSetter = class extends Setter {
  constructor(value, validateValue, setValue, priority, subPriority) {
    super();
    this.value = value;
    this.validateValue = validateValue;
    this.setValue = setValue;
    this.priority = priority;
    if (subPriority) {
      this.subPriority = subPriority;
    }
  }
  validate(date, options) {
    return this.validateValue(date, this.value, options);
  }
  set(date, flags, options) {
    return this.setValue(date, flags, this.value, options);
  }
};
var DateTimezoneSetter = class extends Setter {
  priority = TIMEZONE_UNIT_PRIORITY;
  subPriority = -1;
  constructor(context, reference) {
    super();
    this.context = context || ((date) => constructFrom(reference, date));
  }
  set(date, flags) {
    if (flags.timestampIsSet) return date;
    return constructFrom(date, transpose(date, this.context));
  }
};

// ../../node_modules/date-fns/parse/_lib/Parser.js
var Parser = class {
  run(dateString, token, match2, options) {
    const result2 = this.parse(dateString, token, match2, options);
    if (!result2) {
      return null;
    }
    return {
      setter: new ValueSetter(
        result2.value,
        this.validate,
        this.set,
        this.priority,
        this.subPriority
      ),
      rest: result2.rest
    };
  }
  validate(_utcDate, _value, _options) {
    return true;
  }
};

// ../../node_modules/date-fns/parse/_lib/parsers/EraParser.js
var EraParser = class extends Parser {
  priority = 140;
  parse(dateString, token, match2) {
    switch (token) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return match2.era(dateString, { width: "abbreviated" }) || match2.era(dateString, { width: "narrow" });
      // A, B
      case "GGGGG":
        return match2.era(dateString, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return match2.era(dateString, { width: "wide" }) || match2.era(dateString, { width: "abbreviated" }) || match2.era(dateString, { width: "narrow" });
    }
  }
  set(date, flags, value) {
    flags.era = value;
    date.setFullYear(value, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["R", "u", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  // 0 to 12
  date: /^(3[0-1]|[0-2]?\d)/,
  // 0 to 31
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  // 0 to 366
  week: /^(5[0-3]|[0-4]?\d)/,
  // 0 to 53
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  // 0 to 23
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  // 0 to 24
  hour11h: /^(1[0-1]|0?\d)/,
  // 0 to 11
  hour12h: /^(1[0-2]|0?\d)/,
  // 0 to 12
  minute: /^[0-5]?\d/,
  // 0 to 59
  second: /^[0-5]?\d/,
  // 0 to 59
  singleDigit: /^\d/,
  // 0 to 9
  twoDigits: /^\d{1,2}/,
  // 0 to 99
  threeDigits: /^\d{1,3}/,
  // 0 to 999
  fourDigits: /^\d{1,4}/,
  // 0 to 9999
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  // 0 to 9, -0 to -9
  twoDigitsSigned: /^-?\d{1,2}/,
  // 0 to 99, -0 to -99
  threeDigitsSigned: /^-?\d{1,3}/,
  // 0 to 999, -0 to -999
  fourDigitsSigned: /^-?\d{1,4}/
  // 0 to 9999, -0 to -9999
};
var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

// ../../node_modules/date-fns/parse/_lib/utils.js
function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  const matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  const matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  if (matchResult[0] === "Z") {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  const sign = matchResult[1] === "+" ? 1 : -1;
  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  const isCommonEra = currentYear > 0;
  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  let result2;
  if (absCurrentYear <= 50) {
    result2 = twoDigitYear || 100;
  } else {
    const rangeEnd = absCurrentYear + 50;
    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;
    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result2 = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result2 : 1 - result2;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

// ../../node_modules/date-fns/parse/_lib/parsers/YearParser.js
var YearParser = class extends Parser {
  priority = 130;
  incompatibleTokens = ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"];
  parse(dateString, token, match2) {
    const valueCallback = (year) => ({
      year,
      isTwoDigitYear: token === "yy"
    });
    switch (token) {
      case "y":
        return mapValue(parseNDigits(4, dateString), valueCallback);
      case "yo":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "year"
          }),
          valueCallback
        );
      default:
        return mapValue(parseNDigits(token.length, dateString), valueCallback);
    }
  }
  validate(_date, value) {
    return value.isTwoDigitYear || value.year > 0;
  }
  set(date, flags, value) {
    const currentYear = date.getFullYear();
    if (value.isTwoDigitYear) {
      const normalizedTwoDigitYear = normalizeTwoDigitYear(
        value.year,
        currentYear
      );
      date.setFullYear(normalizedTwoDigitYear, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    const year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
    date.setFullYear(year, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
};

// ../../node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js
var LocalWeekYearParser = class extends Parser {
  priority = 130;
  parse(dateString, token, match2) {
    const valueCallback = (year) => ({
      year,
      isTwoDigitYear: token === "YY"
    });
    switch (token) {
      case "Y":
        return mapValue(parseNDigits(4, dateString), valueCallback);
      case "Yo":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "year"
          }),
          valueCallback
        );
      default:
        return mapValue(parseNDigits(token.length, dateString), valueCallback);
    }
  }
  validate(_date, value) {
    return value.isTwoDigitYear || value.year > 0;
  }
  set(date, flags, value, options) {
    const currentYear = getWeekYear(date, options);
    if (value.isTwoDigitYear) {
      const normalizedTwoDigitYear = normalizeTwoDigitYear(
        value.year,
        currentYear
      );
      date.setFullYear(
        normalizedTwoDigitYear,
        0,
        options.firstWeekContainsDate
      );
      date.setHours(0, 0, 0, 0);
      return startOfWeek(date, options);
    }
    const year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
    date.setFullYear(year, 0, options.firstWeekContainsDate);
    date.setHours(0, 0, 0, 0);
    return startOfWeek(date, options);
  }
  incompatibleTokens = [
    "y",
    "R",
    "u",
    "Q",
    "q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "i",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js
var ISOWeekYearParser = class extends Parser {
  priority = 130;
  parse(dateString, token) {
    if (token === "R") {
      return parseNDigitsSigned(4, dateString);
    }
    return parseNDigitsSigned(token.length, dateString);
  }
  set(date, _flags, value) {
    const firstWeekOfYear = constructFrom(date, 0);
    firstWeekOfYear.setFullYear(value, 0, 4);
    firstWeekOfYear.setHours(0, 0, 0, 0);
    return startOfISOWeek(firstWeekOfYear);
  }
  incompatibleTokens = [
    "G",
    "y",
    "Y",
    "u",
    "Q",
    "q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js
var ExtendedYearParser = class extends Parser {
  priority = 130;
  parse(dateString, token) {
    if (token === "u") {
      return parseNDigitsSigned(4, dateString);
    }
    return parseNDigitsSigned(token.length, dateString);
  }
  set(date, _flags, value) {
    date.setFullYear(value, 0, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/QuarterParser.js
var QuarterParser = class extends Parser {
  priority = 120;
  parse(dateString, token, match2) {
    switch (token) {
      // 1, 2, 3, 4
      case "Q":
      case "QQ":
        return parseNDigits(token.length, dateString);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return match2.ordinalNumber(dateString, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return match2.quarter(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.quarter(dateString, {
          width: "narrow",
          context: "formatting"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return match2.quarter(dateString, {
          width: "narrow",
          context: "formatting"
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return match2.quarter(dateString, {
          width: "wide",
          context: "formatting"
        }) || match2.quarter(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.quarter(dateString, {
          width: "narrow",
          context: "formatting"
        });
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 4;
  }
  set(date, _flags, value) {
    date.setMonth((value - 1) * 3, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js
var StandAloneQuarterParser = class extends Parser {
  priority = 120;
  parse(dateString, token, match2) {
    switch (token) {
      // 1, 2, 3, 4
      case "q":
      case "qq":
        return parseNDigits(token.length, dateString);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return match2.ordinalNumber(dateString, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return match2.quarter(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.quarter(dateString, {
          width: "narrow",
          context: "standalone"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return match2.quarter(dateString, {
          width: "narrow",
          context: "standalone"
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return match2.quarter(dateString, {
          width: "wide",
          context: "standalone"
        }) || match2.quarter(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.quarter(dateString, {
          width: "narrow",
          context: "standalone"
        });
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 4;
  }
  set(date, _flags, value) {
    date.setMonth((value - 1) * 3, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "Y",
    "R",
    "Q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/MonthParser.js
var MonthParser = class extends Parser {
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "L",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
  priority = 110;
  parse(dateString, token, match2) {
    const valueCallback = (value) => value - 1;
    switch (token) {
      // 1, 2, ..., 12
      case "M":
        return mapValue(
          parseNumericPattern(numericPatterns.month, dateString),
          valueCallback
        );
      // 01, 02, ..., 12
      case "MM":
        return mapValue(parseNDigits(2, dateString), valueCallback);
      // 1st, 2nd, ..., 12th
      case "Mo":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "month"
          }),
          valueCallback
        );
      // Jan, Feb, ..., Dec
      case "MMM":
        return match2.month(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.month(dateString, { width: "narrow", context: "formatting" });
      // J, F, ..., D
      case "MMMMM":
        return match2.month(dateString, {
          width: "narrow",
          context: "formatting"
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return match2.month(dateString, { width: "wide", context: "formatting" }) || match2.month(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.month(dateString, { width: "narrow", context: "formatting" });
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 11;
  }
  set(date, _flags, value) {
    date.setMonth(value, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
};

// ../../node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js
var StandAloneMonthParser = class extends Parser {
  priority = 110;
  parse(dateString, token, match2) {
    const valueCallback = (value) => value - 1;
    switch (token) {
      // 1, 2, ..., 12
      case "L":
        return mapValue(
          parseNumericPattern(numericPatterns.month, dateString),
          valueCallback
        );
      // 01, 02, ..., 12
      case "LL":
        return mapValue(parseNDigits(2, dateString), valueCallback);
      // 1st, 2nd, ..., 12th
      case "Lo":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "month"
          }),
          valueCallback
        );
      // Jan, Feb, ..., Dec
      case "LLL":
        return match2.month(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.month(dateString, { width: "narrow", context: "standalone" });
      // J, F, ..., D
      case "LLLLL":
        return match2.month(dateString, {
          width: "narrow",
          context: "standalone"
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return match2.month(dateString, { width: "wide", context: "standalone" }) || match2.month(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.month(dateString, { width: "narrow", context: "standalone" });
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 11;
  }
  set(date, _flags, value) {
    date.setMonth(value, 1);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "M",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/setWeek.js
function setWeek(date, week, options) {
  const date_ = toDate(date, options?.in);
  const diff = getWeek(date_, options) - week;
  date_.setDate(date_.getDate() - diff * 7);
  return toDate(date_, options?.in);
}

// ../../node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js
var LocalWeekParser = class extends Parser {
  priority = 100;
  parse(dateString, token, match2) {
    switch (token) {
      case "w":
        return parseNumericPattern(numericPatterns.week, dateString);
      case "wo":
        return match2.ordinalNumber(dateString, { unit: "week" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 53;
  }
  set(date, _flags, value, options) {
    return startOfWeek(setWeek(date, value, options), options);
  }
  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "i",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/setISOWeek.js
function setISOWeek(date, week, options) {
  const _date = toDate(date, options?.in);
  const diff = getISOWeek(_date, options) - week;
  _date.setDate(_date.getDate() - diff * 7);
  return _date;
}

// ../../node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js
var ISOWeekParser = class extends Parser {
  priority = 100;
  parse(dateString, token, match2) {
    switch (token) {
      case "I":
        return parseNumericPattern(numericPatterns.week, dateString);
      case "Io":
        return match2.ordinalNumber(dateString, { unit: "week" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 53;
  }
  set(date, _flags, value) {
    return startOfISOWeek(setISOWeek(date, value));
  }
  incompatibleTokens = [
    "y",
    "Y",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/DateParser.js
var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [
  31,
  29,
  31,
  30,
  31,
  30,
  31,
  31,
  30,
  31,
  30,
  31
];
var DateParser = class extends Parser {
  priority = 90;
  subPriority = 1;
  parse(dateString, token, match2) {
    switch (token) {
      case "d":
        return parseNumericPattern(numericPatterns.date, dateString);
      case "do":
        return match2.ordinalNumber(dateString, { unit: "date" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(date, value) {
    const year = date.getFullYear();
    const isLeapYear2 = isLeapYearIndex(year);
    const month = date.getMonth();
    if (isLeapYear2) {
      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
    } else {
      return value >= 1 && value <= DAYS_IN_MONTH[month];
    }
  }
  set(date, _flags, value) {
    date.setDate(value);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "w",
    "I",
    "D",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js
var DayOfYearParser = class extends Parser {
  priority = 90;
  subpriority = 1;
  parse(dateString, token, match2) {
    switch (token) {
      case "D":
      case "DD":
        return parseNumericPattern(numericPatterns.dayOfYear, dateString);
      case "Do":
        return match2.ordinalNumber(dateString, { unit: "date" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(date, value) {
    const year = date.getFullYear();
    const isLeapYear2 = isLeapYearIndex(year);
    if (isLeapYear2) {
      return value >= 1 && value <= 366;
    } else {
      return value >= 1 && value <= 365;
    }
  }
  set(date, _flags, value) {
    date.setMonth(0, value);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "Y",
    "R",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "I",
    "d",
    "E",
    "i",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/setDay.js
function setDay(date, day, options) {
  const defaultOptions2 = getDefaultOptions();
  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions2.weekStartsOn ?? defaultOptions2.locale?.options?.weekStartsOn ?? 0;
  const date_ = toDate(date, options?.in);
  const currentDay = date_.getDay();
  const remainder = day % 7;
  const dayIndex = (remainder + 7) % 7;
  const delta = 7 - weekStartsOn;
  const diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
  return addDays(date_, diff, options);
}

// ../../node_modules/date-fns/parse/_lib/parsers/DayParser.js
var DayParser = class extends Parser {
  priority = 90;
  parse(dateString, token, match2) {
    switch (token) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return match2.day(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
      // T
      case "EEEEE":
        return match2.day(dateString, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "EEEEEE":
        return match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
      // Tuesday
      case "EEEE":
      default:
        return match2.day(dateString, { width: "wide", context: "formatting" }) || match2.day(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 6;
  }
  set(date, _flags, value, options) {
    date = setDay(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["D", "i", "e", "c", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js
var LocalDayParser = class extends Parser {
  priority = 90;
  parse(dateString, token, match2, options) {
    const valueCallback = (value) => {
      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;
      return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
    };
    switch (token) {
      // 3
      case "e":
      case "ee":
        return mapValue(parseNDigits(token.length, dateString), valueCallback);
      // 3rd
      case "eo":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "day"
          }),
          valueCallback
        );
      // Tue
      case "eee":
        return match2.day(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
      // T
      case "eeeee":
        return match2.day(dateString, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "eeeeee":
        return match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
      // Tuesday
      case "eeee":
      default:
        return match2.day(dateString, { width: "wide", context: "formatting" }) || match2.day(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.day(dateString, { width: "short", context: "formatting" }) || match2.day(dateString, { width: "narrow", context: "formatting" });
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 6;
  }
  set(date, _flags, value, options) {
    date = setDay(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "E",
    "i",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js
var StandAloneLocalDayParser = class extends Parser {
  priority = 90;
  parse(dateString, token, match2, options) {
    const valueCallback = (value) => {
      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;
      return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
    };
    switch (token) {
      // 3
      case "c":
      case "cc":
        return mapValue(parseNDigits(token.length, dateString), valueCallback);
      // 3rd
      case "co":
        return mapValue(
          match2.ordinalNumber(dateString, {
            unit: "day"
          }),
          valueCallback
        );
      // Tue
      case "ccc":
        return match2.day(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.day(dateString, { width: "short", context: "standalone" }) || match2.day(dateString, { width: "narrow", context: "standalone" });
      // T
      case "ccccc":
        return match2.day(dateString, {
          width: "narrow",
          context: "standalone"
        });
      // Tu
      case "cccccc":
        return match2.day(dateString, { width: "short", context: "standalone" }) || match2.day(dateString, { width: "narrow", context: "standalone" });
      // Tuesday
      case "cccc":
      default:
        return match2.day(dateString, { width: "wide", context: "standalone" }) || match2.day(dateString, {
          width: "abbreviated",
          context: "standalone"
        }) || match2.day(dateString, { width: "short", context: "standalone" }) || match2.day(dateString, { width: "narrow", context: "standalone" });
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 6;
  }
  set(date, _flags, value, options) {
    date = setDay(date, value, options);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "y",
    "R",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "I",
    "d",
    "D",
    "E",
    "i",
    "e",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/setISODay.js
function setISODay(date, day, options) {
  const date_ = toDate(date, options?.in);
  const currentDay = getISODay(date_, options);
  const diff = day - currentDay;
  return addDays(date_, diff, options);
}

// ../../node_modules/date-fns/parse/_lib/parsers/ISODayParser.js
var ISODayParser = class extends Parser {
  priority = 90;
  parse(dateString, token, match2) {
    const valueCallback = (value) => {
      if (value === 0) {
        return 7;
      }
      return value;
    };
    switch (token) {
      // 2
      case "i":
      case "ii":
        return parseNDigits(token.length, dateString);
      // 2nd
      case "io":
        return match2.ordinalNumber(dateString, { unit: "day" });
      // Tue
      case "iii":
        return mapValue(
          match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }),
          valueCallback
        );
      // T
      case "iiiii":
        return mapValue(
          match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }),
          valueCallback
        );
      // Tu
      case "iiiiii":
        return mapValue(
          match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }),
          valueCallback
        );
      // Tuesday
      case "iiii":
      default:
        return mapValue(
          match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }),
          valueCallback
        );
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 7;
  }
  set(date, _flags, value) {
    date = setISODay(date, value);
    date.setHours(0, 0, 0, 0);
    return date;
  }
  incompatibleTokens = [
    "y",
    "Y",
    "u",
    "q",
    "Q",
    "M",
    "L",
    "w",
    "d",
    "D",
    "E",
    "e",
    "c",
    "t",
    "T"
  ];
};

// ../../node_modules/date-fns/parse/_lib/parsers/AMPMParser.js
var AMPMParser = class extends Parser {
  priority = 80;
  parse(dateString, token, match2) {
    switch (token) {
      case "a":
      case "aa":
      case "aaa":
        return match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaaa":
        return match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return match2.dayPeriod(dateString, {
          width: "wide",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
    }
  }
  set(date, _flags, value) {
    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["b", "B", "H", "k", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js
var AMPMMidnightParser = class extends Parser {
  priority = 80;
  parse(dateString, token, match2) {
    switch (token) {
      case "b":
      case "bb":
      case "bbb":
        return match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbbb":
        return match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return match2.dayPeriod(dateString, {
          width: "wide",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
    }
  }
  set(date, _flags, value) {
    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["a", "B", "H", "k", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js
var DayPeriodParser = class extends Parser {
  priority = 80;
  parse(dateString, token, match2) {
    switch (token) {
      case "B":
      case "BB":
      case "BBB":
        return match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBBB":
        return match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return match2.dayPeriod(dateString, {
          width: "wide",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "abbreviated",
          context: "formatting"
        }) || match2.dayPeriod(dateString, {
          width: "narrow",
          context: "formatting"
        });
    }
  }
  set(date, _flags, value) {
    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["a", "b", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js
var Hour1to12Parser = class extends Parser {
  priority = 70;
  parse(dateString, token, match2) {
    switch (token) {
      case "h":
        return parseNumericPattern(numericPatterns.hour12h, dateString);
      case "ho":
        return match2.ordinalNumber(dateString, { unit: "hour" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 12;
  }
  set(date, _flags, value) {
    const isPM = date.getHours() >= 12;
    if (isPM && value < 12) {
      date.setHours(value + 12, 0, 0, 0);
    } else if (!isPM && value === 12) {
      date.setHours(0, 0, 0, 0);
    } else {
      date.setHours(value, 0, 0, 0);
    }
    return date;
  }
  incompatibleTokens = ["H", "K", "k", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js
var Hour0to23Parser = class extends Parser {
  priority = 70;
  parse(dateString, token, match2) {
    switch (token) {
      case "H":
        return parseNumericPattern(numericPatterns.hour23h, dateString);
      case "Ho":
        return match2.ordinalNumber(dateString, { unit: "hour" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 23;
  }
  set(date, _flags, value) {
    date.setHours(value, 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["a", "b", "h", "K", "k", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js
var Hour0To11Parser = class extends Parser {
  priority = 70;
  parse(dateString, token, match2) {
    switch (token) {
      case "K":
        return parseNumericPattern(numericPatterns.hour11h, dateString);
      case "Ko":
        return match2.ordinalNumber(dateString, { unit: "hour" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 11;
  }
  set(date, _flags, value) {
    const isPM = date.getHours() >= 12;
    if (isPM && value < 12) {
      date.setHours(value + 12, 0, 0, 0);
    } else {
      date.setHours(value, 0, 0, 0);
    }
    return date;
  }
  incompatibleTokens = ["h", "H", "k", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js
var Hour1To24Parser = class extends Parser {
  priority = 70;
  parse(dateString, token, match2) {
    switch (token) {
      case "k":
        return parseNumericPattern(numericPatterns.hour24h, dateString);
      case "ko":
        return match2.ordinalNumber(dateString, { unit: "hour" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 1 && value <= 24;
  }
  set(date, _flags, value) {
    const hours = value <= 24 ? value % 24 : value;
    date.setHours(hours, 0, 0, 0);
    return date;
  }
  incompatibleTokens = ["a", "b", "h", "H", "K", "t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/MinuteParser.js
var MinuteParser = class extends Parser {
  priority = 60;
  parse(dateString, token, match2) {
    switch (token) {
      case "m":
        return parseNumericPattern(numericPatterns.minute, dateString);
      case "mo":
        return match2.ordinalNumber(dateString, { unit: "minute" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 59;
  }
  set(date, _flags, value) {
    date.setMinutes(value, 0, 0);
    return date;
  }
  incompatibleTokens = ["t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/SecondParser.js
var SecondParser = class extends Parser {
  priority = 50;
  parse(dateString, token, match2) {
    switch (token) {
      case "s":
        return parseNumericPattern(numericPatterns.second, dateString);
      case "so":
        return match2.ordinalNumber(dateString, { unit: "second" });
      default:
        return parseNDigits(token.length, dateString);
    }
  }
  validate(_date, value) {
    return value >= 0 && value <= 59;
  }
  set(date, _flags, value) {
    date.setSeconds(value, 0);
    return date;
  }
  incompatibleTokens = ["t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js
var FractionOfSecondParser = class extends Parser {
  priority = 30;
  parse(dateString, token) {
    const valueCallback = (value) => Math.trunc(value * Math.pow(10, -token.length + 3));
    return mapValue(parseNDigits(token.length, dateString), valueCallback);
  }
  set(date, _flags, value) {
    date.setMilliseconds(value);
    return date;
  }
  incompatibleTokens = ["t", "T"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js
var ISOTimezoneWithZParser = class extends Parser {
  priority = 10;
  parse(dateString, token) {
    switch (token) {
      case "X":
        return parseTimezonePattern(
          timezonePatterns.basicOptionalMinutes,
          dateString
        );
      case "XX":
        return parseTimezonePattern(timezonePatterns.basic, dateString);
      case "XXXX":
        return parseTimezonePattern(
          timezonePatterns.basicOptionalSeconds,
          dateString
        );
      case "XXXXX":
        return parseTimezonePattern(
          timezonePatterns.extendedOptionalSeconds,
          dateString
        );
      case "XXX":
      default:
        return parseTimezonePattern(timezonePatterns.extended, dateString);
    }
  }
  set(date, flags, value) {
    if (flags.timestampIsSet) return date;
    return constructFrom(
      date,
      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value
    );
  }
  incompatibleTokens = ["t", "T", "x"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js
var ISOTimezoneParser = class extends Parser {
  priority = 10;
  parse(dateString, token) {
    switch (token) {
      case "x":
        return parseTimezonePattern(
          timezonePatterns.basicOptionalMinutes,
          dateString
        );
      case "xx":
        return parseTimezonePattern(timezonePatterns.basic, dateString);
      case "xxxx":
        return parseTimezonePattern(
          timezonePatterns.basicOptionalSeconds,
          dateString
        );
      case "xxxxx":
        return parseTimezonePattern(
          timezonePatterns.extendedOptionalSeconds,
          dateString
        );
      case "xxx":
      default:
        return parseTimezonePattern(timezonePatterns.extended, dateString);
    }
  }
  set(date, flags, value) {
    if (flags.timestampIsSet) return date;
    return constructFrom(
      date,
      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value
    );
  }
  incompatibleTokens = ["t", "T", "X"];
};

// ../../node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js
var TimestampSecondsParser = class extends Parser {
  priority = 40;
  parse(dateString) {
    return parseAnyDigitsSigned(dateString);
  }
  set(date, _flags, value) {
    return [constructFrom(date, value * 1e3), { timestampIsSet: true }];
  }
  incompatibleTokens = "*";
};

// ../../node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js
var TimestampMillisecondsParser = class extends Parser {
  priority = 20;
  parse(dateString) {
    return parseAnyDigitsSigned(dateString);
  }
  set(date, _flags, value) {
    return [constructFrom(date, value), { timestampIsSet: true }];
  }
  incompatibleTokens = "*";
};

// ../../node_modules/date-fns/parse/_lib/parsers.js
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};

// ../../node_modules/date-fns/parse.js
var formattingTokensRegExp2 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
var longFormattingTokensRegExp2 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp2 = /^'([^]*?)'?$/;
var doubleQuoteRegExp2 = /''/g;
var notWhitespaceRegExp = /\S/;
var unescapedLatinCharacterRegExp2 = /[a-zA-Z]/;
function parse(dateStr, formatStr, referenceDate, options) {
  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);
  const defaultOptions2 = getDefaultOptions2();
  const locale = options?.locale ?? defaultOptions2.locale ?? enUS;
  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions2.firstWeekContainsDate ?? defaultOptions2.locale?.options?.firstWeekContainsDate ?? 1;
  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions2.weekStartsOn ?? defaultOptions2.locale?.options?.weekStartsOn ?? 0;
  if (!formatStr)
    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);
  const subFnOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale
  };
  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];
  const tokens3 = formatStr.match(longFormattingTokensRegExp2).map((substring) => {
    const firstCharacter = substring[0];
    if (firstCharacter in longFormatters) {
      const longFormatter = longFormatters[firstCharacter];
      return longFormatter(substring, locale.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp2);
  const usedTokens = [];
  for (let token of tokens3) {
    if (!options?.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {
      warnOrThrowProtectedError(token, formatStr, dateStr);
    }
    if (!options?.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {
      warnOrThrowProtectedError(token, formatStr, dateStr);
    }
    const firstCharacter = token[0];
    const parser = parsers[firstCharacter];
    if (parser) {
      const { incompatibleTokens } = parser;
      if (Array.isArray(incompatibleTokens)) {
        const incompatibleToken = usedTokens.find(
          (usedToken) => incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter
        );
        if (incompatibleToken) {
          throw new RangeError(
            `The format string mustn't contain \`${incompatibleToken.fullToken}\` and \`${token}\` at the same time`
          );
        }
      } else if (parser.incompatibleTokens === "*" && usedTokens.length > 0) {
        throw new RangeError(
          `The format string mustn't contain \`${token}\` and any other token at the same time`
        );
      }
      usedTokens.push({ token: firstCharacter, fullToken: token });
      const parseResult = parser.run(
        dateStr,
        token,
        locale.match,
        subFnOptions
      );
      if (!parseResult) {
        return invalidDate();
      }
      setters.push(parseResult.setter);
      dateStr = parseResult.rest;
    } else {
      if (firstCharacter.match(unescapedLatinCharacterRegExp2)) {
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" + firstCharacter + "`"
        );
      }
      if (token === "''") {
        token = "'";
      } else if (firstCharacter === "'") {
        token = cleanEscapedString2(token);
      }
      if (dateStr.indexOf(token) === 0) {
        dateStr = dateStr.slice(token.length);
      } else {
        return invalidDate();
      }
    }
  }
  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {
    return invalidDate();
  }
  const uniquePrioritySetters = setters.map((setter) => setter.priority).sort((a, b2) => b2 - a).filter((priority, index3, array) => array.indexOf(priority) === index3).map(
    (priority) => setters.filter((setter) => setter.priority === priority).sort((a, b2) => b2.subPriority - a.subPriority)
  ).map((setterArray) => setterArray[0]);
  let date = toDate(referenceDate, options?.in);
  if (isNaN(+date)) return invalidDate();
  const flags = {};
  for (const setter of uniquePrioritySetters) {
    if (!setter.validate(date, subFnOptions)) {
      return invalidDate();
    }
    const result2 = setter.set(date, flags, subFnOptions);
    if (Array.isArray(result2)) {
      date = result2[0];
      Object.assign(flags, result2[1]);
    } else {
      date = result2;
    }
  }
  return date;
}
function cleanEscapedString2(input) {
  return input.match(escapedStringRegExp2)[1].replace(doubleQuoteRegExp2, "'");
}

// ../../node_modules/date-fns/isSameMonth.js
function isSameMonth(laterDate, earlierDate, options) {
  const [laterDate_, earlierDate_] = normalizeDates(
    options?.in,
    laterDate,
    earlierDate
  );
  return laterDate_.getFullYear() === earlierDate_.getFullYear() && laterDate_.getMonth() === earlierDate_.getMonth();
}

// ../../node_modules/date-fns/isSameYear.js
function isSameYear(laterDate, earlierDate, options) {
  const [laterDate_, earlierDate_] = normalizeDates(
    options?.in,
    laterDate,
    earlierDate
  );
  return laterDate_.getFullYear() === earlierDate_.getFullYear();
}

// ../../node_modules/date-fns/parseISO.js
function parseISO(argument, options) {
  const invalidDate = () => constructFrom(options?.in, NaN);
  const additionalDigits = options?.additionalDigits ?? 2;
  const dateStrings = splitDateString(argument);
  let date;
  if (dateStrings.date) {
    const parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(+date)) return invalidDate();
  const timestamp = +date;
  let time = 0;
  let offset;
  if (dateStrings.time) {
    time = parseTime(dateStrings.time);
    if (isNaN(time)) return invalidDate();
  }
  if (dateStrings.timezone) {
    offset = parseTimezone(dateStrings.timezone);
    if (isNaN(offset)) return invalidDate();
  } else {
    const tmpDate = new Date(timestamp + time);
    const result2 = toDate(0, options?.in);
    result2.setFullYear(
      tmpDate.getUTCFullYear(),
      tmpDate.getUTCMonth(),
      tmpDate.getUTCDate()
    );
    result2.setHours(
      tmpDate.getUTCHours(),
      tmpDate.getUTCMinutes(),
      tmpDate.getUTCSeconds(),
      tmpDate.getUTCMilliseconds()
    );
    return result2;
  }
  return toDate(timestamp + time + offset, options?.in);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
};
var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  const dateStrings = {};
  const array = dateString.split(patterns.dateTimeDelimiter);
  let timeString;
  if (array.length > 2) {
    return dateStrings;
  }
  if (/:/.test(array[0])) {
    timeString = array[0];
  } else {
    dateStrings.date = array[0];
    timeString = array[1];
    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
      timeString = dateString.substr(
        dateStrings.date.length,
        dateString.length
      );
    }
  }
  if (timeString) {
    const token = patterns.timezone.exec(timeString);
    if (token) {
      dateStrings.time = timeString.replace(token[1], "");
      dateStrings.timezone = token[1];
    } else {
      dateStrings.time = timeString;
    }
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  const regex = new RegExp(
    "^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)"
  );
  const captures = dateString.match(regex);
  if (!captures) return { year: NaN, restDateString: "" };
  const year = captures[1] ? parseInt(captures[1]) : null;
  const century = captures[2] ? parseInt(captures[2]) : null;
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  if (year === null) return /* @__PURE__ */ new Date(NaN);
  const captures = dateString.match(dateRegex);
  if (!captures) return /* @__PURE__ */ new Date(NaN);
  const isWeekDate = !!captures[4];
  const dayOfYear = parseDateUnit(captures[1]);
  const month = parseDateUnit(captures[2]) - 1;
  const day = parseDateUnit(captures[3]);
  const week = parseDateUnit(captures[4]);
  const dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate) {
    if (!validateWeekDate(year, week, dayOfWeek)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    return dayOfISOWeekYear(year, week, dayOfWeek);
  } else {
    const date = /* @__PURE__ */ new Date(0);
    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
      return /* @__PURE__ */ new Date(NaN);
    }
    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
    return date;
  }
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  const captures = timeString.match(timeRegex);
  if (!captures) return NaN;
  const hours = parseTimeUnit(captures[1]);
  const minutes = parseTimeUnit(captures[2]);
  const seconds = parseTimeUnit(captures[3]);
  if (!validateTime(hours, minutes, seconds)) {
    return NaN;
  }
  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(",", ".")) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === "Z") return 0;
  const captures = timezoneString.match(timezoneRegex);
  if (!captures) return 0;
  const sign = captures[1] === "+" ? -1 : 1;
  const hours = parseInt(captures[2]);
  const minutes = captures[3] && parseInt(captures[3]) || 0;
  if (!validateTimezone(hours, minutes)) {
    return NaN;
  }
  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  const date = /* @__PURE__ */ new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  const fourthOfJanuaryDay = date.getUTCDay() || 7;
  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  date.setUTCDate(date.getUTCDate() + diff);
  return date;
}
var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function isLeapYearIndex2(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex2(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex2(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  if (hours === 24) {
    return minutes === 0 && seconds === 0;
  }
  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

// ../../node_modules/date-fns/setMonth.js
function setMonth(date, month, options) {
  const _date = toDate(date, options?.in);
  const year = _date.getFullYear();
  const day = _date.getDate();
  const midMonth = constructFrom(options?.in || date, 0);
  midMonth.setFullYear(year, month, 15);
  midMonth.setHours(0, 0, 0, 0);
  const daysInMonth = getDaysInMonth(midMonth);
  _date.setMonth(month, Math.min(day, daysInMonth));
  return _date;
}

// ../../node_modules/date-fns/setYear.js
function setYear(date, year, options) {
  const date_ = toDate(date, options?.in);
  if (isNaN(+date_)) return constructFrom(options?.in || date, NaN);
  date_.setFullYear(year);
  return date_;
}

// ../../packages/aitable/src/grid/utils/business/groupValue.ts
var getGroupDisplayValue = (value, fieldType) => {
  if (value == null || value === "") {
    return "(Empty)";
  }
  if (Array.isArray(value)) {
    return value.map((v) => String(v)).join(", ");
  }
  if (typeof value === "object") {
    return JSON.stringify(value);
  }
  return String(value);
};
var sortGroupValues = (a, b2) => {
  if (a == null && b2 == null) {
    return 0;
  }
  if (a == null) {
    return 1;
  }
  if (b2 == null) {
    return -1;
  }
  if (typeof a === "number" && typeof b2 === "number") {
    return a - b2;
  }
  return String(a).localeCompare(String(b2));
};

// ../../packages/aitable/src/grid/utils/business/imageHandler.ts
var formatFileSize = (bytes) => {
  if (bytes === 0) {
    return "0 Bytes";
  }
  const k = 1024;
  const sizes = ["Bytes", "KB", "MB", "GB"];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + " " + sizes[i];
};

// ../../packages/aitable/src/grid/utils/business/utils.ts
var cancelTimeout = (timeoutID) => {
  cancelAnimationFrame(timeoutID.id);
};
var requestTimeout = (callback, delay2) => {
  const start = Date.now();
  function tick() {
    if (Date.now() - start >= delay2) {
      callback.call(null);
    } else {
      timeoutID.id = requestAnimationFrame(tick);
    }
  }
  const timeoutID = {
    id: requestAnimationFrame(tick)
  };
  return timeoutID;
};
var getWheelDelta = ({
  event,
  pageHeight,
  lineHeight
}) => {
  let [x2, y] = [event.deltaX, event.deltaY];
  if (x2 === 0 && event.shiftKey) {
    [y, x2] = [0, y];
  }
  if (event.deltaMode === WheelEvent.DOM_DELTA_LINE) {
    y *= lineHeight ?? 32;
  } else if (event.deltaMode === WheelEvent.DOM_DELTA_PAGE) {
    y *= pageHeight ?? document.body.clientHeight - 180;
  }
  return [x2, y];
};
var hexToRGBA = (hex, alpha = 1) => {
  const [r, g, b2] = parseToRGB(hex);
  if (r == null || g == null || b2 == null) {
    return hex;
  }
  return `rgba(${+r},${+g},${+b2},${alpha})`;
};
var parseToRGB = (hex) => {
  let r, g, b2;
  if (hex.length === 4) {
    r = "0x" + hex[1] + hex[1];
    g = "0x" + hex[2] + hex[2];
    b2 = "0x" + hex[3] + hex[3];
  } else if (hex.length === 7) {
    r = "0x" + hex[1] + hex[2];
    g = "0x" + hex[3] + hex[4];
    b2 = "0x" + hex[5] + hex[6];
  }
  if (r == null || g == null || b2 == null) {
    return [];
  }
  return [+r, +g, +b2];
};

// ../../packages/aitable/src/grid/configs/gridTheme.ts
var gridTheme = {
  // Common
  staticWhite: "#FFFFFF",
  staticBlack: "#000000",
  iconFgCommon: l.gray[500],
  iconBgCommon: l.transparent,
  iconFgHighlight: l.yellow[400],
  iconBgHighlight: l.yellow[400],
  iconFgSelected: l.blue[50],
  iconBgSelected: l.black,
  iconSizeXS: 16,
  iconSizeSM: 20,
  iconSizeMD: 24,
  iconSizeLG: 32,
  fontSizeXXS: 10,
  fontSizeXS: 12,
  fontSizeSM: 13,
  fontSizeMD: 14,
  fontSizeLG: 16,
  fontFamily: "Inter, Roboto, -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui, helvetica neue, helvetica, Ubuntu, noto, arial, sans-serif",
  fontSize: 13,
  textColor: l.gray[900],
  textColorSecondary: l.gray[500],
  // Cell
  cellBg: l.white,
  cellBgHovered: l.slate[100],
  cellBgSelected: hexToRGBA(l.zinc[200], 0.5),
  // cellBgSelected: colors.zinc[100],
  cellBgLoading: l.violet[50],
  cellLineColor: l.slate[200],
  cellLineColorActived: l.black,
  cellTextColor: l.zinc[800],
  cellTextColorHighlight: l.violet[500],
  cellOptionBg: l.gray[300],
  cellOptionBgHighlight: l.slate[200],
  cellOptionTextColor: l.black,
  // Group Header
  groupHeaderBgPrimary: l.slate[50],
  groupHeaderBgSecondary: l.slate[100],
  groupHeaderBgTertiary: l.slate[200],
  // Column Header
  columnHeaderBg: l.slate[50],
  columnHeaderBgHovered: l.slate[100],
  columnHeaderBgSelected: l.slate[200],
  columnHeaderNameColor: l.zinc[800],
  columnResizeHandlerBg: l.slate[400],
  columnDraggingPlaceholderBg: hexToRGBA(l.black, 0.2),
  // Column Statistic
  columnStatisticBgHovered: l.gray[200],
  // Row Header
  rowHeaderTextColor: l.gray[500],
  // Append Row
  appendRowBg: l.slate[50],
  appendRowBgHovered: l.slate[100],
  // Avatar Theme
  avatarBg: l.gray[100],
  avatarTextColor: l.gray[950],
  avatarSizeXS: 16,
  avatarSizeSM: 20,
  avatarSizeMD: 24,
  themeKey: "light",
  // ScrollBar
  scrollBarBg: l.gray[400],
  // interaction
  interactionLineColorCommon: l.slate[300],
  interactionLineColorHighlight: l.violet[500],
  // search cursor
  searchCursorBg: l.amber[400],
  searchTargetIndexBg: l.yellow[200],
  // comment
  commentCountBg: l.orange[400],
  commentCountTextColor: l.white
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/attachmentCellRenderer.ts
var attachmentCellRenderer = {
  type: "attachment" /* Attachment */,
  draw: (cell, props) => {
    const { ctx, theme, rect } = props;
    if (!ctx || !theme || !rect) return;
    const { data } = cell;
    const { textColor, cellLineColor } = theme;
    const { x: x2, y, width, height } = rect;
    ctx.fillStyle = textColor;
    ctx.font = `${theme.fontSize}px ${theme.fontFamily}`;
    ctx.textAlign = "left";
    ctx.textBaseline = "middle";
    if (data && data.length > 0) {
      const text = `${data.length} 个附件`;
      const textX = x2 + 8;
      const textY = y + height / 2;
      ctx.fillText(text, textX, textY);
    } else {
      const text = "无附件";
      const textX = x2 + 8;
      const textY = y + height / 2;
      ctx.fillStyle = theme.textColorSecondary;
      ctx.fillText(text, textX, textY);
    }
    if (props.isActive) {
      ctx.strokeStyle = theme.cellLineColorActived;
      ctx.lineWidth = 2;
      ctx.strokeRect(x2 + 1, y + 1, width - 2, height - 2);
    }
  },
  needsHover: true
};

// ../../node_modules/lru-cache/dist/esm/index.js
var perf = typeof performance === "object" && performance && typeof performance.now === "function" ? performance : Date;
var warned = /* @__PURE__ */ new Set();
var PROCESS = typeof process === "object" && !!process ? process : {};
var emitWarning = (msg, type, code, fn) => {
  typeof PROCESS.emitWarning === "function" ? PROCESS.emitWarning(msg, type, code, fn) : console.error(`[${code}] ${type}: ${msg}`);
};
var AC = globalThis.AbortController;
var AS = globalThis.AbortSignal;
if (typeof AC === "undefined") {
  AS = class AbortSignal {
    onabort;
    _onabort = [];
    reason;
    aborted = false;
    addEventListener(_2, fn) {
      this._onabort.push(fn);
    }
  };
  AC = class AbortController {
    constructor() {
      warnACPolyfill();
    }
    signal = new AS();
    abort(reason) {
      if (this.signal.aborted)
        return;
      this.signal.reason = reason;
      this.signal.aborted = true;
      for (const fn of this.signal._onabort) {
        fn(reason);
      }
      this.signal.onabort?.(reason);
    }
  };
  let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== "1";
  const warnACPolyfill = () => {
    if (!printACPolyfillWarning)
      return;
    printACPolyfillWarning = false;
    emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.", "NO_ABORT_CONTROLLER", "ENOTSUP", warnACPolyfill);
  };
}
var shouldWarn = (code) => !warned.has(code);
var TYPE = Symbol("type");
var isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);
var getUintArray = (max3) => !isPosInt(max3) ? null : max3 <= Math.pow(2, 8) ? Uint8Array : max3 <= Math.pow(2, 16) ? Uint16Array : max3 <= Math.pow(2, 32) ? Uint32Array : max3 <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;
var ZeroArray = class extends Array {
  constructor(size2) {
    super(size2);
    this.fill(0);
  }
};
var Stack2 = class _Stack {
  heap;
  length;
  // private constructor
  static #constructing = false;
  static create(max3) {
    const HeapCls = getUintArray(max3);
    if (!HeapCls)
      return [];
    _Stack.#constructing = true;
    const s = new _Stack(max3, HeapCls);
    _Stack.#constructing = false;
    return s;
  }
  constructor(max3, HeapCls) {
    if (!_Stack.#constructing) {
      throw new TypeError("instantiate Stack using Stack.create(n)");
    }
    this.heap = new HeapCls(max3);
    this.length = 0;
  }
  push(n) {
    this.heap[this.length++] = n;
  }
  pop() {
    return this.heap[--this.length];
  }
};
var LRUCache = class _LRUCache {
  // options that cannot be changed without disaster
  #max;
  #maxSize;
  #dispose;
  #disposeAfter;
  #fetchMethod;
  #memoMethod;
  /**
   * {@link LRUCache.OptionsBase.ttl}
   */
  ttl;
  /**
   * {@link LRUCache.OptionsBase.ttlResolution}
   */
  ttlResolution;
  /**
   * {@link LRUCache.OptionsBase.ttlAutopurge}
   */
  ttlAutopurge;
  /**
   * {@link LRUCache.OptionsBase.updateAgeOnGet}
   */
  updateAgeOnGet;
  /**
   * {@link LRUCache.OptionsBase.updateAgeOnHas}
   */
  updateAgeOnHas;
  /**
   * {@link LRUCache.OptionsBase.allowStale}
   */
  allowStale;
  /**
   * {@link LRUCache.OptionsBase.noDisposeOnSet}
   */
  noDisposeOnSet;
  /**
   * {@link LRUCache.OptionsBase.noUpdateTTL}
   */
  noUpdateTTL;
  /**
   * {@link LRUCache.OptionsBase.maxEntrySize}
   */
  maxEntrySize;
  /**
   * {@link LRUCache.OptionsBase.sizeCalculation}
   */
  sizeCalculation;
  /**
   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}
   */
  noDeleteOnFetchRejection;
  /**
   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}
   */
  noDeleteOnStaleGet;
  /**
   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}
   */
  allowStaleOnFetchAbort;
  /**
   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}
   */
  allowStaleOnFetchRejection;
  /**
   * {@link LRUCache.OptionsBase.ignoreFetchAbort}
   */
  ignoreFetchAbort;
  // computed properties
  #size;
  #calculatedSize;
  #keyMap;
  #keyList;
  #valList;
  #next;
  #prev;
  #head;
  #tail;
  #free;
  #disposed;
  #sizes;
  #starts;
  #ttls;
  #hasDispose;
  #hasFetchMethod;
  #hasDisposeAfter;
  /**
   * Do not call this method unless you need to inspect the
   * inner workings of the cache.  If anything returned by this
   * object is modified in any way, strange breakage may occur.
   *
   * These fields are private for a reason!
   *
   * @internal
   */
  static unsafeExposeInternals(c) {
    return {
      // properties
      starts: c.#starts,
      ttls: c.#ttls,
      sizes: c.#sizes,
      keyMap: c.#keyMap,
      keyList: c.#keyList,
      valList: c.#valList,
      next: c.#next,
      prev: c.#prev,
      get head() {
        return c.#head;
      },
      get tail() {
        return c.#tail;
      },
      free: c.#free,
      // methods
      isBackgroundFetch: (p) => c.#isBackgroundFetch(p),
      backgroundFetch: (k, index3, options, context) => c.#backgroundFetch(k, index3, options, context),
      moveToTail: (index3) => c.#moveToTail(index3),
      indexes: (options) => c.#indexes(options),
      rindexes: (options) => c.#rindexes(options),
      isStale: (index3) => c.#isStale(index3)
    };
  }
  // Protected read-only members
  /**
   * {@link LRUCache.OptionsBase.max} (read-only)
   */
  get max() {
    return this.#max;
  }
  /**
   * {@link LRUCache.OptionsBase.maxSize} (read-only)
   */
  get maxSize() {
    return this.#maxSize;
  }
  /**
   * The total computed size of items in the cache (read-only)
   */
  get calculatedSize() {
    return this.#calculatedSize;
  }
  /**
   * The number of items stored in the cache (read-only)
   */
  get size() {
    return this.#size;
  }
  /**
   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)
   */
  get fetchMethod() {
    return this.#fetchMethod;
  }
  get memoMethod() {
    return this.#memoMethod;
  }
  /**
   * {@link LRUCache.OptionsBase.dispose} (read-only)
   */
  get dispose() {
    return this.#dispose;
  }
  /**
   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)
   */
  get disposeAfter() {
    return this.#disposeAfter;
  }
  constructor(options) {
    const { max: max3 = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort } = options;
    if (max3 !== 0 && !isPosInt(max3)) {
      throw new TypeError("max option must be a nonnegative integer");
    }
    const UintArray = max3 ? getUintArray(max3) : Array;
    if (!UintArray) {
      throw new Error("invalid max value: " + max3);
    }
    this.#max = max3;
    this.#maxSize = maxSize;
    this.maxEntrySize = maxEntrySize || this.#maxSize;
    this.sizeCalculation = sizeCalculation;
    if (this.sizeCalculation) {
      if (!this.#maxSize && !this.maxEntrySize) {
        throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
      }
      if (typeof this.sizeCalculation !== "function") {
        throw new TypeError("sizeCalculation set to non-function");
      }
    }
    if (memoMethod !== void 0 && typeof memoMethod !== "function") {
      throw new TypeError("memoMethod must be a function if defined");
    }
    this.#memoMethod = memoMethod;
    if (fetchMethod !== void 0 && typeof fetchMethod !== "function") {
      throw new TypeError("fetchMethod must be a function if specified");
    }
    this.#fetchMethod = fetchMethod;
    this.#hasFetchMethod = !!fetchMethod;
    this.#keyMap = /* @__PURE__ */ new Map();
    this.#keyList = new Array(max3).fill(void 0);
    this.#valList = new Array(max3).fill(void 0);
    this.#next = new UintArray(max3);
    this.#prev = new UintArray(max3);
    this.#head = 0;
    this.#tail = 0;
    this.#free = Stack2.create(max3);
    this.#size = 0;
    this.#calculatedSize = 0;
    if (typeof dispose === "function") {
      this.#dispose = dispose;
    }
    if (typeof disposeAfter === "function") {
      this.#disposeAfter = disposeAfter;
      this.#disposed = [];
    } else {
      this.#disposeAfter = void 0;
      this.#disposed = void 0;
    }
    this.#hasDispose = !!this.#dispose;
    this.#hasDisposeAfter = !!this.#disposeAfter;
    this.noDisposeOnSet = !!noDisposeOnSet;
    this.noUpdateTTL = !!noUpdateTTL;
    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;
    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;
    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;
    this.ignoreFetchAbort = !!ignoreFetchAbort;
    if (this.maxEntrySize !== 0) {
      if (this.#maxSize !== 0) {
        if (!isPosInt(this.#maxSize)) {
          throw new TypeError("maxSize must be a positive integer if specified");
        }
      }
      if (!isPosInt(this.maxEntrySize)) {
        throw new TypeError("maxEntrySize must be a positive integer if specified");
      }
      this.#initializeSizeTracking();
    }
    this.allowStale = !!allowStale;
    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;
    this.updateAgeOnGet = !!updateAgeOnGet;
    this.updateAgeOnHas = !!updateAgeOnHas;
    this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;
    this.ttlAutopurge = !!ttlAutopurge;
    this.ttl = ttl || 0;
    if (this.ttl) {
      if (!isPosInt(this.ttl)) {
        throw new TypeError("ttl must be a positive integer if specified");
      }
      this.#initializeTTLTracking();
    }
    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {
      throw new TypeError("At least one of max, maxSize, or ttl is required");
    }
    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {
      const code = "LRU_CACHE_UNBOUNDED";
      if (shouldWarn(code)) {
        warned.add(code);
        const msg = "TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.";
        emitWarning(msg, "UnboundedCacheWarning", code, _LRUCache);
      }
    }
  }
  /**
   * Return the number of ms left in the item's TTL. If item is not in cache,
   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.
   */
  getRemainingTTL(key) {
    return this.#keyMap.has(key) ? Infinity : 0;
  }
  #initializeTTLTracking() {
    const ttls = new ZeroArray(this.#max);
    const starts = new ZeroArray(this.#max);
    this.#ttls = ttls;
    this.#starts = starts;
    this.#setItemTTL = (index3, ttl, start = perf.now()) => {
      starts[index3] = ttl !== 0 ? start : 0;
      ttls[index3] = ttl;
      if (ttl !== 0 && this.ttlAutopurge) {
        const t = setTimeout(() => {
          if (this.#isStale(index3)) {
            this.#delete(this.#keyList[index3], "expire");
          }
        }, ttl + 1);
        if (t.unref) {
          t.unref();
        }
      }
    };
    this.#updateItemAge = (index3) => {
      starts[index3] = ttls[index3] !== 0 ? perf.now() : 0;
    };
    this.#statusTTL = (status, index3) => {
      if (ttls[index3]) {
        const ttl = ttls[index3];
        const start = starts[index3];
        if (!ttl || !start)
          return;
        status.ttl = ttl;
        status.start = start;
        status.now = cachedNow || getNow();
        const age = status.now - start;
        status.remainingTTL = ttl - age;
      }
    };
    let cachedNow = 0;
    const getNow = () => {
      const n = perf.now();
      if (this.ttlResolution > 0) {
        cachedNow = n;
        const t = setTimeout(() => cachedNow = 0, this.ttlResolution);
        if (t.unref) {
          t.unref();
        }
      }
      return n;
    };
    this.getRemainingTTL = (key) => {
      const index3 = this.#keyMap.get(key);
      if (index3 === void 0) {
        return 0;
      }
      const ttl = ttls[index3];
      const start = starts[index3];
      if (!ttl || !start) {
        return Infinity;
      }
      const age = (cachedNow || getNow()) - start;
      return ttl - age;
    };
    this.#isStale = (index3) => {
      const s = starts[index3];
      const t = ttls[index3];
      return !!t && !!s && (cachedNow || getNow()) - s > t;
    };
  }
  // conditionally set private methods related to TTL
  #updateItemAge = () => {
  };
  #statusTTL = () => {
  };
  #setItemTTL = () => {
  };
  /* c8 ignore stop */
  #isStale = () => false;
  #initializeSizeTracking() {
    const sizes = new ZeroArray(this.#max);
    this.#calculatedSize = 0;
    this.#sizes = sizes;
    this.#removeItemSize = (index3) => {
      this.#calculatedSize -= sizes[index3];
      sizes[index3] = 0;
    };
    this.#requireSize = (k, v, size2, sizeCalculation) => {
      if (this.#isBackgroundFetch(v)) {
        return 0;
      }
      if (!isPosInt(size2)) {
        if (sizeCalculation) {
          if (typeof sizeCalculation !== "function") {
            throw new TypeError("sizeCalculation must be a function");
          }
          size2 = sizeCalculation(v, k);
          if (!isPosInt(size2)) {
            throw new TypeError("sizeCalculation return invalid (expect positive integer)");
          }
        } else {
          throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");
        }
      }
      return size2;
    };
    this.#addItemSize = (index3, size2, status) => {
      sizes[index3] = size2;
      if (this.#maxSize) {
        const maxSize = this.#maxSize - sizes[index3];
        while (this.#calculatedSize > maxSize) {
          this.#evict(true);
        }
      }
      this.#calculatedSize += sizes[index3];
      if (status) {
        status.entrySize = size2;
        status.totalCalculatedSize = this.#calculatedSize;
      }
    };
  }
  #removeItemSize = (_i) => {
  };
  #addItemSize = (_i, _s, _st) => {
  };
  #requireSize = (_k, _v, size2, sizeCalculation) => {
    if (size2 || sizeCalculation) {
      throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");
    }
    return 0;
  };
  *#indexes({ allowStale = this.allowStale } = {}) {
    if (this.#size) {
      for (let i = this.#tail; true; ) {
        if (!this.#isValidIndex(i)) {
          break;
        }
        if (allowStale || !this.#isStale(i)) {
          yield i;
        }
        if (i === this.#head) {
          break;
        } else {
          i = this.#prev[i];
        }
      }
    }
  }
  *#rindexes({ allowStale = this.allowStale } = {}) {
    if (this.#size) {
      for (let i = this.#head; true; ) {
        if (!this.#isValidIndex(i)) {
          break;
        }
        if (allowStale || !this.#isStale(i)) {
          yield i;
        }
        if (i === this.#tail) {
          break;
        } else {
          i = this.#next[i];
        }
      }
    }
  }
  #isValidIndex(index3) {
    return index3 !== void 0 && this.#keyMap.get(this.#keyList[index3]) === index3;
  }
  /**
   * Return a generator yielding `[key, value]` pairs,
   * in order from most recently used to least recently used.
   */
  *entries() {
    for (const i of this.#indexes()) {
      if (this.#valList[i] !== void 0 && this.#keyList[i] !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield [this.#keyList[i], this.#valList[i]];
      }
    }
  }
  /**
   * Inverse order version of {@link LRUCache.entries}
   *
   * Return a generator yielding `[key, value]` pairs,
   * in order from least recently used to most recently used.
   */
  *rentries() {
    for (const i of this.#rindexes()) {
      if (this.#valList[i] !== void 0 && this.#keyList[i] !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield [this.#keyList[i], this.#valList[i]];
      }
    }
  }
  /**
   * Return a generator yielding the keys in the cache,
   * in order from most recently used to least recently used.
   */
  *keys() {
    for (const i of this.#indexes()) {
      const k = this.#keyList[i];
      if (k !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield k;
      }
    }
  }
  /**
   * Inverse order version of {@link LRUCache.keys}
   *
   * Return a generator yielding the keys in the cache,
   * in order from least recently used to most recently used.
   */
  *rkeys() {
    for (const i of this.#rindexes()) {
      const k = this.#keyList[i];
      if (k !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield k;
      }
    }
  }
  /**
   * Return a generator yielding the values in the cache,
   * in order from most recently used to least recently used.
   */
  *values() {
    for (const i of this.#indexes()) {
      const v = this.#valList[i];
      if (v !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield this.#valList[i];
      }
    }
  }
  /**
   * Inverse order version of {@link LRUCache.values}
   *
   * Return a generator yielding the values in the cache,
   * in order from least recently used to most recently used.
   */
  *rvalues() {
    for (const i of this.#rindexes()) {
      const v = this.#valList[i];
      if (v !== void 0 && !this.#isBackgroundFetch(this.#valList[i])) {
        yield this.#valList[i];
      }
    }
  }
  /**
   * Iterating over the cache itself yields the same results as
   * {@link LRUCache.entries}
   */
  [Symbol.iterator]() {
    return this.entries();
  }
  /**
   * A String value that is used in the creation of the default string
   * description of an object. Called by the built-in method
   * `Object.prototype.toString`.
   */
  [Symbol.toStringTag] = "LRUCache";
  /**
   * Find a value for which the supplied fn method returns a truthy value,
   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.
   */
  find(fn, getOptions = {}) {
    for (const i of this.#indexes()) {
      const v = this.#valList[i];
      const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
      if (value === void 0)
        continue;
      if (fn(value, this.#keyList[i], this)) {
        return this.get(this.#keyList[i], getOptions);
      }
    }
  }
  /**
   * Call the supplied function on each item in the cache, in order from most
   * recently used to least recently used.
   *
   * `fn` is called as `fn(value, key, cache)`.
   *
   * If `thisp` is provided, function will be called in the `this`-context of
   * the provided object, or the cache if no `thisp` object is provided.
   *
   * Does not update age or recenty of use, or iterate over stale values.
   */
  forEach(fn, thisp = this) {
    for (const i of this.#indexes()) {
      const v = this.#valList[i];
      const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
      if (value === void 0)
        continue;
      fn.call(thisp, value, this.#keyList[i], this);
    }
  }
  /**
   * The same as {@link LRUCache.forEach} but items are iterated over in
   * reverse order.  (ie, less recently used items are iterated over first.)
   */
  rforEach(fn, thisp = this) {
    for (const i of this.#rindexes()) {
      const v = this.#valList[i];
      const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
      if (value === void 0)
        continue;
      fn.call(thisp, value, this.#keyList[i], this);
    }
  }
  /**
   * Delete any stale entries. Returns true if anything was removed,
   * false otherwise.
   */
  purgeStale() {
    let deleted = false;
    for (const i of this.#rindexes({ allowStale: true })) {
      if (this.#isStale(i)) {
        this.#delete(this.#keyList[i], "expire");
        deleted = true;
      }
    }
    return deleted;
  }
  /**
   * Get the extended info about a given entry, to get its value, size, and
   * TTL info simultaneously. Returns `undefined` if the key is not present.
   *
   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive
   * serialization, the `start` value is always the current timestamp, and the
   * `ttl` is a calculated remaining time to live (negative if expired).
   *
   * Always returns stale values, if their info is found in the cache, so be
   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})
   * if relevant.
   */
  info(key) {
    const i = this.#keyMap.get(key);
    if (i === void 0)
      return void 0;
    const v = this.#valList[i];
    const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
    if (value === void 0)
      return void 0;
    const entry = { value };
    if (this.#ttls && this.#starts) {
      const ttl = this.#ttls[i];
      const start = this.#starts[i];
      if (ttl && start) {
        const remain = ttl - (perf.now() - start);
        entry.ttl = remain;
        entry.start = Date.now();
      }
    }
    if (this.#sizes) {
      entry.size = this.#sizes[i];
    }
    return entry;
  }
  /**
   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be
   * passed to {@link LRLUCache#load}.
   *
   * The `start` fields are calculated relative to a portable `Date.now()`
   * timestamp, even if `performance.now()` is available.
   *
   * Stale entries are always included in the `dump`, even if
   * {@link LRUCache.OptionsBase.allowStale} is false.
   *
   * Note: this returns an actual array, not a generator, so it can be more
   * easily passed around.
   */
  dump() {
    const arr = [];
    for (const i of this.#indexes({ allowStale: true })) {
      const key = this.#keyList[i];
      const v = this.#valList[i];
      const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
      if (value === void 0 || key === void 0)
        continue;
      const entry = { value };
      if (this.#ttls && this.#starts) {
        entry.ttl = this.#ttls[i];
        const age = perf.now() - this.#starts[i];
        entry.start = Math.floor(Date.now() - age);
      }
      if (this.#sizes) {
        entry.size = this.#sizes[i];
      }
      arr.unshift([key, entry]);
    }
    return arr;
  }
  /**
   * Reset the cache and load in the items in entries in the order listed.
   *
   * The shape of the resulting cache may be different if the same options are
   * not used in both caches.
   *
   * The `start` fields are assumed to be calculated relative to a portable
   * `Date.now()` timestamp, even if `performance.now()` is available.
   */
  load(arr) {
    this.clear();
    for (const [key, entry] of arr) {
      if (entry.start) {
        const age = Date.now() - entry.start;
        entry.start = perf.now() - age;
      }
      this.set(key, entry.value, entry);
    }
  }
  /**
   * Add a value to the cache.
   *
   * Note: if `undefined` is specified as a value, this is an alias for
   * {@link LRUCache#delete}
   *
   * Fields on the {@link LRUCache.SetOptions} options param will override
   * their corresponding values in the constructor options for the scope
   * of this single `set()` operation.
   *
   * If `start` is provided, then that will set the effective start
   * time for the TTL calculation. Note that this must be a previous
   * value of `performance.now()` if supported, or a previous value of
   * `Date.now()` if not.
   *
   * Options object may also include `size`, which will prevent
   * calling the `sizeCalculation` function and just use the specified
   * number if it is a positive integer, and `noDisposeOnSet` which
   * will prevent calling a `dispose` function in the case of
   * overwrites.
   *
   * If the `size` (or return value of `sizeCalculation`) for a given
   * entry is greater than `maxEntrySize`, then the item will not be
   * added to the cache.
   *
   * Will update the recency of the entry.
   *
   * If the value is `undefined`, then this is an alias for
   * `cache.delete(key)`. `undefined` is never stored in the cache.
   */
  set(k, v, setOptions = {}) {
    if (v === void 0) {
      this.delete(k);
      return this;
    }
    const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status } = setOptions;
    let { noUpdateTTL = this.noUpdateTTL } = setOptions;
    const size2 = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);
    if (this.maxEntrySize && size2 > this.maxEntrySize) {
      if (status) {
        status.set = "miss";
        status.maxEntrySizeExceeded = true;
      }
      this.#delete(k, "set");
      return this;
    }
    let index3 = this.#size === 0 ? void 0 : this.#keyMap.get(k);
    if (index3 === void 0) {
      index3 = this.#size === 0 ? this.#tail : this.#free.length !== 0 ? this.#free.pop() : this.#size === this.#max ? this.#evict(false) : this.#size;
      this.#keyList[index3] = k;
      this.#valList[index3] = v;
      this.#keyMap.set(k, index3);
      this.#next[this.#tail] = index3;
      this.#prev[index3] = this.#tail;
      this.#tail = index3;
      this.#size++;
      this.#addItemSize(index3, size2, status);
      if (status)
        status.set = "add";
      noUpdateTTL = false;
    } else {
      this.#moveToTail(index3);
      const oldVal = this.#valList[index3];
      if (v !== oldVal) {
        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {
          oldVal.__abortController.abort(new Error("replaced"));
          const { __staleWhileFetching: s } = oldVal;
          if (s !== void 0 && !noDisposeOnSet) {
            if (this.#hasDispose) {
              this.#dispose?.(s, k, "set");
            }
            if (this.#hasDisposeAfter) {
              this.#disposed?.push([s, k, "set"]);
            }
          }
        } else if (!noDisposeOnSet) {
          if (this.#hasDispose) {
            this.#dispose?.(oldVal, k, "set");
          }
          if (this.#hasDisposeAfter) {
            this.#disposed?.push([oldVal, k, "set"]);
          }
        }
        this.#removeItemSize(index3);
        this.#addItemSize(index3, size2, status);
        this.#valList[index3] = v;
        if (status) {
          status.set = "replace";
          const oldValue = oldVal && this.#isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;
          if (oldValue !== void 0)
            status.oldValue = oldValue;
        }
      } else if (status) {
        status.set = "update";
      }
    }
    if (ttl !== 0 && !this.#ttls) {
      this.#initializeTTLTracking();
    }
    if (this.#ttls) {
      if (!noUpdateTTL) {
        this.#setItemTTL(index3, ttl, start);
      }
      if (status)
        this.#statusTTL(status, index3);
    }
    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {
      const dt = this.#disposed;
      let task;
      while (task = dt?.shift()) {
        this.#disposeAfter?.(...task);
      }
    }
    return this;
  }
  /**
   * Evict the least recently used item, returning its value or
   * `undefined` if cache is empty.
   */
  pop() {
    try {
      while (this.#size) {
        const val = this.#valList[this.#head];
        this.#evict(true);
        if (this.#isBackgroundFetch(val)) {
          if (val.__staleWhileFetching) {
            return val.__staleWhileFetching;
          }
        } else if (val !== void 0) {
          return val;
        }
      }
    } finally {
      if (this.#hasDisposeAfter && this.#disposed) {
        const dt = this.#disposed;
        let task;
        while (task = dt?.shift()) {
          this.#disposeAfter?.(...task);
        }
      }
    }
  }
  #evict(free) {
    const head2 = this.#head;
    const k = this.#keyList[head2];
    const v = this.#valList[head2];
    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {
      v.__abortController.abort(new Error("evicted"));
    } else if (this.#hasDispose || this.#hasDisposeAfter) {
      if (this.#hasDispose) {
        this.#dispose?.(v, k, "evict");
      }
      if (this.#hasDisposeAfter) {
        this.#disposed?.push([v, k, "evict"]);
      }
    }
    this.#removeItemSize(head2);
    if (free) {
      this.#keyList[head2] = void 0;
      this.#valList[head2] = void 0;
      this.#free.push(head2);
    }
    if (this.#size === 1) {
      this.#head = this.#tail = 0;
      this.#free.length = 0;
    } else {
      this.#head = this.#next[head2];
    }
    this.#keyMap.delete(k);
    this.#size--;
    return head2;
  }
  /**
   * Check if a key is in the cache, without updating the recency of use.
   * Will return false if the item is stale, even though it is technically
   * in the cache.
   *
   * Check if a key is in the cache, without updating the recency of
   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set
   * to `true` in either the options or the constructor.
   *
   * Will return `false` if the item is stale, even though it is technically in
   * the cache. The difference can be determined (if it matters) by using a
   * `status` argument, and inspecting the `has` field.
   *
   * Will not update item age unless
   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.
   */
  has(k, hasOptions = {}) {
    const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;
    const index3 = this.#keyMap.get(k);
    if (index3 !== void 0) {
      const v = this.#valList[index3];
      if (this.#isBackgroundFetch(v) && v.__staleWhileFetching === void 0) {
        return false;
      }
      if (!this.#isStale(index3)) {
        if (updateAgeOnHas) {
          this.#updateItemAge(index3);
        }
        if (status) {
          status.has = "hit";
          this.#statusTTL(status, index3);
        }
        return true;
      } else if (status) {
        status.has = "stale";
        this.#statusTTL(status, index3);
      }
    } else if (status) {
      status.has = "miss";
    }
    return false;
  }
  /**
   * Like {@link LRUCache#get} but doesn't update recency or delete stale
   * items.
   *
   * Returns `undefined` if the item is stale, unless
   * {@link LRUCache.OptionsBase.allowStale} is set.
   */
  peek(k, peekOptions = {}) {
    const { allowStale = this.allowStale } = peekOptions;
    const index3 = this.#keyMap.get(k);
    if (index3 === void 0 || !allowStale && this.#isStale(index3)) {
      return;
    }
    const v = this.#valList[index3];
    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;
  }
  #backgroundFetch(k, index3, options, context) {
    const v = index3 === void 0 ? void 0 : this.#valList[index3];
    if (this.#isBackgroundFetch(v)) {
      return v;
    }
    const ac = new AC();
    const { signal } = options;
    signal?.addEventListener("abort", () => ac.abort(signal.reason), {
      signal: ac.signal
    });
    const fetchOpts = {
      signal: ac.signal,
      options,
      context
    };
    const cb = (v2, updateCache = false) => {
      const { aborted } = ac.signal;
      const ignoreAbort = options.ignoreFetchAbort && v2 !== void 0;
      if (options.status) {
        if (aborted && !updateCache) {
          options.status.fetchAborted = true;
          options.status.fetchError = ac.signal.reason;
          if (ignoreAbort)
            options.status.fetchAbortIgnored = true;
        } else {
          options.status.fetchResolved = true;
        }
      }
      if (aborted && !ignoreAbort && !updateCache) {
        return fetchFail(ac.signal.reason);
      }
      const bf2 = p;
      if (this.#valList[index3] === p) {
        if (v2 === void 0) {
          if (bf2.__staleWhileFetching) {
            this.#valList[index3] = bf2.__staleWhileFetching;
          } else {
            this.#delete(k, "fetch");
          }
        } else {
          if (options.status)
            options.status.fetchUpdated = true;
          this.set(k, v2, fetchOpts.options);
        }
      }
      return v2;
    };
    const eb = (er) => {
      if (options.status) {
        options.status.fetchRejected = true;
        options.status.fetchError = er;
      }
      return fetchFail(er);
    };
    const fetchFail = (er) => {
      const { aborted } = ac.signal;
      const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;
      const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;
      const noDelete = allowStale || options.noDeleteOnFetchRejection;
      const bf2 = p;
      if (this.#valList[index3] === p) {
        const del = !noDelete || bf2.__staleWhileFetching === void 0;
        if (del) {
          this.#delete(k, "fetch");
        } else if (!allowStaleAborted) {
          this.#valList[index3] = bf2.__staleWhileFetching;
        }
      }
      if (allowStale) {
        if (options.status && bf2.__staleWhileFetching !== void 0) {
          options.status.returnedStale = true;
        }
        return bf2.__staleWhileFetching;
      } else if (bf2.__returned === bf2) {
        throw er;
      }
    };
    const pcall = (res, rej) => {
      const fmp = this.#fetchMethod?.(k, v, fetchOpts);
      if (fmp && fmp instanceof Promise) {
        fmp.then((v2) => res(v2 === void 0 ? void 0 : v2), rej);
      }
      ac.signal.addEventListener("abort", () => {
        if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {
          res(void 0);
          if (options.allowStaleOnFetchAbort) {
            res = (v2) => cb(v2, true);
          }
        }
      });
    };
    if (options.status)
      options.status.fetchDispatched = true;
    const p = new Promise(pcall).then(cb, eb);
    const bf = Object.assign(p, {
      __abortController: ac,
      __staleWhileFetching: v,
      __returned: void 0
    });
    if (index3 === void 0) {
      this.set(k, bf, { ...fetchOpts.options, status: void 0 });
      index3 = this.#keyMap.get(k);
    } else {
      this.#valList[index3] = bf;
    }
    return bf;
  }
  #isBackgroundFetch(p) {
    if (!this.#hasFetchMethod)
      return false;
    const b2 = p;
    return !!b2 && b2 instanceof Promise && b2.hasOwnProperty("__staleWhileFetching") && b2.__abortController instanceof AC;
  }
  async fetch(k, fetchOptions = {}) {
    const {
      // get options
      allowStale = this.allowStale,
      updateAgeOnGet = this.updateAgeOnGet,
      noDeleteOnStaleGet = this.noDeleteOnStaleGet,
      // set options
      ttl = this.ttl,
      noDisposeOnSet = this.noDisposeOnSet,
      size: size2 = 0,
      sizeCalculation = this.sizeCalculation,
      noUpdateTTL = this.noUpdateTTL,
      // fetch exclusive options
      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,
      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,
      ignoreFetchAbort = this.ignoreFetchAbort,
      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,
      context,
      forceRefresh = false,
      status,
      signal
    } = fetchOptions;
    if (!this.#hasFetchMethod) {
      if (status)
        status.fetch = "get";
      return this.get(k, {
        allowStale,
        updateAgeOnGet,
        noDeleteOnStaleGet,
        status
      });
    }
    const options = {
      allowStale,
      updateAgeOnGet,
      noDeleteOnStaleGet,
      ttl,
      noDisposeOnSet,
      size: size2,
      sizeCalculation,
      noUpdateTTL,
      noDeleteOnFetchRejection,
      allowStaleOnFetchRejection,
      allowStaleOnFetchAbort,
      ignoreFetchAbort,
      status,
      signal
    };
    let index3 = this.#keyMap.get(k);
    if (index3 === void 0) {
      if (status)
        status.fetch = "miss";
      const p = this.#backgroundFetch(k, index3, options, context);
      return p.__returned = p;
    } else {
      const v = this.#valList[index3];
      if (this.#isBackgroundFetch(v)) {
        const stale = allowStale && v.__staleWhileFetching !== void 0;
        if (status) {
          status.fetch = "inflight";
          if (stale)
            status.returnedStale = true;
        }
        return stale ? v.__staleWhileFetching : v.__returned = v;
      }
      const isStale2 = this.#isStale(index3);
      if (!forceRefresh && !isStale2) {
        if (status)
          status.fetch = "hit";
        this.#moveToTail(index3);
        if (updateAgeOnGet) {
          this.#updateItemAge(index3);
        }
        if (status)
          this.#statusTTL(status, index3);
        return v;
      }
      const p = this.#backgroundFetch(k, index3, options, context);
      const hasStale = p.__staleWhileFetching !== void 0;
      const staleVal = hasStale && allowStale;
      if (status) {
        status.fetch = isStale2 ? "stale" : "refresh";
        if (staleVal && isStale2)
          status.returnedStale = true;
      }
      return staleVal ? p.__staleWhileFetching : p.__returned = p;
    }
  }
  async forceFetch(k, fetchOptions = {}) {
    const v = await this.fetch(k, fetchOptions);
    if (v === void 0)
      throw new Error("fetch() returned undefined");
    return v;
  }
  memo(k, memoOptions = {}) {
    const memoMethod = this.#memoMethod;
    if (!memoMethod) {
      throw new Error("no memoMethod provided to constructor");
    }
    const { context, forceRefresh, ...options } = memoOptions;
    const v = this.get(k, options);
    if (!forceRefresh && v !== void 0)
      return v;
    const vv = memoMethod(k, v, {
      options,
      context
    });
    this.set(k, vv, options);
    return vv;
  }
  /**
   * Return a value from the cache. Will update the recency of the cache
   * entry found.
   *
   * If the key is not found, get() will return `undefined`.
   */
  get(k, getOptions = {}) {
    const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status } = getOptions;
    const index3 = this.#keyMap.get(k);
    if (index3 !== void 0) {
      const value = this.#valList[index3];
      const fetching = this.#isBackgroundFetch(value);
      if (status)
        this.#statusTTL(status, index3);
      if (this.#isStale(index3)) {
        if (status)
          status.get = "stale";
        if (!fetching) {
          if (!noDeleteOnStaleGet) {
            this.#delete(k, "expire");
          }
          if (status && allowStale)
            status.returnedStale = true;
          return allowStale ? value : void 0;
        } else {
          if (status && allowStale && value.__staleWhileFetching !== void 0) {
            status.returnedStale = true;
          }
          return allowStale ? value.__staleWhileFetching : void 0;
        }
      } else {
        if (status)
          status.get = "hit";
        if (fetching) {
          return value.__staleWhileFetching;
        }
        this.#moveToTail(index3);
        if (updateAgeOnGet) {
          this.#updateItemAge(index3);
        }
        return value;
      }
    } else if (status) {
      status.get = "miss";
    }
  }
  #connect(p, n) {
    this.#prev[n] = p;
    this.#next[p] = n;
  }
  #moveToTail(index3) {
    if (index3 !== this.#tail) {
      if (index3 === this.#head) {
        this.#head = this.#next[index3];
      } else {
        this.#connect(this.#prev[index3], this.#next[index3]);
      }
      this.#connect(this.#tail, index3);
      this.#tail = index3;
    }
  }
  /**
   * Deletes a key out of the cache.
   *
   * Returns true if the key was deleted, false otherwise.
   */
  delete(k) {
    return this.#delete(k, "delete");
  }
  #delete(k, reason) {
    let deleted = false;
    if (this.#size !== 0) {
      const index3 = this.#keyMap.get(k);
      if (index3 !== void 0) {
        deleted = true;
        if (this.#size === 1) {
          this.#clear(reason);
        } else {
          this.#removeItemSize(index3);
          const v = this.#valList[index3];
          if (this.#isBackgroundFetch(v)) {
            v.__abortController.abort(new Error("deleted"));
          } else if (this.#hasDispose || this.#hasDisposeAfter) {
            if (this.#hasDispose) {
              this.#dispose?.(v, k, reason);
            }
            if (this.#hasDisposeAfter) {
              this.#disposed?.push([v, k, reason]);
            }
          }
          this.#keyMap.delete(k);
          this.#keyList[index3] = void 0;
          this.#valList[index3] = void 0;
          if (index3 === this.#tail) {
            this.#tail = this.#prev[index3];
          } else if (index3 === this.#head) {
            this.#head = this.#next[index3];
          } else {
            const pi = this.#prev[index3];
            this.#next[pi] = this.#next[index3];
            const ni = this.#next[index3];
            this.#prev[ni] = this.#prev[index3];
          }
          this.#size--;
          this.#free.push(index3);
        }
      }
    }
    if (this.#hasDisposeAfter && this.#disposed?.length) {
      const dt = this.#disposed;
      let task;
      while (task = dt?.shift()) {
        this.#disposeAfter?.(...task);
      }
    }
    return deleted;
  }
  /**
   * Clear the cache entirely, throwing away all values.
   */
  clear() {
    return this.#clear("delete");
  }
  #clear(reason) {
    for (const index3 of this.#rindexes({ allowStale: true })) {
      const v = this.#valList[index3];
      if (this.#isBackgroundFetch(v)) {
        v.__abortController.abort(new Error("deleted"));
      } else {
        const k = this.#keyList[index3];
        if (this.#hasDispose) {
          this.#dispose?.(v, k, reason);
        }
        if (this.#hasDisposeAfter) {
          this.#disposed?.push([v, k, reason]);
        }
      }
    }
    this.#keyMap.clear();
    this.#valList.fill(void 0);
    this.#keyList.fill(void 0);
    if (this.#ttls && this.#starts) {
      this.#ttls.fill(0);
      this.#starts.fill(0);
    }
    if (this.#sizes) {
      this.#sizes.fill(0);
    }
    this.#head = 0;
    this.#tail = 0;
    this.#free.length = 0;
    this.#calculatedSize = 0;
    this.#size = 0;
    if (this.#hasDisposeAfter && this.#disposed) {
      const dt = this.#disposed;
      let task;
      while (task = dt?.shift()) {
        this.#disposeAfter?.(...task);
      }
    }
  }
};

// ../../packages/aitable/src/grid/renderers/base-renderer/baseRenderer.ts
var singleLineTextInfoCache = new LRUCache({
  max: 1e3
});
var multiLineTextInfoCache = new LRUCache({
  max: 1e3
});
var drawMultiLineText = (ctx, props) => {
  const {
    x: x2 = 0,
    y = 0,
    text,
    maxWidth,
    maxLines,
    isUnderline,
    fontSize = 13,
    lineHeight = 22,
    fill: fill2 = "black",
    textAlign = "left",
    verticalAlign = "middle",
    needRender = true
  } = props;
  let lines = [];
  const ellipsis = "...";
  const ellipsisWidth = ctx.measureText(ellipsis).width;
  let currentLine = "";
  let currentLineWidth = 0;
  const cacheKey = `${text}-${fontSize}-${maxWidth}-${maxLines}`;
  const cachedLines = multiLineTextInfoCache.get(cacheKey);
  if (cachedLines) {
    lines = cachedLines;
  } else {
    for (let i = 0; i < text.length; i++) {
      const char = text[i];
      if (char === "\n") {
        if (lines.length + 1 === maxLines && i < text.length - 1) {
          lines.push({
            text: currentLine + ellipsis,
            width: currentLineWidth + ellipsisWidth
          });
          currentLine = "";
          currentLineWidth = 0;
          break;
        }
        lines.push({ text: currentLine, width: currentLineWidth });
        currentLine = "";
        currentLineWidth = 0;
        continue;
      }
      const charWidth = ctx.measureText(char ?? "").width;
      if (currentLineWidth + charWidth > maxWidth) {
        if (lines.length < maxLines - 1) {
          lines.push({ text: currentLine, width: currentLineWidth });
          currentLine = char ?? "";
          currentLineWidth = charWidth;
        } else {
          if (currentLineWidth + ellipsisWidth > maxWidth) {
            let tempLine = currentLine;
            let tempLineWidth = currentLineWidth;
            while (tempLineWidth + ellipsisWidth > maxWidth) {
              tempLine = tempLine.substring(0, tempLine.length - 1);
              tempLineWidth -= ctx.measureText(
                tempLine[tempLine.length - 1] ?? ""
              ).width;
            }
            currentLine = tempLine;
            currentLineWidth = tempLineWidth;
          }
          lines.push({
            text: currentLine + ellipsis,
            width: currentLineWidth + ellipsisWidth
          });
          break;
        }
      } else {
        currentLine += char;
        currentLineWidth += charWidth;
      }
    }
    if (lines.length < maxLines && currentLine !== "") {
      lines.push({ text: currentLine, width: currentLineWidth });
    }
    multiLineTextInfoCache.set(cacheKey, lines);
  }
  const offsetY = verticalAlign === "middle" ? fontSize / 2 : 0;
  if (needRender) {
    if (fill2) {
      ctx.fillStyle = fill2;
      ctx.strokeStyle = fill2;
    }
    ctx.textAlign = textAlign;
    ctx.textBaseline = verticalAlign;
    for (let j2 = 0; j2 < lines.length; j2++) {
      ctx.fillText(lines[j2].text, x2, y + j2 * lineHeight + offsetY);
      if (isUnderline) {
        const textWidth = ctx.measureText(lines[j2].text).width;
        ctx.beginPath();
        ctx.moveTo(x2, y + j2 * lineHeight + fontSize - 1);
        ctx.lineTo(x2 + textWidth, y + j2 * lineHeight + fontSize - 1);
        ctx.stroke();
      }
    }
  }
  return lines;
};
var drawSingleLineText = (ctx, props) => {
  const {
    x: x2 = 0,
    y = 0,
    text,
    fill: fill2,
    fontSize = 13,
    textAlign = "left",
    verticalAlign = "middle",
    maxWidth = Infinity,
    needRender = true,
    isUnderline = false
  } = props;
  let width = 0;
  let displayText = "";
  const cacheKey = `${text}-${fontSize}-${maxWidth}`;
  const cachedTextInfo = singleLineTextInfoCache.get(cacheKey);
  if (cachedTextInfo) {
    width = cachedTextInfo.width;
    displayText = cachedTextInfo.text;
  } else {
    const ellipsis = "...";
    const ellipsisWidth = ctx.measureText(ellipsis).width;
    for (let i = 0; i < text.length; i++) {
      const char = text[i] ?? "";
      const charWidth = ctx.measureText(char).width;
      if (width + charWidth > maxWidth) {
        break;
      }
      displayText += char;
      width += charWidth;
    }
    const isDisplayEllipsis = displayText.length < text.length;
    if (isDisplayEllipsis) {
      while (width + ellipsisWidth > maxWidth && displayText.length > 0) {
        displayText = displayText.slice(0, -1);
        width -= ctx.measureText(
          displayText[displayText.length - 1] ?? ""
        ).width;
      }
      displayText = ctx.direction === "rtl" ? ellipsis + displayText : displayText + ellipsis;
      width = Math.min(width + ellipsisWidth, maxWidth);
    } else {
      displayText = text;
    }
    singleLineTextInfoCache.set(cacheKey, { text: displayText, width });
  }
  if (needRender) {
    const offsetY = verticalAlign === "middle" ? fontSize / 2 : 0;
    const finalX = textAlign === "right" ? x2 + maxWidth : x2;
    if (fill2) {
      ctx.fillStyle = fill2;
      ctx.strokeStyle = fill2;
    }
    ctx.textAlign = textAlign;
    ctx.textBaseline = verticalAlign;
    ctx.fillText(displayText, finalX, y + offsetY);
    if (isUnderline) {
      ctx.beginPath();
      ctx.moveTo(finalX, y + offsetY + fontSize / 2 - 1);
      ctx.lineTo(finalX + width, y + offsetY + fontSize / 2 - 1);
      ctx.stroke();
    }
  }
  return {
    text: displayText,
    width
  };
};
var drawLine = (ctx, props) => {
  const { x: x2, y, points, stroke, lineWidth = 1, closed = false } = props;
  const length = points.length;
  ctx.save();
  ctx.beginPath();
  if (stroke) {
    ctx.strokeStyle = stroke;
  }
  ctx.lineWidth = lineWidth;
  ctx.lineJoin = "round";
  ctx.translate(x2, y);
  ctx.moveTo(points[0] ?? 0, points[1] ?? 0);
  for (let n = 2; n < length; n += 2) {
    ctx.lineTo(points[n] ?? 0, points[n + 1] ?? 0);
  }
  if (closed) {
    ctx.closePath();
  }
  ctx.stroke();
  ctx.restore();
};
var drawRect = (ctx, props) => {
  const { x: x2, y, width, height, fill: fill2, stroke, radius: _radius, opacity } = props;
  ctx.beginPath();
  if (fill2) {
    ctx.fillStyle = fill2;
  }
  if (stroke) {
    ctx.strokeStyle = stroke;
  }
  if (opacity) {
    ctx.globalAlpha = opacity;
  }
  if (_radius == null) {
    ctx.rect(x2, y, width, height);
  } else {
    const radius2 = typeof _radius === "number" ? { tl: _radius, tr: _radius, br: _radius, bl: _radius } : {
      tl: Math.min(_radius.tl, height / 2, width / 2),
      tr: Math.min(_radius.tr, height / 2, width / 2),
      bl: Math.min(_radius.bl, height / 2, width / 2),
      br: Math.min(_radius.br, height / 2, width / 2)
    };
    ctx.moveTo(x2 + radius2.tl, y);
    ctx.arcTo(x2 + width, y, x2 + width, y + radius2.tr, radius2.tr);
    ctx.arcTo(
      x2 + width,
      y + height,
      x2 + width - radius2.br,
      y + height,
      radius2.br
    );
    ctx.arcTo(x2, y + height, x2, y + height - radius2.bl, radius2.bl);
    ctx.arcTo(x2, y, x2 + radius2.tl, y, radius2.tl);
  }
  ctx.closePath();
  if (fill2) {
    ctx.fill();
  }
  if (stroke) {
    ctx.stroke();
  }
};
var drawRoundPoly = (ctx, props) => {
  const { points, radiusAll, fill: fill2, stroke } = props;
  const asVec = function(p, pp) {
    const vx = pp.x - p.x;
    const vy = pp.y - p.y;
    const vlen = Math.sqrt(vx * vx + vy * vy);
    const vnx = vx / vlen;
    const vny = vy / vlen;
    return {
      x: vx,
      y: pp.y - p.y,
      len: vlen,
      nx: vnx,
      ny: vny,
      ang: Math.atan2(vny, vnx)
    };
  };
  let radius2;
  const len = points.length;
  let p1 = points[len - 1];
  ctx.beginPath();
  if (fill2) {
    ctx.fillStyle = fill2;
  }
  if (stroke) {
    ctx.strokeStyle = stroke;
  }
  let p2 = p1;
  for (let i = 0; i < len; i++) {
    p2 = points[i % len];
    const p3 = points[(i + 1) % len];
    if (!p2 || !p3) continue;
    const v1 = asVec(p2, p1);
    const v2 = asVec(p2, p3);
    const sinA = v1.nx * v2.ny - v1.ny * v2.nx;
    const sinA90 = v1.nx * v2.nx - v1.ny * -v2.ny;
    let angle = Math.asin(sinA < -1 ? -1 : sinA > 1 ? 1 : sinA);
    let radDirection = 1;
    let drawDirection = false;
    if (sinA90 < 0) {
      if (angle < 0) {
        angle = Math.PI + angle;
      } else {
        angle = Math.PI - angle;
        radDirection = -1;
        drawDirection = true;
      }
    } else {
      if (angle > 0) {
        radDirection = -1;
        drawDirection = true;
      }
    }
    radius2 = p2?.radius !== void 0 ? p2.radius : radiusAll;
    const halfAngle = angle / 2;
    let lenOut = Math.abs(Math.cos(halfAngle) * radius2 / Math.sin(halfAngle));
    let cRadius;
    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {
      lenOut = Math.min(v1.len / 2, v2.len / 2);
      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));
    } else {
      cRadius = radius2;
    }
    let x2 = p2.x + v2.nx * lenOut;
    let y = p2.y + v2.ny * lenOut;
    x2 += -v2.ny * cRadius * radDirection;
    y += v2.nx * cRadius * radDirection;
    ctx.arc(
      x2,
      y,
      cRadius,
      v1.ang + Math.PI / 2 * radDirection,
      v2.ang - Math.PI / 2 * radDirection,
      drawDirection
    );
    p1 = p2;
    p2 = p3;
  }
  ctx.closePath();
  if (fill2) {
    ctx.fill();
  }
  if (stroke) {
    ctx.stroke();
  }
};
var drawCheckbox = (ctx, props) => {
  const { x: x2, y, size: size2, radius: radius2 = 4, fill: fill2, stroke, isChecked = false } = props;
  const dynamicSize = isChecked ? size2 : size2 - 1;
  ctx.beginPath();
  drawRect(ctx, {
    x: x2,
    y,
    width: dynamicSize,
    height: dynamicSize,
    radius: radius2,
    fill: fill2,
    stroke
  });
  if (stroke) {
    ctx.strokeStyle = stroke;
  }
  if (isChecked) {
    ctx.save();
    ctx.beginPath();
    ctx.moveTo(x2 + size2 / 4.23, y + size2 / 1.97);
    ctx.lineTo(x2 + size2 / 2.42, y + size2 / 1.44);
    ctx.lineTo(x2 + size2 / 1.29, y + size2 / 3.25);
    ctx.lineJoin = "round";
    ctx.lineCap = "round";
    ctx.lineWidth = 1.9;
    ctx.stroke();
    ctx.restore();
  }
};
var drawRing = (ctx, props) => {
  const { x: x2, y, radius: radius2, lineWidth = 5, value, maxValue, color } = props;
  const startAngle = -Math.PI / 2;
  const angle = value > maxValue ? 2 * Math.PI : value / maxValue * 2 * Math.PI;
  ctx.save();
  ctx.lineWidth = lineWidth;
  ctx.strokeStyle = color;
  ctx.globalAlpha = 0.2;
  ctx.beginPath();
  ctx.arc(x2, y, radius2, 0, 2 * Math.PI);
  ctx.stroke();
  ctx.strokeStyle = color;
  ctx.globalAlpha = 1;
  ctx.beginPath();
  ctx.arc(x2, y, radius2, startAngle, angle + startAngle);
  ctx.stroke();
  ctx.restore();
};
var drawProcessBar = (ctx, props) => {
  const { x: x2, y, width, height, radius: radius2 = 4, value, maxValue, color } = props;
  const progressWidth = value > maxValue ? width : value / maxValue * width;
  ctx.save();
  ctx.fillStyle = color;
  ctx.globalAlpha = 0.2;
  ctx.beginPath();
  drawRect(ctx, { x: x2, y, width, height, radius: radius2 });
  ctx.fill();
  ctx.save();
  ctx.beginPath();
  ctx.rect(x2, y, progressWidth, height);
  ctx.clip();
  ctx.fillStyle = color;
  ctx.globalAlpha = 1;
  drawRect(ctx, { x: x2, y, width, height, radius: radius2 });
  ctx.fill();
  ctx.restore();
  ctx.restore();
};
var drawChartLine = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    values: values2,
    displayValues = [],
    color,
    axisColor,
    yAxis,
    font,
    hoverX,
    hoverAmount = 0
  } = props;
  const [minY, maxY] = yAxis ?? [Math.min(...values2), Math.max(...values2)];
  const delta = maxY - minY === 0 ? 1 : maxY - minY;
  const zeroY = maxY <= 0 ? y : minY >= 0 ? y + height : y + height * (maxY / delta);
  let drawValues = values2.map(
    (d) => Math.min(1, Math.max(0, (d - minY) / delta))
  );
  if (drawValues.length === 1) {
    drawValues = [drawValues[0] ?? 0, drawValues[0] ?? 0];
  }
  if (minY <= 0 && maxY >= 0) {
    ctx.beginPath();
    ctx.moveTo(x2, zeroY);
    ctx.lineTo(x2 + width, zeroY);
    ctx.globalAlpha = 0.4;
    ctx.lineWidth = 1;
    ctx.strokeStyle = axisColor;
    ctx.stroke();
    ctx.globalAlpha = 1;
  }
  ctx.beginPath();
  const xStep = width / (drawValues.length - 1);
  const points = drawValues.map((val, index3) => {
    return {
      x: x2 + xStep * index3,
      y: y + height - val * height
    };
  });
  if (points.length > 2) {
    const p0 = points[0];
    if (!p0) return;
    ctx.moveTo(p0.x, p0.y);
    for (let i = 0; i < points.length - 2; i++) {
      const pi = points[i];
      const piNext = points[i + 1];
      if (!pi || !piNext) continue;
      const xControl = (pi.x + piNext.x) / 2;
      const yControl = (pi.y + piNext.y) / 2;
      ctx.quadraticCurveTo(pi.x, pi.y, xControl, yControl);
    }
    const curIndex = points.length - 2;
    const pCur = points[curIndex];
    const pCurNext = points[curIndex + 1];
    if (pCur && pCurNext) {
      ctx.quadraticCurveTo(pCur.x, pCur.y, pCurNext.x, pCurNext.y);
    }
  } else {
    const p0 = points[0];
    const p1 = points[1];
    if (p0 && p1) {
      ctx.moveTo(p0.x, p0.y);
      ctx.lineTo(p1.x, p1.y);
    }
  }
  ctx.strokeStyle = color;
  ctx.lineWidth = 1 + hoverAmount * 0.5;
  ctx.stroke();
  ctx.lineTo(x2 + width, zeroY);
  ctx.lineTo(x2, zeroY);
  ctx.closePath();
  ctx.globalAlpha = 0.2 + 0.2 * hoverAmount;
  const grad = ctx.createLinearGradient(0, y, 0, y + height * 1.4);
  grad.addColorStop(0, color);
  const [r, g, b2] = parseToRGB(color);
  grad.addColorStop(1, `rgba(${r}, ${g}, ${b2}, 0)`);
  ctx.fillStyle = grad;
  ctx.fill();
  ctx.globalAlpha = 1;
  if (hoverX != null) {
    ctx.beginPath();
    const closest = Math.min(
      values2.length - 1,
      Math.max(0, Math.round(hoverX / xStep))
    );
    ctx.moveTo(x2 + closest * xStep, y);
    ctx.lineTo(x2 + closest * xStep, y + height);
    ctx.lineWidth = 1;
    ctx.strokeStyle = axisColor;
    ctx.stroke();
    ctx.save();
    ctx.font = font;
    drawSingleLineText(ctx, {
      x: x2,
      y,
      text: String(displayValues[closest] ?? values2[closest]),
      fill: axisColor
    });
    ctx.restore();
  }
};
var drawChartBar = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    values: values2,
    displayValues = [],
    color,
    axisColor,
    yAxis,
    font,
    hoverX
  } = props;
  const barMaxWidth = 8;
  const [originMinY, maxY] = yAxis ?? [
    Math.min(...values2),
    Math.max(...values2)
  ];
  const minY = originMinY > 0 ? 0 : originMinY;
  const delta = maxY - minY === 0 ? 1 : maxY - minY;
  const zeroY = maxY <= 0 ? y : minY >= 0 ? y + height : y + height * (maxY / delta);
  const drawValues = values2.map(
    (d) => Math.min(1, Math.max(0, (d - minY) / delta))
  );
  if (minY <= 0 && maxY >= 0) {
    ctx.beginPath();
    ctx.moveTo(x2, zeroY);
    ctx.lineTo(x2 + width, zeroY);
    ctx.globalAlpha = 0.4;
    ctx.lineWidth = 0.5;
    ctx.strokeStyle = axisColor;
    ctx.stroke();
    ctx.globalAlpha = 1;
  }
  ctx.beginPath();
  const margin = 2;
  const spacing2 = (drawValues.length - 1) * margin;
  const barWidth = Math.min((width - spacing2) / drawValues.length, barMaxWidth);
  let drawX = x2;
  for (const val of drawValues) {
    let barY = y + height - val * height;
    barY = barY === zeroY ? zeroY - 0.5 : barY;
    ctx.moveTo(drawX, zeroY);
    ctx.lineTo(drawX + barWidth, zeroY);
    ctx.lineTo(drawX + barWidth, barY);
    ctx.lineTo(drawX, barY);
    drawX += barWidth + margin;
  }
  ctx.fillStyle = color;
  ctx.fill();
  if (hoverX != null && hoverX >= 0) {
    ctx.beginPath();
    const xStep = Math.min(width / drawValues.length, barMaxWidth + margin);
    const closest = hoverX > drawX - x2 - margin ? null : Math.min(
      drawValues.length - 1,
      Math.max(0, Math.floor(hoverX / xStep))
    );
    if (closest == null) {
      return;
    }
    const finalHoverX = x2 + closest * xStep + (xStep - margin) / 2;
    ctx.moveTo(finalHoverX, y);
    ctx.lineTo(finalHoverX, y + height);
    ctx.lineWidth = 1;
    ctx.strokeStyle = axisColor;
    ctx.stroke();
    ctx.save();
    ctx.font = font;
    drawSingleLineText(ctx, {
      x: x2,
      y,
      text: String(displayValues[closest] ?? values2[closest]),
      fill: axisColor
    });
    ctx.restore();
  }
};
var drawAvatar = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    fill: fill2,
    stroke,
    defaultText,
    textColor,
    img,
    fontSize = 10,
    fontFamily
  } = props;
  ctx.save();
  ctx.beginPath();
  if (stroke) {
    ctx.strokeStyle = stroke;
  }
  ctx.arc(x2 + width / 2, y + height / 2, width / 2, 0, Math.PI * 2, false);
  if (fill2) {
    ctx.fillStyle = fill2;
  }
  if (fill2) {
    ctx.fill();
  }
  if (stroke) {
    ctx.stroke();
  }
  if (img) {
    ctx.clip();
    ctx.drawImage(img, x2, y, width, height);
    if (stroke) {
      ctx.stroke();
    }
    ctx.restore();
    return;
  }
  const textAbb = defaultText.slice(0, 1);
  ctx.beginPath();
  if (textColor) {
    ctx.fillStyle = textColor;
  }
  ctx.font = `${fontSize}px ${fontFamily}`;
  drawSingleLineText(ctx, {
    x: x2 + width / 2,
    y: y + height / 2 - fontSize / 2,
    text: textAbb,
    textAlign: "center",
    fontSize
  });
  if (fill2) {
    ctx.fill();
  }
  if (stroke) {
    ctx.stroke();
  }
  ctx.restore();
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/booleanCellRenderer.ts
var { cellHorizontalPadding } = GRID_DEFAULT;
var booleanCellRenderer = {
  type: "boolean" /* Boolean */,
  needsHover: true,
  needsHoverPosition: true,
  draw: (cell, props) => {
    const { data, isMultiple, contentAlign = "center" } = cell;
    const { ctx, rect, theme } = props;
    if (!ctx || !rect || !theme) return;
    const { x: x2, y, width, height } = rect;
    const { iconSizeSM, staticWhite, iconBgSelected, rowHeaderTextColor } = theme;
    const halfIconSize = iconSizeSM / 2;
    if (!isMultiple) {
      let textOffsetX = width / 2 - halfIconSize;
      if (contentAlign === "left") {
        textOffsetX = cellHorizontalPadding;
      } else if (contentAlign === "right") {
        textOffsetX = width - cellHorizontalPadding - iconSizeSM;
      }
      return drawCheckbox(ctx, {
        x: x2 + textOffsetX,
        y: y + height / 2 - halfIconSize,
        size: iconSizeSM,
        stroke: data ? staticWhite : rowHeaderTextColor,
        fill: data ? iconBgSelected : void 0,
        isChecked: data
      });
    }
    if (isMultiple && Array.isArray(data)) {
      ctx.save();
      ctx.beginPath();
      ctx.rect(x2, y, width, height);
      ctx.clip();
      let startX = x2 + cellHorizontalPadding;
      const startY = y + height / 2 - halfIconSize;
      data.forEach((check) => {
        if (check) {
          drawCheckbox(ctx, {
            x: startX,
            y: startY,
            size: iconSizeSM,
            stroke: staticWhite,
            fill: iconBgSelected,
            isChecked: true
          });
          startX += iconSizeSM + cellHorizontalPadding / 2;
        }
      });
      ctx.restore();
    }
  },
  checkRegion: (cell, props, _shouldCalculate) => {
    const { data, readonly } = cell;
    if (readonly) {
      return { type: "blank" /* Blank */ };
    }
    const { hoverCellPosition, width, height, theme } = props;
    if (!hoverCellPosition || !theme) return { type: "blank" /* Blank */ };
    const { x: x2, y } = hoverCellPosition;
    const { iconSizeSM } = theme;
    const halfIconSize = iconSizeSM / 2;
    if (inRange2(x2, width / 2 - halfIconSize, width / 2 + halfIconSize) && inRange2(y, height / 2 - halfIconSize, height / 2 + halfIconSize)) {
      return {
        type: "update" /* Update */,
        data: !data || null
      };
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, callback) => {
    const cellRegion = booleanCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion || cellRegion.type === "blank" /* Blank */) {
      return;
    }
    callback(cellRegion);
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/buttonCellRenderer.ts
var { cellHorizontalPadding: cellHorizontalPadding2 } = GRID_DEFAULT;
var BUTTON_RADIUS = 4;
var BUTTON_HEIGHT = 24;
var BUTTON_MIN_WIDTH = 60;
var BUTTON_MAX_WIDTH = 126;
var positionCache = new LRUCache({
  max: 10
});
var clickHandler = (cell) => {
  const { id = "", data, readonly } = cell;
  if (readonly) {
    return;
  }
  const { tableId, statusHook, fieldOptions } = data;
  const [recordId = "", fieldId = ""] = id.split("-");
  if (!statusHook) {
    return;
  }
  const isLoading = statusHook.checkLoading?.(fieldId, recordId) ?? false;
  if (isLoading) {
    return;
  }
  statusHook.buttonClick({
    tableId,
    recordId,
    fieldId,
    name: fieldOptions.label
  });
};
var drawButton = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    text,
    maxTextWidth,
    textColor,
    bgColor,
    theme,
    opacity = 1
  } = props;
  const { fontSizeXS, fontFamily } = theme;
  ctx.save();
  ctx.font = `${fontSizeXS}px ${fontFamily}`;
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height,
    radius: BUTTON_RADIUS,
    fill: bgColor,
    opacity
  });
  drawSingleLineText(ctx, {
    text,
    x: x2 + width / 2,
    y: y + (height - fontSizeXS) / 2 + 0.5,
    fill: textColor,
    maxWidth: maxTextWidth,
    fontSize: fontSizeXS,
    textAlign: "center"
  });
  ctx.restore();
};
var calcPosition = (cell, props, flush = false) => {
  const { data } = cell;
  const { fieldOptions } = data;
  const { width, ctx, theme, height } = props;
  const { fontSizeXS, fontFamily } = theme;
  const cacheKey = `${fieldOptions.label}-${width}`;
  if (!flush) {
    const cachedRect = positionCache.get(cacheKey);
    if (cachedRect) {
      return cachedRect;
    }
  }
  ctx.save();
  ctx.font = `${fontSizeXS}px ${fontFamily}`;
  const { width: textWidth } = drawSingleLineText(ctx, {
    text: fieldOptions.label,
    maxWidth: BUTTON_MAX_WIDTH - 2 * cellHorizontalPadding2,
    fontSize: fontSizeXS,
    needRender: false
  });
  ctx.restore();
  const finnalTextWidth = Math.max(
    textWidth,
    BUTTON_MIN_WIDTH - 2 * cellHorizontalPadding2
  );
  const rectWidth = finnalTextWidth + 2 * cellHorizontalPadding2;
  const position = {
    x: (width - rectWidth) / 2,
    y: (height - BUTTON_HEIGHT) / 2,
    width: rectWidth,
    height: BUTTON_HEIGHT
  };
  positionCache.set(cacheKey, position);
  return position;
};
var buttonCellRenderer = {
  type: "button" /* Button */,
  needsHover: true,
  needsHoverPosition: true,
  needsHoverWhenActive: true,
  needsHoverPositionWhenActive: true,
  measure: (cell, props) => {
    const { width, height, ctx, theme } = props;
    if (!ctx || !theme)
      return {
        width: width ?? 0,
        height: height ?? 0,
        totalHeight: height ?? 0
      };
    const position = calcPosition(
      cell,
      {
        width,
        ctx,
        theme,
        height
      },
      true
    );
    return {
      width: width ?? 0,
      height: Math.max(height ?? 0, position?.height ?? 0),
      totalHeight: position?.height ?? height ?? 0
    };
  },
  draw: (cell, props) => {
    const { data, id = "", readonly } = cell;
    const { fieldOptions, statusHook } = data;
    const { ctx, rect, theme } = props;
    if (!ctx || !rect || !theme) return;
    const { x: x2, y, width, height } = rect;
    const rectColor = readonly ? Colors.Gray : fieldOptions.color ?? Colors.Gray;
    const bgColor = ColorUtils.getHexForColor(rectColor);
    const textColor = ColorUtils.shouldUseLightTextOnColor(rectColor) ? l.white : l.black;
    const position = calcPosition(cell, {
      width,
      ctx,
      theme,
      height
    });
    const [recordId = "", fieldId = ""] = id.split("-");
    const isLoading = statusHook?.checkLoading?.(fieldId, recordId) ?? false;
    return drawButton(ctx, {
      x: x2 + position.x,
      y: y + position.y,
      width: position.width,
      height: position.height,
      text: fieldOptions.label ?? "",
      maxTextWidth: position.width - 2 * cellHorizontalPadding2,
      textColor,
      bgColor,
      theme,
      opacity: isLoading ? 0.8 : 1
    });
  },
  checkRegion: (cell, props, _shouldCalculate) => {
    const { data } = cell;
    const { fieldOptions } = data;
    const { hoverCellPosition, width } = props;
    const { x: x2, y } = hoverCellPosition;
    const cacheKey = `${fieldOptions.label}-${width}`;
    const rect = positionCache.get(cacheKey);
    if (rect && inRange2(x2, rect.x, rect.x + rect.width) && inRange2(y, rect.y, rect.y + rect.height)) {
      return {
        type: "hover" /* Hover */,
        data: {
          x: rect.x,
          y: rect.y,
          width: rect.width,
          height: rect.height
        }
      };
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, _callback) => {
    const cellRegion = buttonCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion || cellRegion.type === "blank" /* Blank */) {
      return;
    }
    clickHandler(cell);
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/chartCellRenderer.ts
var { cellHorizontalPadding: cellHorizontalPadding3, cellVerticalPaddingXS } = GRID_DEFAULT;
var chartCellRenderer = {
  type: "chart" /* Chart */,
  needsHover: true,
  needsHoverPosition: true,
  draw: (cell, props) => {
    const { ctx, rect, theme, hoverCellPosition } = props;
    if (!ctx || !rect || !theme) return;
    const { rowHeaderTextColor: lineColor, fontFamily } = theme;
    const { x: x2, y, width, height } = rect;
    const {
      data,
      displayData,
      chartType = "line" /* Line */,
      color = lineColor
    } = cell;
    if (!data?.length || !displayData?.length) {
      return;
    }
    const hoverX = hoverCellPosition?.x ?? 0;
    const hoverAmount = hoverCellPosition ? 1 : 0;
    if (chartType === "bar" /* Bar */) {
      drawChartBar(ctx, {
        x: x2 + cellHorizontalPadding3,
        y: y + cellVerticalPaddingXS,
        width: width - cellHorizontalPadding3 * 2,
        height: height - cellVerticalPaddingXS * 2,
        values: data,
        color,
        axisColor: lineColor,
        font: `8px ${fontFamily}`,
        hoverX: hoverX ? hoverX - cellHorizontalPadding3 : void 0,
        displayValues: displayData
      });
    }
    if (chartType === "line" /* Line */) {
      drawChartLine(ctx, {
        x: x2 + cellHorizontalPadding3,
        y: y + cellVerticalPaddingXS,
        width: width - cellHorizontalPadding3 * 2,
        height: height - cellVerticalPaddingXS * 2,
        values: data,
        color,
        axisColor: lineColor,
        font: `8px ${fontFamily}`,
        hoverX: hoverX ? hoverX - cellHorizontalPadding3 : void 0,
        hoverAmount,
        displayValues: displayData
      });
    }
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/dateCellRenderer.ts
var dateCellRenderer = {
  type: "date" /* Date */,
  draw: (cell, props) => {
    const { ctx, theme, rect } = props;
    if (!ctx || !theme || !rect) return;
    const { data } = cell;
    const { textColor, cellLineColor } = theme;
    const { x: x2, y, width, height } = rect;
    ctx.fillStyle = textColor;
    ctx.font = `${theme.fontSize}px ${theme.fontFamily}`;
    ctx.textAlign = "left";
    ctx.textBaseline = "middle";
    if (data) {
      const text = typeof data === "string" ? data : String(data);
      const textX = x2 + 8;
      const textY = y + height / 2;
      ctx.fillText(text, textX, textY);
    }
    if (props.isActive) {
      ctx.strokeStyle = theme.cellLineColorActived;
      ctx.lineWidth = 2;
      ctx.strokeRect(x2 + 1, y + 1, width - 2, height - 2);
    }
  },
  needsHover: true
};

// ../../packages/aitable/src/grid/managers/coordinate-manager/interface.ts
var ItemType = /* @__PURE__ */ ((ItemType2) => {
  ItemType2["Row"] = "Row";
  ItemType2["Column"] = "Column";
  return ItemType2;
})(ItemType || {});

// ../../packages/aitable/src/grid/managers/coordinate-manager/CoordinateManager.ts
var CoordinateManager = class {
  defaultRowHeight;
  defaultColumnWidth;
  pureRowCount;
  rowCount;
  columnCount;
  _containerWidth;
  _containerHeight;
  rowHeightMap = {};
  columnWidthMap = {};
  rowInitSize;
  columnInitSize;
  lastRowIndex = -1;
  lastColumnIndex = -1;
  rowMetaDataMap = {};
  columnMetaDataMap = {};
  _freezeColumnCount;
  constructor({
    rowHeight,
    columnWidth,
    rowCount,
    pureRowCount,
    columnCount,
    containerWidth,
    containerHeight,
    rowInitSize = 0,
    columnInitSize = 0,
    rowHeightMap = {},
    columnWidthMap = {},
    freezeColumnCount = 1
  }) {
    this.defaultRowHeight = rowHeight;
    this.defaultColumnWidth = columnWidth;
    this.rowCount = rowCount;
    this.pureRowCount = pureRowCount;
    this.columnCount = columnCount;
    this.rowInitSize = rowInitSize;
    this.columnInitSize = columnInitSize;
    this._containerWidth = containerWidth;
    this._containerHeight = containerHeight;
    this.rowHeightMap = rowHeightMap;
    this.columnWidthMap = columnWidthMap;
    this._freezeColumnCount = freezeColumnCount;
  }
  get freezeRegionWidth() {
    return this.getColumnOffset(this._freezeColumnCount);
  }
  get freezeColumnCount() {
    return this._freezeColumnCount;
  }
  set freezeColumnCount(count) {
    this._freezeColumnCount = count;
  }
  get containerWidth() {
    return this._containerWidth;
  }
  set containerWidth(width) {
    this._containerWidth = width;
  }
  get containerHeight() {
    return this._containerHeight;
  }
  set containerHeight(height) {
    this._containerHeight = height;
  }
  get columnWidth() {
    return this.defaultColumnWidth;
  }
  set columnWidth(width) {
    this.defaultColumnWidth = width;
  }
  get rowHeight() {
    return this.defaultRowHeight;
  }
  set rowHeight(height) {
    this.defaultRowHeight = height;
  }
  get totalWidth() {
    const { offset, size: size2 } = this.getCellMetaData(
      this.columnCount - 1,
      "Column" /* Column */
    );
    return offset + size2;
  }
  get totalHeight() {
    const { offset, size: size2 } = this.getCellMetaData(
      this.rowCount - 1,
      "Row" /* Row */
    );
    return offset + size2;
  }
  getRowHeight(index3) {
    return this.rowHeightMap[index3] ?? this.defaultRowHeight;
  }
  getColumnWidth(index3) {
    return this.columnWidthMap[index3] ?? this.defaultColumnWidth;
  }
  /* eslint-disable sonarjs/cognitive-complexity */
  getCellMetaData(index3, itemType) {
    let cellMetadataMap, itemSize, lastMeasuredIndex, offset;
    const isColumnType = itemType === "Column" /* Column */;
    if (isColumnType) {
      itemSize = this.columnWidth;
      offset = this.columnInitSize;
      lastMeasuredIndex = this.lastColumnIndex;
      cellMetadataMap = this.columnMetaDataMap;
    } else {
      itemSize = this.rowHeight;
      offset = this.rowInitSize;
      lastMeasuredIndex = this.lastRowIndex;
      cellMetadataMap = this.rowMetaDataMap;
    }
    if (index3 > lastMeasuredIndex) {
      const itemMetadata = cellMetadataMap?.[lastMeasuredIndex];
      if (lastMeasuredIndex >= 0 && itemMetadata) {
        offset = itemMetadata.offset + itemMetadata.size;
      }
      for (let i = lastMeasuredIndex + 1; i <= index3; i++) {
        const size2 = (isColumnType ? this.columnWidthMap[i] : this.rowHeightMap[i]) ?? itemSize;
        cellMetadataMap[i] = {
          offset,
          size: size2
        };
        offset += size2;
      }
      if (isColumnType) {
        this.lastColumnIndex = index3;
      } else {
        this.lastRowIndex = index3;
      }
    }
    return cellMetadataMap[index3] || { size: 0, offset: 0 };
  }
  findNearestCellIndexLinear(index3, offset, itemType) {
    const itemCount = itemType === "Column" /* Column */ ? this.columnCount : this.rowCount;
    let interval = 1;
    while (index3 < itemCount && this.getCellMetaData(index3, itemType).offset < offset) {
      index3 += interval;
      interval *= 2;
    }
    return this.findNearestCellIndexBinary(
      offset,
      Math.floor(index3 / 2),
      Math.min(index3, itemCount - 1),
      itemType
    );
  }
  findNearestCellIndexBinary(offset, low, high, itemType) {
    while (low <= high) {
      const middle = low + Math.floor((high - low) / 2);
      const currentOffset = this.getCellMetaData(middle, itemType).offset;
      if (currentOffset === offset) {
        return middle;
      } else if (currentOffset < offset) {
        low = middle + 1;
      } else if (currentOffset > offset) {
        high = middle - 1;
      }
    }
    return low > 0 ? low - 1 : 0;
  }
  findNearestCellIndex(offset, itemType) {
    let itemMetadataMap, lastIndex;
    if (itemType === "Column" /* Column */) {
      itemMetadataMap = this.columnMetaDataMap;
      lastIndex = this.lastColumnIndex;
    } else {
      itemMetadataMap = this.rowMetaDataMap;
      lastIndex = this.lastRowIndex;
    }
    const lastMeasuredItemOffset = lastIndex > 0 ? itemMetadataMap[lastIndex].offset : 0;
    if (lastMeasuredItemOffset >= offset) {
      return this.findNearestCellIndexBinary(offset, 0, lastIndex, itemType);
    }
    return this.findNearestCellIndexLinear(
      Math.max(0, lastIndex),
      offset,
      itemType
    );
  }
  getRowStartIndex(scrollTop) {
    return this.findNearestCellIndex(scrollTop, "Row" /* Row */);
  }
  getRowStopIndex(startIndex, scrollTop) {
    const itemMetadata = this.getCellMetaData(startIndex, "Row" /* Row */);
    const maxOffset = scrollTop + this._containerHeight;
    let offset = itemMetadata.offset + itemMetadata.size;
    let stopIndex = startIndex;
    while (stopIndex < this.rowCount - 1 && offset < maxOffset) {
      stopIndex++;
      offset += this.getCellMetaData(stopIndex, "Row" /* Row */).size;
    }
    return stopIndex;
  }
  getColumnStartIndex(scrollLeft) {
    return this.findNearestCellIndex(scrollLeft, "Column" /* Column */);
  }
  getColumnStopIndex(startIndex, scrollLeft) {
    const itemMetadata = this.getCellMetaData(startIndex, "Column" /* Column */);
    const maxOffset = scrollLeft + this._containerWidth;
    let offset = itemMetadata.offset + itemMetadata.size;
    let stopIndex = startIndex;
    while (stopIndex < this.columnCount - 1 && offset < maxOffset) {
      stopIndex++;
      offset += this.getCellMetaData(stopIndex, "Column" /* Column */).size;
    }
    return stopIndex;
  }
  getRowOffset(rowIndex) {
    return this.getCellMetaData(rowIndex, "Row" /* Row */).offset;
  }
  getColumnOffset(columnIndex) {
    return this.getCellMetaData(columnIndex, "Column" /* Column */).offset;
  }
  getColumnRelativeOffset(columnIndex, scrollLeft) {
    const x2 = this.getColumnOffset(columnIndex);
    return columnIndex < this._freezeColumnCount ? x2 : x2 - scrollLeft;
  }
  refreshColumnDimensions({
    columnCount,
    columnInitSize = 0,
    columnWidthMap = {}
  }) {
    this.columnCount = columnCount;
    this.columnInitSize = columnInitSize;
    this.columnWidthMap = columnWidthMap;
    this.lastColumnIndex = -1;
  }
};

// ../../packages/aitable/src/grid/managers/image-manager/ImageManager.ts
var imgPool = [];
var rowShift = 1 << 16;
function packColRowToNumber(col, row) {
  return row * rowShift + col;
}
function unpackCol(packed) {
  return packed % rowShift;
}
function unpackRow(packed, col) {
  return (packed - col) / rowShift;
}
function unpackNumberToColRow(packed) {
  const col = unpackCol(packed);
  const row = unpackRow(packed, col);
  return [col, row];
}
var ImageManager = class {
  imageLoaded = () => void 0;
  loadedLocations = [];
  visibleWindow = {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  };
  freezeColumnCount = 0;
  isInWindow = (packed) => {
    const col = unpackCol(packed);
    const row = unpackRow(packed, col);
    const w2 = this.visibleWindow;
    if (col < this.freezeColumnCount && row >= w2.y && row <= w2.y + w2.height) {
      return true;
    }
    return col >= w2.x && col <= w2.x + w2.width && row >= w2.y && row <= w2.y + w2.height;
  };
  cache = {};
  setCallback(imageLoaded) {
    this.imageLoaded = imageLoaded;
  }
  sendLoaded = throttle_default(() => {
    this.imageLoaded(this.loadedLocations);
    this.loadedLocations = [];
  }, 20);
  clearOutOfWindow = () => {
    const keys2 = Object.keys(this.cache);
    for (const key of keys2) {
      const obj = this.cache[key];
      let keep = false;
      for (let j2 = 0; j2 < obj.cells.length; j2++) {
        const packed = obj.cells[j2];
        if (this.isInWindow(packed)) {
          keep = true;
          break;
        }
      }
      if (keep) {
        obj.cells = obj.cells.filter(this.isInWindow);
      } else {
        obj.cancel();
        delete this.cache[key];
      }
    }
  };
  setWindow(newWindow, freezeColumnCount) {
    if (this.visibleWindow.x === newWindow.x && this.visibleWindow.y === newWindow.y && this.visibleWindow.width === newWindow.width && this.visibleWindow.height === newWindow.height && this.freezeColumnCount === freezeColumnCount) {
      return;
    }
    this.visibleWindow = newWindow;
    this.freezeColumnCount = freezeColumnCount;
    this.clearOutOfWindow();
  }
  loadImage(url, col, row, key) {
    let loaded = false;
    const img = imgPool.pop() ?? new Image();
    let canceled = false;
    const result2 = {
      img: void 0,
      cells: [packColRowToNumber(col, row)],
      url,
      cancel: () => {
        if (canceled) {
          return;
        }
        canceled = true;
        if (imgPool.length < 12) {
          imgPool.unshift(img);
        } else if (!loaded) {
          img.src = "";
        }
      }
    };
    const loadPromise = new Promise(
      (r) => img.addEventListener("load", () => r(null))
    );
    requestAnimationFrame(async () => {
      try {
        img.src = url;
        await loadPromise;
        await img.decode();
        const toWrite = this.cache[key];
        if (toWrite !== void 0 && !canceled) {
          toWrite.img = img;
          for (const packed of toWrite.cells) {
            this.loadedLocations.push(unpackNumberToColRow(packed));
          }
          loaded = true;
          this.sendLoaded();
        }
      } catch {
        result2.cancel();
      }
    });
    this.cache[key] = result2;
  }
  loadOrGetImage(url, col, row) {
    const key = url;
    const current = this.cache[key];
    if (current !== void 0) {
      const packed = packColRowToNumber(col, row);
      if (!current.cells.includes(packed)) {
        current.cells.push(packed);
      }
      return current.img;
    } else {
      this.loadImage(url, col, row, key);
    }
    return void 0;
  }
};

// ../../packages/aitable/src/grid/managers/selection-manager/CombinedSelection.ts
var CombinedSelection = class _CombinedSelection {
  type;
  ranges;
  constructor(type = "None" /* None */, ranges = []) {
    this.type = type;
    this.ranges = ranges;
  }
  get isColumnSelection() {
    return this.type === "Columns" /* Columns */;
  }
  get isRowSelection() {
    return this.type === "Rows" /* Rows */;
  }
  get isCellSelection() {
    return this.type === "Cells" /* Cells */;
  }
  get isNoneSelection() {
    return this.type === "None" /* None */;
  }
  reset() {
    return emptySelection;
  }
  set(type, ranges) {
    if (!Array.isArray(ranges)) {
      throw Error("Ranges of the selection should be an array type!");
    }
    if (type === "Cells" /* Cells */ && ranges.length < 2) {
      throw Error("Ranges of type cells should have a length greater than 2!");
    }
    if (["Columns" /* Columns */, "Rows" /* Rows */].includes(type) && !ranges.length) {
      throw Error(
        "Ranges of type columns or rows should have a length greater than 1!"
      );
    }
    return new _CombinedSelection(type, ranges);
  }
  setRanges(ranges) {
    return new _CombinedSelection(this.type, ranges);
  }
  isOverlap(range1, range2) {
    return !(range1[1] < range2[0] || range1[0] > range2[1]);
  }
  expand(range2) {
    switch (this.type) {
      case "Rows" /* Rows */:
      case "Columns" /* Columns */: {
        let hasOverlap = false;
        const newRanges = this.ranges.map((existedRange) => {
          if (this.isOverlap(existedRange, range2)) {
            hasOverlap = true;
            return [
              Math.min(existedRange[0], range2[0]),
              Math.max(existedRange[1], range2[1])
            ];
          }
          return existedRange;
        });
        if (!hasOverlap) {
          newRanges.push(range2);
        }
        return new _CombinedSelection(this.type, serializedRanges(newRanges));
      }
      case "Cells" /* Cells */:
        return new _CombinedSelection(this.type, [this.ranges[0], range2]);
      default:
        return emptySelection;
    }
  }
  merge(range2) {
    switch (this.type) {
      case "Rows" /* Rows */:
      case "Columns" /* Columns */: {
        const newRanges = mixRanges(this.ranges, range2);
        return newRanges.length ? new _CombinedSelection(this.type, newRanges) : emptySelection;
      }
      case "Cells" /* Cells */:
        return new _CombinedSelection(this.type, [this.ranges[0], range2]);
      default:
        return emptySelection;
    }
  }
  flatten() {
    const [start, end] = this.ranges;
    if (this.isCellSelection) {
      return [...start, ...end];
    }
    return flatRanges(this.ranges);
  }
  serialize() {
    switch (this.type) {
      case "Rows" /* Rows */:
      case "Columns" /* Columns */:
        return serializedRanges(this.ranges);
      case "Cells" /* Cells */: {
        const [start, end] = this.ranges;
        return [
          [Math.min(start[0], end[0]), Math.min(start[1], end[1])],
          [Math.max(start[0], end[0]), Math.max(start[1], end[1])]
        ];
      }
      default:
        return [];
    }
  }
  includes(range2) {
    if (range2 == null) {
      return false;
    }
    switch (this.type) {
      case "Rows" /* Rows */:
      case "Columns" /* Columns */:
        return isRangeWithinRanges(range2, this.ranges);
      case "Cells" /* Cells */:
        return isPointInsideRectangle(range2, this.ranges[0], this.ranges[1]);
      default:
        return false;
    }
  }
  equals(comparisonRanges) {
    if (this.ranges.length !== comparisonRanges.length) {
      return false;
    }
    return isEqual_default(this.ranges, comparisonRanges);
  }
};
var emptySelection = new CombinedSelection(
  "None" /* None */,
  []
);

// ../../packages/aitable/src/grid/managers/sprite-manager/sprites.tsx
var svg = (d, props, size2 = 16, strokeWidth = 2) => `<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" width="${size2}" height="${size2}" viewBox="0 0 24 24" fill="none" stroke="${props.fgColor}" stroke-width="${strokeWidth}" stroke-linecap="round" stroke-linejoin="round"><g stroke="${props.fgColor}">${d}</g></svg>`;
var svgFilled = (d, props, size2 = 16, strokeWidth = 1) => `<?xml version="1.0" encoding="UTF-8"?><svg xmlns="http://www.w3.org/2000/svg" width="${size2}" height="${size2}" viewBox="0 0 24 24" fill="${props.fgColor}" stroke="${props.fgColor}" stroke-width="${strokeWidth}" stroke-linecap="round" stroke-linejoin="round">${d}</svg>`;
var drag = (props) => svg(
  '<circle cx="9" cy="12" r="1" /><circle cx="9" cy="5" r="1" /><circle cx="9" cy="19" r="1" /><circle cx="15" cy="12" r="1" /><circle cx="15" cy="5" r="1" /><circle cx="15" cy="19" r="1" />',
  props
);
var detail = (props) => svg(
  '<polyline points="15 3 21 3 21 9" /><polyline points="9 21 3 21 3 15" /><line x1="21" y1="3" x2="14" y2="10" /><line x1="3" y1="21" x2="10" y2="14" />',
  props
);
var add3 = (props) => svg(
  '<line x1="12" y1="5" x2="12" y2="19" /><line x1="5" y1="12" x2="19" y2="12" />',
  props
);
var description = (props) => svg(
  '<circle cx="12" cy="12" r="10" /><line x1="12" y1="8" x2="12" y2="12" /><line x1="12" y1="16" x2="12.01" y2="16" />',
  props
);
var close = (props) => svg(
  '<line x1="18" y1="6" x2="6" y2="18" /><line x1="6" y1="6" x2="18" y2="18" />',
  props
);
var expand = (props) => svg('<polyline points="6 9 12 15 18 9" />', props);
var collapse = (props) => svg('<polyline points="9 18 15 12 9 6" />', props);
var lock = (props) => svg(
  '<rect x="3" y="11" width="18" height="11" rx="2" ry="2" /><path d="M7 11V7a5 5 0 0 1 10 0v4" />',
  props
);
var eyeOff = (props) => svg(
  '<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24" /><line x1="1" y1="1" x2="23" y2="23" />',
  props
);
var star = (props) => svgFilled(
  '<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />',
  props
);
var sprites = {
  add: add3,
  drag,
  detail,
  description,
  close,
  expand,
  collapse,
  lock,
  eyeOff,
  star
};
var GridInnerIcon = /* @__PURE__ */ ((GridInnerIcon2) => {
  GridInnerIcon2["Add"] = "add";
  GridInnerIcon2["Drag"] = "drag";
  GridInnerIcon2["Detail"] = "detail";
  GridInnerIcon2["Description"] = "description";
  GridInnerIcon2["Close"] = "close";
  GridInnerIcon2["Expand"] = "expand";
  GridInnerIcon2["Collapse"] = "collapse";
  GridInnerIcon2["Lock"] = "lock";
  GridInnerIcon2["EyeOff"] = "eyeOff";
  GridInnerIcon2["Star"] = "star";
  return GridInnerIcon2;
})(GridInnerIcon || {});

// ../../packages/aitable/src/grid/managers/sprite-manager/SpriteManager.ts
var getColors = (variant, theme) => {
  const { iconBgCommon, iconBgSelected, iconFgCommon, iconFgSelected } = theme;
  return variant === "selected" ? [iconFgSelected, iconBgSelected] : [iconFgCommon, iconBgCommon];
};
var SpriteManager = class {
  constructor(icons, onSettled) {
    this.onSettled = onSettled;
    this.icons = {
      ...sprites,
      ...icons
    };
  }
  spriteMap = /* @__PURE__ */ new Map();
  icons;
  inFlight = 0;
  // eslint-disable-next-line sonarjs/cognitive-complexity
  drawSprite(ctx, props) {
    const {
      sprite,
      variant = "normal",
      x: x2,
      y,
      size: size2,
      alpha = 1,
      theme,
      colors: colors2
    } = props;
    const [fgColor, bgColor] = colors2 ?? getColors(variant, theme);
    const rSize = size2 * Math.ceil(window.devicePixelRatio);
    const key = `${bgColor}_${fgColor}_${rSize}_${sprite}`;
    let spriteCanvas = this.spriteMap.get(key);
    if (spriteCanvas === void 0) {
      const spriteCb = this.icons[sprite];
      if (spriteCb === void 0) {
        return;
      }
      spriteCanvas = document.createElement("canvas");
      const spriteCtx = spriteCanvas.getContext("2d");
      if (spriteCtx === null) {
        return;
      }
      const imgSource = new Image();
      imgSource.src = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(
        spriteCb({ fgColor, bgColor })
      )}`;
      this.spriteMap.set(key, spriteCanvas);
      const promise = imgSource.decode();
      if (promise === void 0) {
        return;
      }
      this.inFlight++;
      promise.then(() => {
        spriteCtx.drawImage(imgSource, 0, 0, rSize, rSize);
      }).finally(() => {
        this.inFlight--;
        if (this.inFlight === 0) {
          this.onSettled?.();
        }
      });
    } else {
      if (alpha < 1) {
        ctx.globalAlpha = alpha;
      }
      ctx.drawImage(spriteCanvas, 0, 0, rSize, rSize, x2, y, size2, size2);
      if (alpha < 1) {
        ctx.globalAlpha = 1;
      }
    }
  }
};

// ../../packages/aitable/src/grid/managers/performance-tracker/PerformanceTracker.ts
var PerformanceTracker = class {
  startTimes = {};
  totalTimes = {};
  startTrack(key) {
    this.startTimes[key] = performance.now();
  }
  endTrack(key) {
    if (this.startTimes[key] == null) {
      console.error(
        `PerformanceTracker: endTrack called with key "${key}" without calling startTrack first`
      );
      return;
    }
    const endTime = performance.now();
    const sliceTime = endTime - this.startTimes[key];
    this.totalTimes[key] = (this.totalTimes[key] || 0) + sliceTime;
    delete this.startTimes[key];
  }
  getTotalTime(key) {
    return this.totalTimes[key] || 0;
  }
  reset() {
    this.startTimes = {};
    this.totalTimes = {};
  }
  getAllTotalTimes() {
    return this.totalTimes;
  }
};
var performanceTracker = new PerformanceTracker();

// ../../packages/aitable/src/grid/renderers/cell-renderer/imageCellRenderer.ts
var imagePositionCache = new LRUCache({
  max: 100
});
var INNER_PADDING = 4;
var { cellHorizontalPadding: cellHorizontalPadding4, cellVerticalPaddingXS: cellVerticalPaddingXS2 } = GRID_DEFAULT;
var getImageCollection = (data, loadImg) => {
  const collection = [];
  for (let index3 = 0; index3 < data.length; index3++) {
    const { id, url } = data[index3];
    const img = loadImg(url);
    if (img !== void 0) {
      collection.push({ id, img });
    }
  }
  return collection;
};
var generateCacheKey = (data, width) => {
  return `${String(width)}-${data.map(({ id }) => id).join(",")}`;
};
var imageCellRenderer = {
  type: "image" /* Image */,
  needsHoverWhenActive: true,
  needsHoverPositionWhenActive: true,
  draw: (cell, props) => {
    const {
      rect,
      columnIndex,
      rowIndex,
      theme,
      ctx,
      imageManager,
      isActive,
      spriteManager
    } = props;
    if (!rect || !theme || !ctx) return;
    const { iconSizeSM, cellLineColor } = theme;
    const { data, readonly } = cell;
    const { x: x2, y, width, height } = rect;
    const editable = !readonly && isActive;
    const initPadding = editable ? iconSizeSM + 2 : 0;
    const imgHeight = height - cellVerticalPaddingXS2 * 2;
    const imageCollection = getImageCollection(
      data,
      (url) => imageManager.loadOrGetImage(url, columnIndex, rowIndex)
    );
    if (editable) {
      spriteManager.drawSprite(ctx, {
        sprite: "add" /* Add */,
        x: x2 + cellHorizontalPadding4 - 2,
        y: y + (height - iconSizeSM) / 2,
        size: iconSizeSM,
        theme
      });
    }
    if (!imageCollection.length) {
      return;
    }
    ctx.save();
    ctx.beginPath();
    ctx.rect(x2, y, width - 0.5, height);
    ctx.clip();
    const cacheKey = generateCacheKey(data, width);
    const positions = [];
    let drawX = x2 + cellHorizontalPadding4 + initPadding;
    for (const imgItem of imageCollection) {
      if (drawX > x2 + width) {
        break;
      }
      const { id, img } = imgItem;
      const imgWidth = img.width * (imgHeight / img.height);
      drawRect(ctx, {
        x: drawX,
        y: y + cellVerticalPaddingXS2,
        width: imgWidth,
        height: imgHeight,
        radius: INNER_PADDING,
        stroke: cellLineColor
      });
      ctx.save();
      drawRect(ctx, {
        x: drawX,
        y: y + cellVerticalPaddingXS2,
        width: imgWidth,
        height: imgHeight,
        radius: INNER_PADDING
      });
      ctx.clip();
      ctx.drawImage(img, drawX, y + cellVerticalPaddingXS2, imgWidth, imgHeight);
      ctx.restore();
      positions.push({
        id,
        x: drawX - x2,
        y: cellVerticalPaddingXS2,
        width: imgWidth,
        height: imgHeight
      });
      drawX += imgWidth + INNER_PADDING;
    }
    imagePositionCache.set(cacheKey, positions);
    ctx.restore();
  },
  checkRegion: (cell, props, _shouldCalculate) => {
    const { data, readonly } = cell;
    const { width, height, theme, isActive, hoverCellPosition } = props;
    const editable = !readonly && isActive;
    const { iconSizeSM } = theme;
    const { x: hoverX, y: hoverY } = hoverCellPosition;
    const startX = cellHorizontalPadding4;
    const startY = (height - iconSizeSM) / 2;
    if (editable && isPointInsideRectangle(
      [hoverX, hoverY],
      [startX, startY],
      [startX + iconSizeSM, startY + iconSizeSM]
    )) {
      return { type: "toggleEditing" /* ToggleEditing */, data: null };
    }
    const cacheKey = generateCacheKey(data, width);
    const imagePositions = imagePositionCache.get(cacheKey);
    if (imagePositions == null) {
      return { type: "blank" /* Blank */ };
    }
    for (let i = 0; i < imagePositions.length; i++) {
      const { id, x: x2, y, width: width2, height: height2 } = imagePositions[i];
      if (isPointInsideRectangle(
        [hoverX, hoverY],
        [x2, y],
        [x2 + width2, y + height2]
      )) {
        return {
          type: "preview" /* Preview */,
          data: id
        };
      }
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, callback) => {
    const cellRegion = imageCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion || cellRegion.type === "blank" /* Blank */) {
      return;
    }
    if (cellRegion.type === "preview" /* Preview */) {
      cell?.onPreview?.(cellRegion.data);
      return callback(cellRegion);
    }
    callback(cellRegion);
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/linkCellRenderer.ts
var {
  cellHorizontalPadding: cellHorizontalPadding5,
  cellVerticalPaddingMD,
  cellTextLineHeight,
  maxRowCount
} = GRID_DEFAULT;
var computeTextPositions = ({
  ctx,
  data,
  rect,
  theme,
  isActive
}) => {
  const positions = [];
  const { x: x2, y, width, height } = rect;
  const { fontSizeSM } = theme;
  const drawWidth = width - 2 * cellHorizontalPadding5;
  const drawHeight = height - cellVerticalPaddingMD;
  const maxLines = isActive ? Infinity : Math.max(1, Math.floor(drawHeight / cellTextLineHeight));
  let row = 1;
  let index3 = 0;
  let drawX = x2 + cellHorizontalPadding5;
  let drawY = y + cellVerticalPaddingMD;
  let textArray = [];
  if (Array.isArray(data)) {
    textArray = data.filter((item) => item != null).map((item) => String(item));
  } else if (data && typeof data === "object") {
    const linkData = data;
    const displayText = linkData.title || linkData.text || linkData.url || "";
    if (displayText) {
      textArray = [displayText];
    }
  } else if (data != null) {
    textArray = [String(data)];
  }
  for (const text of textArray) {
    const textLines = drawMultiLineText(ctx, {
      text,
      maxLines,
      maxWidth: drawWidth,
      needRender: false,
      fontSize: fontSizeSM
    });
    for (const { text: lineText, width: textWidth } of textLines) {
      if (row > maxLines) {
        break;
      }
      positions.push({
        x: drawX,
        y: drawY,
        text: lineText,
        width: textWidth,
        link: text,
        key: String(index3)
      });
      row++;
      drawY += cellTextLineHeight;
      drawX = x2 + cellHorizontalPadding5;
    }
    index3++;
  }
  return positions;
};
var linkCellRenderer = {
  type: "link" /* Link */,
  needsHover: true,
  needsHoverPosition: true,
  measure: (cell, props) => {
    const { data } = cell;
    const { ctx, theme, width, height } = props;
    if (!ctx || !theme)
      return {
        width: width ?? 0,
        height: height ?? 0,
        totalHeight: height ?? 0
      };
    const isEmpty2 = Array.isArray(data) ? !data.length : data && typeof data === "object" ? !data.title && !data.text && !data.url : !data || data === "";
    if (isEmpty2) {
      return { width, height, totalHeight: height };
    }
    const textPositions = computeTextPositions({
      ctx,
      data,
      rect: { x: 0, y: 0, width, height },
      theme,
      isActive: true
    });
    const positionLength = textPositions.length;
    if (!positionLength) {
      return { width, height, totalHeight: height };
    }
    const totalHeight = textPositions[positionLength - 1].y + cellTextLineHeight;
    const maxHeight = cellVerticalPaddingMD + maxRowCount * cellTextLineHeight;
    const finalHeight = Math.max(Math.min(totalHeight, maxHeight), height);
    return {
      width,
      height: finalHeight,
      totalHeight
    };
  },
  draw: (cell, props) => {
    const { ctx, rect, theme, hoverCellPosition, isActive } = props;
    if (!ctx || !rect || !theme) return;
    const { data } = cell;
    const {
      x: originX,
      y: originY,
      width: originWidth,
      height: originHeight
    } = rect;
    const hoverX = hoverCellPosition?.x ?? -1;
    const hoverY = hoverCellPosition?.y ?? -1;
    const { fontSizeSM, cellTextColorHighlight } = theme;
    ctx.save();
    ctx.beginPath();
    const isEmpty2 = Array.isArray(data) ? !data.length : data && typeof data === "object" ? !data.title && !data.text && !data.url : !data || data === "";
    if (!isEmpty2 && !isActive) {
      ctx.rect(originX, originY, originWidth, originHeight);
      ctx.clip();
    }
    const textPositions = computeTextPositions({
      ctx,
      data,
      rect,
      theme,
      isActive
    });
    ctx.textAlign = "left";
    ctx.textBaseline = "middle";
    ctx.fillStyle = cellTextColorHighlight;
    let hoveredLink = "";
    let hoveredKey = "";
    const offsetY = fontSizeSM / 2;
    textPositions.forEach((position) => {
      const { x: x2, y, width, text, link, key } = position;
      const isHovered = hoverX >= cellHorizontalPadding5 && hoverX <= cellHorizontalPadding5 + width && hoverY >= y - originY && hoverY <= y - originY + cellTextLineHeight;
      if (isHovered) {
        hoveredLink = link;
        hoveredKey = key;
      }
      ctx.fillText(text, x2, y + offsetY);
    });
    if (hoveredLink) {
      textPositions.forEach((position) => {
        const { x: x2, y, width, key } = position;
        if (key === hoveredKey) {
          drawLine(ctx, {
            x: x2,
            y,
            points: [0, fontSizeSM - 1, width, fontSizeSM - 1],
            stroke: cellTextColorHighlight
          });
        }
      });
    }
    ctx.restore();
  },
  checkRegion: (cell, props, _shouldCalculate) => {
    const {
      hoverCellPosition,
      width,
      height,
      isActive,
      theme,
      activeCellBound
    } = props;
    const { x: hoverX, y: originHoverY } = hoverCellPosition;
    const { fontSizeSM } = theme;
    const { data } = cell;
    if (measuredCanvas == null) {
      return { type: "blank" /* Blank */ };
    }
    const { ctx, setFontSize } = measuredCanvas;
    if (!ctx) {
      return { type: "blank" /* Blank */ };
    }
    const scrollTop = activeCellBound?.scrollTop ?? 0;
    const hoverY = originHoverY + scrollTop;
    setFontSize(fontSizeSM);
    const textPositions = computeTextPositions({
      ctx,
      data,
      rect: { x: 0, y: 0, width, height },
      theme,
      isActive
    });
    for (const position of textPositions) {
      const { x: x2, y, width: width2, link } = position;
      if (hoverX >= x2 && hoverX <= x2 + width2 && hoverY >= y && hoverY <= y + cellTextLineHeight) {
        let linkUrl = link;
        if (Array.isArray(data)) {
          linkUrl = link;
        } else if (data && typeof data === "object") {
          const linkData = data;
          linkUrl = linkData.url || linkData.text || linkData.title || link;
        } else if (typeof data === "string") {
          linkUrl = data;
        }
        return { type: "preview" /* Preview */, data: linkUrl };
      }
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, _callback) => {
    const cellRegion = linkCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion || cellRegion.type === "blank" /* Blank */) {
      return;
    }
    if (cellRegion.type === "preview" /* Preview */) {
      cell.onClick?.(cellRegion.data);
    }
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/loadingCellRenderer.ts
var { cellHorizontalPadding: cellHorizontalPadding6, cellVerticalPaddingXS: cellVerticalPaddingXS3 } = GRID_DEFAULT;
var loadingCellRenderer = {
  type: "loading" /* Loading */,
  draw: (_cell, props) => {
    const { ctx, theme, rect } = props;
    if (!ctx || !theme || !rect) return;
    const { x: x2, y, width, height } = rect;
    const { cellBgLoading } = theme;
    drawRect(ctx, {
      x: x2 + cellHorizontalPadding6,
      y: y + cellVerticalPaddingXS3,
      width: width - 2 * cellHorizontalPadding6,
      height: height - 2 * cellVerticalPaddingXS3,
      radius: 4,
      fill: cellBgLoading
    });
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/numberCellRenderer.ts
var RING_RADIUS = 8.5;
var RING_LINE_WIDTH = 5;
var TEXT_GAP = 4;
var {
  maxRowCount: maxRowCount2,
  cellVerticalPaddingMD: cellVerticalPaddingMD2,
  cellHorizontalPadding: cellHorizontalPadding7,
  cellTextLineHeight: cellTextLineHeight2
} = GRID_DEFAULT;
var numberCellRenderer = {
  type: "number" /* Number */,
  measure: (cell, props) => {
    const { displayData, showAs } = cell;
    const { ctx, theme, width, height } = props;
    if (!ctx || !theme)
      return {
        width: width ?? 0,
        height: height ?? 0,
        totalHeight: height ?? 0
      };
    if (!displayData || typeof displayData === "string" || showAs != null) {
      return { width, height, totalHeight: height };
    }
    const lineCount = displayData.length;
    const totalHeight = cellVerticalPaddingMD2 + lineCount * cellTextLineHeight2;
    const displayRowCount = Math.min(maxRowCount2, lineCount);
    return {
      width,
      height: Math.max(
        height,
        cellVerticalPaddingMD2 + displayRowCount * cellTextLineHeight2
      ),
      totalHeight
    };
  },
  // eslint-disable-next-line sonarjs/cognitive-complexity
  draw: (cell, props) => {
    const { data, displayData, showAs, contentAlign = "right" } = cell;
    if (data == null || displayData == null || displayData === "") {
      return;
    }
    const { ctx, rect, theme, isActive } = props;
    if (!ctx || !rect || !theme) return;
    const { x: x2, y, width } = rect;
    const { cellTextColor } = theme;
    const showText = showAs?.showValue ?? true;
    const isAlignLeft = contentAlign === "left";
    let textX = isAlignLeft ? x2 + cellHorizontalPadding7 : x2 + width - cellHorizontalPadding7;
    let textMaxWidth = width - cellHorizontalPadding7 * 2;
    if (showAs != null) {
      const { type, color, maxValue } = showAs;
      if (type === "ring" /* Ring */) {
        const totalRadius = RING_RADIUS + RING_LINE_WIDTH;
        const offsetX = isAlignLeft ? cellHorizontalPadding7 + totalRadius : width - cellHorizontalPadding7 - totalRadius;
        textX = isAlignLeft ? x2 + cellHorizontalPadding7 + 2 * totalRadius + TEXT_GAP : textX - 2 * totalRadius - TEXT_GAP;
        textMaxWidth = textMaxWidth - 2 * totalRadius - TEXT_GAP;
        drawRing(ctx, {
          x: x2 + offsetX,
          y: y + cellVerticalPaddingMD2 + RING_RADIUS - 3,
          value: data,
          maxValue,
          color,
          radius: RING_RADIUS,
          lineWidth: RING_LINE_WIDTH
        });
      }
      if (type === "bar" /* Bar */) {
        const height = 8;
        const textGap = 4;
        const halfMaxWidth = textMaxWidth / 2;
        const offsetX = isAlignLeft ? cellHorizontalPadding7 : width / 2;
        textX = isAlignLeft ? x2 + width / 2 + textGap : x2 + width / 2 - textGap;
        textMaxWidth = halfMaxWidth - textGap;
        drawProcessBar(ctx, {
          x: x2 + offsetX,
          y: y + cellVerticalPaddingMD2 + 2,
          width: halfMaxWidth,
          height,
          value: data,
          maxValue,
          color
        });
      }
    }
    if (!showText) {
      return;
    }
    const isDataString = typeof displayData === "string";
    if (isDataString || !isActive) {
      return drawMultiLineText(ctx, {
        x: textX,
        y: y + cellVerticalPaddingMD2,
        text: isDataString ? displayData : displayData.join(", "),
        maxLines: 1,
        maxWidth: textMaxWidth,
        fill: cellTextColor,
        textAlign: contentAlign
      });
    }
    let curY = y + cellVerticalPaddingMD2;
    displayData.forEach((text, index3) => {
      const isLast = index3 === displayData.length - 1;
      drawMultiLineText(ctx, {
        x: textX,
        y: curY,
        text: isLast ? text : `${text},`,
        maxLines: 1,
        maxWidth: textMaxWidth,
        fill: cellTextColor,
        textAlign: contentAlign
      });
      curY += cellTextLineHeight2;
    });
    return;
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/ratingCellRenderer.ts
var gapSize = 3;
var { cellHorizontalPadding: cellHorizontalPadding8 } = GRID_DEFAULT;
var ratingCellRenderer = {
  type: "rating" /* Rating */,
  needsHover: true,
  needsHoverPosition: true,
  draw: (cell, props) => {
    const { data, icon, color, max: max3, readonly } = cell;
    const { ctx, theme, rect, hoverCellPosition, spriteManager } = props;
    if (!ctx || !theme || !rect) return;
    const { x: x2, y, width, height } = rect;
    const hoverX = hoverCellPosition?.x ?? 0;
    const hoverY = hoverCellPosition?.y ?? 0;
    const { iconSizeXS, iconFgHighlight, cellLineColor } = theme;
    const ratingValue = data ?? 0;
    ctx.save();
    ctx.beginPath();
    ctx.rect(x2, y, width, height);
    ctx.clip();
    let currentX = x2 + cellHorizontalPadding8;
    const verticalPadding = (height - iconSizeXS) / 2;
    const initY = y + verticalPadding;
    const isVerticalRange = inRange2(
      hoverY,
      verticalPadding,
      verticalPadding + iconSizeXS
    );
    const iconColor = color ?? iconFgHighlight;
    const hoverColor = hexToRGBA(iconColor, 0.3);
    const maxHoverX = cellHorizontalPadding8 + max3 * (iconSizeXS + gapSize);
    for (let i = 0; i < max3; i++) {
      const isHighlight = ratingValue > i;
      const isHovered = hoverX >= currentX - x2 && hoverX < maxHoverX;
      let fillColor;
      if (isHighlight) {
        fillColor = iconColor;
      } else if (!readonly && isVerticalRange && isHovered) {
        fillColor = hoverColor;
      } else {
        fillColor = cellLineColor;
      }
      spriteManager.drawSprite(ctx, {
        sprite: icon,
        x: currentX,
        y: initY,
        size: iconSizeXS,
        colors: [fillColor, fillColor],
        theme
      });
      currentX += iconSizeXS + gapSize;
    }
    ctx.restore();
  },
  checkRegion: (cell, props, shouldCalculate) => {
    const { data, max: max3, readonly } = cell;
    if (readonly) {
      return { type: "blank" /* Blank */ };
    }
    const { hoverCellPosition, height, theme } = props;
    if (!hoverCellPosition || !theme) return { type: "blank" /* Blank */ };
    const { x: x2, y } = hoverCellPosition;
    const { iconSizeXS } = theme;
    const minX = cellHorizontalPadding8;
    const maxX = minX + max3 * (iconSizeXS + gapSize);
    if (inRange2(x2, minX, maxX) && inRange2(y, height / 2 - iconSizeXS, height / 2 + iconSizeXS)) {
      if (!shouldCalculate) {
        return { type: "update" /* Update */, data: null };
      }
      const newData = Math.ceil(
        (x2 - cellHorizontalPadding8) / (iconSizeXS + gapSize)
      );
      return {
        type: "update" /* Update */,
        data: newData !== data ? newData : null
      };
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, callback) => {
    const cellRegion = ratingCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion || cellRegion.type === "blank" /* Blank */) {
      return;
    }
    callback(cellRegion);
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/selectCellRenderer.ts
var positionCache2 = new LRUCache({
  max: 10
});
var OPTION_RADIUS = 6;
var OPTION_GAP_SIZE = 6;
var OPTION_PADDING_HORIZONTAL = 8;
var SELECT_CELL_PADDING_TOP = 6;
var { cellHorizontalPadding: cellHorizontalPadding9, maxRowCount: maxRowCount3 } = GRID_DEFAULT;
var drawLabel = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    text,
    maxTextWidth,
    textColor,
    bgColor,
    editable,
    theme,
    spriteManager
  } = props;
  const { fontSizeXS, iconSizeSM, iconSizeXS } = theme;
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height: iconSizeSM,
    radius: OPTION_RADIUS,
    fill: bgColor
  });
  drawSingleLineText(ctx, {
    text,
    x: x2 + OPTION_PADDING_HORIZONTAL,
    y: y + (iconSizeSM - fontSizeXS) / 2 + 0.5,
    fill: textColor,
    maxWidth: maxTextWidth,
    fontSize: fontSizeXS
  });
  if (editable) {
    spriteManager.drawSprite(ctx, {
      sprite: "close" /* Close */,
      x: x2 + width - iconSizeXS - OPTION_PADDING_HORIZONTAL + 2,
      y: y + 2,
      size: iconSizeXS,
      theme,
      colors: [textColor, textColor]
    });
  }
};
var selectCellRenderer = {
  type: "select" /* Select */,
  needsHoverPositionWhenActive: true,
  measure: (cell, props) => {
    const { displayData, readonly } = cell;
    const { ctx, theme, width, height } = props;
    if (!ctx || !theme)
      return {
        width: width ?? 0,
        height: height ?? 0,
        totalHeight: height ?? 0
      };
    const { cellTextColor, fontSizeXS, iconSizeSM, iconSizeXS } = theme;
    if (!displayData.length) {
      return { width, height, totalHeight: height };
    }
    const drawArea = {
      x: cellHorizontalPadding9,
      y: SELECT_CELL_PADDING_TOP,
      width: width - 2 * cellHorizontalPadding9,
      height: height - SELECT_CELL_PADDING_TOP
    };
    let lineCount = 1;
    let x2 = drawArea.x;
    let y = drawArea.y;
    const deleteBtnWidth = !readonly ? iconSizeXS : 0;
    const maxTextWidth = drawArea.width - OPTION_GAP_SIZE * 2 - deleteBtnWidth;
    const totalOptionPadding = OPTION_PADDING_HORIZONTAL * 2 + deleteBtnWidth;
    const rightEdgeOfDrawArea = drawArea.x + drawArea.width;
    const lineHeight = iconSizeSM + OPTION_GAP_SIZE;
    const cacheKey = `${String(width)}-${displayData.join(",")}`;
    const positions = [];
    for (const text of displayData) {
      const { width: displayWidth } = drawSingleLineText(ctx, {
        text,
        fill: cellTextColor,
        maxWidth: maxTextWidth,
        needRender: false,
        fontSize: fontSizeXS
      });
      const width2 = displayWidth + totalOptionPadding;
      if (x2 !== drawArea.x && x2 + width2 > rightEdgeOfDrawArea) {
        lineCount++;
        x2 = drawArea.x;
        y += lineHeight;
      }
      positions.push({
        type: "Content" /* Content */,
        x: x2,
        y: y + 2,
        width: displayWidth + OPTION_PADDING_HORIZONTAL + 2,
        height: lineHeight
      });
      if (!readonly) {
        positions.push({
          type: "DeleteBtn" /* DeleteBtn */,
          x: x2 + width2 - iconSizeXS - OPTION_PADDING_HORIZONTAL + 2,
          y: y + 2,
          width: iconSizeXS,
          height: lineHeight
        });
      }
      x2 += width2 + OPTION_PADDING_HORIZONTAL;
    }
    positionCache2.set(cacheKey, positions);
    const totalHeight = SELECT_CELL_PADDING_TOP + lineCount * lineHeight;
    const displayRowCount = Math.min(maxRowCount3, lineCount);
    return {
      width: width ?? 0,
      height: Math.max(
        height ?? 0,
        SELECT_CELL_PADDING_TOP + displayRowCount * lineHeight
      ),
      totalHeight
    };
  },
  draw: (cell, props) => {
    const { ctx, rect, theme, isActive, spriteManager } = props;
    if (!ctx || !rect || !theme) return;
    const { displayData, choiceMap, readonly } = cell;
    const { x: _x, y: _y, width, height } = rect;
    const clipEnable = !isActive && displayData.length;
    const {
      fontSizeXS,
      fontFamily,
      iconSizeXS,
      iconSizeSM,
      cellOptionBg,
      cellOptionTextColor
    } = theme;
    const drawArea = {
      x: _x + cellHorizontalPadding9,
      y: _y + SELECT_CELL_PADDING_TOP,
      width: width - 2 * cellHorizontalPadding9,
      height: height - SELECT_CELL_PADDING_TOP
    };
    const combinedHeight = iconSizeSM + OPTION_GAP_SIZE;
    const rows = isActive ? Infinity : Math.max(
      1,
      Math.floor((drawArea.height - iconSizeSM) / combinedHeight) + 1
    );
    const editable = !readonly && isActive;
    const deleteBtnWidth = editable ? iconSizeXS : 0;
    const maxTextWidth = drawArea.width - OPTION_GAP_SIZE * 2 - deleteBtnWidth;
    const totalOptionPadding = OPTION_PADDING_HORIZONTAL * 2 + deleteBtnWidth;
    const rightEdgeOfDrawArea = drawArea.x + drawArea.width;
    let row = 1;
    let x2 = drawArea.x;
    let y = drawArea.y;
    ctx.save();
    ctx.beginPath();
    if (clipEnable) {
      ctx.rect(_x, _y, width, height);
      ctx.clip();
    }
    ctx.font = `${fontSizeXS}px ${fontFamily}`;
    for (const text of displayData) {
      const choice = choiceMap?.get?.(text);
      const bgColor = choice?.backgroundColor || cellOptionBg;
      const textColor = choice?.color || cellOptionTextColor;
      const { width: displayWidth, text: displayText } = drawSingleLineText(
        ctx,
        {
          text,
          fill: textColor,
          maxWidth: maxTextWidth,
          fontSize: fontSizeXS,
          needRender: false
        }
      );
      const width2 = Math.min(displayWidth + totalOptionPadding, drawArea.width);
      if (x2 !== drawArea.x && x2 + width2 > rightEdgeOfDrawArea && row < rows) {
        row++;
        y += combinedHeight;
        x2 = drawArea.x;
      }
      drawLabel(ctx, {
        x: x2,
        y,
        width: width2,
        text: displayText,
        maxTextWidth,
        textColor,
        bgColor,
        editable,
        theme,
        spriteManager
      });
      x2 += width2 + OPTION_PADDING_HORIZONTAL;
      if (x2 > rightEdgeOfDrawArea && row >= rows) {
        break;
      }
    }
    ctx.restore();
  },
  // eslint-disable-next-line sonarjs/cognitive-complexity
  checkRegion: (cell, props, shouldCalculate) => {
    const { data, displayData, readonly } = cell;
    const { width, isActive, hoverCellPosition, activeCellBound } = props;
    const editable = !readonly && isActive && activeCellBound;
    if (!editable || !hoverCellPosition) {
      return { type: "blank" /* Blank */ };
    }
    const { scrollTop } = activeCellBound;
    const { x: hoverX, y: hoverY } = hoverCellPosition;
    const cacheKey = `${String(width)}-${displayData.join(",")}`;
    const positions = positionCache2.get(cacheKey);
    if (!positions) {
      return { type: "blank" /* Blank */ };
    }
    for (let i = 0; i < positions.length; i++) {
      const position = positions[i];
      if (!position) continue;
      const { type, x: x2, y, width: width2, height } = position;
      if (isPointInsideRectangle(
        [hoverX, scrollTop + hoverY],
        [x2, y],
        [x2 + width2, y + height]
      )) {
        if (!shouldCalculate) {
          return {
            type: type === "DeleteBtn" /* DeleteBtn */ ? "update" /* Update */ : "preview" /* Preview */,
            data: null
          };
        }
        const realIndex = Math.floor(i / 2);
        if (type === "DeleteBtn" /* DeleteBtn */) {
          const result2 = data.filter(
            (_2, index3) => index3 !== realIndex
          );
          return {
            type: "update" /* Update */,
            data: result2.length ? result2 : null
          };
        }
        return {
          type: "preview" /* Preview */,
          data: data[realIndex]?.id
        };
      }
    }
    return { type: "blank" /* Blank */ };
  },
  onClick: (cell, props, callback) => {
    const { readonly, isEditingOnClick } = cell;
    const { isActive } = props;
    const cellRegion = selectCellRenderer.checkRegion?.(cell, props, true);
    if (!cellRegion) {
      return;
    }
    if (cellRegion.type === "blank" /* Blank */) {
      const editable = !readonly && isActive;
      if (editable && isEditingOnClick) {
        callback?.(props);
      }
      return;
    }
    if (cellRegion.type === "preview" /* Preview */) {
      return cell?.onPreview?.(cellRegion.data);
    }
    callback?.(props);
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/textCellRenderer.ts
var {
  maxRowCount: maxRowCount4,
  cellHorizontalPadding: cellHorizontalPadding10,
  cellVerticalPaddingMD: cellVerticalPaddingMD3,
  cellTextLineHeight: cellTextLineHeight3
} = GRID_DEFAULT;
var textCellRenderer = {
  type: "text" /* Text */,
  measure: (cell, props) => {
    const { displayData } = cell;
    const { ctx, theme, width, height } = props;
    if (!ctx || !theme)
      return {
        width: width ?? 0,
        height: height ?? 0,
        totalHeight: height ?? 0
      };
    const { cellTextColor } = theme;
    if (!displayData) {
      return { width, height, totalHeight: height };
    }
    const lineCount = drawMultiLineText(ctx, {
      text: displayData,
      maxLines: Infinity,
      lineHeight: cellTextLineHeight3,
      maxWidth: width - cellHorizontalPadding10 * 2,
      fill: cellTextColor,
      needRender: false
    }).length;
    const totalHeight = cellVerticalPaddingMD3 + lineCount * cellTextLineHeight3;
    const displayRowCount = Math.min(maxRowCount4, lineCount);
    return {
      width,
      height: Math.max(
        height,
        cellVerticalPaddingMD3 + displayRowCount * cellTextLineHeight3
      ),
      totalHeight
    };
  },
  draw: (cell, props) => {
    const { displayData } = cell;
    const { ctx, rect, theme, isActive } = props;
    if (!ctx || !rect || !theme) return;
    const { x: x2, y, width, height } = rect;
    if (!displayData) {
      return;
    }
    const { cellTextColor } = theme;
    const renderHeight = height - cellVerticalPaddingMD3;
    drawMultiLineText(ctx, {
      x: x2 + cellHorizontalPadding10,
      y: y + cellVerticalPaddingMD3,
      text: displayData,
      maxLines: isActive ? Infinity : Math.max(Math.floor(renderHeight / cellTextLineHeight3), 1),
      lineHeight: cellTextLineHeight3,
      maxWidth: width - cellHorizontalPadding10 * 2,
      fill: cellTextColor
    });
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/userCellRenderer.ts
var OPTION_RADIUS2 = 6;
var { cellHorizontalPadding: cellHorizontalPadding11, cellVerticalPaddingSM } = GRID_DEFAULT;
var userCellRenderer = {
  type: "user" /* User */,
  needsHover: false,
  needsHoverPosition: false,
  draw: (cell, props) => {
    const { ctx, rect, theme, imageManager, columnIndex, rowIndex } = props;
    if (!ctx || !rect || !theme) return;
    const { data: userSets } = cell;
    const { x: _x, y: _y, width, height } = rect;
    const {
      fontSizeXS,
      fontSizeSM,
      fontFamily,
      iconSizeSM,
      cellOptionBg,
      cellOptionTextColor,
      avatarBg,
      avatarTextColor,
      avatarSizeMD
    } = theme;
    if (!userSets.length) {
      return;
    }
    const drawArea = {
      x: _x + cellHorizontalPadding11,
      y: _y + cellVerticalPaddingSM,
      width: width - 2 * cellHorizontalPadding11,
      height: height - cellVerticalPaddingSM
    };
    const rows = Math.max(
      1,
      Math.floor(
        (drawArea.height - iconSizeSM) / (iconSizeSM + cellHorizontalPadding11)
      ) + 1
    );
    const maxTextWidth = drawArea.width - cellHorizontalPadding11 * 2;
    ctx.save();
    ctx.beginPath();
    ctx.rect(_x, _y, width, height);
    ctx.clip();
    ctx.font = `${fontSizeXS}px ${fontFamily}`;
    let row = 1;
    let x2 = drawArea.x;
    let y = drawArea.y;
    for (const user of userSets) {
      const { name: text, avatarUrl } = user;
      const { width: displayWidth, text: displayText } = drawSingleLineText(
        ctx,
        {
          text,
          fill: cellOptionTextColor,
          maxWidth: maxTextWidth,
          needRender: false,
          fontSize: fontSizeXS
        }
      );
      const width2 = displayWidth + avatarSizeMD + 6;
      if (x2 !== drawArea.x && x2 + width2 > drawArea.x + drawArea.width && row < rows) {
        row++;
        y += iconSizeSM + cellVerticalPaddingSM;
        x2 = drawArea.x;
      }
      drawRect(ctx, {
        x: x2 + 4,
        y,
        width: width2,
        height: iconSizeSM,
        radius: OPTION_RADIUS2,
        fill: cellOptionBg
      });
      drawSingleLineText(ctx, {
        text: displayText,
        x: x2 + avatarSizeMD + 4,
        y: y + 4,
        fill: cellOptionTextColor,
        maxWidth: maxTextWidth
      });
      const img = avatarUrl ? imageManager.loadOrGetImage(avatarUrl, columnIndex, rowIndex) : void 0;
      drawAvatar(ctx, {
        x: x2,
        y: y - 2,
        width: avatarSizeMD,
        height: avatarSizeMD,
        fill: avatarBg,
        stroke: cellOptionBg,
        defaultText: text,
        textColor: avatarTextColor,
        fontSize: fontSizeSM,
        fontFamily,
        img
      });
      x2 += width2 + 8;
      if (x2 > drawArea.x + drawArea.width && row >= rows) {
        break;
      }
    }
    ctx.restore();
  }
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/utils.ts
var { cellScrollBarPaddingY, cellScrollBarMinHeight } = GRID_DEFAULT;
var getCellScrollState = (activeCellBound) => {
  const { height, totalHeight, scrollTop } = activeCellBound;
  const sliderHeight = height - cellScrollBarPaddingY * 2;
  const ratio = sliderHeight / totalHeight;
  const originScrollBarHeight = sliderHeight * ratio;
  const scrollBarHeight = Math.max(
    originScrollBarHeight,
    cellScrollBarMinHeight
  );
  const scrollTopPercent = scrollTop / (totalHeight - height);
  const scrollBarSupplementHeight = scrollBarHeight - originScrollBarHeight;
  const scrollBarSupplementScrollTop = scrollBarSupplementHeight > 0 ? scrollBarSupplementHeight * scrollTopPercent : 0;
  const scrollBarScrollTop = scrollTop * ratio - scrollBarSupplementScrollTop;
  const contentScrollTop = Math.min(scrollTop, totalHeight - height);
  return {
    scrollBarHeight,
    scrollBarScrollTop,
    contentScrollTop
  };
};

// ../../packages/aitable/src/grid/renderers/cell-renderer/index.ts
var getCellRenderer = (cellType) => {
  switch (cellType) {
    case "text" /* Text */:
      return textCellRenderer;
    case "link" /* Link */:
      return linkCellRenderer;
    case "number" /* Number */:
      return numberCellRenderer;
    case "boolean" /* Boolean */:
      return booleanCellRenderer;
    case "select" /* Select */:
    case "multiSelect" /* MultiSelect */:
      return selectCellRenderer;
    case "image" /* Image */:
      return imageCellRenderer;
    case "rating" /* Rating */:
      return ratingCellRenderer;
    case "chart" /* Chart */:
      return chartCellRenderer;
    case "user" /* User */:
      return userCellRenderer;
    case "button" /* Button */:
      return buttonCellRenderer;
    case "date" /* Date */:
      return dateCellRenderer;
    case "attachment" /* Attachment */:
      return attachmentCellRenderer;
    case "loading" /* Loading */:
    default:
      return loadingCellRenderer;
  }
};

// ../../packages/aitable/src/grid/renderers/layout-renderer/interface.ts
var RenderRegion = /* @__PURE__ */ ((RenderRegion2) => {
  RenderRegion2["Freeze"] = "Freeze";
  RenderRegion2["Other"] = "Other";
  return RenderRegion2;
})(RenderRegion || {});
var DividerRegion = /* @__PURE__ */ ((DividerRegion2) => {
  DividerRegion2["Top"] = "Top";
  DividerRegion2["Bottom"] = "Bottom";
  return DividerRegion2;
})(DividerRegion || {});

// ../../packages/aitable/src/grid/hooks/primitive/useAutoScroll.ts
var import_react110 = __toESM(require_react(), 1);
var threshold = 30;
var maxPxPerMs = 2;
var msToFullSpeed = 1200;
var useAutoScroll = (props) => {
  const { coordInstance, scrollBy } = props;
  const speedScalar = (0, import_react110.useRef)(0);
  const { containerWidth, containerHeight, freezeRegionWidth, rowInitSize } = coordInstance;
  const [scrollDirection, setScrollDirection] = (0, import_react110.useState)([0, 0]);
  const [xDirection, yDirection] = scrollDirection || [0, 0];
  const onAutoScroll = (position, dragType) => {
    const { x: x2, y } = position;
    let xDir = 0;
    let yDir = 0;
    if (!dragType || dragType === "Columns" /* Columns */) {
      if (containerWidth - x2 < threshold) {
        xDir = 1;
      } else if (inRange_default(x2, freezeRegionWidth, freezeRegionWidth + threshold)) {
        xDir = -1;
      }
    }
    if (!dragType || dragType === "Rows" /* Rows */) {
      if (containerHeight - y < threshold) {
        yDir = 1;
      } else if (inRange_default(y, rowInitSize, rowInitSize + threshold)) {
        yDir = -1;
      }
    }
    setScrollDirection([xDir, yDir]);
  };
  const onAutoScrollStop = () => {
    setScrollDirection([0, 0]);
  };
  (0, import_react110.useEffect)(() => {
    if (xDirection === 0 && yDirection === 0) {
      speedScalar.current = 0;
      return;
    }
    let lastTime = 0;
    const processFrame = (curTime) => {
      if (lastTime !== 0) {
        const step = curTime - lastTime;
        speedScalar.current = Math.min(
          1,
          speedScalar.current + step / msToFullSpeed
        );
        const motion = Math.floor(speedScalar.current * step * maxPxPerMs);
        scrollBy(xDirection * motion, yDirection * motion);
      }
      lastTime = curTime;
      requestFrameId = window.requestAnimationFrame(processFrame);
    };
    let requestFrameId = window.requestAnimationFrame(processFrame);
    return () => window.cancelAnimationFrame(requestFrameId);
  }, [scrollBy, xDirection, yDirection]);
  return { onAutoScroll, onAutoScrollStop };
};

// ../../packages/aitable/src/grid/hooks/primitive/useColumnFreeze.ts
var import_react111 = __toESM(require_react(), 1);
var useColumnFreeze = (coordInstance, scrollState) => {
  const [columnFreezeState, setColumnFreezeState] = (0, import_react111.useState)(DEFAULT_FREEZE_COLUMN_STATE);
  const onColumnFreezeStart = (mouseState) => {
    const { type } = mouseState;
    if (type !== "ColumnFreezeHandler" /* ColumnFreezeHandler */) {
      return;
    }
    const { freezeColumnCount } = coordInstance;
    setColumnFreezeState({
      sourceIndex: freezeColumnCount - 1,
      targetIndex: freezeColumnCount - 1,
      isFreezing: true
    });
  };
  const onColumnFreezeMove = (mouseState) => {
    const { sourceIndex, isFreezing } = columnFreezeState;
    if (!isFreezing) {
      return;
    }
    const { scrollLeft } = scrollState;
    const { columnIndex, x: x2 } = mouseState;
    const { columnCount } = coordInstance;
    const columnWidth = coordInstance.getColumnWidth(columnIndex);
    const columnOffsetX = coordInstance.getColumnRelativeOffset(
      columnIndex,
      scrollLeft
    );
    const targetIndex = inRange2(
      x2,
      columnOffsetX,
      columnOffsetX + columnWidth / 2
    ) ? columnIndex - 1 : columnIndex;
    setColumnFreezeState({
      sourceIndex,
      targetIndex: Math.min(targetIndex, columnCount - 1),
      isFreezing: true
    });
  };
  const onColumnFreezeEnd = (callbackFn) => {
    const { targetIndex, isFreezing } = columnFreezeState;
    if (!isFreezing) {
      return;
    }
    setColumnFreezeState(() => DEFAULT_FREEZE_COLUMN_STATE);
    callbackFn?.(Math.max(targetIndex + 1, 0));
  };
  return {
    columnFreezeState,
    onColumnFreezeStart,
    onColumnFreezeMove,
    onColumnFreezeEnd
  };
};

// ../../packages/aitable/src/grid/hooks/primitive/useColumnResize.ts
var import_react112 = __toESM(require_react(), 1);
var useColumnResize = (coordInstance, scrollState) => {
  const [hoveredColumnResizeIndex, setHoveredColumnResizeIndex] = (0, import_react112.useState)(-1);
  const [columnResizeState, setColumnResizeState] = (0, import_react112.useState)(DEFAULT_COLUMN_RESIZE_STATE);
  const onColumnResizeStart = (mouseState) => {
    const { scrollLeft } = scrollState;
    const { type, columnIndex, x: x2 } = mouseState;
    if (type === "ColumnResizeHandler" /* ColumnResizeHandler */) {
      const { columnResizeHandlerWidth: columnResizeHandlerWidth3 } = GRID_DEFAULT;
      const startOffsetX = coordInstance.getColumnRelativeOffset(
        columnIndex,
        scrollLeft
      );
      const realColumnIndex = inRange2(
        x2,
        startOffsetX,
        startOffsetX + columnResizeHandlerWidth3 / 2
      ) ? columnIndex - 1 : columnIndex;
      setColumnResizeState({
        x: x2,
        columnIndex: realColumnIndex,
        width: coordInstance.getColumnWidth(realColumnIndex)
      });
    }
  };
  const onColumnResizeChange = (mouseState, onResize) => {
    const { scrollLeft } = scrollState;
    const { type, x: x2, columnIndex } = mouseState;
    const { columnIndex: resizeColumnIndex, x: resizeX } = columnResizeState;
    if (resizeColumnIndex > -1) {
      const columnWidth = coordInstance.getColumnWidth(resizeColumnIndex);
      const newWidth = Math.max(100, Math.round(columnWidth + x2 - resizeX));
      setColumnResizeState({
        x: x2,
        columnIndex: resizeColumnIndex,
        width: newWidth
      });
      return onResize?.(newWidth, resizeColumnIndex);
    }
    if (type === "ColumnResizeHandler" /* ColumnResizeHandler */) {
      const { columnResizeHandlerWidth: columnResizeHandlerWidth3 } = GRID_DEFAULT;
      const startOffsetX = coordInstance.getColumnRelativeOffset(
        columnIndex,
        scrollLeft
      );
      const realColumnIndex = inRange2(
        x2,
        startOffsetX,
        startOffsetX + columnResizeHandlerWidth3 / 2
      ) ? columnIndex - 1 : columnIndex;
      return setHoveredColumnResizeIndex(realColumnIndex);
    }
    if (hoveredColumnResizeIndex !== -1) {
      setHoveredColumnResizeIndex(-1);
    }
  };
  const onColumnResizeEnd = () => {
    setColumnResizeState(DEFAULT_COLUMN_RESIZE_STATE);
  };
  return {
    columnResizeState,
    hoveredColumnResizeIndex,
    setHoveredColumnResizeIndex,
    setColumnResizeState,
    onColumnResizeStart,
    onColumnResizeChange,
    onColumnResizeEnd
  };
};

// ../../packages/aitable/src/grid/hooks/primitive/useDrag.ts
var import_react113 = __toESM(require_react(), 1);
var getDropTargetIndex = (coordInstance, mouseState, scrollState, dragType) => {
  const { x: x2, y } = mouseState;
  const { scrollLeft, scrollTop } = scrollState;
  const { freezeRegionWidth, rowInitSize } = coordInstance;
  if (dragType === "Columns" /* Columns */) {
    const offsetX = x2 <= freezeRegionWidth ? x2 : scrollLeft + x2;
    const hoverColumnIndex = coordInstance.getColumnStartIndex(offsetX);
    const hoverColumnOffsetX = coordInstance.getColumnOffset(hoverColumnIndex);
    const hoverColumnWidth = coordInstance.getColumnWidth(hoverColumnIndex);
    return inRange2(
      offsetX,
      hoverColumnOffsetX,
      hoverColumnOffsetX + hoverColumnWidth / 2
    ) ? hoverColumnIndex : hoverColumnIndex + 1;
  }
  if (dragType === "Rows" /* Rows */) {
    const offsetY = y <= rowInitSize ? y : scrollTop + y;
    const hoverRowIndex = coordInstance.getRowStartIndex(offsetY);
    const hoverRowOffsetY = coordInstance.getRowOffset(hoverRowIndex);
    const hoverRowHeight = coordInstance.getRowHeight(hoverRowIndex);
    return inRange2(
      offsetY,
      hoverRowOffsetY,
      hoverRowOffsetY + hoverRowHeight / 2
    ) ? hoverRowIndex : hoverRowIndex + 1;
  }
  return -Infinity;
};
var useDrag = (coordInstance, scrollState, selection, draggable) => {
  const startPosition = (0, import_react113.useRef)(0);
  const [dragState, setDragState] = (0, import_react113.useState)(DEFAULT_DRAG_STATE);
  const { scrollTop, scrollLeft } = scrollState;
  const onDragStart = (mouseState, onEnd) => {
    if (draggable === "none" /* None */) {
      return;
    }
    const {
      type,
      rowIndex: hoverRowIndex,
      columnIndex: hoverColumnIndex,
      x: x2,
      y
    } = mouseState;
    const {
      isRowSelection,
      isColumnSelection,
      ranges: selectionRanges
    } = selection;
    if (type === "RowHeaderDragHandler" /* RowHeaderDragHandler */ && draggable !== "column" /* Column */) {
      startPosition.current = y;
      const ranges = isRowSelection && selection.includes([hoverRowIndex, hoverRowIndex]) ? selectionRanges : [[hoverRowIndex, hoverRowIndex]];
      onEnd("Rows" /* Rows */, ranges);
      setDragState({
        type: "Rows" /* Rows */,
        ranges,
        delta: y + scrollTop - coordInstance.getRowOffset(hoverRowIndex),
        isDragging: false
      });
    }
    if (type === "ColumnHeader" /* ColumnHeader */ && draggable !== "row" /* Row */) {
      startPosition.current = x2;
      const ranges = isColumnSelection && selection.includes([hoverColumnIndex, hoverColumnIndex]) ? selectionRanges : [[hoverColumnIndex, hoverColumnIndex]];
      onEnd("Columns" /* Columns */, ranges);
      setDragState({
        type: "Columns" /* Columns */,
        ranges,
        delta: x2 - coordInstance.getColumnRelativeOffset(hoverColumnIndex, scrollLeft),
        isDragging: false
      });
    }
  };
  const onDragChange = (mouseState) => {
    const { type, isDragging } = dragState;
    if (isDragging) {
      return;
    }
    if (!["Rows" /* Rows */, "Columns" /* Columns */].includes(type)) {
      return;
    }
    const { x: x2, y } = mouseState;
    const prevPosition = type === "Rows" /* Rows */ ? y : x2;
    const moveDistance = Math.abs(prevPosition - startPosition.current);
    if (moveDistance < 5) {
      return;
    }
    setDragState((prev) => ({ ...prev, isDragging: true }));
  };
  const onDragEnd = (mouseState, onEnd) => {
    const { type, isDragging } = dragState;
    if (!isDragging || !onEnd) {
      return setDragState(DEFAULT_DRAG_STATE);
    }
    if (["Columns" /* Columns */, "Rows" /* Rows */].includes(type)) {
      const { ranges } = dragState;
      const targetIndex = getDropTargetIndex(
        coordInstance,
        mouseState,
        scrollState,
        type
      );
      if (!inRange2(targetIndex, ranges[0][0], ranges[ranges.length - 1][1])) {
        onEnd(ranges, targetIndex);
      }
    }
    setDragState(DEFAULT_DRAG_STATE);
  };
  return {
    dragState,
    setDragState,
    onDragStart,
    onDragChange,
    onDragEnd
  };
};

// ../../packages/aitable/src/grid/hooks/primitive/useEventListener.ts
var import_react114 = __toESM(require_react(), 1);
var useEventListener = (eventName, handler, element, passive, capture = false) => {
  const savedHandler = (0, import_react114.useRef)();
  savedHandler.current = handler;
  (0, import_react114.useEffect)(() => {
    if (element?.addEventListener === void 0) {
      return;
    }
    const el = element;
    const eventListener = (event) => {
      savedHandler.current?.call(el, event);
    };
    el.addEventListener(eventName, eventListener, { passive, capture });
    return () => {
      el.removeEventListener(eventName, eventListener, { capture });
    };
  }, [eventName, element, passive, capture]);
};

// ../../packages/aitable/src/grid/hooks/primitive/useIsTouchDevice.ts
var import_react115 = __toESM(require_react(), 1);
function useIsTouchDevice() {
  const [isTouch, setIsTouch] = (0, import_react115.useState)(false);
  (0, import_react115.useEffect)(() => {
    const hasTouch = typeof window !== "undefined" && ("ontouchstart" in window || navigator && (navigator.maxTouchPoints || navigator.msMaxTouchPoints) > 0 || window.matchMedia && window.matchMedia("(pointer: coarse)").matches);
    setIsTouch(Boolean(hasTouch));
  }, []);
  return isTouch;
}

// ../../node_modules/react-hotkeys-hook/packages/react-hotkeys-hook/dist/index.js
var import_react116 = __toESM(require_react());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var j = ["shift", "alt", "meta", "mod", "ctrl", "control"];
var Q = {
  esc: "escape",
  return: "enter",
  left: "arrowleft",
  right: "arrowright",
  up: "arrowup",
  down: "arrowdown",
  ShiftLeft: "shift",
  ShiftRight: "shift",
  AltLeft: "alt",
  AltRight: "alt",
  MetaLeft: "meta",
  MetaRight: "meta",
  OSLeft: "meta",
  OSRight: "meta",
  ControlLeft: "ctrl",
  ControlRight: "ctrl"
};
function K(e2) {
  return (Q[e2.trim()] || e2.trim()).toLowerCase().replace(/key|digit|numpad/, "");
}
function D(e2) {
  return j.includes(e2);
}
function H(e2, r = ",") {
  return e2.toLowerCase().split(r);
}
function P(e2, r = "+", o = ">", i = false, u) {
  let n = [], c = false;
  e2 = e2.trim(), e2.includes(o) ? (c = true, n = e2.toLocaleLowerCase().split(o).map((f) => K(f))) : n = e2.toLocaleLowerCase().split(r).map((f) => K(f));
  const y = {
    alt: n.includes("alt"),
    ctrl: n.includes("ctrl") || n.includes("control"),
    shift: n.includes("shift"),
    meta: n.includes("meta"),
    mod: n.includes("mod"),
    useKey: i
  }, d = n.filter((f) => !j.includes(f));
  return {
    ...y,
    keys: d,
    description: u,
    isSequence: c,
    hotkey: e2
  };
}
typeof document < "u" && (document.addEventListener("keydown", (e2) => {
  e2.code !== void 0 && I([K(e2.code)]);
}), document.addEventListener("keyup", (e2) => {
  e2.code !== void 0 && _([K(e2.code)]);
})), typeof window < "u" && (window.addEventListener("blur", () => {
  L.clear();
}), window.addEventListener("contextmenu", () => {
  setTimeout(() => {
    L.clear();
  }, 0);
}));
var L = /* @__PURE__ */ new Set();
function R(e2) {
  return Array.isArray(e2);
}
function U(e2, r = ",") {
  return (R(e2) ? e2 : e2.split(r)).every((i) => L.has(i.trim().toLowerCase()));
}
function I(e2) {
  const r = Array.isArray(e2) ? e2 : [e2];
  L.has("meta") && L.forEach((o) => !D(o) && L.delete(o.toLowerCase())), r.forEach((o) => L.add(o.toLowerCase()));
}
function _(e2) {
  const r = Array.isArray(e2) ? e2 : [e2];
  e2 === "meta" ? L.clear() : r.forEach((o) => L.delete(o.toLowerCase()));
}
function V(e2, r, o) {
  (typeof o == "function" && o(e2, r) || o === true) && e2.preventDefault();
}
function X3(e2, r, o) {
  return typeof o == "function" ? o(e2, r) : o === true || o === void 0;
}
var Y = [
  "input",
  "textarea",
  "select",
  "searchbox",
  "slider",
  "spinbutton",
  "menuitem",
  "menuitemcheckbox",
  "menuitemradio",
  "option",
  "radio",
  "textbox"
];
function Z(e2) {
  return F(e2, Y);
}
function F(e2, r = false) {
  const { target: o, composed: i } = e2;
  let u, n;
  return ee(o) && i ? (u = e2.composedPath()[0] && e2.composedPath()[0].tagName, n = e2.composedPath()[0] && e2.composedPath()[0].role) : (u = o && o.tagName, n = o && o.role), R(r) ? !!(u && r && r.some((c) => c.toLowerCase() === u.toLowerCase() || c === n)) : !!(u && r && r);
}
function ee(e2) {
  return !!e2.tagName && !e2.tagName.startsWith("-") && e2.tagName.includes("-");
}
function te(e2, r) {
  return e2.length === 0 && r ? (console.warn(
    'A hotkey has the "scopes" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>'
  ), true) : r ? e2.some((o) => r.includes(o)) || e2.includes("*") : true;
}
var re = (e2, r, o = false) => {
  const { alt: i, meta: u, mod: n, shift: c, ctrl: y, keys: d, useKey: f } = r, { code: p, key: t, ctrlKey: a, metaKey: l2, shiftKey: g, altKey: k } = e2, m = K(p);
  if (f && d?.length === 1 && d.includes(t))
    return true;
  if (!d?.includes(m) && !["ctrl", "control", "unknown", "meta", "alt", "shift", "os"].includes(m))
    return false;
  if (!o) {
    if (i !== k && m !== "alt" || c !== g && m !== "shift")
      return false;
    if (n) {
      if (!l2 && !a)
        return false;
    } else if (u !== l2 && m !== "meta" && m !== "os" || y !== a && m !== "ctrl" && m !== "control")
      return false;
  }
  return d && d.length === 1 && d.includes(m) ? true : d ? U(d) : !d;
};
var $ = (0, import_react116.createContext)(void 0);
var oe = () => (0, import_react116.useContext)($);
function x(e2, r) {
  return e2 && r && typeof e2 == "object" && typeof r == "object" ? Object.keys(e2).length === Object.keys(r).length && // @ts-expect-error TS7053
  Object.keys(e2).reduce((o, i) => o && x(e2[i], r[i]), true) : e2 === r;
}
var W = (0, import_react116.createContext)({
  hotkeys: [],
  activeScopes: [],
  // This array has to be empty instead of containing '*' as default, to check if the provider is set or not
  toggleScope: () => {
  },
  enableScope: () => {
  },
  disableScope: () => {
  }
});
var se = () => (0, import_react116.useContext)(W);
function ie(e2) {
  const r = (0, import_react116.useRef)(void 0);
  return x(r.current, e2) || (r.current = e2), r.current;
}
var N = (e2) => {
  e2.stopPropagation(), e2.preventDefault(), e2.stopImmediatePropagation();
};
var ue = typeof window < "u" ? import_react116.useLayoutEffect : import_react116.useEffect;
function fe(e2, r, o, i) {
  const u = (0, import_react116.useRef)(null), n = (0, import_react116.useRef)(false), c = Array.isArray(o) ? Array.isArray(i) ? void 0 : i : o, y = R(e2) ? e2.join(c?.delimiter) : e2, d = Array.isArray(o) ? o : Array.isArray(i) ? i : void 0, f = (0, import_react116.useCallback)(r, d ?? []), p = (0, import_react116.useRef)(f);
  d ? p.current = f : p.current = r;
  const t = ie(c), { activeScopes: a } = se(), l2 = oe();
  return ue(() => {
    if (t?.enabled === false || !te(a, t?.scopes))
      return;
    let g = [], k;
    const m = (s, B = false) => {
      if (!(Z(s) && !F(s, t?.enableOnFormTags))) {
        if (u.current !== null) {
          const v = u.current.getRootNode();
          if ((v instanceof Document || v instanceof ShadowRoot) && v.activeElement !== u.current && !u.current.contains(v.activeElement)) {
            N(s);
            return;
          }
        }
        s.target?.isContentEditable && !t?.enableOnContentEditable || H(y, t?.delimiter).forEach((v) => {
          if (v.includes(t?.splitKey ?? "+") && v.includes(t?.sequenceSplitKey ?? ">")) {
            console.warn(
              `Hotkey ${v} contains both ${t?.splitKey ?? "+"} and ${t?.sequenceSplitKey ?? ">"} which is not supported.`
            );
            return;
          }
          const h = P(
            v,
            t?.splitKey,
            t?.sequenceSplitKey,
            t?.useKey,
            t?.description
          );
          if (h.isSequence) {
            k = setTimeout(() => {
              g = [];
            }, t?.sequenceTimeoutMs ?? 1e3);
            const C = h.useKey ? s.key : K(s.code);
            if (D(C.toLowerCase()))
              return;
            g.push(C);
            const G = h.keys?.[g.length - 1];
            if (C !== G) {
              g = [], k && clearTimeout(k);
              return;
            }
            g.length === h.keys?.length && (p.current(s, h), k && clearTimeout(k), g = []);
          } else if (re(s, h, t?.ignoreModifiers) || h.keys?.includes("*")) {
            if (t?.ignoreEventWhen?.(s) || B && n.current)
              return;
            if (V(s, h, t?.preventDefault), !X3(s, h, t?.enabled)) {
              N(s);
              return;
            }
            p.current(s, h), B || (n.current = true);
          }
        });
      }
    }, O = (s) => {
      s.code !== void 0 && (I(K(s.code)), (t?.keydown === void 0 && t?.keyup !== true || t?.keydown) && m(s));
    }, q = (s) => {
      s.code !== void 0 && (_(K(s.code)), n.current = false, t?.keyup && m(s, true));
    }, E = u.current || c?.document || document;
    return E.addEventListener("keyup", q, c?.eventListenerOptions), E.addEventListener("keydown", O, c?.eventListenerOptions), l2 && H(y, t?.delimiter).forEach(
      (s) => l2.addHotkey(
        P(
          s,
          t?.splitKey,
          t?.sequenceSplitKey,
          t?.useKey,
          t?.description
        )
      )
    ), () => {
      E.removeEventListener("keyup", q, c?.eventListenerOptions), E.removeEventListener("keydown", O, c?.eventListenerOptions), l2 && H(y, t?.delimiter).forEach(
        (s) => l2.removeHotkey(
          P(
            s,
            t?.splitKey,
            t?.sequenceSplitKey,
            t?.useKey,
            t?.description
          )
        )
      ), g = [], k && clearTimeout(k);
    };
  }, [y, t, a]), u;
}

// ../../packages/aitable/src/grid/hooks/primitive/useKeyboardSelection.ts
var useKeyboardSelection = (props) => {
  const {
    isEditing,
    activeCell,
    coordInstance,
    selection,
    scrollToItem,
    setEditing,
    setActiveCell,
    setSelection,
    onUndo,
    onRedo,
    onDelete,
    onRowExpand,
    editorRef,
    scrollBy
  } = props;
  const { pureRowCount, columnCount } = coordInstance;
  fe(
    "mod+z",
    () => {
      onUndo?.();
    },
    {
      enabled: !isEditing && selection.type !== "None" /* None */,
      preventDefault: true,
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    ["mod+shift+z", "mod+y"],
    () => {
      onRedo?.();
    },
    {
      enabled: !isEditing && selection.type !== "None" /* None */,
      preventDefault: true,
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    [
      "up",
      "down",
      "left",
      "right",
      "mod+up",
      "mod+down",
      "mod+left",
      "mod+right",
      "shift+up",
      "shift+down",
      "shift+left",
      "shift+right",
      "mod+shift+up",
      "mod+shift+down",
      "mod+shift+left",
      "mod+shift+right"
    ],
    (_keyboardEvent, hotkeysEvent) => {
      const { shift, mod } = hotkeysEvent;
      const isMod = Boolean(mod);
      const isSelectionExpand = Boolean(shift);
      let [columnIndex, rowIndex] = selection.ranges[isSelectionExpand ? 1 : 0];
      if (isMod) {
        if (U("up")) {
          rowIndex = 0;
        } else if (U("down")) {
          rowIndex = pureRowCount - 1;
        } else if (U("left")) {
          columnIndex = 0;
        } else if (U("right")) {
          columnIndex = columnCount - 1;
        }
      } else {
        if (U("up")) {
          rowIndex = Math.max(rowIndex - 1, 0);
        } else if (U("down")) {
          rowIndex = Math.min(rowIndex + 1, pureRowCount - 1);
        } else if (U("left")) {
          columnIndex = Math.max(columnIndex - 1, 0);
        } else if (U("right")) {
          columnIndex = Math.min(columnIndex + 1, columnCount - 1);
        }
      }
      const newRange = [columnIndex, rowIndex];
      const ranges = isSelectionExpand ? [selection.ranges[0], newRange] : [newRange, newRange];
      scrollToItem([columnIndex, rowIndex]);
      !isSelectionExpand && setActiveCell(newRange);
      setSelection(selection.setRanges(ranges));
    },
    {
      enabled: Boolean(activeCell && !isEditing),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    ["tab", "shift+tab"],
    () => {
      const [columnIndex, rowIndex] = selection.ranges[0];
      let newColumnIndex = Math.min(columnIndex + 1, columnCount - 1);
      if (U("shift") && U("tab")) {
        newColumnIndex = Math.max(columnIndex - 1, 0);
      }
      const newRange = [newColumnIndex, rowIndex];
      const ranges = [newRange, newRange];
      editorRef.current?.saveValue?.();
      scrollToItem([newColumnIndex, rowIndex]);
      setEditing(false);
      setActiveCell(newRange);
      setSelection(selection.setRanges(ranges));
    },
    {
      enabled: Boolean(activeCell),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    ["PageUp", "PageDown"],
    () => {
      const delta = coordInstance.containerHeight - coordInstance.rowInitSize - 1;
      scrollBy(0, U("PageUp") ? -delta : delta);
    },
    {
      enabled: Boolean(activeCell && !isEditing),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    "mod+a",
    () => {
      const ranges = [
        [0, 0],
        [columnCount - 1, pureRowCount - 1]
      ];
      setSelection(selection.setRanges(ranges));
    },
    {
      enabled: Boolean(activeCell && !isEditing),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    ["delete", "backspace", "f2"],
    () => {
      if (U("f2")) {
        return setEditing(true);
      }
      if (U("backspace") || U("delete")) {
        return onDelete?.(selection);
      }
    },
    {
      enabled: Boolean(activeCell && !isEditing),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    ["enter"],
    (keyboardEvent) => {
      if (keyboardEvent.isComposing) {
        return;
      }
      const { isColumnSelection, ranges: selectionRanges } = selection;
      if (isEditing) {
        let range2 = selectionRanges[0];
        if (isColumnSelection) {
          range2 = [range2[0], 0];
        }
        const [columnIndex, rowIndex] = range2;
        const nextRowIndex = Math.min(rowIndex + 1, pureRowCount - 1);
        const newRange = [columnIndex, nextRowIndex];
        editorRef.current?.saveValue?.();
        setTimeout(() => {
          setSelection(
            selection.set("Cells" /* Cells */, [newRange, newRange])
          );
          setActiveCell(newRange);
          setEditing(false);
          scrollToItem(newRange);
        });
      } else {
        setEditing(true);
      }
    },
    {
      enabled: Boolean(activeCell),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    "esc",
    () => {
      setEditing(false);
    },
    {
      enabled: Boolean(activeCell),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
  fe(
    "space",
    () => {
      const [, rowIndex] = activeCell;
      onRowExpand?.(rowIndex);
    },
    {
      enabled: Boolean(activeCell && !isEditing),
      enableOnFormTags: ["input", "select", "textarea"]
    }
  );
};

// ../../packages/aitable/src/grid/hooks/primitive/useResizeObserver.ts
var import_react117 = __toESM(require_react(), 1);
function useResizeObserver(initialSize) {
  const ref = (0, import_react117.useRef)(null);
  const [size2, setSize] = (0, import_react117.useState)({
    width: initialSize?.[0] || 0,
    height: initialSize?.[1] || 0
  });
  (0, import_react117.useLayoutEffect)(() => {
    const resizeCallback = (entries) => {
      let diffHeight = document.body.clientHeight - window.innerHeight;
      diffHeight = isNaN(diffHeight) ? 0 : diffHeight;
      for (const entry of entries) {
        const { width, height } = entry && entry.contentRect || {};
        setSize(
          (cv) => cv.width === width && cv.height === height ? cv : { width: Math.floor(width), height: height - diffHeight }
        );
      }
    };
    const resizeObserver = new window.ResizeObserver(resizeCallback);
    if (ref.current) {
      resizeObserver.observe(ref.current, void 0);
    }
    return () => {
      resizeObserver.disconnect();
    };
  }, []);
  return { ref, ...size2 };
}

// ../../packages/aitable/src/grid/hooks/primitive/useScrollFrameRate.ts
var import_react118 = __toESM(require_react(), 1);
var useScrollFrameRate = (scrollFunction) => {
  const requestRef = (0, import_react118.useRef)(0);
  const lastTimeRef = (0, import_react118.useRef)(0);
  const frameCountRef = (0, import_react118.useRef)(0);
  const totalFpsRef = (0, import_react118.useRef)(0);
  const measuringRef = (0, import_react118.useRef)(false);
  const measureFrameRate = (0, import_react118.useCallback)((timestamp) => {
    if (!lastTimeRef.current) {
      lastTimeRef.current = timestamp;
    } else {
      const delta = timestamp - lastTimeRef.current;
      frameCountRef.current++;
      const fps = 1e3 / delta;
      totalFpsRef.current += fps;
      lastTimeRef.current = timestamp;
    }
    if (measuringRef.current) {
      requestRef.current = requestAnimationFrame(measureFrameRate);
    }
  }, []);
  const measureRate = (0, import_react118.useCallback)(
    (deltaY, duration = 10) => {
      if (!measuringRef.current) {
        measuringRef.current = true;
        frameCountRef.current = 0;
        totalFpsRef.current = 0;
        lastTimeRef.current = 0;
        requestRef.current = requestAnimationFrame(measureFrameRate);
        const intervalId = setInterval(() => {
          if (measuringRef.current) {
            scrollFunction?.(0, deltaY);
          } else {
            clearInterval(intervalId);
          }
        }, 1e3 / 60);
        setTimeout(() => {
          if (measuringRef.current) {
            cancelAnimationFrame(requestRef.current);
            clearInterval(intervalId);
            measuringRef.current = false;
            const averageFps = totalFpsRef.current / frameCountRef.current;
          }
        }, duration * 1e3);
      }
    },
    [measureFrameRate, scrollFunction]
  );
  window.measureRate = measureRate;
};

// ../../packages/aitable/src/grid/hooks/primitive/useSelection.ts
var import_react119 = __toESM(require_react(), 1);
var useSelection = (props) => {
  const {
    coordInstance,
    selectable,
    isMultiSelectionEnable,
    getLinearRow,
    setActiveCell,
    onSelectionChanged
  } = props;
  const onSelectionChangedRef = (0, import_react119.useRef)();
  const prevSelectedRowIndex = (0, import_react119.useRef)(null);
  const [isSelecting, setSelecting] = (0, import_react119.useState)(false);
  const [selection, setSelection] = (0, import_react119.useState)(() => new CombinedSelection());
  const { pureRowCount } = coordInstance;
  onSelectionChangedRef.current = onSelectionChanged;
  const onSelectionStart = (event, mouseState) => {
    if (selectable !== "all" /* All */ && selectable !== "cell" /* Cell */) {
      return;
    }
    const { type, rowIndex, columnIndex } = mouseState;
    const { isRowSelection: isPrevRowSelection, ranges: prevRanges } = selection;
    const isShiftKey = event.shiftKey && !event.metaKey;
    switch (type) {
      case "Cell" /* Cell */:
      case "ActiveCell" /* ActiveCell */: {
        const { realIndex } = getLinearRow(rowIndex);
        const range2 = [columnIndex, realIndex];
        const isExpandSelection = isShiftKey && !isPrevRowSelection && prevRanges[0] != null;
        const ranges = [isExpandSelection ? prevRanges[0] : range2, range2];
        if (!isExpandSelection) {
          setActiveCell(range2);
        }
        isMultiSelectionEnable && setSelecting(true);
        return setSelection(selection.set("Cells" /* Cells */, ranges));
      }
      case "RowHeaderDragHandler" /* RowHeaderDragHandler */:
      case "RowHeaderCheckbox" /* RowHeaderCheckbox */:
      case "ColumnHeader" /* ColumnHeader */:
      case "AllCheckbox" /* AllCheckbox */:
      case "RowHeader" /* RowHeader */:
      case "AppendRow" /* AppendRow */:
        return;
      default:
        setActiveCell(null);
        return setSelection(selection.reset());
    }
  };
  const onSelectionChange = (mouseState) => {
    const { isCellSelection, ranges } = selection;
    const { rowIndex, columnIndex } = mouseState;
    if (!isSelecting) {
      return;
    }
    const { realIndex } = getLinearRow(rowIndex);
    const newRange = [columnIndex, realIndex];
    if (isCellSelection && !selection.equals([ranges[0], newRange])) {
      setSelection(selection.merge(newRange));
    }
  };
  const onSelectionEnd = () => {
    setSelecting(false);
  };
  const onSelectionClick = (event, mouseState) => {
    const { shiftKey, metaKey } = event;
    const isShiftKey = shiftKey && !metaKey;
    const isMetaKey = metaKey && !shiftKey;
    const { type, rowIndex: hoverRowIndex, columnIndex } = mouseState;
    const {
      ranges: prevSelectionRanges,
      isColumnSelection: isPrevColumnSelection,
      isRowSelection: isPrevRowSelection
    } = selection;
    const pureSelectColumnOrRow = (colOrRowIndex, type2) => {
      const range2 = [colOrRowIndex, colOrRowIndex];
      let newSelection;
      if (isPrevRowSelection && (isMultiSelectionEnable || !isMultiSelectionEnable && prevSelectionRanges[0][0] === colOrRowIndex)) {
        newSelection = selection.merge(range2);
      } else {
        newSelection = selection.set(type2, [range2]);
      }
      if (newSelection.includes(range2)) {
        prevSelectedRowIndex.current = colOrRowIndex;
      }
      setActiveCell(null);
      setSelection(newSelection);
    };
    switch (type) {
      case "ColumnHeader" /* ColumnHeader */: {
        if (selectable !== "all" /* All */ && selectable !== "column" /* Column */) {
          return;
        }
        const thresholdColIndex = isMultiSelectionEnable && isShiftKey && isPrevColumnSelection ? prevSelectionRanges[0][0] : columnIndex;
        const ranges = [
          [
            Math.min(thresholdColIndex, columnIndex),
            Math.max(thresholdColIndex, columnIndex)
          ]
        ];
        let newSelection = selection.set("Columns" /* Columns */, ranges);
        if (isMultiSelectionEnable && isMetaKey && isPrevColumnSelection) {
          newSelection = selection.merge([columnIndex, columnIndex]);
        }
        if (!isShiftKey || !isPrevColumnSelection) {
          const { isNoneSelection, ranges: ranges2 } = newSelection;
          isNoneSelection ? setActiveCell(null) : setActiveCell([ranges2[0][0], 0]);
        }
        return setSelection(newSelection);
      }
      case "RowHeaderCheckbox" /* RowHeaderCheckbox */: {
        const { realIndex: rowIndex } = getLinearRow(hoverRowIndex);
        if (selectable !== "all" /* All */ && selectable !== "row" /* Row */) {
          return;
        }
        const range2 = [rowIndex, rowIndex];
        if (isMultiSelectionEnable && isShiftKey && isPrevRowSelection && prevSelectedRowIndex.current != null) {
          if (selection.includes(range2)) {
            return;
          }
          const prevIndex = prevSelectedRowIndex.current;
          const newRange = [
            Math.min(rowIndex, prevIndex),
            Math.max(rowIndex, prevIndex)
          ];
          const newSelection = selection.expand(newRange);
          prevSelectedRowIndex.current = rowIndex;
          setActiveCell(null);
          return setSelection(newSelection);
        }
        return pureSelectColumnOrRow(rowIndex, "Rows" /* Rows */);
      }
      case "Cell" /* Cell */: {
        const { realIndex: rowIndex } = getLinearRow(hoverRowIndex);
        if (selectable === "row" /* Row */) {
          return pureSelectColumnOrRow(rowIndex, "Rows" /* Rows */);
        }
        if (selectable === "column" /* Column */) {
          return pureSelectColumnOrRow(
            columnIndex,
            "Columns" /* Columns */
          );
        }
        return;
      }
      case "AllCheckbox" /* AllCheckbox */: {
        if (selectable !== "all" /* All */ && selectable !== "row" /* Row */) {
          return;
        }
        const allRanges = [[0, pureRowCount - 1]];
        const isPrevAll = isPrevRowSelection && selection.equals(allRanges);
        const newSelection = isPrevAll ? selection.reset() : selection.set("Rows" /* Rows */, allRanges);
        return setSelection(newSelection);
      }
    }
  };
  const onSelectionContextMenu = (mouseState, callback) => {
    const { x: x2, y, columnIndex, rowIndex: hoverRowIndex, type } = mouseState;
    if ([
      "Blank" /* Blank */,
      "ColumnStatistic" /* ColumnStatistic */,
      "GroupStatistic" /* GroupStatistic */
    ].includes(type)) {
      return;
    }
    const {
      isCellSelection: isPrevCellSelection,
      isRowSelection: isPrevRowSelection,
      isColumnSelection: isPrevColumnSelection
    } = selection;
    const isCellHovered = columnIndex >= -1 && hoverRowIndex > -1;
    const isColumnHovered = columnIndex > -1 && hoverRowIndex === -1;
    if (isCellHovered) {
      const { realIndex: rowIndex } = getLinearRow(hoverRowIndex);
      const checkedRange = isPrevCellSelection ? [columnIndex, rowIndex] : isPrevRowSelection ? [rowIndex, rowIndex] : isPrevColumnSelection ? [columnIndex, columnIndex] : void 0;
      const inPrevRanges = selection.includes(checkedRange);
      if (inPrevRanges) {
        return callback(selection, { x: x2, y });
      }
      if (columnIndex > -1) {
        const range2 = [columnIndex, rowIndex];
        const newSelection = selection.set("Cells" /* Cells */, [
          range2,
          range2
        ]);
        setActiveCell(range2);
        setSelection(newSelection);
        return callback(newSelection, { x: x2, y });
      }
    }
    if (isColumnHovered) {
      const inPrevColumnRanges = isPrevColumnSelection && selection.includes([columnIndex, columnIndex]);
      if (inPrevColumnRanges) {
        return callback(selection, { x: x2, y });
      }
      const newSelection = selection.set("Columns" /* Columns */, [
        [columnIndex, columnIndex]
      ]);
      setActiveCell([columnIndex, 0]);
      setSelection(newSelection);
      callback(newSelection, { x: x2, y });
    }
  };
  useUpdateEffect_default(() => {
    onSelectionChangedRef.current?.(selection);
  }, [selection]);
  useUnmount_default(() => {
    onSelectionChangedRef.current = void 0;
  });
  return {
    selection,
    isSelecting,
    setActiveCell,
    setSelection,
    onSelectionStart,
    onSelectionChange,
    onSelectionEnd,
    onSelectionClick,
    onSelectionContextMenu
  };
};

// ../../packages/aitable/src/grid/hooks/primitive/useVisibleRegion.ts
var import_react120 = __toESM(require_react(), 1);
var getVerticalRangeInfo = (coordInstance, scrollTop) => {
  const { rowCount } = coordInstance;
  const startIndex = coordInstance.getRowStartIndex(scrollTop);
  const stopIndex = coordInstance.getRowStopIndex(startIndex, scrollTop);
  return {
    startRowIndex: Math.max(0, startIndex),
    stopRowIndex: Math.max(0, Math.min(rowCount - 1, stopIndex + 1))
  };
};
var getHorizontalRangeInfo = (coordInstance, scrollLeft) => {
  const { columnCount } = coordInstance;
  const startIndex = coordInstance.getColumnStartIndex(scrollLeft);
  const stopIndex = coordInstance.getColumnStopIndex(startIndex, scrollLeft);
  return {
    startColumnIndex: Math.max(0, startIndex),
    stopColumnIndex: Math.max(0, Math.min(columnCount - 1, stopIndex))
  };
};
var useVisibleRegion = (coordInstance, scrollState, forceRenderFlag) => {
  const { scrollTop, scrollLeft } = scrollState;
  return (0, import_react120.useMemo)(() => {
    const { startRowIndex, stopRowIndex } = getVerticalRangeInfo(
      coordInstance,
      scrollTop
    );
    const { startColumnIndex, stopColumnIndex } = getHorizontalRangeInfo(
      coordInstance,
      scrollLeft
    );
    return {
      startRowIndex,
      stopRowIndex,
      startColumnIndex,
      stopColumnIndex
    };
  }, [coordInstance, scrollTop, scrollLeft, forceRenderFlag]);
};

// ../../packages/aitable/src/grid/hooks/business/useGridAsyncRecords.ts
var useGridAsyncRecords = () => {
  return {
    // Placeholder implementation
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridCollapsedGroup.ts
var import_react122 = __toESM(require_react(), 1);

// ../../node_modules/zustand/esm/vanilla.mjs
var createStoreImpl = (createState) => {
  let state;
  const listeners = /* @__PURE__ */ new Set();
  const setState = (partial2, replace2) => {
    const nextState = typeof partial2 === "function" ? partial2(state) : partial2;
    if (!Object.is(nextState, state)) {
      const previousState = state;
      state = (replace2 != null ? replace2 : typeof nextState !== "object" || nextState === null) ? nextState : Object.assign({}, state, nextState);
      listeners.forEach((listener) => listener(state, previousState));
    }
  };
  const getState = () => state;
  const getInitialState = () => initialState;
  const subscribe = (listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  };
  const api = { setState, getState, getInitialState, subscribe };
  const initialState = state = createState(setState, getState, api);
  return api;
};
var createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);

// ../../node_modules/zustand/esm/react.mjs
var import_react121 = __toESM(require_react(), 1);
var identity2 = (arg) => arg;
function useStore(api, selector = identity2) {
  const slice2 = import_react121.default.useSyncExternalStore(
    api.subscribe,
    import_react121.default.useCallback(() => selector(api.getState()), [api, selector]),
    import_react121.default.useCallback(() => selector(api.getInitialState()), [api, selector])
  );
  import_react121.default.useDebugValue(slice2);
  return slice2;
}
var createImpl = (createState) => {
  const api = createStore(createState);
  const useBoundStore = (selector) => useStore(api, selector);
  Object.assign(useBoundStore, api);
  return useBoundStore;
};
var create3 = ((createState) => createState ? createImpl(createState) : createImpl);

// ../../packages/aitable/src/grid/store/useBuildBaseAgentStore.ts
var useBuildBaseAgentStore = create3((set2) => ({
  building: false,
  displayFieldIds: [],
  tableId: "",
  setBuilding: (building) => set2({ building }),
  setDisplayFieldIds: (displayFieldIds) => set2({ displayFieldIds }),
  setTableId: (tableId) => set2({ tableId })
}));

// ../../packages/aitable/src/grid/store/useGridCollapsedGroupStore.ts
var useGridCollapsedGroupStore = create3(
  (set2, get3) => ({
    collapsedGroupMap: {},
    setCollapsedGroupMap: (key, groupIds) => set2((state) => ({
      collapsedGroupMap: {
        ...state.collapsedGroupMap,
        [key]: groupIds
      }
    })),
    getCollapsedGroupIds: (key) => {
      const state = get3();
      return state.collapsedGroupMap[key] || [];
    }
  })
);

// ../../packages/aitable/src/grid/store/useGridViewStore.ts
var useGridViewStore = create3((set2) => ({
  openHeaderMenu: (props) => {
    set2((state) => ({
      ...state,
      headerMenu: props
    }));
  },
  closeHeaderMenu: () => {
    set2((state) => {
      if (state.headerMenu == null) {
        return state;
      }
      return {
        ...state,
        headerMenu: void 0
      };
    });
  },
  openRecordMenu: (props) => {
    set2((state) => ({
      ...state,
      recordMenu: props
    }));
  },
  closeRecordMenu: () => {
    set2((state) => {
      if (state.recordMenu == null) {
        return state;
      }
      return {
        ...state,
        recordMenu: void 0
      };
    });
  },
  openStatisticMenu: (props) => {
    set2((state) => ({
      ...state,
      statisticMenu: props
    }));
  },
  closeStatisticMenu: () => {
    set2((state) => {
      if (state.statisticMenu == null) {
        return state;
      }
      return {
        ...state,
        statisticMenu: void 0
      };
    });
  },
  setSelection: (props) => {
    set2((state) => ({
      ...state,
      selection: props
    }));
  },
  openGroupHeaderMenu: (props) => {
    set2((state) => ({
      ...state,
      groupHeaderMenu: props
    }));
  },
  closeGroupHeaderMenu: () => {
    set2((state) => ({
      ...state,
      groupHeaderMenu: void 0
    }));
  }
}));

// ../../packages/aitable/src/grid/hooks/business/useGridCollapsedGroup.ts
var useGridCollapsedGroup = (cacheKey, groupFields, initialQuery, searchValue) => {
  const { collapsedGroupMap, setCollapsedGroupMap } = useGridCollapsedGroupStore();
  const collapsedGroupIds = (0, import_react122.useMemo)(() => {
    const collapsedGroups = collapsedGroupMap?.[cacheKey];
    return collapsedGroups?.length ? new Set(collapsedGroups) : /* @__PURE__ */ new Set();
  }, [cacheKey, collapsedGroupMap]);
  const onCollapsedGroupChanged = (0, import_react122.useCallback)(
    (groupIds) => {
      setCollapsedGroupMap(cacheKey, [...groupIds]);
    },
    [cacheKey, setCollapsedGroupMap]
  );
  const toggleGroupCollapse = (0, import_react122.useCallback)(
    (groupId) => {
      const currentCollapsed = collapsedGroupIds || /* @__PURE__ */ new Set();
      const newCollapsed = new Set(currentCollapsed);
      if (newCollapsed.has(groupId)) {
        newCollapsed.delete(groupId);
      } else {
        newCollapsed.add(groupId);
      }
      onCollapsedGroupChanged(newCollapsed);
    },
    [collapsedGroupIds, onCollapsedGroupChanged]
  );
  const expandAllGroups = (0, import_react122.useCallback)(() => {
    onCollapsedGroupChanged(/* @__PURE__ */ new Set());
  }, [onCollapsedGroupChanged]);
  const collapseAllGroups = (0, import_react122.useCallback)(
    (allGroupIds) => {
      onCollapsedGroupChanged(new Set(allGroupIds));
    },
    [onCollapsedGroupChanged]
  );
  const isGroupCollapsed = (0, import_react122.useCallback)(
    (groupId) => {
      return collapsedGroupIds?.has(groupId) || false;
    },
    [collapsedGroupIds]
  );
  const viewQuery = (0, import_react122.useMemo)(() => {
    if (searchValue) {
      return groupFields?.length ? {
        ...initialQuery,
        groupBy: groupFields
      } : initialQuery || {};
    }
    return groupFields?.length ? {
      ...initialQuery,
      groupBy: groupFields,
      collapsedGroupIds: collapsedGroupIds ? Array.from(collapsedGroupIds) : void 0
    } : initialQuery || {};
  }, [searchValue, groupFields, collapsedGroupIds, initialQuery]);
  return {
    viewQuery,
    collapsedGroupIds,
    onCollapsedGroupChanged,
    toggleGroupCollapse,
    expandAllGroups,
    collapseAllGroups,
    isGroupCollapsed,
    hasCollapsedGroups: (collapsedGroupIds?.size || 0) > 0
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridColumnOrder.ts
var import_react123 = __toESM(require_react(), 1);
function useGridColumnOrder() {
  const handleColumnOrdered = (0, import_react123.useCallback)(
    (dragColIndexCollection, dropColIndex) => {
    },
    []
  );
  return {
    handleColumnOrdered
  };
}

// ../../packages/aitable/src/grid/hooks/business/useGridColumnResize.ts
var import_react124 = __toESM(require_react(), 1);
function useGridColumnResize(_columns) {
  const handleColumnResize = (0, import_react124.useCallback)(
    (column, newSize, colIndex) => {
    },
    []
  );
  return {
    handleColumnResize
  };
}

// ../../packages/aitable/src/grid/hooks/business/useGridColumnStatistics.ts
var import_react125 = __toESM(require_react(), 1);
var STATISTIC_FUNC_NAMES = {
  none: "None",
  sum: "Sum",
  average: "Average",
  avg: "Average",
  min: "Min",
  max: "Max",
  count: "Count",
  empty: "Empty",
  filled: "Filled",
  countEmpty: "Count Empty",
  countNotEmpty: "Count Not Empty",
  countUnique: "Count Unique",
  percentEmpty: "Percent Empty",
  percentNotEmpty: "Percent Not Empty",
  percentUnique: "Percent Unique"
};
var calculateColumnStatistic = (values2, type) => {
  const numericValues = values2.filter((v) => v != null && v !== "").map((v) => Number(v)).filter((v) => !isNaN(v));
  const totalCount = values2.length;
  const filledCount = values2.filter((v) => v != null && v !== "").length;
  const emptyCount = totalCount - filledCount;
  switch (type) {
    case "sum": {
      const sum2 = numericValues.reduce((a, b2) => a + b2, 0);
      return { value: sum2, displayValue: sum2.toLocaleString() };
    }
    case "avg": {
      if (numericValues.length === 0) {
        return { value: 0, displayValue: "0" };
      }
      const avg = numericValues.reduce((a, b2) => a + b2, 0) / numericValues.length;
      return { value: avg, displayValue: avg.toFixed(2) };
    }
    case "min": {
      if (numericValues.length === 0) {
        return { value: 0, displayValue: "0" };
      }
      const min3 = Math.min(...numericValues);
      return { value: min3, displayValue: min3.toLocaleString() };
    }
    case "max": {
      if (numericValues.length === 0) {
        return { value: 0, displayValue: "0" };
      }
      const max3 = Math.max(...numericValues);
      return { value: max3, displayValue: max3.toLocaleString() };
    }
    case "count": {
      return { value: totalCount, displayValue: totalCount.toLocaleString() };
    }
    case "empty": {
      return { value: emptyCount, displayValue: emptyCount.toLocaleString() };
    }
    case "filled": {
      return { value: filledCount, displayValue: filledCount.toLocaleString() };
    }
    default:
      return null;
  }
};
var useGridColumnStatistics = (columns, records, enabledStatistics) => {
  const columnStatistics = (0, import_react125.useMemo)(() => {
    const statistics = {};
    columns.forEach((column) => {
      const statisticType = enabledStatistics?.[column.id] || column.statisticType;
      if (!statisticType) {
        statistics[column.id] = null;
        return;
      }
      const values2 = records.map((record) => record[column.id]);
      const result2 = calculateColumnStatistic(values2, statisticType);
      if (result2) {
        statistics[column.id] = {
          type: statisticType,
          value: result2.value,
          displayValue: `${STATISTIC_FUNC_NAMES[statisticType]}: ${result2.displayValue}`
        };
      } else {
        statistics[column.id] = null;
      }
    });
    return statistics;
  }, [columns, records, enabledStatistics]);
  const getColumnStatistic = (columnId) => {
    return columnStatistics[columnId];
  };
  const hasStatistic = (columnId) => {
    return columnStatistics[columnId] !== null;
  };
  const getStatisticDisplay = (columnId) => {
    const stat = columnStatistics[columnId];
    return stat?.displayValue || "";
  };
  return {
    columnStatistics,
    getColumnStatistic,
    hasStatistic,
    getStatisticDisplay
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridColumns.tsx
var useGridColumns = () => {
  return {
    columns: []
    // Placeholder implementation
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridFileEvent.ts
var import_react126 = __toESM(require_react(), 1);
var useGridFileEvent = (props) => {
  const { gridRef, onValidation, onCellDrop } = props;
  const stageRef = (0, import_react126.useRef)(null);
  const dropTargetRef = (0, import_react126.useRef)(null);
  (0, import_react126.useEffect)(() => {
    if (gridRef.current) {
      const container = gridRef.current.getContainer();
      stageRef.current = container?.querySelector("[data-t-grid-stage]") || null;
    }
  }, [gridRef]);
  const getDropCell = (0, import_react126.useCallback)(
    (event) => {
      const rect = event.currentTarget.getBoundingClientRect();
      const x2 = event.clientX - rect.left;
      const y = event.clientY - rect.top;
      return gridRef.current?.getCellIndicesAtPosition(x2, y) ?? null;
    },
    [gridRef]
  );
  const onDragLeave = (0, import_react126.useCallback)(
    (e2) => {
      if (e2.target !== stageRef.current) {
        return;
      }
      e2.preventDefault();
      e2.stopPropagation();
      gridRef.current?.setSelection(emptySelection);
      dropTargetRef.current = null;
    },
    [gridRef]
  );
  const onDragOver = (0, import_react126.useCallback)(
    (e2) => {
      if (e2.target !== stageRef.current) {
        return;
      }
      e2.preventDefault();
      e2.stopPropagation();
      const cell = getDropCell(e2);
      if (!cell || !onValidation(cell)) {
        dropTargetRef.current = null;
        return;
      }
      dropTargetRef.current = cell;
      const newSelection = new CombinedSelection("Cells" /* Cells */, [
        cell,
        cell
      ]);
      gridRef.current?.setSelection(newSelection);
    },
    [gridRef, getDropCell, onValidation]
  );
  const onDrop = (0, import_react126.useCallback)(
    (e2) => {
      if (e2.target !== stageRef.current) {
        return;
      }
      e2.preventDefault();
      e2.stopPropagation();
      if (!dropTargetRef.current) {
        return;
      }
      const files = e2.dataTransfer?.files;
      if (!files?.length) {
        return;
      }
      onCellDrop(dropTargetRef.current, files);
      dropTargetRef.current = null;
      gridRef.current?.setSelection(emptySelection);
    },
    [onCellDrop, gridRef]
  );
  (0, import_react126.useEffect)(() => {
    const stage = stageRef.current;
    if (!stage) {
      return;
    }
    stage.addEventListener("dragover", onDragOver);
    stage.addEventListener("dragleave", onDragLeave);
    stage.addEventListener("drop", onDrop);
    return () => {
      stage.removeEventListener("dragover", onDragOver);
      stage.removeEventListener("dragleave", onDragLeave);
      stage.removeEventListener("drop", onDrop);
    };
  }, [onDragOver, onDragLeave, onDrop]);
  return {
    onDragOver,
    onDragLeave,
    onDrop
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridGroupCollection.ts
var import_react127 = __toESM(require_react(), 1);
var useGridGroupCollection = (records, groupFields, collapsedGroups) => {
  const groupCollection = (0, import_react127.useMemo)(() => {
    if (!groupFields || groupFields.length === 0) {
      return null;
    }
    const groupMap = /* @__PURE__ */ new Map();
    const rootGroups = /* @__PURE__ */ new Map();
    records.forEach((record) => {
      const groupValue = record.groupValue;
      const groupKey = JSON.stringify(groupValue);
      if (!rootGroups.has(groupKey)) {
        rootGroups.set(groupKey, /* @__PURE__ */ new Set());
      }
      rootGroups.get(groupKey).add(record.id);
    });
    const groups = [];
    rootGroups.forEach((recordIds, groupValue) => {
      const groupId = JSON.stringify(groupValue);
      const displayValue = getGroupDisplayValue(
        groupValue,
        groupFields[0]?.fieldType
      );
      const groupPoint = {
        id: groupId,
        type: "header",
        depth: 0,
        value: groupValue,
        displayValue,
        count: recordIds.size,
        isCollapsed: collapsedGroups?.has(groupId)
      };
      groups.push(groupPoint);
      groupMap.set(groupId, groupPoint);
    });
    groups.sort((a, b2) => {
      const order = groupFields[0]?.order || "asc";
      const result2 = sortGroupValues(a.value, b2.value);
      return order === "desc" ? -result2 : result2;
    });
    return {
      groups,
      groupMap,
      totalGroups: groups.length
    };
  }, [records, groupFields, collapsedGroups]);
  const getGroupRecords = (0, import_react127.useCallback)(
    (groupId) => {
      if (!groupCollection) {
        return [];
      }
      const groupPoint = groupCollection.groupMap.get(groupId);
      if (!groupPoint) {
        return [];
      }
      return records.filter((record) => {
        const recordGroupId = JSON.stringify(record.groupValue);
        return recordGroupId === groupId;
      });
    },
    [records, groupCollection]
  );
  const getGroup = (0, import_react127.useCallback)(
    (groupId) => {
      return groupCollection?.groupMap.get(groupId);
    },
    [groupCollection]
  );
  const isGroupCollapsed = (0, import_react127.useCallback)(
    (groupId) => {
      const group = getGroup(groupId);
      return group?.isCollapsed || false;
    },
    [getGroup]
  );
  const visibleRecords = (0, import_react127.useMemo)(() => {
    if (!groupCollection || !collapsedGroups || collapsedGroups.size === 0) {
      return records;
    }
    return records.filter((record) => {
      const recordGroupId = JSON.stringify(record.groupValue);
      return !collapsedGroups.has(recordGroupId);
    });
  }, [records, groupCollection, collapsedGroups]);
  return {
    groupCollection,
    getGroupRecords,
    getGroup,
    isGroupCollapsed,
    visibleRecords,
    hasGroups: !!groupCollection && groupCollection.totalGroups > 0
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridIcons.ts
var import_react128 = __toESM(require_react(), 1);
var DEFAULT_GRID_ICONS = {
  // Field type icons
  text: "📝",
  number: "🔢",
  select: "📋",
  date: "📅",
  checkbox: "☑️",
  user: "👤",
  attachment: "📎",
  link: "🔗",
  rating: "⭐",
  // Action icons
  add: "+",
  delete: "🗑️",
  edit: "✏️",
  search: "🔍",
  filter: "🔽",
  sort: "↕️",
  group: "📊",
  expand: "▼",
  collapse: "▶",
  // Row controls
  drag: "☰",
  checkbox_row: "☐",
  checkbox_row_checked: "☑"
};
var useGridIcons = (customIcons) => {
  return (0, import_react128.useMemo)(() => {
    const icons = {
      ...DEFAULT_GRID_ICONS,
      ...customIcons
    };
    return {
      icons,
      getIcon: (iconName) => icons[iconName] || iconName,
      setIcon: (iconName, icon) => {
        icons[iconName] = icon;
      }
    };
  }, [customIcons]);
};

// ../../packages/aitable/src/grid/hooks/business/useGridPopupPosition.tsx
var import_react129 = __toESM(require_react(), 1);
var SAFE_SPACING = 32;
var GRID_CONTAINER_ATTR2 = "data-t-grid-container";
var useGridPopupPosition = (rect, maxHeight) => {
  const { y, height, editorId } = rect;
  return (0, import_react129.useMemo)(() => {
    const editorElement = document.querySelector(`#${editorId}`);
    const gridElement = editorElement?.closest(`[${GRID_CONTAINER_ATTR2}]`);
    const gridBound = gridElement?.getBoundingClientRect();
    if (!gridBound) {
      return void 0;
    }
    const screenH = window.innerHeight;
    const { y: gridY } = gridBound;
    const spaceAbove = Math.max(y, gridY);
    const spaceBelow = screenH - gridY - y - height;
    const isAbove = spaceAbove > spaceBelow;
    const availableSpace = isAbove ? y : spaceBelow;
    const finalHeight = Math.min(
      availableSpace - SAFE_SPACING,
      maxHeight ?? Infinity
    );
    return {
      top: isAbove ? "unset" : height + 1,
      bottom: isAbove ? height : "unset",
      maxHeight: finalHeight,
      isAbove
    };
  }, [editorId, y, height, maxHeight]);
};

// ../../packages/aitable/src/grid/hooks/business/useGridPrefillingRow.ts
var useGridPrefillingRow = () => {
  return {
    // Placeholder implementation
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridRowOrder.ts
var useGridRowOrder = () => {
  return {
    // Placeholder implementation
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridSelection.ts
var useGridSelection = () => {
  return {
    // Placeholder implementation
  };
};

// ../../packages/aitable/src/grid/hooks/business/useGridTheme.ts
var import_react130 = __toESM(require_react(), 1);
var LIGHT_THEME = {
  primaryColor: "#3b82f6",
  backgroundColor: "#ffffff",
  borderColor: "#e5e7eb",
  textColor: "#1f2937",
  headerBackground: "#f9fafb",
  headerText: "#374151",
  selectedBackground: "#dbeafe",
  selectedBorder: "#3b82f6",
  hoverBackground: "#f3f4f6",
  rowHeight: 32,
  columnWidth: 150,
  headerHeight: 36,
  fontSize: 14,
  cellPadding: 8,
  borderWidth: 1,
  borderRadius: 4,
  boxShadow: "0 1px 3px 0 rgba(0, 0, 0, 0.1)"
};
var DARK_THEME = {
  primaryColor: "#60a5fa",
  backgroundColor: "#1f2937",
  borderColor: "#374151",
  textColor: "#f9fafb",
  headerBackground: "#111827",
  headerText: "#e5e7eb",
  selectedBackground: "#1e3a8a",
  selectedBorder: "#60a5fa",
  hoverBackground: "#374151",
  rowHeight: 32,
  columnWidth: 150,
  headerHeight: 36,
  fontSize: 14,
  cellPadding: 8,
  borderWidth: 1,
  borderRadius: 4,
  boxShadow: "0 1px 3px 0 rgba(0, 0, 0, 0.3)"
};
var THEME_STORAGE_KEY = "grid-theme-mode";
var useGridTheme = (initialMode = "light", customTheme) => {
  const getSavedThemeMode = (0, import_react130.useCallback)(() => {
    try {
      const saved = localStorage.getItem(THEME_STORAGE_KEY);
      return saved || initialMode;
    } catch {
      return initialMode;
    }
  }, [initialMode]);
  const [themeMode, setThemeModeState] = (0, import_react130.useState)(getSavedThemeMode);
  const theme = (0, import_react130.useMemo)(() => {
    const baseTheme = themeMode === "dark" ? DARK_THEME : LIGHT_THEME;
    if (themeMode === "custom" && customTheme) {
      return { ...baseTheme, ...customTheme };
    }
    return baseTheme;
  }, [themeMode, customTheme]);
  const setThemeMode = (0, import_react130.useCallback)((mode) => {
    try {
      localStorage.setItem(THEME_STORAGE_KEY, mode);
    } catch (error) {
      console.error("Failed to save theme mode:", error);
    }
    setThemeModeState(mode);
  }, []);
  const toggleTheme = (0, import_react130.useCallback)(() => {
    setThemeMode(themeMode === "light" ? "dark" : "light");
  }, [themeMode, setThemeMode]);
  const cssVariables = (0, import_react130.useMemo)(
    () => ({
      "--grid-primary-color": theme.primaryColor,
      "--grid-bg-color": theme.backgroundColor,
      "--grid-border-color": theme.borderColor,
      "--grid-text-color": theme.textColor,
      "--grid-header-bg": theme.headerBackground,
      "--grid-header-text": theme.headerText,
      "--grid-selected-bg": theme.selectedBackground,
      "--grid-selected-border": theme.selectedBorder,
      "--grid-hover-bg": theme.hoverBackground,
      "--grid-row-height": `${theme.rowHeight}px`,
      "--grid-column-width": `${theme.columnWidth}px`,
      "--grid-header-height": `${theme.headerHeight}px`,
      "--grid-font-size": `${theme.fontSize}px`,
      "--grid-cell-padding": `${theme.cellPadding}px`,
      "--grid-border-width": `${theme.borderWidth}px`,
      "--grid-border-radius": `${theme.borderRadius}px`,
      "--grid-box-shadow": theme.boxShadow
    }),
    [theme]
  );
  (0, import_react130.useEffect)(() => {
    const root2 = document.documentElement;
    Object.entries(cssVariables).forEach(([key, value]) => {
      root2.style.setProperty(key, String(value));
    });
  }, [cssVariables]);
  return {
    theme,
    themeMode,
    setThemeMode,
    toggleTheme,
    cssVariables,
    isLightMode: themeMode === "light",
    isDarkMode: themeMode === "dark",
    isCustomMode: themeMode === "custom"
  };
};

// ../../packages/aitable/src/grid/renderers/layout-renderer/layoutRenderer.ts
var spriteIconMap = {
  ["Drag" /* Drag */]: "drag" /* Drag */,
  ["Expand" /* Expand */]: "detail" /* Detail */
};
var {
  fillHandlerSize,
  cellTextLineHeight: cellTextLineHeight4,
  rowHeadIconPaddingTop: rowHeadIconPaddingTop2,
  columnStatisticHeight: columnStatisticHeight2,
  columnHeadHeight,
  columnHeadPadding: columnHeadPadding2,
  columnHeadMenuSize,
  columnAppendBtnWidth,
  columnResizeHandlerWidth: columnResizeHandlerWidth2,
  columnResizeHandlerPaddingTop,
  cellScrollBarWidth,
  cellScrollBarPaddingX,
  cellScrollBarPaddingY: cellScrollBarPaddingY2,
  cellVerticalPaddingSM: cellVerticalPaddingSM2,
  cellVerticalPaddingMD: cellVerticalPaddingMD4,
  cellHorizontalPadding: cellHorizontalPadding12,
  columnFreezeHandlerWidth: columnFreezeHandlerWidth2,
  columnFreezeHandlerHeight
} = GRID_DEFAULT;
var drawCellContent = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    theme,
    rowIndex,
    columnIndex,
    imageManager,
    spriteManager,
    isActive,
    hoverCellPosition,
    getCellContent
  } = props;
  const cell = getCellContent([columnIndex, rowIndex]);
  const cellRenderer = getCellRenderer(cell.type);
  cellRenderer.draw(cell, {
    cell,
    ctx,
    theme,
    rect: {
      x: x2,
      y,
      width,
      height
    },
    x: x2,
    y,
    width,
    height,
    rowIndex,
    columnIndex,
    imageManager,
    spriteManager,
    hoverCellPosition,
    isActive
  });
  if (cell.hidden) {
    spriteManager.drawSprite(ctx, {
      sprite: "eyeOff" /* EyeOff */,
      x: x2 + width - 14,
      y: y - 1,
      size: 12,
      theme,
      colors: [theme.cellLineColorActived, theme.cellBg]
    });
  } else if (isActive && cell.locked) {
    spriteManager.drawSprite(ctx, {
      sprite: "lock" /* Lock */,
      x: x2 + width - 13,
      y: y + 1,
      size: 12,
      theme,
      colors: [theme.cellLineColorActived, theme.cellBg]
    });
  }
};
var calcCells = (props, renderRegion) => {
  const {
    coordInstance,
    visibleRegion,
    activeCell,
    mouseState,
    scrollState,
    selection,
    isSelecting,
    rowControls,
    rowIndexVisible,
    hoverCellPosition,
    theme,
    columns,
    commentCountMap,
    imageManager,
    spriteManager,
    groupCollection,
    getLinearRow,
    getCellContent
  } = props;
  const {
    startRowIndex,
    stopRowIndex,
    startColumnIndex: originStartColumnIndex,
    stopColumnIndex: originStopColumnIndex
  } = visibleRegion;
  const { freezeColumnCount, columnInitSize, totalWidth, rowCount } = coordInstance;
  const { isRowSelection, isColumnSelection } = selection;
  const { scrollLeft, scrollTop } = scrollState;
  const {
    columnIndex: hoverColumnIndex,
    rowIndex: hoverRowIndex,
    type: hoverRegionType,
    isOutOfBounds
  } = mouseState;
  const cellPropList = [];
  const rowHeaderPropList = [];
  const groupRowList = [];
  const groupRowHeaderList = [];
  const appendRowList = [];
  if (!rowCount) {
    return {
      cellPropList,
      rowHeaderPropList,
      groupRowList,
      groupRowHeaderList,
      appendRowList
    };
  }
  const isFreezeRegion = renderRegion === "Freeze" /* Freeze */;
  const startColumnIndex = isFreezeRegion ? 0 : Math.max(freezeColumnCount, originStartColumnIndex);
  const stopColumnIndex = isFreezeRegion ? Math.max(freezeColumnCount - 1, 0) : originStopColumnIndex;
  const isFreezeWithoutColumns = isFreezeRegion && freezeColumnCount === 0;
  for (let columnIndex = startColumnIndex; columnIndex <= stopColumnIndex; columnIndex++) {
    const column = columns[columnIndex];
    const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
    const columnWidth = coordInstance.getColumnWidth(columnIndex);
    const isColumnActive = isColumnSelection && selection.includes([columnIndex, columnIndex]);
    const isFirstColumn = columnIndex === 0;
    const isColumnHovered = hoverColumnIndex === columnIndex;
    const finalTheme = column?.customTheme ? { ...theme, ...column.customTheme } : theme;
    const { cellBg, cellBgHovered, cellBgSelected } = finalTheme;
    for (let rowIndex = startRowIndex; rowIndex <= stopRowIndex; rowIndex++) {
      const linearRow = getLinearRow(rowIndex);
      const { type: linearRowType } = linearRow;
      const rowHeight = coordInstance.getRowHeight(rowIndex);
      const y = coordInstance.getRowOffset(rowIndex) - scrollTop;
      const cell = getCellContent([columnIndex, linearRow.realIndex]);
      const recordId = cell.id?.split("-")[0];
      if (linearRowType === "GROUP" /* Group */) {
        const { depth, value, isCollapsed, realIndex } = linearRow;
        if (isFirstColumn) {
          groupRowHeaderList.push({
            x: 0.5,
            y,
            width: columnInitSize,
            height: rowHeight,
            spriteManager,
            depth,
            theme,
            isCollapsed,
            groupCollection
          });
        }
        if (isFreezeWithoutColumns) {
          continue;
        }
        groupRowList.push({
          x: x2 + 0.5,
          y,
          width: columnWidth,
          height: rowHeight,
          columnIndex,
          rowIndex: realIndex,
          depth,
          theme,
          value,
          isHover: false,
          isCollapsed,
          imageManager,
          spriteManager,
          groupCollection
        });
        continue;
      }
      if (linearRowType === "APPEND" /* Append */) {
        if (isFirstColumn) {
          const isHover = hoverRegionType === "AppendRow" /* AppendRow */ && hoverRowIndex === rowIndex;
          appendRowList.push({
            x: 0.5,
            y: y + 0.5,
            width: totalWidth - scrollLeft,
            height: rowHeight,
            theme,
            isHover,
            spriteManager,
            coordInstance
          });
        }
        continue;
      }
      const { displayIndex, realIndex: realRowIndex } = linearRow;
      const isRowHovered = !isOutOfBounds && !isSelecting && ROW_RELATED_REGIONS.has(hoverRegionType) && rowIndex === hoverRowIndex;
      const { isCellActive, isRowActive } = checkIfRowOrCellActive(
        activeCell,
        realRowIndex,
        columnIndex
      );
      const { isRowSelected, isCellSelected } = checkIfRowOrCellSelected(
        selection,
        realRowIndex,
        columnIndex
      );
      let fill2;
      if (isCellSelected || isRowSelected || isColumnActive) {
        fill2 = cellBgSelected;
      } else if (isRowHovered || isRowActive) {
        fill2 = cellBgHovered;
      }
      if (isFirstColumn) {
        rowHeaderPropList.push({
          x: 0.5,
          y: y + 0.5,
          width: columnInitSize + 0.5,
          height: rowHeight,
          displayIndex: String(displayIndex),
          isHover: isRowHovered || isRowActive,
          isChecked: isRowSelection && isRowSelected,
          rowIndexVisible,
          rowControls,
          theme,
          spriteManager,
          commentCount: recordId ? commentCountMap?.[recordId] : void 0
        });
      }
      if (isFreezeWithoutColumns) {
        continue;
      }
      cellPropList.push({
        x: x2 + 0.5,
        y: y + 0.5,
        width: columnWidth,
        height: rowHeight,
        rowIndex: realRowIndex,
        columnIndex,
        hoverCellPosition: isColumnHovered && isRowHovered ? hoverCellPosition : null,
        getCellContent,
        imageManager,
        spriteManager,
        theme: finalTheme,
        fill: isCellActive ? cellBg : fill2 ?? cellBg
      });
    }
  }
  return {
    cellPropList,
    rowHeaderPropList,
    groupRowList,
    groupRowHeaderList,
    appendRowList
  };
};
var drawClipRegion = (ctx, clipRect, draw) => {
  const { x: x2, y, width, height } = clipRect;
  ctx.save();
  ctx.beginPath();
  ctx.rect(x2, y, width, height);
  ctx.clip();
  draw(ctx);
  ctx.restore();
};
var drawCells = (mainCtx, cacheCtx, props) => {
  const { coordInstance, theme, shouldRerender } = props;
  const { fontFamily, fontSizeSM, fontSizeXS, cellLineColor } = theme;
  const { rowInitSize, freezeRegionWidth, containerWidth, containerHeight } = coordInstance;
  const { cellPropList: otherCellPropList, groupRowList } = calcCells(
    props,
    "Other" /* Other */
  );
  const {
    cellPropList: freezeCellPropList,
    groupRowList: freezeGroupRowList,
    rowHeaderPropList,
    groupRowHeaderList,
    appendRowList
  } = calcCells(props, "Freeze" /* Freeze */);
  appendRowList.forEach((props2) => drawAppendRow(mainCtx, props2));
  drawClipRegion(
    mainCtx,
    {
      x: 0,
      y: rowInitSize + 1,
      width: freezeRegionWidth + 1,
      height: containerHeight - rowInitSize - 1
    },
    (ctx) => {
      freezeCellPropList.forEach((cellProps) => {
        const { x: x2, y, width, height, fill: fill2 } = cellProps;
        drawRect(ctx, {
          x: x2,
          y,
          width,
          height,
          fill: fill2,
          stroke: cellLineColor
        });
      });
      ctx.font = `${fontSizeXS}px ${fontFamily}`;
      rowHeaderPropList.forEach(
        (rowHeaderProps) => drawRowHeader(ctx, rowHeaderProps)
      );
      freezeGroupRowList.forEach((props2) => drawGroupRow(ctx, props2));
      groupRowHeaderList.forEach((props2) => drawGroupRowHeader(ctx, props2));
    }
  );
  drawClipRegion(
    mainCtx,
    {
      x: freezeRegionWidth + 1,
      y: rowInitSize + 1,
      width: containerWidth - freezeRegionWidth,
      height: containerHeight - rowInitSize - 1
    },
    (ctx) => {
      otherCellPropList.forEach((cellProps) => {
        const { x: x2, y, width, height, fill: fill2 } = cellProps;
        drawRect(ctx, {
          x: x2,
          y,
          width,
          height,
          fill: fill2,
          stroke: cellLineColor
        });
      });
      groupRowList.forEach((props2) => drawGroupRow(ctx, props2));
    }
  );
  if (shouldRerender) {
    drawClipRegion(
      cacheCtx,
      {
        x: 0,
        y: rowInitSize + 1,
        width: freezeRegionWidth + 1,
        height: containerHeight - rowInitSize - 1
      },
      (ctx) => {
        ctx.font = `${fontSizeSM}px ${fontFamily}`;
        freezeCellPropList.forEach((cellProps) => {
          drawCellContent(ctx, cellProps);
        });
      }
    );
    drawClipRegion(
      cacheCtx,
      {
        x: freezeRegionWidth + 1,
        y: rowInitSize + 1,
        width: containerWidth - freezeRegionWidth,
        height: containerHeight - rowInitSize - 1
      },
      (ctx) => {
        ctx.font = `${fontSizeSM}px ${fontFamily}`;
        otherCellPropList.forEach((cellProps) => {
          drawCellContent(ctx, cellProps);
        });
      }
    );
  }
};
var drawGroupRowHeader = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    theme,
    depth,
    isCollapsed,
    spriteManager,
    groupCollection
  } = props;
  const {
    iconSizeSM,
    cellLineColor,
    groupHeaderBgPrimary,
    groupHeaderBgSecondary,
    groupHeaderBgTertiary
  } = theme;
  if (groupCollection == null) {
    return;
  }
  const { groupColumns } = groupCollection;
  if (!groupColumns.length) {
    return;
  }
  const bgList = [
    groupHeaderBgTertiary,
    groupHeaderBgSecondary,
    groupHeaderBgPrimary
  ].slice(-groupColumns.length);
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height,
    fill: bgList[depth]
  });
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height: 1,
    fill: cellLineColor
  });
  spriteManager.drawSprite(ctx, {
    sprite: isCollapsed ? "collapse" /* Collapse */ : "expand" /* Expand */,
    x: (width - iconSizeSM) / 2 + (depth - 1) * 16,
    y: y + (height - iconSizeSM) / 2,
    size: iconSizeSM,
    theme
  });
};
var drawGroupRow = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    theme,
    columnIndex,
    rowIndex,
    depth,
    value,
    imageManager,
    spriteManager,
    groupCollection
  } = props;
  const {
    fontSizeSM,
    fontFamily,
    cellLineColor,
    rowHeaderTextColor,
    groupHeaderBgPrimary,
    groupHeaderBgTertiary,
    groupHeaderBgSecondary
  } = theme;
  if (groupCollection == null) {
    return;
  }
  const { groupColumns, getGroupCell } = groupCollection;
  if (!groupColumns.length) {
    return;
  }
  const bgList = [
    groupHeaderBgTertiary,
    groupHeaderBgSecondary,
    groupHeaderBgPrimary
  ].slice(-groupColumns.length);
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height,
    fill: bgList[depth]
  });
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height: 1,
    fill: cellLineColor
  });
  if (columnIndex !== 0) {
    return;
  }
  const groupColumn = groupColumns[depth];
  if (groupColumn == null) {
    return;
  }
  ctx.save();
  ctx.beginPath();
  ctx.font = `${fontSizeSM}px ${fontFamily}`;
  drawSingleLineText(ctx, {
    x: x2 + cellHorizontalPadding12,
    y: y + cellVerticalPaddingSM2,
    text: groupColumn.name,
    fill: rowHeaderTextColor
  });
  const cell = getGroupCell(value, depth);
  const cellRenderer = getCellRenderer(cell.type);
  const offsetY = 18;
  cellRenderer.draw(cell, {
    cell,
    ctx,
    theme,
    rect: {
      x: x2,
      y: y + offsetY,
      width,
      height: height - offsetY
    },
    x: x2,
    y: y + offsetY,
    width,
    height: height - offsetY,
    rowIndex,
    columnIndex,
    imageManager,
    spriteManager
  });
  ctx.restore();
};
var drawActiveCell = (ctx, props) => {
  const {
    theme,
    mouseState,
    scrollState,
    coordInstance,
    activeCellBound,
    hoverCellPosition,
    imageManager,
    spriteManager,
    real2RowIndex,
    getLinearRow,
    getCellContent
  } = props;
  if (activeCellBound == null) {
    return;
  }
  const { scrollTop, scrollLeft } = scrollState;
  const {
    width,
    height,
    columnIndex,
    rowIndex: activeRowIndex
  } = activeCellBound;
  const { rowIndex: hoverLinearRowIndex, columnIndex: hoverColumnIndex } = mouseState;
  const { cellBg, cellLineColorActived, fontSizeSM, fontFamily, scrollBarBg } = theme;
  const {
    freezeColumnCount,
    freezeRegionWidth,
    containerWidth,
    containerHeight,
    columnCount,
    rowInitSize
  } = coordInstance;
  const activeLinearRowIndex = real2RowIndex(activeRowIndex);
  const linearRow = getLinearRow(activeLinearRowIndex);
  if (columnIndex >= columnCount || linearRow?.type !== "ROW" /* Row */) {
    return;
  }
  const isFreezeRegion = columnIndex < freezeColumnCount;
  const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
  const y = coordInstance.getRowOffset(activeLinearRowIndex) - scrollTop;
  const { realIndex: hoverRowIndex } = getLinearRow(hoverLinearRowIndex);
  ctx.save();
  ctx.beginPath();
  ctx.rect(
    isFreezeRegion ? 0 : freezeRegionWidth,
    rowInitSize,
    isFreezeRegion ? freezeRegionWidth + 1 : containerWidth - freezeRegionWidth,
    containerHeight - rowInitSize
  );
  ctx.clip();
  ctx.font = `${fontSizeSM}px ${fontFamily}`;
  drawRect(ctx, {
    x: x2 + 0.5,
    y: y + 0.5,
    width,
    height,
    fill: cellBg,
    stroke: cellLineColorActived,
    radius: 2
  });
  const cellScrollState = getCellScrollState(activeCellBound);
  const { scrollBarHeight, scrollBarScrollTop, contentScrollTop } = cellScrollState;
  ctx.save();
  ctx.beginPath();
  if (activeCellBound.scrollEnable) {
    ctx.translate(0, scrollBarScrollTop);
    drawRect(ctx, {
      x: x2 + width - cellScrollBarWidth - cellScrollBarPaddingX,
      y: y + cellScrollBarPaddingY2,
      width: cellScrollBarWidth,
      height: scrollBarHeight,
      fill: scrollBarBg,
      radius: cellScrollBarWidth / 2
    });
    ctx.restore();
    ctx.save();
    ctx.beginPath();
    ctx.rect(x2, y + 1, width, height - 1);
    ctx.clip();
    ctx.translate(0, -contentScrollTop);
  }
  drawCellContent(ctx, {
    x: x2 + 0.5,
    y: y + 0.5,
    width,
    height,
    rowIndex: activeRowIndex,
    columnIndex,
    hoverCellPosition: hoverRowIndex === activeRowIndex && hoverColumnIndex === columnIndex ? hoverCellPosition : null,
    getCellContent,
    isActive: true,
    imageManager,
    spriteManager,
    theme
  });
  ctx.restore();
  ctx.restore();
};
var getVisibleCollaborators = (collaborators, visibleRegion, freezeColumnCount, getCellContent, getLinearRow) => {
  const groupedCollaborators = groupBy_default(collaborators, "activeCellId");
  const { startColumnIndex, stopColumnIndex, startRowIndex, stopRowIndex } = visibleRegion;
  const visibleCells = [];
  const columnIndices = [
    ...Array.from({ length: freezeColumnCount }, (_2, i) => i),
    ...Array.from(
      {
        length: stopColumnIndex - Math.max(freezeColumnCount, startColumnIndex) + 1
      },
      (_2, i) => Math.max(freezeColumnCount, startColumnIndex) + i
    )
  ];
  for (const i of columnIndices) {
    for (let j2 = startRowIndex; j2 <= stopRowIndex; j2++) {
      const realIndex = getLinearRow(j2).realIndex;
      const cell = getCellContent([i, realIndex]);
      if (!cell?.id) {
        continue;
      }
      const visibleCell = groupedCollaborators[cell.id];
      if (visibleCell) {
        const newCell = cloneDeep_default(visibleCell);
        newCell[0].activeCell = [i, realIndex];
        visibleCells.push(newCell);
      }
    }
  }
  return visibleCells;
};
var drawCollaborators = (ctx, props) => {
  const {
    collaborators,
    scrollState,
    coordInstance,
    activeCellBound,
    theme,
    real2RowIndex,
    getCellContent,
    visibleRegion,
    getLinearRow
  } = props;
  const { scrollTop, scrollLeft } = scrollState;
  const { themeKey } = theme;
  const {
    freezeColumnCount,
    freezeRegionWidth,
    rowInitSize,
    containerWidth,
    containerHeight
  } = coordInstance;
  if (!collaborators?.length) {
    return;
  }
  ctx.save();
  const visibleCells = getVisibleCollaborators(
    collaborators,
    visibleRegion,
    freezeColumnCount,
    getCellContent,
    getLinearRow
  );
  for (let i = 0; i < visibleCells.length; i++) {
    const conflictCollaborators = visibleCells[i].sort(
      (a, b2) => b2.timeStamp - a.timeStamp
    );
    const { activeCell, borderColor } = conflictCollaborators[0];
    if (!activeCell) {
      continue;
    }
    const [columnIndex, _rowIndex] = activeCell;
    const rowIndex = real2RowIndex(_rowIndex);
    const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
    const y = coordInstance.getRowOffset(rowIndex) - scrollTop;
    const width = coordInstance.getColumnWidth(columnIndex);
    const height = activeCellBound?.columnIndex === columnIndex && activeCellBound?.rowIndex === rowIndex ? activeCellBound.height : coordInstance.getRowHeight(rowIndex);
    ctx.save();
    ctx.beginPath();
    const isFreezeRegion = columnIndex < freezeColumnCount;
    ctx.rect(
      isFreezeRegion ? 0 : freezeRegionWidth,
      rowInitSize,
      isFreezeRegion ? freezeRegionWidth + 1 : containerWidth - freezeRegionWidth,
      containerHeight - rowInitSize
    );
    ctx.clip();
    drawRect(ctx, {
      x: x2 + 0.5,
      y: y + 0.5,
      width,
      height,
      stroke: hexToRGBA(contractColorForTheme(borderColor, themeKey)),
      radius: 2
    });
    ctx.restore();
  }
  ctx.restore();
};
var drawSearchCursor = (ctx, props) => {
  const {
    theme,
    scrollState,
    coordInstance,
    real2RowIndex,
    getLinearRow,
    searchCursor,
    imageManager,
    spriteManager,
    getCellContent
  } = props;
  if (!searchCursor) {
    return;
  }
  const [searchColumnIndex, searchRowIndex] = searchCursor;
  const { scrollTop, scrollLeft } = scrollState;
  const { fontSizeSM, fontFamily } = theme;
  const {
    freezeColumnCount,
    freezeRegionWidth,
    containerWidth,
    containerHeight,
    columnCount,
    rowInitSize
  } = coordInstance;
  const activeLinearRowIndex = real2RowIndex(searchRowIndex);
  const linearRow = getLinearRow(activeLinearRowIndex);
  if (searchColumnIndex >= columnCount || linearRow?.type !== "ROW" /* Row */) {
    return;
  }
  const isFreezeRegion = searchColumnIndex < freezeColumnCount;
  const x2 = coordInstance.getColumnRelativeOffset(
    searchColumnIndex,
    scrollLeft
  );
  const y = coordInstance.getRowOffset(activeLinearRowIndex) - scrollTop;
  const width = coordInstance.getColumnWidth(searchColumnIndex);
  const height = coordInstance.getRowHeight(activeLinearRowIndex);
  ctx.save();
  ctx.beginPath();
  ctx.rect(
    isFreezeRegion ? 0 : freezeRegionWidth,
    rowInitSize,
    isFreezeRegion ? freezeRegionWidth + 1 : containerWidth - freezeRegionWidth,
    containerHeight - rowInitSize
  );
  ctx.clip();
  ctx.font = `${fontSizeSM}px ${fontFamily}`;
  drawRect(ctx, {
    x: x2 + 1,
    y: y + 1,
    width: width - 1,
    height: height - 1,
    fill: theme.searchCursorBg,
    radius: 0.5
  });
  ctx.save();
  ctx.beginPath();
  drawCellContent(ctx, {
    x: x2 + 0.5,
    y: y + 0.5,
    width,
    height,
    rowIndex: searchRowIndex,
    columnIndex: searchColumnIndex,
    getCellContent,
    isActive: false,
    imageManager,
    spriteManager,
    theme
  });
  ctx.restore();
  ctx.restore();
};
var drawSearchResult = (ctx, props, result2) => {
  const {
    theme,
    scrollState,
    coordInstance,
    real2RowIndex,
    getLinearRow,
    imageManager,
    spriteManager,
    getCellContent
  } = props;
  if (!result2) {
    return;
  }
  const [searchColumnIndex, searchRowIndex] = result2;
  const { scrollTop, scrollLeft } = scrollState;
  const { fontSizeSM, fontFamily, searchTargetIndexBg } = theme;
  const {
    freezeColumnCount,
    freezeRegionWidth,
    containerWidth,
    containerHeight,
    columnCount,
    rowInitSize
  } = coordInstance;
  const activeLinearRowIndex = real2RowIndex(searchRowIndex);
  const linearRow = getLinearRow(activeLinearRowIndex);
  if (searchColumnIndex >= columnCount || linearRow?.type !== "ROW" /* Row */) {
    return;
  }
  const isFreezeRegion = searchColumnIndex < freezeColumnCount;
  const x2 = coordInstance.getColumnRelativeOffset(
    searchColumnIndex,
    scrollLeft
  );
  const y = coordInstance.getRowOffset(activeLinearRowIndex) - scrollTop;
  const width = coordInstance.getColumnWidth(searchColumnIndex);
  const height = coordInstance.getRowHeight(activeLinearRowIndex);
  ctx.save();
  ctx.beginPath();
  ctx.rect(
    isFreezeRegion ? 0 : freezeRegionWidth,
    rowInitSize,
    isFreezeRegion ? freezeRegionWidth + 1 : containerWidth - freezeRegionWidth,
    containerHeight - rowInitSize
  );
  ctx.clip();
  ctx.font = `${fontSizeSM}px ${fontFamily}`;
  drawRect(ctx, {
    x: x2 + 1,
    y: y + 1,
    width: width - 1,
    height: height - 1,
    fill: searchTargetIndexBg,
    radius: 0.5
  });
  ctx.save();
  ctx.beginPath();
  drawCellContent(ctx, {
    x: x2 + 0.5,
    y: y + 0.5,
    width,
    height,
    rowIndex: linearRow.realIndex,
    columnIndex: searchColumnIndex,
    getCellContent,
    isActive: false,
    imageManager,
    spriteManager,
    theme
  });
  ctx.restore();
  ctx.restore();
};
var getVisibleSearchTargetIndex = (searchHitIndex, visibleRegion, freezeColumnCount, getCellContent, getLinearRow) => {
  const { startColumnIndex, stopColumnIndex, startRowIndex, stopRowIndex } = visibleRegion;
  const searchCells = [];
  const columnIndices = [
    ...Array.from({ length: freezeColumnCount }, (_2, i) => i),
    ...Array.from(
      {
        length: stopColumnIndex - Math.max(freezeColumnCount, startColumnIndex) + 1
      },
      (_2, i) => Math.max(freezeColumnCount, startColumnIndex) + i
    )
  ];
  const searchCellIds = searchHitIndex?.map((item) => `${item.recordId}-${item.fieldId}`) || [];
  for (const i of columnIndices) {
    for (let j2 = startRowIndex; j2 <= stopRowIndex; j2++) {
      const line = getLinearRow(j2);
      const { realIndex } = line;
      const cell = getCellContent([i, realIndex]);
      if (!cell?.id) {
        continue;
      }
      if (searchCellIds.includes(cell.id)) {
        searchCells.push([i, realIndex]);
      }
    }
  }
  return searchCells;
};
var drawSearchTargetIndex = (ctx, props) => {
  const {
    getCellContent,
    coordInstance,
    visibleRegion,
    searchHitIndex,
    getLinearRow
  } = props;
  const { freezeColumnCount } = coordInstance;
  if (!searchHitIndex?.length) {
    return;
  }
  const searchCellIds = getVisibleSearchTargetIndex(
    searchHitIndex,
    visibleRegion,
    freezeColumnCount,
    getCellContent,
    getLinearRow
  );
  for (let i = 0; i < searchCellIds.length; i++) {
    drawSearchResult(ctx, props, searchCellIds[i]);
  }
};
var drawFillHandler = (ctx, props) => {
  const {
    coordInstance,
    scrollState,
    selection,
    isSelecting,
    isEditing,
    theme
  } = props;
  const { scrollTop, scrollLeft } = scrollState;
  const {
    freezeColumnCount,
    freezeRegionWidth,
    rowInitSize,
    containerWidth,
    containerHeight
  } = coordInstance;
  if (isEditing || isSelecting) {
    return;
  }
  const maxRange = calculateMaxRange(selection);
  if (maxRange == null) {
    return;
  }
  const [columnIndex, rowIndex] = maxRange;
  const { cellBg, cellLineColorActived } = theme;
  const isFreezeRegion = columnIndex < freezeColumnCount;
  const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
  const y = coordInstance.getRowOffset(rowIndex) - scrollTop;
  const width = coordInstance.getColumnWidth(columnIndex);
  const height = coordInstance.getRowHeight(rowIndex);
  ctx.save();
  ctx.beginPath();
  if (!isFreezeRegion) {
    ctx.rect(
      freezeRegionWidth,
      rowInitSize,
      containerWidth - freezeRegionWidth,
      containerHeight - rowInitSize
    );
    ctx.clip();
  }
  drawRect(ctx, {
    x: x2 + width - fillHandlerSize / 2 - 0.5,
    y: y + height - fillHandlerSize / 2 - 0.5,
    width: fillHandlerSize,
    height: fillHandlerSize,
    stroke: cellLineColorActived,
    fill: cellBg
  });
  ctx.restore();
};
var drawRowHeader = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    displayIndex,
    theme,
    isHover,
    isChecked,
    rowControls,
    spriteManager,
    rowIndexVisible,
    commentCount
  } = props;
  const {
    cellBg,
    cellBgHovered,
    cellBgSelected,
    cellLineColor,
    rowHeaderTextColor,
    iconSizeXS,
    staticWhite,
    iconBgSelected
  } = theme;
  let fill2 = cellBg;
  if (isChecked) {
    fill2 = cellBgSelected;
  } else if (isHover) {
    fill2 = cellBgHovered;
  }
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height,
    fill: fill2
  });
  drawLine(ctx, {
    x: x2,
    y,
    points: [0, 0, width, 0],
    stroke: cellLineColor
  });
  drawLine(ctx, {
    x: x2,
    y,
    points: [0, height, width, height],
    stroke: cellLineColor
  });
  const halfSize = iconSizeXS / 2;
  ctx.font = `${10}px ${theme.fontFamily}`;
  if (commentCount) {
    const controlSize = width / rowControls.length;
    const offsetX = controlSize * (2 + 0.5);
    drawCommentCount(ctx, {
      x: x2 + offsetX - halfSize,
      y: y + rowHeadIconPaddingTop2,
      count: commentCount,
      theme
    });
  }
  if (isChecked || isHover || !rowIndexVisible) {
    const controlSize = width / rowControls.length;
    for (let i = 0; i < rowControls.length; i++) {
      const { type, icon } = rowControls[i];
      const offsetX = controlSize * (i + 0.5);
      if (type === "Checkbox" /* Checkbox */) {
        drawCheckbox(ctx, {
          x: x2 + offsetX - halfSize,
          y: y + rowHeadIconPaddingTop2,
          size: iconSizeXS,
          stroke: isChecked ? staticWhite : rowHeaderTextColor,
          fill: isChecked ? iconBgSelected : void 0,
          isChecked
        });
      } else {
        if (isChecked && !isHover && rowIndexVisible && type === "Expand" /* Expand */) {
          continue;
        }
        if (!commentCount || type !== "Expand" /* Expand */) {
          spriteManager.drawSprite(ctx, {
            sprite: icon || spriteIconMap[type],
            x: x2 + offsetX - halfSize,
            y: y + rowHeadIconPaddingTop2,
            size: iconSizeXS,
            theme
          });
        }
      }
    }
    return;
  }
  drawSingleLineText(ctx, {
    x: x2 + width / 2,
    y: y + cellVerticalPaddingMD4 + 1,
    text: displayIndex,
    textAlign: "center",
    fill: rowHeaderTextColor
  });
};
var drawCommentCount = (ctx, props) => {
  const { theme } = props;
  const { commentCountBg, commentCountTextColor } = theme;
  drawRect(ctx, {
    ...props,
    x: props.x,
    y: props.y,
    width: 18,
    height: 16,
    stroke: commentCountBg,
    radius: 3,
    fill: commentCountBg
  });
  drawSingleLineText(ctx, {
    ...props,
    x: props.x + 9,
    y: props.y + 3.5,
    text: props.count > 99 ? "99+" : props.count.toString(),
    textAlign: "center",
    verticalAlign: "middle",
    fontSize: 10,
    fill: commentCountTextColor
  });
};
var drawColumnHeader = (ctx, props) => {
  const { x: x2, y, width, height, theme, fill: fill2, column, hasMenu, spriteManager } = props;
  const { name, icon, description: description2, hasMenu: hasColumnMenu, isPrimary } = column;
  const {
    cellLineColor,
    columnHeaderBg,
    iconFgCommon,
    columnHeaderNameColor,
    fontSizeSM,
    iconSizeXS
  } = theme;
  let maxTextWidth = width - columnHeadPadding2 * 2;
  let iconOffsetX = columnHeadPadding2;
  const hasMenuInner = hasMenu && hasColumnMenu;
  drawRect(ctx, {
    x: x2 + 0.5,
    y,
    width: width - 0.5,
    height,
    fill: fill2 ?? columnHeaderBg
  });
  drawLine(ctx, {
    x: x2,
    y,
    points: [0, height, width, height, width, 0],
    stroke: cellLineColor
  });
  if (isPrimary) {
    maxTextWidth = maxTextWidth - iconSizeXS - columnHeadPadding2;
    spriteManager.drawSprite(ctx, {
      sprite: "lock" /* Lock */,
      x: x2 + iconOffsetX,
      y: y + (columnHeadHeight - iconSizeXS) / 2,
      size: iconSizeXS,
      theme
    });
    iconOffsetX += iconSizeXS + columnHeadPadding2 / 2;
  }
  if (icon) {
    maxTextWidth = maxTextWidth - iconSizeXS;
    spriteManager.drawSprite(ctx, {
      sprite: icon,
      x: x2 + iconOffsetX,
      y: y + (columnHeadHeight - iconSizeXS) / 2,
      size: iconSizeXS,
      theme
    });
    iconOffsetX += iconSizeXS + columnHeadPadding2 / 2;
  }
  if (hasMenuInner) {
    maxTextWidth = maxTextWidth - columnHeadMenuSize - columnHeadPadding2;
    drawRoundPoly(ctx, {
      points: [
        {
          x: x2 + width - columnHeadPadding2 - columnHeadMenuSize,
          y: y + columnHeadHeight / 2 - columnHeadMenuSize / 4
        },
        {
          x: x2 + width - columnHeadPadding2,
          y: y + columnHeadHeight / 2 - columnHeadMenuSize / 4
        },
        {
          x: x2 + width - columnHeadPadding2 - columnHeadMenuSize / 2,
          y: y + columnHeadHeight / 2 + columnHeadMenuSize / 4
        }
      ],
      radiusAll: 1,
      fill: iconFgCommon
    });
  }
  if (description2) {
    spriteManager.drawSprite(ctx, {
      sprite: "description" /* Description */,
      x: hasMenuInner ? x2 + width - 2 * iconSizeXS - columnHeadPadding2 : x2 + width - iconSizeXS - columnHeadPadding2,
      y: y + (columnHeadHeight - iconSizeXS) / 2,
      size: iconSizeXS,
      theme
    });
    maxTextWidth = maxTextWidth - iconSizeXS - columnHeadPadding2;
  }
  drawMultiLineText(ctx, {
    x: x2 + iconOffsetX,
    y: y + cellVerticalPaddingMD4,
    text: name,
    maxLines: Math.floor((height - cellVerticalPaddingMD4) / cellTextLineHeight4),
    lineHeight: cellTextLineHeight4,
    fontSize: fontSizeSM,
    maxWidth: maxTextWidth,
    fill: columnHeaderNameColor
  });
};
var drawGridHeader = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    theme,
    rowControls,
    isChecked,
    isMultiSelectionEnable
  } = props;
  const {
    iconSizeXS,
    staticWhite,
    columnHeaderBg,
    cellLineColor,
    rowHeaderTextColor,
    iconBgSelected
  } = theme;
  const halfSize = iconSizeXS / 2;
  drawRect(ctx, {
    x: x2,
    y,
    width,
    height,
    fill: columnHeaderBg
  });
  drawLine(ctx, {
    x: x2,
    y,
    points: [0, height, width, height],
    stroke: cellLineColor
  });
  if (isMultiSelectionEnable && rowControls.some((item) => item.type === "Checkbox" /* Checkbox */)) {
    drawCheckbox(ctx, {
      x: width / 2 - halfSize + 0.5,
      y: height / 2 - halfSize + 0.5,
      size: iconSizeXS,
      stroke: isChecked ? staticWhite : rowHeaderTextColor,
      fill: isChecked ? iconBgSelected : void 0,
      isChecked
    });
  }
};
var drawColumnHeaders = (ctx, props, renderRegion) => {
  const {
    visibleRegion,
    coordInstance,
    columns,
    theme,
    spriteManager,
    mouseState,
    scrollState,
    selection,
    rowControls,
    isInteracting,
    isColumnHeaderMenuVisible,
    isMultiSelectionEnable
  } = props;
  const {
    startColumnIndex: originStartColumnIndex,
    stopColumnIndex: originStopColumnIndex
  } = visibleRegion;
  const {
    containerWidth,
    freezeRegionWidth,
    rowInitSize,
    columnInitSize,
    freezeColumnCount,
    pureRowCount
  } = coordInstance;
  const { scrollLeft } = scrollState;
  const { fontSizeSM, fontFamily } = theme;
  const {
    isColumnSelection,
    isRowSelection,
    ranges: selectionRanges
  } = selection;
  const { type: hoverRegionType, columnIndex: hoverColumnIndex } = mouseState;
  const isFreezeRegion = renderRegion === "Freeze" /* Freeze */;
  const startColumnIndex = isFreezeRegion ? 0 : Math.max(freezeColumnCount, originStartColumnIndex);
  const stopColumnIndex = isFreezeRegion ? Math.max(freezeColumnCount - 1, 0) : originStopColumnIndex;
  const endRowIndex = pureRowCount - 1;
  ctx.save();
  ctx.beginPath();
  ctx.rect(
    isFreezeRegion ? 0 : freezeRegionWidth + 1,
    0,
    isFreezeRegion ? freezeRegionWidth + 1 : containerWidth - freezeRegionWidth,
    rowInitSize + 1
  );
  ctx.clip();
  ctx.font = `normal ${fontSizeSM}px ${fontFamily}`;
  for (let columnIndex = startColumnIndex; columnIndex <= stopColumnIndex; columnIndex++) {
    const column = columns[columnIndex];
    const finalTheme = column?.customTheme ? { ...theme, ...column.customTheme } : theme;
    const { columnHeaderBgHovered, columnHeaderBgSelected } = finalTheme;
    const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
    const columnWidth = coordInstance.getColumnWidth(columnIndex);
    const isActive = isColumnSelection && selection.includes([columnIndex, columnIndex]);
    const isHover = !isInteracting && ["ColumnHeader" /* ColumnHeader */, "ColumnHeaderMenu" /* ColumnHeaderMenu */].includes(
      hoverRegionType
    ) && hoverColumnIndex === columnIndex;
    let fill2 = void 0;
    if (isActive) {
      fill2 = columnHeaderBgSelected;
    } else if (isHover) {
      fill2 = columnHeaderBgHovered;
    }
    column && drawColumnHeader(ctx, {
      x: x2 + 0.5,
      y: 0.5,
      width: columnWidth,
      height: rowInitSize,
      column,
      fill: fill2,
      hasMenu: isColumnHeaderMenuVisible,
      theme: finalTheme,
      spriteManager
    });
  }
  const isChecked = isRowSelection && isEqual_default(selectionRanges[0], [0, endRowIndex]);
  drawGridHeader(ctx, {
    x: 0,
    y: 0.5,
    width: columnInitSize + 1.5,
    height: rowInitSize,
    theme,
    rowControls,
    isChecked,
    isMultiSelectionEnable
  });
  ctx.restore();
};
var drawAppendRow = (ctx, props) => {
  const { x: x2, y, width, height, theme, isHover, coordInstance, spriteManager } = props;
  const { appendRowBgHovered, iconSizeSM, cellBg, cellLineColor } = theme;
  const { columnInitSize } = coordInstance;
  const halfIconSize = iconSizeSM / 2;
  ctx.save();
  ctx.beginPath();
  drawRect(ctx, {
    x: x2 + 0.5,
    y: y + 0.5,
    width,
    height,
    fill: isHover ? appendRowBgHovered : cellBg
  });
  drawRect(ctx, {
    x: x2,
    y: y + height,
    width,
    height: 1,
    fill: cellLineColor
  });
  spriteManager.drawSprite(ctx, {
    sprite: "add" /* Add */,
    x: x2 + columnInitSize / 2 - halfIconSize + 0.5,
    y: y + height / 2 - halfIconSize + 0.5,
    size: iconSizeSM,
    theme
  });
  ctx.restore();
};
var drawAppendColumn = (ctx, props) => {
  const {
    coordInstance,
    theme,
    mouseState,
    scrollState,
    isColumnAppendEnable,
    spriteManager
  } = props;
  const { scrollLeft, scrollTop } = scrollState;
  const { totalWidth, totalHeight } = coordInstance;
  const { type: hoverRegionType } = mouseState;
  if (!isColumnAppendEnable) {
    return;
  }
  const { iconSizeSM, columnHeaderBg, cellLineColor, columnHeaderBgHovered } = theme;
  const isHover = hoverRegionType === "AppendColumn" /* AppendColumn */;
  const x2 = totalWidth - scrollLeft;
  drawRect(ctx, {
    x: x2 + 1,
    y: 0.5,
    width: columnAppendBtnWidth,
    height: totalHeight - scrollTop,
    fill: isHover ? columnHeaderBgHovered : columnHeaderBg
  });
  drawLine(ctx, {
    x: x2 + 0.5,
    y: columnHeadHeight + 0.5,
    points: [0, 0, 0, totalHeight - scrollTop - columnHeadHeight],
    stroke: cellLineColor
  });
  const halfIconSize = iconSizeSM / 2;
  spriteManager.drawSprite(ctx, {
    sprite: "add" /* Add */,
    x: x2 + columnAppendBtnWidth / 2 - halfIconSize + 0.5,
    y: columnHeadHeight / 2 - halfIconSize + 0.5,
    size: iconSizeSM,
    theme
  });
};
var drawColumnResizeHandler = (ctx, props) => {
  const {
    theme,
    scrollState,
    coordInstance,
    isColumnResizable,
    columnResizeState,
    hoveredColumnResizeIndex
  } = props;
  const { columnIndex: resizeColumnIndex } = columnResizeState;
  const isHover = isColumnResizable && hoveredColumnResizeIndex > -1;
  const isResizing = resizeColumnIndex > -1;
  if (!isHover && !isResizing) {
    return;
  }
  const { scrollLeft } = scrollState;
  const { rowInitSize } = coordInstance;
  const { columnResizeHandlerBg } = theme;
  let x2 = 0;
  if (isResizing) {
    const columnWidth = coordInstance.getColumnWidth(resizeColumnIndex);
    x2 = coordInstance.getColumnRelativeOffset(resizeColumnIndex, scrollLeft) + columnWidth;
  } else {
    const realColumnWidth = coordInstance.getColumnWidth(
      hoveredColumnResizeIndex
    );
    x2 = coordInstance.getColumnRelativeOffset(
      hoveredColumnResizeIndex,
      scrollLeft
    ) + realColumnWidth;
  }
  drawRect(ctx, {
    x: x2 - columnResizeHandlerWidth2 / 2 + 0.5,
    y: columnResizeHandlerPaddingTop + 0.5,
    width: columnResizeHandlerWidth2,
    height: rowInitSize - columnResizeHandlerPaddingTop * 2,
    fill: columnResizeHandlerBg,
    radius: 3
  });
};
var drawColumnDraggingRegion = (ctx, props) => {
  const { columns, theme, mouseState, scrollState, dragState, coordInstance } = props;
  const { columnDraggingPlaceholderBg, interactionLineColorHighlight } = theme;
  const { type, isDragging, ranges: draggingRanges, delta } = dragState;
  const { containerHeight } = coordInstance;
  const { x: x2 } = mouseState;
  const { scrollLeft } = scrollState;
  if (!isDragging || type !== "Columns" /* Columns */) {
    return;
  }
  const draggingColIndex = draggingRanges[0][0];
  drawRect(ctx, {
    x: x2 - delta,
    y: 0.5,
    width: columns[draggingColIndex].width,
    height: containerHeight,
    fill: columnDraggingPlaceholderBg
  });
  const targetColumnIndex = getDropTargetIndex(
    coordInstance,
    mouseState,
    scrollState,
    type
  );
  const finalX = coordInstance.getColumnRelativeOffset(
    targetColumnIndex,
    scrollLeft
  );
  drawRect(ctx, {
    x: finalX - 0.5,
    y: 0.5,
    width: 2,
    height: containerHeight,
    fill: interactionLineColorHighlight
  });
};
var drawRowDraggingRegion = (ctx, props) => {
  const { theme, mouseState, scrollState, dragState, coordInstance } = props;
  const { columnDraggingPlaceholderBg, interactionLineColorHighlight } = theme;
  const { type, isDragging, ranges: draggingRanges, delta } = dragState;
  const { containerWidth } = coordInstance;
  const { scrollTop } = scrollState;
  const { y } = mouseState;
  if (!isDragging || type !== "Rows" /* Rows */) {
    return;
  }
  const draggingRowIndex = draggingRanges[0][0];
  drawRect(ctx, {
    x: 0.5,
    y: y - delta,
    width: containerWidth,
    height: coordInstance.getRowHeight(draggingRowIndex),
    fill: columnDraggingPlaceholderBg
  });
  const targetRowIndex = getDropTargetIndex(
    coordInstance,
    mouseState,
    scrollState,
    type
  );
  const offsetY = coordInstance.getRowOffset(targetRowIndex);
  const finalY = offsetY - scrollTop;
  drawRect(ctx, {
    x: 0.5,
    y: finalY - 0.5,
    width: containerWidth,
    height: 2,
    fill: interactionLineColorHighlight
  });
};
var drawColumnFreezeHandler = (ctx, props) => {
  const { coordInstance, mouseState, scrollState, columnFreezeState, theme } = props;
  const { isFreezing, targetIndex } = columnFreezeState;
  const { type, x: x2, y } = mouseState;
  if (type !== "ColumnFreezeHandler" /* ColumnFreezeHandler */ && !isFreezing) {
    return;
  }
  const { scrollLeft } = scrollState;
  const { interactionLineColorHighlight } = theme;
  const { containerHeight, freezeRegionWidth } = coordInstance;
  const hoverX = isFreezing ? x2 : freezeRegionWidth;
  if (isFreezing) {
    const targetX = coordInstance.getColumnRelativeOffset(
      targetIndex + 1,
      scrollLeft
    );
    drawRect(ctx, {
      x: targetX - 1,
      y: 0,
      width: 2,
      height: containerHeight,
      fill: interactionLineColorHighlight
    });
  }
  drawRect(ctx, {
    x: hoverX - columnFreezeHandlerWidth2 / 2,
    y: y - columnFreezeHandlerHeight / 2,
    width: columnFreezeHandlerWidth2,
    height: columnFreezeHandlerHeight,
    fill: interactionLineColorHighlight,
    radius: 4
  });
  drawRect(ctx, {
    x: hoverX - 1,
    y: 0,
    width: 2,
    height: containerHeight,
    fill: interactionLineColorHighlight
  });
};
var setVisibleImageRegion = (props) => {
  const { imageManager, coordInstance, visibleRegion, getLinearRow } = props;
  const { startColumnIndex, stopColumnIndex, startRowIndex, stopRowIndex } = visibleRegion;
  const realStartRowIndex = getLinearRow(startRowIndex).realIndex;
  const realStopRowIndex = getLinearRow(stopRowIndex).realIndex;
  const { freezeColumnCount } = coordInstance;
  imageManager?.setWindow(
    {
      x: startColumnIndex,
      y: realStartRowIndex,
      width: stopColumnIndex - startColumnIndex,
      height: realStopRowIndex - realStartRowIndex
    },
    freezeColumnCount
  );
};
var drawFreezeRegionDivider = (ctx, props, dividerRegion) => {
  const { theme, coordInstance, scrollState, height } = props;
  const { interactionLineColorCommon } = theme;
  const { scrollLeft } = scrollState;
  const { freezeRegionWidth, containerHeight } = coordInstance;
  const isTop = dividerRegion === "Top" /* Top */;
  const startY = isTop ? 0 : containerHeight;
  const endY = isTop ? containerHeight : height;
  if (scrollLeft === 0) {
    return drawRect(ctx, {
      x: freezeRegionWidth,
      y: startY + 0.5,
      width: 1,
      height: endY - startY,
      fill: interactionLineColorCommon
    });
  }
  ctx.save();
  ctx.beginPath();
  ctx.shadowColor = interactionLineColorCommon;
  ctx.shadowBlur = 5;
  ctx.shadowOffsetX = 3;
  ctx.strokeStyle = interactionLineColorCommon;
  ctx.moveTo(freezeRegionWidth + 0.5, startY);
  ctx.lineTo(freezeRegionWidth + 0.5, endY);
  ctx.stroke();
  ctx.restore();
};
var drawColumnHeadersRegion = (ctx, props) => {
  const { columnHeaderHeight } = props;
  if (columnHeaderHeight === 0) {
    return;
  }
  ["Freeze" /* Freeze */, "Other" /* Other */].forEach(
    (r) => drawColumnHeaders(ctx, props, r)
  );
  drawAppendColumn(ctx, props);
};
var drawColumnStatistics = (ctx, props, renderRegion) => {
  const {
    coordInstance,
    columns,
    theme,
    height,
    visibleRegion,
    mouseState,
    scrollState,
    columnStatistics,
    groupCollection,
    getLinearRow
  } = props;
  if (columnStatistics == null) {
    return;
  }
  const { scrollLeft, scrollTop } = scrollState;
  let { startColumnIndex, stopColumnIndex } = visibleRegion;
  const { startRowIndex, stopRowIndex } = visibleRegion;
  const {
    type,
    columnIndex: hoverColumnIndex,
    rowIndex: hoverRowIndex
  } = mouseState;
  const {
    rowInitSize,
    containerHeight,
    containerWidth,
    freezeRegionWidth,
    freezeColumnCount
  } = coordInstance;
  const {
    fontSizeXS,
    fontFamily,
    columnHeaderBg,
    groupHeaderBgTertiary,
    groupHeaderBgSecondary,
    groupHeaderBgPrimary
  } = theme;
  const isFreezeRegion = renderRegion === "Freeze" /* Freeze */;
  const y = containerHeight + 0.5;
  startColumnIndex = isFreezeRegion ? 0 : Math.max(freezeColumnCount, startColumnIndex);
  stopColumnIndex = isFreezeRegion ? Math.max(freezeColumnCount - 1, 0) : stopColumnIndex;
  ctx.save();
  ctx.beginPath();
  ctx.rect(
    isFreezeRegion ? 0 : freezeRegionWidth,
    rowInitSize,
    isFreezeRegion ? freezeRegionWidth : containerWidth - freezeRegionWidth,
    height
  );
  ctx.clip();
  ctx.font = `${fontSizeXS}px ${fontFamily}`;
  const { groupColumns } = groupCollection ?? {};
  for (let columnIndex = startColumnIndex; columnIndex <= stopColumnIndex; columnIndex++) {
    const x2 = coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft);
    const columnWidth = coordInstance.getColumnWidth(columnIndex);
    const isFirstColumn = columnIndex === 0;
    const isColumnHovered = columnIndex === hoverColumnIndex;
    const column = columns[columnIndex];
    if (column == null) {
      continue;
    }
    const { id: columnId, name, statisticLabel } = column;
    if (groupColumns != null) {
      const bgList = [
        groupHeaderBgTertiary,
        groupHeaderBgSecondary,
        groupHeaderBgPrimary
      ].slice(-groupColumns.length);
      for (let rowIndex = startRowIndex; rowIndex <= stopRowIndex; rowIndex++) {
        const linearRow = getLinearRow(rowIndex);
        const rowHeight = coordInstance.getRowHeight(rowIndex);
        const { type: linearRowType } = linearRow;
        const y2 = coordInstance.getRowOffset(rowIndex) - scrollTop;
        if (linearRowType === "GROUP" /* Group */) {
          const { id, depth } = linearRow;
          const text2 = columnStatistics[columnId ?? name]?.[id];
          const labelWidth = isFirstColumn ? Math.min(
            drawSingleLineText(ctx, {
              maxWidth: columnWidth,
              text: text2 ?? statisticLabel?.label ?? "Summary",
              needRender: false,
              fontSize: fontSizeXS
            }).width + cellHorizontalPadding12,
            columnWidth
          ) : columnWidth - 1;
          drawStatisticCell(ctx, {
            x: isFirstColumn ? x2 + columnWidth - labelWidth : x2 + 1,
            y: y2 + 1,
            textOffsetY: columnStatisticHeight2 / 2 - 2,
            width: labelWidth,
            height: rowHeight - 1,
            text: text2,
            defaultLabel: statisticLabel?.label,
            bgColor: isFirstColumn && text2 ? bgList[depth] : void 0,
            isHovered: isColumnHovered && rowIndex === hoverRowIndex && type === "GroupStatistic" /* GroupStatistic */,
            theme
          });
        }
      }
    }
    const text = columnStatistics[columnId ?? name]?.total;
    drawStatisticCell(ctx, {
      x: x2,
      y: y + 1,
      textOffsetY: cellVerticalPaddingMD4,
      width: columnWidth,
      height: columnStatisticHeight2,
      text,
      bgColor: columnHeaderBg,
      isHovered: isColumnHovered && type === "ColumnStatistic" /* ColumnStatistic */,
      showAlways: statisticLabel?.showAlways,
      defaultLabel: statisticLabel?.label,
      theme
    });
  }
  ctx.restore();
};
var drawStatisticCell = (ctx, props) => {
  const {
    x: x2,
    y,
    width,
    height,
    text,
    textOffsetY,
    isHovered,
    showAlways,
    theme,
    defaultLabel,
    bgColor
  } = props;
  const { rowHeaderTextColor, columnStatisticBgHovered, fontSizeXS } = theme;
  if (text || isHovered || showAlways || bgColor) {
    drawRect(ctx, {
      x: x2,
      y,
      width,
      height,
      fill: isHovered ? columnStatisticBgHovered : bgColor
    });
  }
  const textProp = {
    x: x2 + 0.5,
    y: y + (textOffsetY ?? 0.5),
    textAlign: "right",
    maxWidth: width - cellHorizontalPadding12 / 2,
    fill: rowHeaderTextColor,
    fontSize: fontSizeXS
  };
  if (isHovered || showAlways) {
    !text && drawSingleLineText(ctx, { ...textProp, text: defaultLabel || "Summary" });
  }
  if (text) {
    drawSingleLineText(ctx, { ...textProp, text });
  }
};
var drawColumnStatisticsRegion = (ctx, props) => {
  const { coordInstance, theme, columnStatistics, height } = props;
  const { containerWidth } = coordInstance;
  const { cellLineColor } = theme;
  const y = height - columnStatisticHeight2 + 0.5;
  if (columnStatistics == null) {
    return;
  }
  ["Freeze" /* Freeze */, "Other" /* Other */].forEach(
    (r) => drawColumnStatistics(ctx, props, r)
  );
  drawLine(ctx, {
    x: 0,
    y,
    points: [0, 0, containerWidth, 0],
    stroke: cellLineColor
  });
};
var computeShouldRerender = (current, last2) => {
  if (last2 == null) {
    return true;
  }
  return !(current.theme === last2.theme && current.columns === last2.columns && current.getLinearRow === last2.getLinearRow && current.real2RowIndex === last2.real2RowIndex && current.getCellContent === last2.getCellContent && current.coordInstance === last2.coordInstance && current.visibleRegion === last2.visibleRegion && current.forceRenderFlag === last2.forceRenderFlag && current.hoverCellPosition === last2.hoverCellPosition);
};
var drawCacheContent = (cacheCanvas, props) => {
  if (!cacheCanvas) {
    return;
  }
  const { containerWidth, containerHeight, pixelRatio, shouldRerender, draw } = props;
  const width = Math.ceil(containerWidth * pixelRatio);
  const height = Math.ceil(containerHeight * pixelRatio);
  if (cacheCanvas.width !== width || cacheCanvas.height !== height) {
    cacheCanvas.width = width;
    cacheCanvas.height = height;
  }
  const cacheCtx = cacheCanvas.getContext("2d");
  if (cacheCtx == null) {
    return;
  }
  if (shouldRerender) {
    cacheCtx.clearRect(0, 0, width, height);
    cacheCtx.save();
    if (pixelRatio !== 1) {
      cacheCtx.scale(pixelRatio, pixelRatio);
    }
    cacheCtx.beginPath();
    cacheCtx.rect(0, 0, containerWidth, containerHeight);
    cacheCtx.clip();
  }
  draw(cacheCtx);
  if (shouldRerender) {
    cacheCtx.restore();
  }
};
var drawGrid = (mainCanvas, cacheCanvas, props, lastProps) => {
  const {
    coordInstance,
    scrollState,
    height: originHeight,
    columnStatistics
  } = props;
  const { isScrolling } = scrollState;
  const { containerWidth } = coordInstance;
  if (containerWidth === 0 || originHeight === 0) {
    return;
  }
  const pixelRatio = Math.ceil(window.devicePixelRatio ?? 1);
  const width = Math.ceil(containerWidth * pixelRatio);
  const height = Math.ceil(originHeight * pixelRatio);
  const shouldRerender = isScrolling || computeShouldRerender(props, lastProps);
  if (mainCanvas.width !== width || mainCanvas.height !== height) {
    mainCanvas.width = width;
    mainCanvas.height = height;
    mainCanvas.style.width = containerWidth + "px";
    mainCanvas.style.height = originHeight + "px";
  }
  const mainCtx = mainCanvas.getContext("2d");
  if (mainCtx == null) {
    return;
  }
  mainCtx.clearRect(0, 0, width, height);
  mainCtx.save();
  if (pixelRatio !== 1) {
    mainCtx.scale(pixelRatio, pixelRatio);
  }
  mainCtx.beginPath();
  mainCtx.rect(0, 0, containerWidth, originHeight);
  mainCtx.clip();
  drawCacheContent(cacheCanvas, {
    containerWidth,
    containerHeight: originHeight,
    pixelRatio,
    shouldRerender,
    draw: (cacheCtx) => {
      drawCells(mainCtx, cacheCtx, { ...props, shouldRerender });
    }
  });
  mainCtx.save();
  mainCtx.setTransform(1, 0, 0, 1, 0, 0);
  mainCtx.drawImage(cacheCanvas, 0, 0, width, height);
  mainCtx.restore();
  drawColumnHeadersRegion(mainCtx, props);
  drawFreezeRegionDivider(mainCtx, props, "Top" /* Top */);
  drawCollaborators(mainCtx, props);
  drawSearchTargetIndex(mainCtx, props);
  drawSearchCursor(mainCtx, props);
  drawActiveCell(mainCtx, props);
  drawColumnStatisticsRegion(mainCtx, props);
  columnStatistics != null && drawFreezeRegionDivider(mainCtx, props, "Bottom" /* Bottom */);
  drawColumnResizeHandler(mainCtx, props);
  drawRowDraggingRegion(mainCtx, props);
  drawColumnDraggingRegion(mainCtx, props);
  drawColumnFreezeHandler(mainCtx, props);
  setVisibleImageRegion(props);
  mainCtx.restore();
};

// ../../packages/aitable/src/grid/components/editors/basic/TextEditor.tsx
var import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1);
var AutoSizeTextarea = index2;
var { rowHeight: defaultRowHeight } = GRID_DEFAULT;
var TextEditorBase = (props, ref) => {
  const { cell, rect, style, theme, isEditing, onChange } = props;
  const { cellLineColorActived } = theme;
  const { width, height } = rect;
  const { displayData, type } = cell;
  const needWrap = cell?.isWrap;
  const inputRef = (0, import_react131.useRef)(null);
  const [value, setValueInner] = (0, import_react131.useState)(displayData);
  (0, import_react131.useImperativeHandle)(ref, () => ({
    focus: () => inputRef.current?.focus(),
    setValue: (value2) => setValueInner(String(value2 ?? "")),
    saveValue
  }));
  const saveValue = () => {
    if (value === displayData || !isEditing) {
      return;
    }
    if (type === "number" /* Number */) {
      onChange?.(Number(value));
    } else {
      onChange?.(typeof value === "string" ? value.trim() : value);
    }
  };
  const onChangeInner = (e2) => {
    const value2 = e2.target.value;
    setValueInner(value2);
  };
  const onKeyDown = (event) => {
    const { keyCode, shiftKey } = event;
    if (keyCode === import_ts_keycode_enum.Key.Enter && !shiftKey) {
      event.preventDefault();
    }
    if (keyCode === import_ts_keycode_enum.Key.Enter && shiftKey) {
      event.stopPropagation();
    }
  };
  const attachStyle = (0, import_react131.useMemo)(() => {
    const style2 = {
      width: width + 4,
      minHeight: height + 4,
      height: needWrap ? "auto" : height + 4,
      marginLeft: -2,
      marginTop: -2,
      textAlign: type === "number" /* Number */ ? "right" : "left"
    };
    if (height > defaultRowHeight) {
      style2.paddingBottom = height - defaultRowHeight;
    }
    return style2;
  }, [type, height, width, needWrap]);
  return (0, import_jsx_runtime8.jsx)(import_jsx_runtime8.Fragment, { children: needWrap ? (0, import_jsx_runtime8.jsxs)(
    "div",
    {
      style: {
        ...attachStyle,
        paddingBottom: 16,
        border: `2px solid ${cellLineColorActived}`,
        ...style
      },
      className: "relative rounded-md bg-background",
      children: [
        (0, import_jsx_runtime8.jsx)(
          AutoSizeTextarea,
          {
            ref: inputRef,
            className: "w-full resize-none rounded border-none bg-background px-2 pt-1 text-[13px] leading-[1.4rem] focus-visible:outline-none",
            value,
            minRows: 2,
            maxRows: 5,
            onBlur: saveValue,
            onKeyDown,
            onChange: onChangeInner
          }
        ),
        (0, import_jsx_runtime8.jsx)("div", { className: "absolute bottom-[2px] left-0 w-full rounded-b-md bg-background pb-[2px] pr-1 text-right text-xs text-slate-400 dark:text-slate-600", children: "Shift + Enter" })
      ]
    }
  ) : (0, import_jsx_runtime8.jsx)(
    Input,
    {
      ref: inputRef,
      style: {
        ...attachStyle,
        border: `2px solid ${cellLineColorActived}`,
        ...style
      },
      value,
      className: "cursor-text border-2 px-2 text-[13px] shadow-none focus-visible:ring-transparent bg-background",
      onChange: onChangeInner,
      onBlur: saveValue,
      onMouseDown: (e2) => e2.stopPropagation()
    }
  ) });
};
var TextEditor = (0, import_react131.forwardRef)(TextEditorBase);

// ../../packages/aitable/src/grid/components/editors/basic/BooleanEditor.tsx
var import_react132 = __toESM(require_react(), 1);
var import_ts_keycode_enum2 = __toESM(require_Key_enum(), 1);
var import_jsx_runtime9 = __toESM(require_jsx_runtime(), 1);
var BooleanEditorBase = (props, ref) => {
  const { cell, onChange } = props;
  const focusRef = (0, import_react132.useRef)(null);
  const [value, setValue] = (0, import_react132.useState)(cell.data);
  (0, import_react132.useImperativeHandle)(ref, () => ({
    focus: () => focusRef.current?.focus(),
    setValue: (v) => setValue(v),
    saveValue: noop_default
  }));
  const onKeyDown = (e2) => {
    if (e2.metaKey) {
      return;
    }
    if (e2.keyCode === import_ts_keycode_enum2.Key.Enter) {
      const newValue = !value;
      setValue(newValue);
      onChange?.(newValue || null);
    }
  };
  return (0, import_jsx_runtime9.jsx)("div", { onKeyDown, className: "size-0", children: (0, import_jsx_runtime9.jsx)(
    "input",
    {
      ref: focusRef,
      className: "size-0 border-none p-0 shadow-none outline-none"
    }
  ) });
};
var BooleanEditor = (0, import_react132.forwardRef)(BooleanEditorBase);

// ../../packages/aitable/src/grid/components/editors/basic/ImageEditor.tsx
var import_react133 = __toESM(require_react(), 1);
var import_jsx_runtime10 = __toESM(require_jsx_runtime(), 1);
var ImageEditorBase = (props, ref) => {
  const { cell, style, onChange, isEditing } = props;
  const inputRef = (0, import_react133.useRef)(null);
  const [value, setValue] = (0, import_react133.useState)(cell.data);
  (0, import_react133.useImperativeHandle)(ref, () => ({
    focus: () => inputRef.current?.focus(),
    setValue: (data) => setValue(data),
    saveValue: () => {
      if (!isEditing) {
        return;
      }
      onChange?.(value?.length ? value : null);
    }
  }));
  const display = (value || []).map((i) => i.url).join(", ");
  const onBlur = () => {
    const items = (inputRef.current?.value || "").split(",").map((s) => s.trim()).filter(Boolean).map((url, idx) => ({ id: `${idx}`, url }));
    setValue(items.length ? items : []);
    onChange?.(items.length ? items : null);
  };
  return (0, import_jsx_runtime10.jsx)("div", { className: "rounded-sm border p-2 shadow-sm", style, children: (0, import_jsx_runtime10.jsx)(
    Input,
    {
      ref: inputRef,
      defaultValue: display,
      placeholder: "输入图片URL，逗号分隔",
      onBlur
    }
  ) });
};
var ImageEditor = (0, import_react133.forwardRef)(ImageEditorBase);

// ../../packages/aitable/src/grid/components/editors/basic/ChartEditor.tsx
var import_react134 = __toESM(require_react(), 1);
var import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1);
var ChartEditorBase = (props, ref) => {
  const { cell, style, onChange, isEditing } = props;
  const inputRef = (0, import_react134.useRef)(null);
  const [value, setValue] = (0, import_react134.useState)(cell.displayData?.join(", ") || "");
  (0, import_react134.useImperativeHandle)(ref, () => ({
    focus: () => inputRef.current?.focus(),
    setValue: (data) => {
      const displayValue = Array.isArray(data) ? data.join(", ") : "";
      setValue(displayValue);
    },
    saveValue: () => {
      if (!isEditing) {
        return;
      }
      const numbers = value.split(",").map((s) => parseFloat(s.trim())).filter((n) => !isNaN(n));
      onChange?.(numbers.length ? numbers : null);
    }
  }));
  const onBlur = () => {
    const numbers = value.split(",").map((s) => parseFloat(s.trim())).filter((n) => !isNaN(n));
    onChange?.(numbers.length ? numbers : null);
  };
  return (0, import_jsx_runtime11.jsx)("div", { className: "rounded-sm border p-2 shadow-sm", style, children: (0, import_jsx_runtime11.jsxs)("div", { className: "space-y-2", children: [
    (0, import_jsx_runtime11.jsx)(
      Input,
      {
        ref: inputRef,
        type: "text",
        value,
        onChange: (e2) => setValue(e2.target.value),
        onBlur,
        placeholder: "输入数字，用逗号分隔 (例如: 10, 20, 30)",
        className: "w-full"
      }
    ),
    (0, import_jsx_runtime11.jsx)("div", { className: "text-xs text-muted-foreground", children: "输入数字数据，用逗号分隔。例如：10, 20, 30, 40" })
  ] }) });
};
var ChartEditor = (0, import_react134.forwardRef)(ChartEditorBase);

// ../../packages/aitable/src/grid/components/editors/enhanced/SelectEditor.tsx
var import_react135 = __toESM(require_react(), 1);

// ../../node_modules/fuse.js/dist/fuse.mjs
function isArray2(value) {
  return !Array.isArray ? getTag2(value) === "[object Array]" : Array.isArray(value);
}
var INFINITY7 = 1 / 0;
function baseToString2(value) {
  if (typeof value == "string") {
    return value;
  }
  let result2 = value + "";
  return result2 == "0" && 1 / value == -INFINITY7 ? "-0" : result2;
}
function toString2(value) {
  return value == null ? "" : baseToString2(value);
}
function isString2(value) {
  return typeof value === "string";
}
function isNumber2(value) {
  return typeof value === "number";
}
function isBoolean2(value) {
  return value === true || value === false || isObjectLike2(value) && getTag2(value) == "[object Boolean]";
}
function isObject2(value) {
  return typeof value === "object";
}
function isObjectLike2(value) {
  return isObject2(value) && value !== null;
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isBlank(value) {
  return !value.trim().length;
}
function getTag2(value) {
  return value == null ? value === void 0 ? "[object Undefined]" : "[object Null]" : Object.prototype.toString.call(value);
}
var INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
var LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) => `Invalid value for key ${key}`;
var PATTERN_LENGTH_TOO_LARGE = (max3) => `Pattern length exceeds max of ${max3}.`;
var MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;
var INVALID_KEY_WEIGHT_VALUE = (key) => `Property 'weight' in key '${key}' must be a positive integer`;
var hasOwn = Object.prototype.hasOwnProperty;
var KeyStore = class {
  constructor(keys2) {
    this._keys = [];
    this._keyMap = {};
    let totalWeight = 0;
    keys2.forEach((key) => {
      let obj = createKey(key);
      this._keys.push(obj);
      this._keyMap[obj.id] = obj;
      totalWeight += obj.weight;
    });
    this._keys.forEach((key) => {
      key.weight /= totalWeight;
    });
  }
  get(keyId) {
    return this._keyMap[keyId];
  }
  keys() {
    return this._keys;
  }
  toJSON() {
    return JSON.stringify(this._keys);
  }
};
function createKey(key) {
  let path = null;
  let id = null;
  let src = null;
  let weight = 1;
  let getFn = null;
  if (isString2(key) || isArray2(key)) {
    src = key;
    path = createKeyPath(key);
    id = createKeyId(key);
  } else {
    if (!hasOwn.call(key, "name")) {
      throw new Error(MISSING_KEY_PROPERTY("name"));
    }
    const name = key.name;
    src = name;
    if (hasOwn.call(key, "weight")) {
      weight = key.weight;
      if (weight <= 0) {
        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
      }
    }
    path = createKeyPath(name);
    id = createKeyId(name);
    getFn = key.getFn;
  }
  return { path, id, weight, src, getFn };
}
function createKeyPath(key) {
  return isArray2(key) ? key : key.split(".");
}
function createKeyId(key) {
  return isArray2(key) ? key.join(".") : key;
}
function get2(obj, path) {
  let list = [];
  let arr = false;
  const deepGet = (obj2, path2, index3) => {
    if (!isDefined(obj2)) {
      return;
    }
    if (!path2[index3]) {
      list.push(obj2);
    } else {
      let key = path2[index3];
      const value = obj2[key];
      if (!isDefined(value)) {
        return;
      }
      if (index3 === path2.length - 1 && (isString2(value) || isNumber2(value) || isBoolean2(value))) {
        list.push(toString2(value));
      } else if (isArray2(value)) {
        arr = true;
        for (let i = 0, len = value.length; i < len; i += 1) {
          deepGet(value[i], path2, index3 + 1);
        }
      } else if (path2.length) {
        deepGet(value, path2, index3 + 1);
      }
    }
  };
  deepGet(obj, isString2(path) ? path.split(".") : path, 0);
  return arr ? list : list[0];
}
var MatchOptions = {
  // Whether the matches should be included in the result set. When `true`, each record in the result
  // set will include the indices of the matched characters.
  // These can consequently be used for highlighting purposes.
  includeMatches: false,
  // When `true`, the matching function will continue to the end of a search pattern even if
  // a perfect match has already been located in the string.
  findAllMatches: false,
  // Minimum number of characters that must be matched before a result is considered a match
  minMatchCharLength: 1
};
var BasicOptions = {
  // When `true`, the algorithm continues searching to the end of the input even if a perfect
  // match is found before the end of the same input.
  isCaseSensitive: false,
  // When `true`, the algorithm will ignore diacritics (accents) in comparisons
  ignoreDiacritics: false,
  // When true, the matching function will continue to the end of a search pattern even if
  includeScore: false,
  // List of properties that will be searched. This also supports nested properties.
  keys: [],
  // Whether to sort the result list, by score
  shouldSort: true,
  // Default sort function: sort by ascending score, ascending index
  sortFn: (a, b2) => a.score === b2.score ? a.idx < b2.idx ? -1 : 1 : a.score < b2.score ? -1 : 1
};
var FuzzyOptions = {
  // Approximately where in the text is the pattern expected to be found?
  location: 0,
  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
  // (of both letters and location), a threshold of '1.0' would match anything.
  threshold: 0.6,
  // Determines how close the match must be to the fuzzy location (specified above).
  // An exact letter match which is 'distance' characters away from the fuzzy location
  // would score as a complete mismatch. A distance of '0' requires the match be at
  // the exact location specified, a threshold of '1000' would require a perfect match
  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
  distance: 100
};
var AdvancedOptions = {
  // When `true`, it enables the use of unix-like search commands
  useExtendedSearch: false,
  // The get function to use when fetching an object's properties.
  // The default will search nested paths *ie foo.bar.baz*
  getFn: get2,
  // When `true`, search will ignore `location` and `distance`, so it won't matter
  // where in the string the pattern appears.
  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
  ignoreLocation: false,
  // When `true`, the calculation for the relevance score (used for sorting) will
  // ignore the field-length norm.
  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
  ignoreFieldNorm: false,
  // The weight to determine how much field length norm effects scoring.
  fieldNormWeight: 1
};
var Config = {
  ...BasicOptions,
  ...MatchOptions,
  ...FuzzyOptions,
  ...AdvancedOptions
};
var SPACE = /[^ ]+/g;
function norm(weight = 1, mantissa = 3) {
  const cache = /* @__PURE__ */ new Map();
  const m = Math.pow(10, mantissa);
  return {
    get(value) {
      const numTokens = value.match(SPACE).length;
      if (cache.has(numTokens)) {
        return cache.get(numTokens);
      }
      const norm2 = 1 / Math.pow(numTokens, 0.5 * weight);
      const n = parseFloat(Math.round(norm2 * m) / m);
      cache.set(numTokens, n);
      return n;
    },
    clear() {
      cache.clear();
    }
  };
}
var FuseIndex = class {
  constructor({
    getFn = Config.getFn,
    fieldNormWeight = Config.fieldNormWeight
  } = {}) {
    this.norm = norm(fieldNormWeight, 3);
    this.getFn = getFn;
    this.isCreated = false;
    this.setIndexRecords();
  }
  setSources(docs = []) {
    this.docs = docs;
  }
  setIndexRecords(records = []) {
    this.records = records;
  }
  setKeys(keys2 = []) {
    this.keys = keys2;
    this._keysMap = {};
    keys2.forEach((key, idx) => {
      this._keysMap[key.id] = idx;
    });
  }
  create() {
    if (this.isCreated || !this.docs.length) {
      return;
    }
    this.isCreated = true;
    if (isString2(this.docs[0])) {
      this.docs.forEach((doc, docIndex) => {
        this._addString(doc, docIndex);
      });
    } else {
      this.docs.forEach((doc, docIndex) => {
        this._addObject(doc, docIndex);
      });
    }
    this.norm.clear();
  }
  // Adds a doc to the end of the index
  add(doc) {
    const idx = this.size();
    if (isString2(doc)) {
      this._addString(doc, idx);
    } else {
      this._addObject(doc, idx);
    }
  }
  // Removes the doc at the specified index of the index
  removeAt(idx) {
    this.records.splice(idx, 1);
    for (let i = idx, len = this.size(); i < len; i += 1) {
      this.records[i].i -= 1;
    }
  }
  getValueForItemAtKeyId(item, keyId) {
    return item[this._keysMap[keyId]];
  }
  size() {
    return this.records.length;
  }
  _addString(doc, docIndex) {
    if (!isDefined(doc) || isBlank(doc)) {
      return;
    }
    let record = {
      v: doc,
      i: docIndex,
      n: this.norm.get(doc)
    };
    this.records.push(record);
  }
  _addObject(doc, docIndex) {
    let record = { i: docIndex, $: {} };
    this.keys.forEach((key, keyIndex) => {
      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);
      if (!isDefined(value)) {
        return;
      }
      if (isArray2(value)) {
        let subRecords = [];
        const stack = [{ nestedArrIndex: -1, value }];
        while (stack.length) {
          const { nestedArrIndex, value: value2 } = stack.pop();
          if (!isDefined(value2)) {
            continue;
          }
          if (isString2(value2) && !isBlank(value2)) {
            let subRecord = {
              v: value2,
              i: nestedArrIndex,
              n: this.norm.get(value2)
            };
            subRecords.push(subRecord);
          } else if (isArray2(value2)) {
            value2.forEach((item, k) => {
              stack.push({
                nestedArrIndex: k,
                value: item
              });
            });
          } else ;
        }
        record.$[keyIndex] = subRecords;
      } else if (isString2(value) && !isBlank(value)) {
        let subRecord = {
          v: value,
          n: this.norm.get(value)
        };
        record.$[keyIndex] = subRecord;
      }
    });
    this.records.push(record);
  }
  toJSON() {
    return {
      keys: this.keys,
      records: this.records
    };
  }
};
function createIndex(keys2, docs, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys2.map(createKey));
  myIndex.setSources(docs);
  myIndex.create();
  return myIndex;
}
function parseIndex(data, { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}) {
  const { keys: keys2, records } = data;
  const myIndex = new FuseIndex({ getFn, fieldNormWeight });
  myIndex.setKeys(keys2);
  myIndex.setIndexRecords(records);
  return myIndex;
}
function computeScore$1(pattern, {
  errors = 0,
  currentLocation = 0,
  expectedLocation = 0,
  distance = Config.distance,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  const accuracy = errors / pattern.length;
  if (ignoreLocation) {
    return accuracy;
  }
  const proximity = Math.abs(expectedLocation - currentLocation);
  if (!distance) {
    return proximity ? 1 : accuracy;
  }
  return accuracy + proximity / distance;
}
function convertMaskToIndices(matchmask = [], minMatchCharLength = Config.minMatchCharLength) {
  let indices = [];
  let start = -1;
  let end = -1;
  let i = 0;
  for (let len = matchmask.length; i < len; i += 1) {
    let match2 = matchmask[i];
    if (match2 && start === -1) {
      start = i;
    } else if (!match2 && start !== -1) {
      end = i - 1;
      if (end - start + 1 >= minMatchCharLength) {
        indices.push([start, end]);
      }
      start = -1;
    }
  }
  if (matchmask[i - 1] && i - start >= minMatchCharLength) {
    indices.push([start, i - 1]);
  }
  return indices;
}
var MAX_BITS = 32;
function search(text, pattern, patternAlphabet, {
  location = Config.location,
  distance = Config.distance,
  threshold: threshold2 = Config.threshold,
  findAllMatches = Config.findAllMatches,
  minMatchCharLength = Config.minMatchCharLength,
  includeMatches = Config.includeMatches,
  ignoreLocation = Config.ignoreLocation
} = {}) {
  if (pattern.length > MAX_BITS) {
    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
  }
  const patternLen = pattern.length;
  const textLen = text.length;
  const expectedLocation = Math.max(0, Math.min(location, textLen));
  let currentThreshold = threshold2;
  let bestLocation = expectedLocation;
  const computeMatches = minMatchCharLength > 1 || includeMatches;
  const matchMask = computeMatches ? Array(textLen) : [];
  let index3;
  while ((index3 = text.indexOf(pattern, bestLocation)) > -1) {
    let score = computeScore$1(pattern, {
      currentLocation: index3,
      expectedLocation,
      distance,
      ignoreLocation
    });
    currentThreshold = Math.min(score, currentThreshold);
    bestLocation = index3 + patternLen;
    if (computeMatches) {
      let i = 0;
      while (i < patternLen) {
        matchMask[index3 + i] = 1;
        i += 1;
      }
    }
  }
  bestLocation = -1;
  let lastBitArr = [];
  let finalScore = 1;
  let binMax = patternLen + textLen;
  const mask = 1 << patternLen - 1;
  for (let i = 0; i < patternLen; i += 1) {
    let binMin = 0;
    let binMid = binMax;
    while (binMin < binMid) {
      const score2 = computeScore$1(pattern, {
        errors: i,
        currentLocation: expectedLocation + binMid,
        expectedLocation,
        distance,
        ignoreLocation
      });
      if (score2 <= currentThreshold) {
        binMin = binMid;
      } else {
        binMax = binMid;
      }
      binMid = Math.floor((binMax - binMin) / 2 + binMin);
    }
    binMax = binMid;
    let start = Math.max(1, expectedLocation - binMid + 1);
    let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
    let bitArr = Array(finish + 2);
    bitArr[finish + 1] = (1 << i) - 1;
    for (let j2 = finish; j2 >= start; j2 -= 1) {
      let currentLocation = j2 - 1;
      let charMatch = patternAlphabet[text.charAt(currentLocation)];
      if (computeMatches) {
        matchMask[currentLocation] = +!!charMatch;
      }
      bitArr[j2] = (bitArr[j2 + 1] << 1 | 1) & charMatch;
      if (i) {
        bitArr[j2] |= (lastBitArr[j2 + 1] | lastBitArr[j2]) << 1 | 1 | lastBitArr[j2 + 1];
      }
      if (bitArr[j2] & mask) {
        finalScore = computeScore$1(pattern, {
          errors: i,
          currentLocation,
          expectedLocation,
          distance,
          ignoreLocation
        });
        if (finalScore <= currentThreshold) {
          currentThreshold = finalScore;
          bestLocation = currentLocation;
          if (bestLocation <= expectedLocation) {
            break;
          }
          start = Math.max(1, 2 * expectedLocation - bestLocation);
        }
      }
    }
    const score = computeScore$1(pattern, {
      errors: i + 1,
      currentLocation: expectedLocation,
      expectedLocation,
      distance,
      ignoreLocation
    });
    if (score > currentThreshold) {
      break;
    }
    lastBitArr = bitArr;
  }
  const result2 = {
    isMatch: bestLocation >= 0,
    // Count exact matches (those with a score of 0) to be "almost" exact
    score: Math.max(1e-3, finalScore)
  };
  if (computeMatches) {
    const indices = convertMaskToIndices(matchMask, minMatchCharLength);
    if (!indices.length) {
      result2.isMatch = false;
    } else if (includeMatches) {
      result2.indices = indices;
    }
  }
  return result2;
}
function createPatternAlphabet(pattern) {
  let mask = {};
  for (let i = 0, len = pattern.length; i < len; i += 1) {
    const char = pattern.charAt(i);
    mask[char] = (mask[char] || 0) | 1 << len - i - 1;
  }
  return mask;
}
var stripDiacritics = String.prototype.normalize ? ((str) => str.normalize("NFD").replace(/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/g, "")) : ((str) => str);
var BitapSearch = class {
  constructor(pattern, {
    location = Config.location,
    threshold: threshold2 = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreDiacritics = Config.ignoreDiacritics,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    this.options = {
      location,
      threshold: threshold2,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreDiacritics,
      ignoreLocation
    };
    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;
    this.pattern = pattern;
    this.chunks = [];
    if (!this.pattern.length) {
      return;
    }
    const addChunk = (pattern2, startIndex) => {
      this.chunks.push({
        pattern: pattern2,
        alphabet: createPatternAlphabet(pattern2),
        startIndex
      });
    };
    const len = this.pattern.length;
    if (len > MAX_BITS) {
      let i = 0;
      const remainder = len % MAX_BITS;
      const end = len - remainder;
      while (i < end) {
        addChunk(this.pattern.substr(i, MAX_BITS), i);
        i += MAX_BITS;
      }
      if (remainder) {
        const startIndex = len - MAX_BITS;
        addChunk(this.pattern.substr(startIndex), startIndex);
      }
    } else {
      addChunk(this.pattern, 0);
    }
  }
  searchIn(text) {
    const { isCaseSensitive, ignoreDiacritics, includeMatches } = this.options;
    text = isCaseSensitive ? text : text.toLowerCase();
    text = ignoreDiacritics ? stripDiacritics(text) : text;
    if (this.pattern === text) {
      let result3 = {
        isMatch: true,
        score: 0
      };
      if (includeMatches) {
        result3.indices = [[0, text.length - 1]];
      }
      return result3;
    }
    const {
      location,
      distance,
      threshold: threshold2,
      findAllMatches,
      minMatchCharLength,
      ignoreLocation
    } = this.options;
    let allIndices = [];
    let totalScore = 0;
    let hasMatches = false;
    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {
      const { isMatch: isMatch2, score, indices } = search(text, pattern, alphabet, {
        location: location + startIndex,
        distance,
        threshold: threshold2,
        findAllMatches,
        minMatchCharLength,
        includeMatches,
        ignoreLocation
      });
      if (isMatch2) {
        hasMatches = true;
      }
      totalScore += score;
      if (isMatch2 && indices) {
        allIndices = [...allIndices, ...indices];
      }
    });
    let result2 = {
      isMatch: hasMatches,
      score: hasMatches ? totalScore / this.chunks.length : 1
    };
    if (hasMatches && includeMatches) {
      result2.indices = allIndices;
    }
    return result2;
  }
};
var BaseMatch = class {
  constructor(pattern) {
    this.pattern = pattern;
  }
  static isMultiMatch(pattern) {
    return getMatch(pattern, this.multiRegex);
  }
  static isSingleMatch(pattern) {
    return getMatch(pattern, this.singleRegex);
  }
  search() {
  }
};
function getMatch(pattern, exp) {
  const matches2 = pattern.match(exp);
  return matches2 ? matches2[1] : null;
}
var ExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "exact";
  }
  static get multiRegex() {
    return /^="(.*)"$/;
  }
  static get singleRegex() {
    return /^=(.*)$/;
  }
  search(text) {
    const isMatch2 = text === this.pattern;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
};
var InverseExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"$/;
  }
  static get singleRegex() {
    return /^!(.*)$/;
  }
  search(text) {
    const index3 = text.indexOf(this.pattern);
    const isMatch2 = index3 === -1;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
};
var PrefixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "prefix-exact";
  }
  static get multiRegex() {
    return /^\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^\^(.*)$/;
  }
  search(text) {
    const isMatch2 = text.startsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, this.pattern.length - 1]
    };
  }
};
var InversePrefixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-prefix-exact";
  }
  static get multiRegex() {
    return /^!\^"(.*)"$/;
  }
  static get singleRegex() {
    return /^!\^(.*)$/;
  }
  search(text) {
    const isMatch2 = !text.startsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
};
var SuffixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "suffix-exact";
  }
  static get multiRegex() {
    return /^"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^(.*)\$$/;
  }
  search(text) {
    const isMatch2 = text.endsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [text.length - this.pattern.length, text.length - 1]
    };
  }
};
var InverseSuffixExactMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "inverse-suffix-exact";
  }
  static get multiRegex() {
    return /^!"(.*)"\$$/;
  }
  static get singleRegex() {
    return /^!(.*)\$$/;
  }
  search(text) {
    const isMatch2 = !text.endsWith(this.pattern);
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices: [0, text.length - 1]
    };
  }
};
var FuzzyMatch = class extends BaseMatch {
  constructor(pattern, {
    location = Config.location,
    threshold: threshold2 = Config.threshold,
    distance = Config.distance,
    includeMatches = Config.includeMatches,
    findAllMatches = Config.findAllMatches,
    minMatchCharLength = Config.minMatchCharLength,
    isCaseSensitive = Config.isCaseSensitive,
    ignoreDiacritics = Config.ignoreDiacritics,
    ignoreLocation = Config.ignoreLocation
  } = {}) {
    super(pattern);
    this._bitapSearch = new BitapSearch(pattern, {
      location,
      threshold: threshold2,
      distance,
      includeMatches,
      findAllMatches,
      minMatchCharLength,
      isCaseSensitive,
      ignoreDiacritics,
      ignoreLocation
    });
  }
  static get type() {
    return "fuzzy";
  }
  static get multiRegex() {
    return /^"(.*)"$/;
  }
  static get singleRegex() {
    return /^(.*)$/;
  }
  search(text) {
    return this._bitapSearch.searchIn(text);
  }
};
var IncludeMatch = class extends BaseMatch {
  constructor(pattern) {
    super(pattern);
  }
  static get type() {
    return "include";
  }
  static get multiRegex() {
    return /^'"(.*)"$/;
  }
  static get singleRegex() {
    return /^'(.*)$/;
  }
  search(text) {
    let location = 0;
    let index3;
    const indices = [];
    const patternLen = this.pattern.length;
    while ((index3 = text.indexOf(this.pattern, location)) > -1) {
      location = index3 + patternLen;
      indices.push([index3, location - 1]);
    }
    const isMatch2 = !!indices.length;
    return {
      isMatch: isMatch2,
      score: isMatch2 ? 0 : 1,
      indices
    };
  }
};
var searchers = [
  ExactMatch,
  IncludeMatch,
  PrefixExactMatch,
  InversePrefixExactMatch,
  InverseSuffixExactMatch,
  SuffixExactMatch,
  InverseExactMatch,
  FuzzyMatch
];
var searchersLen = searchers.length;
var SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
var OR_TOKEN = "|";
function parseQuery(pattern, options = {}) {
  return pattern.split(OR_TOKEN).map((item) => {
    let query = item.trim().split(SPACE_RE).filter((item2) => item2 && !!item2.trim());
    let results = [];
    for (let i = 0, len = query.length; i < len; i += 1) {
      const queryItem = query[i];
      let found = false;
      let idx = -1;
      while (!found && ++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isMultiMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          found = true;
        }
      }
      if (found) {
        continue;
      }
      idx = -1;
      while (++idx < searchersLen) {
        const searcher = searchers[idx];
        let token = searcher.isSingleMatch(queryItem);
        if (token) {
          results.push(new searcher(token, options));
          break;
        }
      }
    }
    return results;
  });
}
var MultiMatchSet = /* @__PURE__ */ new Set([FuzzyMatch.type, IncludeMatch.type]);
var ExtendedSearch = class {
  constructor(pattern, {
    isCaseSensitive = Config.isCaseSensitive,
    ignoreDiacritics = Config.ignoreDiacritics,
    includeMatches = Config.includeMatches,
    minMatchCharLength = Config.minMatchCharLength,
    ignoreLocation = Config.ignoreLocation,
    findAllMatches = Config.findAllMatches,
    location = Config.location,
    threshold: threshold2 = Config.threshold,
    distance = Config.distance
  } = {}) {
    this.query = null;
    this.options = {
      isCaseSensitive,
      ignoreDiacritics,
      includeMatches,
      minMatchCharLength,
      findAllMatches,
      ignoreLocation,
      location,
      threshold: threshold2,
      distance
    };
    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;
    this.pattern = pattern;
    this.query = parseQuery(this.pattern, this.options);
  }
  static condition(_2, options) {
    return options.useExtendedSearch;
  }
  searchIn(text) {
    const query = this.query;
    if (!query) {
      return {
        isMatch: false,
        score: 1
      };
    }
    const { includeMatches, isCaseSensitive, ignoreDiacritics } = this.options;
    text = isCaseSensitive ? text : text.toLowerCase();
    text = ignoreDiacritics ? stripDiacritics(text) : text;
    let numMatches = 0;
    let allIndices = [];
    let totalScore = 0;
    for (let i = 0, qLen = query.length; i < qLen; i += 1) {
      const searchers2 = query[i];
      allIndices.length = 0;
      numMatches = 0;
      for (let j2 = 0, pLen = searchers2.length; j2 < pLen; j2 += 1) {
        const searcher = searchers2[j2];
        const { isMatch: isMatch2, indices, score } = searcher.search(text);
        if (isMatch2) {
          numMatches += 1;
          totalScore += score;
          if (includeMatches) {
            const type = searcher.constructor.type;
            if (MultiMatchSet.has(type)) {
              allIndices = [...allIndices, ...indices];
            } else {
              allIndices.push(indices);
            }
          }
        } else {
          totalScore = 0;
          numMatches = 0;
          allIndices.length = 0;
          break;
        }
      }
      if (numMatches) {
        let result2 = {
          isMatch: true,
          score: totalScore / numMatches
        };
        if (includeMatches) {
          result2.indices = allIndices;
        }
        return result2;
      }
    }
    return {
      isMatch: false,
      score: 1
    };
  }
};
var registeredSearchers = [];
function register(...args) {
  registeredSearchers.push(...args);
}
function createSearcher(pattern, options) {
  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {
    let searcherClass = registeredSearchers[i];
    if (searcherClass.condition(pattern, options)) {
      return new searcherClass(pattern, options);
    }
  }
  return new BitapSearch(pattern, options);
}
var LogicalOperator = {
  AND: "$and",
  OR: "$or"
};
var KeyType = {
  PATH: "$path",
  PATTERN: "$val"
};
var isExpression = (query) => !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
var isPath = (query) => !!query[KeyType.PATH];
var isLeaf = (query) => !isArray2(query) && isObject2(query) && !isExpression(query);
var convertToExplicit = (query) => ({
  [LogicalOperator.AND]: Object.keys(query).map((key) => ({
    [key]: query[key]
  }))
});
function parse2(query, options, { auto = true } = {}) {
  const next = (query2) => {
    let keys2 = Object.keys(query2);
    const isQueryPath = isPath(query2);
    if (!isQueryPath && keys2.length > 1 && !isExpression(query2)) {
      return next(convertToExplicit(query2));
    }
    if (isLeaf(query2)) {
      const key = isQueryPath ? query2[KeyType.PATH] : keys2[0];
      const pattern = isQueryPath ? query2[KeyType.PATTERN] : query2[key];
      if (!isString2(pattern)) {
        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
      }
      const obj = {
        keyId: createKeyId(key),
        pattern
      };
      if (auto) {
        obj.searcher = createSearcher(pattern, options);
      }
      return obj;
    }
    let node = {
      children: [],
      operator: keys2[0]
    };
    keys2.forEach((key) => {
      const value = query2[key];
      if (isArray2(value)) {
        value.forEach((item) => {
          node.children.push(next(item));
        });
      }
    });
    return node;
  };
  if (!isExpression(query)) {
    query = convertToExplicit(query);
  }
  return next(query);
}
function computeScore(results, { ignoreFieldNorm = Config.ignoreFieldNorm }) {
  results.forEach((result2) => {
    let totalScore = 1;
    result2.matches.forEach(({ key, norm: norm2, score }) => {
      const weight = key ? key.weight : null;
      totalScore *= Math.pow(
        score === 0 && weight ? Number.EPSILON : score,
        (weight || 1) * (ignoreFieldNorm ? 1 : norm2)
      );
    });
    result2.score = totalScore;
  });
}
function transformMatches(result2, data) {
  const matches2 = result2.matches;
  data.matches = [];
  if (!isDefined(matches2)) {
    return;
  }
  matches2.forEach((match2) => {
    if (!isDefined(match2.indices) || !match2.indices.length) {
      return;
    }
    const { indices, value } = match2;
    let obj = {
      indices,
      value
    };
    if (match2.key) {
      obj.key = match2.key.src;
    }
    if (match2.idx > -1) {
      obj.refIndex = match2.idx;
    }
    data.matches.push(obj);
  });
}
function transformScore(result2, data) {
  data.score = result2.score;
}
function format2(results, docs, {
  includeMatches = Config.includeMatches,
  includeScore = Config.includeScore
} = {}) {
  const transformers = [];
  if (includeMatches) transformers.push(transformMatches);
  if (includeScore) transformers.push(transformScore);
  return results.map((result2) => {
    const { idx } = result2;
    const data = {
      item: docs[idx],
      refIndex: idx
    };
    if (transformers.length) {
      transformers.forEach((transformer) => {
        transformer(result2, data);
      });
    }
    return data;
  });
}
var Fuse = class {
  constructor(docs, options = {}, index3) {
    this.options = { ...Config, ...options };
    if (this.options.useExtendedSearch && false) {
      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
    }
    this._keyStore = new KeyStore(this.options.keys);
    this.setCollection(docs, index3);
  }
  setCollection(docs, index3) {
    this._docs = docs;
    if (index3 && !(index3 instanceof FuseIndex)) {
      throw new Error(INCORRECT_INDEX_TYPE);
    }
    this._myIndex = index3 || createIndex(this.options.keys, this._docs, {
      getFn: this.options.getFn,
      fieldNormWeight: this.options.fieldNormWeight
    });
  }
  add(doc) {
    if (!isDefined(doc)) {
      return;
    }
    this._docs.push(doc);
    this._myIndex.add(doc);
  }
  remove(predicate = () => false) {
    const results = [];
    for (let i = 0, len = this._docs.length; i < len; i += 1) {
      const doc = this._docs[i];
      if (predicate(doc, i)) {
        this.removeAt(i);
        i -= 1;
        len -= 1;
        results.push(doc);
      }
    }
    return results;
  }
  removeAt(idx) {
    this._docs.splice(idx, 1);
    this._myIndex.removeAt(idx);
  }
  getIndex() {
    return this._myIndex;
  }
  search(query, { limit = -1 } = {}) {
    const {
      includeMatches,
      includeScore,
      shouldSort,
      sortFn,
      ignoreFieldNorm
    } = this.options;
    let results = isString2(query) ? isString2(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
    computeScore(results, { ignoreFieldNorm });
    if (shouldSort) {
      results.sort(sortFn);
    }
    if (isNumber2(limit) && limit > -1) {
      results = results.slice(0, limit);
    }
    return format2(results, this._docs, {
      includeMatches,
      includeScore
    });
  }
  _searchStringList(query) {
    const searcher = createSearcher(query, this.options);
    const { records } = this._myIndex;
    const results = [];
    records.forEach(({ v: text, i: idx, n: norm2 }) => {
      if (!isDefined(text)) {
        return;
      }
      const { isMatch: isMatch2, score, indices } = searcher.searchIn(text);
      if (isMatch2) {
        results.push({
          item: text,
          idx,
          matches: [{ score, value: text, norm: norm2, indices }]
        });
      }
    });
    return results;
  }
  _searchLogical(query) {
    const expression = parse2(query, this.options);
    const evaluate = (node, item, idx) => {
      if (!node.children) {
        const { keyId, searcher } = node;
        const matches2 = this._findMatches({
          key: this._keyStore.get(keyId),
          value: this._myIndex.getValueForItemAtKeyId(item, keyId),
          searcher
        });
        if (matches2 && matches2.length) {
          return [
            {
              idx,
              item,
              matches: matches2
            }
          ];
        }
        return [];
      }
      const res = [];
      for (let i = 0, len = node.children.length; i < len; i += 1) {
        const child = node.children[i];
        const result2 = evaluate(child, item, idx);
        if (result2.length) {
          res.push(...result2);
        } else if (node.operator === LogicalOperator.AND) {
          return [];
        }
      }
      return res;
    };
    const records = this._myIndex.records;
    const resultMap = {};
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (isDefined(item)) {
        let expResults = evaluate(expression, item, idx);
        if (expResults.length) {
          if (!resultMap[idx]) {
            resultMap[idx] = { idx, item, matches: [] };
            results.push(resultMap[idx]);
          }
          expResults.forEach(({ matches: matches2 }) => {
            resultMap[idx].matches.push(...matches2);
          });
        }
      }
    });
    return results;
  }
  _searchObjectList(query) {
    const searcher = createSearcher(query, this.options);
    const { keys: keys2, records } = this._myIndex;
    const results = [];
    records.forEach(({ $: item, i: idx }) => {
      if (!isDefined(item)) {
        return;
      }
      let matches2 = [];
      keys2.forEach((key, keyIndex) => {
        matches2.push(
          ...this._findMatches({
            key,
            value: item[keyIndex],
            searcher
          })
        );
      });
      if (matches2.length) {
        results.push({
          idx,
          item,
          matches: matches2
        });
      }
    });
    return results;
  }
  _findMatches({ key, value, searcher }) {
    if (!isDefined(value)) {
      return [];
    }
    let matches2 = [];
    if (isArray2(value)) {
      value.forEach(({ v: text, i: idx, n: norm2 }) => {
        if (!isDefined(text)) {
          return;
        }
        const { isMatch: isMatch2, score, indices } = searcher.searchIn(text);
        if (isMatch2) {
          matches2.push({
            score,
            key,
            value: text,
            idx,
            norm: norm2,
            indices
          });
        }
      });
    } else {
      const { v: text, n: norm2 } = value;
      const { isMatch: isMatch2, score, indices } = searcher.searchIn(text);
      if (isMatch2) {
        matches2.push({ score, key, value: text, norm: norm2, indices });
      }
    }
    return matches2;
  }
};
Fuse.version = "7.1.0";
Fuse.createIndex = createIndex;
Fuse.parseIndex = parseIndex;
Fuse.config = Config;
{
  Fuse.parseQuery = parse2;
}
{
  register(ExtendedSearch);
}

// ../../packages/aitable/src/grid/components/editors/enhanced/SelectEditor.tsx
var import_jsx_runtime12 = __toESM(require_jsx_runtime(), 1);
var SelectEditorBase = (props, ref) => {
  const { cell, style, isEditing, setEditing, onChange, rect } = props;
  const {
    data,
    isMultiple,
    choiceSorted = [],
    choiceMap = {},
    readonly
  } = cell;
  const [searchQuery, setSearchQuery] = (0, import_react135.useState)("");
  const inputRef = (0, import_react135.useRef)(null);
  const options = (0, import_react135.useMemo)(() => {
    return choiceSorted.map((choice) => ({
      id: choice.id || choice.name,
      name: choice.name,
      color: choice.color,
      backgroundColor: choice.backgroundColor
    }));
  }, [choiceSorted]);
  const fuse = (0, import_react135.useMemo)(
    () => new Fuse(options, {
      keys: ["name"],
      threshold: 0.3,
      includeScore: true
    }),
    [options]
  );
  const filteredOptions = (0, import_react135.useMemo)(() => {
    if (!searchQuery) {
      return options;
    }
    return fuse.search(searchQuery).map((result2) => result2.item);
  }, [options, fuse, searchQuery]);
  const selectedValues = (0, import_react135.useMemo)(() => {
    if (!data) {
      return [];
    }
    if (!Array.isArray(data)) {
      return [data];
    }
    return data.map((item) => {
      if (typeof item === "string") {
        return item;
      }
      return item.title || item.id || item.name;
    });
  }, [data]);
  const isSelected = (0, import_react135.useCallback)(
    (optionId) => selectedValues.includes(optionId),
    [selectedValues]
  );
  import_react135.default.useImperativeHandle(ref, () => ({
    focus: () => inputRef.current?.focus(),
    setValue: () => {
    },
    saveValue: () => {
    }
  }));
  const handleSelect = (0, import_react135.useCallback)(
    (optionId) => {
      if (readonly) {
        return;
      }
      if (isMultiple) {
        const newValue = isSelected(optionId) ? selectedValues.filter((id) => id !== optionId) : [...selectedValues, optionId];
        onChange(newValue);
      } else {
        onChange([optionId]);
        setEditing?.(false);
      }
    },
    [readonly, isMultiple, isSelected, selectedValues, onChange, setEditing]
  );
  const handleKeyDown = (0, import_react135.useCallback)(
    (e2) => {
      if (e2.key === "Enter") {
        e2.preventDefault();
        if (filteredOptions.length === 1) {
          handleSelect(filteredOptions[0].id);
        } else if (!isMultiple) {
          setEditing?.(false);
        }
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        setEditing?.(false);
      }
    },
    [filteredOptions, handleSelect, isMultiple, setEditing]
  );
  const popupStyle = (0, import_react135.useMemo)(() => {
    if (!rect) {
      return {};
    }
    const baseStyle = {
      left: rect.x,
      top: rect.y + rect.height
    };
    const viewportHeight = window.innerHeight;
    const maxDropdownHeight = 280;
    if (baseStyle.top + maxDropdownHeight > viewportHeight) {
      return {
        left: rect.x,
        top: rect.y - maxDropdownHeight
      };
    }
    return baseStyle;
  }, [rect]);
  (0, import_react135.useEffect)(() => {
    if (isEditing) {
      inputRef.current?.focus();
    }
  }, [isEditing]);
  (0, import_react135.useEffect)(() => {
    if (!isEditing) {
      return;
    }
    const handleClickOutside = (e2) => {
      const target = e2.target;
      if (!target.closest(".select-editor-popup")) {
        setEditing?.(false);
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setEditing?.(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    document.addEventListener("keydown", handleEscape);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [isEditing, setEditing]);
  if (!isEditing) {
    return null;
  }
  return (0, import_jsx_runtime12.jsxs)(
    "div",
    {
      className: "select-editor-popup",
      style: {
        position: "fixed",
        display: "flex",
        flexDirection: "column",
        gap: "4px",
        padding: "8px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e4,
        minWidth: "200px",
        maxWidth: "300px",
        ...popupStyle,
        ...style
      },
      children: [
        (0, import_jsx_runtime12.jsx)(
          "input",
          {
            ref: inputRef,
            type: "text",
            value: searchQuery,
            onChange: (e2) => setSearchQuery(e2.target.value),
            onKeyDown: handleKeyDown,
            placeholder: "Search options...",
            disabled: readonly,
            style: {
              padding: "6px 8px",
              border: "1px solid #d1d5db",
              borderRadius: "4px",
              fontSize: "13px",
              outline: "none"
            }
          }
        ),
        (0, import_jsx_runtime12.jsxs)(
          "div",
          {
            style: {
              maxHeight: "240px",
              overflowY: "auto",
              display: "flex",
              flexDirection: "column",
              gap: "2px"
            },
            children: [
              filteredOptions.map((option) => {
                const selected = isSelected(option.id);
                return (0, import_jsx_runtime12.jsxs)(
                  "div",
                  {
                    onClick: () => handleSelect(option.id),
                    style: {
                      display: "flex",
                      alignItems: "center",
                      gap: "8px",
                      padding: "6px 8px",
                      borderRadius: "4px",
                      cursor: readonly ? "not-allowed" : "pointer",
                      backgroundColor: selected ? "#dbeafe" : "transparent",
                      color: selected ? "#1e40af" : "#374151",
                      fontSize: "13px",
                      transition: "background-color 0.15s"
                    },
                    onMouseEnter: (e2) => {
                      if (!readonly) {
                        e2.currentTarget.style.backgroundColor = selected ? "#bfdbfe" : "#f3f4f6";
                      }
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = selected ? "#dbeafe" : "transparent";
                    },
                    children: [
                      isMultiple && (0, import_jsx_runtime12.jsx)(
                        "div",
                        {
                          style: {
                            width: "14px",
                            height: "14px",
                            border: "2px solid #d1d5db",
                            borderRadius: "2px",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            backgroundColor: selected ? "#3b82f6" : "#ffffff",
                            borderColor: selected ? "#3b82f6" : "#d1d5db"
                          },
                          children: selected && (0, import_jsx_runtime12.jsx)("span", { style: { color: "#ffffff", fontSize: "10px" }, children: "✓" })
                        }
                      ),
                      option.color && (0, import_jsx_runtime12.jsx)(
                        "div",
                        {
                          style: {
                            width: "12px",
                            height: "12px",
                            borderRadius: "50%",
                            backgroundColor: option.color
                          }
                        }
                      ),
                      (0, import_jsx_runtime12.jsx)("span", { style: { flex: 1 }, children: option.name })
                    ]
                  },
                  option.id
                );
              }),
              filteredOptions.length === 0 && (0, import_jsx_runtime12.jsx)(
                "div",
                {
                  style: {
                    padding: "16px",
                    textAlign: "center",
                    color: "#9ca3af",
                    fontSize: "13px"
                  },
                  children: "No options found"
                }
              )
            ]
          }
        ),
        isMultiple && (0, import_jsx_runtime12.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "flex-end",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime12.jsx)(
                "button",
                {
                  onClick: () => setEditing?.(false),
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#6b7280",
                    backgroundColor: "#f3f4f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: "pointer"
                  },
                  children: "Cancel"
                }
              ),
              (0, import_jsx_runtime12.jsx)(
                "button",
                {
                  onClick: () => setEditing?.(false),
                  disabled: readonly,
                  style: {
                    padding: "6px 16px",
                    fontSize: "13px",
                    color: "#ffffff",
                    backgroundColor: "#3b82f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: readonly ? "not-allowed" : "pointer",
                    opacity: readonly ? 0.5 : 1
                  },
                  children: "Confirm"
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var SelectEditor = (0, import_react135.forwardRef)(SelectEditorBase);

// ../../packages/aitable/src/grid/components/editors/enhanced/DateEditor.tsx
var import_react168 = __toESM(require_react(), 1);

// ../../node_modules/@date-fns/tz/constants/index.js
var constructFromSymbol2 = Symbol.for("constructDateFrom");

// ../../node_modules/@date-fns/tz/tzName/index.js
function tzName(timeZone, date, format3 = "long") {
  return new Intl.DateTimeFormat("en-US", {
    // Enforces engine to render the time. Without the option JavaScriptCore omits it.
    hour: "numeric",
    timeZone,
    timeZoneName: format3
  }).format(date).split(/\s/g).slice(2).join(" ");
}

// ../../node_modules/@date-fns/tz/tzOffset/index.js
var offsetFormatCache = {};
var offsetCache = {};
function tzOffset(timeZone, date) {
  try {
    const format3 = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat("en-US", {
      timeZone,
      timeZoneName: "longOffset"
    }).format;
    const offsetStr = format3(date).split("GMT")[1];
    if (offsetStr in offsetCache) return offsetCache[offsetStr];
    return calcOffset(offsetStr, offsetStr.split(":"));
  } catch {
    if (timeZone in offsetCache) return offsetCache[timeZone];
    const captures = timeZone?.match(offsetRe);
    if (captures) return calcOffset(timeZone, captures.slice(1));
    return NaN;
  }
}
var offsetRe = /([+-]\d\d):?(\d\d)?/;
function calcOffset(cacheStr, values2) {
  const hours = +(values2[0] || 0);
  const minutes = +(values2[1] || 0);
  const seconds = +(values2[2] || 0) / 60;
  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;
}

// ../../node_modules/@date-fns/tz/date/mini.js
var TZDateMini = class _TZDateMini extends Date {
  //#region static
  constructor(...args) {
    super();
    if (args.length > 1 && typeof args[args.length - 1] === "string") {
      this.timeZone = args.pop();
    }
    this.internal = /* @__PURE__ */ new Date();
    if (isNaN(tzOffset(this.timeZone, this))) {
      this.setTime(NaN);
    } else {
      if (!args.length) {
        this.setTime(Date.now());
      } else if (typeof args[0] === "number" && (args.length === 1 || args.length === 2 && typeof args[1] !== "number")) {
        this.setTime(args[0]);
      } else if (typeof args[0] === "string") {
        this.setTime(+new Date(args[0]));
      } else if (args[0] instanceof Date) {
        this.setTime(+args[0]);
      } else {
        this.setTime(+new Date(...args));
        adjustToSystemTZ(this, NaN);
        syncToInternal(this);
      }
    }
  }
  static tz(tz, ...args) {
    return args.length ? new _TZDateMini(...args, tz) : new _TZDateMini(Date.now(), tz);
  }
  //#endregion
  //#region time zone
  withTimeZone(timeZone) {
    return new _TZDateMini(+this, timeZone);
  }
  getTimezoneOffset() {
    const offset = -tzOffset(this.timeZone, this);
    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);
  }
  //#endregion
  //#region time
  setTime(time) {
    Date.prototype.setTime.apply(this, arguments);
    syncToInternal(this);
    return +this;
  }
  //#endregion
  //#region date-fns integration
  [Symbol.for("constructDateFrom")](date) {
    return new _TZDateMini(+new Date(date), this.timeZone);
  }
  //#endregion
};
var re2 = /^(get|set)(?!UTC)/;
Object.getOwnPropertyNames(Date.prototype).forEach((method2) => {
  if (!re2.test(method2)) return;
  const utcMethod = method2.replace(re2, "$1UTC");
  if (!TZDateMini.prototype[utcMethod]) return;
  if (method2.startsWith("get")) {
    TZDateMini.prototype[method2] = function() {
      return this.internal[utcMethod]();
    };
  } else {
    TZDateMini.prototype[method2] = function() {
      Date.prototype[utcMethod].apply(this.internal, arguments);
      syncFromInternal(this);
      return +this;
    };
    TZDateMini.prototype[utcMethod] = function() {
      Date.prototype[utcMethod].apply(this, arguments);
      syncToInternal(this);
      return +this;
    };
  }
});
function syncToInternal(date) {
  date.internal.setTime(+date);
  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-tzOffset(date.timeZone, date) * 60));
}
function syncFromInternal(date) {
  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());
  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());
  adjustToSystemTZ(date);
}
function adjustToSystemTZ(date) {
  const baseOffset = tzOffset(date.timeZone, date);
  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);
  const prevHour = /* @__PURE__ */ new Date(+date);
  prevHour.setUTCHours(prevHour.getUTCHours() - 1);
  const systemOffset = -(/* @__PURE__ */ new Date(+date)).getTimezoneOffset();
  const prevHourSystemOffset = -(/* @__PURE__ */ new Date(+prevHour)).getTimezoneOffset();
  const systemDSTChange = systemOffset - prevHourSystemOffset;
  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();
  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);
  const offsetDiff = systemOffset - offset;
  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);
  const systemDate = /* @__PURE__ */ new Date(+date);
  systemDate.setUTCSeconds(0);
  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;
  const secondsOffset = Math.round(-(tzOffset(date.timeZone, date) * 60)) % 60;
  if (secondsOffset || systemSecondsOffset) {
    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);
    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);
  }
  const postBaseOffset = tzOffset(date.timeZone, date);
  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);
  const postSystemOffset = -(/* @__PURE__ */ new Date(+date)).getTimezoneOffset();
  const postOffsetDiff = postSystemOffset - postOffset;
  const offsetChanged = postOffset !== offset;
  const postDiff = postOffsetDiff - offsetDiff;
  if (offsetChanged && postDiff) {
    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);
    const newBaseOffset = tzOffset(date.timeZone, date);
    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);
    const offsetChange = postOffset - newOffset;
    if (offsetChange) {
      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);
      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);
    }
  }
}

// ../../node_modules/@date-fns/tz/date/index.js
var TZDate = class _TZDate extends TZDateMini {
  //#region static
  static tz(tz, ...args) {
    return args.length ? new _TZDate(...args, tz) : new _TZDate(Date.now(), tz);
  }
  //#endregion
  //#region representation
  toISOString() {
    const [sign, hours, minutes] = this.tzComponents();
    const tz = `${sign}${hours}:${minutes}`;
    return this.internal.toISOString().slice(0, -1) + tz;
  }
  toString() {
    return `${this.toDateString()} ${this.toTimeString()}`;
  }
  toDateString() {
    const [day, date, month, year] = this.internal.toUTCString().split(" ");
    return `${day?.slice(0, -1)} ${month} ${date} ${year}`;
  }
  toTimeString() {
    const time = this.internal.toUTCString().split(" ")[4];
    const [sign, hours, minutes] = this.tzComponents();
    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;
  }
  toLocaleString(locales, options) {
    return Date.prototype.toLocaleString.call(this, locales, {
      ...options,
      timeZone: options?.timeZone || this.timeZone
    });
  }
  toLocaleDateString(locales, options) {
    return Date.prototype.toLocaleDateString.call(this, locales, {
      ...options,
      timeZone: options?.timeZone || this.timeZone
    });
  }
  toLocaleTimeString(locales, options) {
    return Date.prototype.toLocaleTimeString.call(this, locales, {
      ...options,
      timeZone: options?.timeZone || this.timeZone
    });
  }
  //#endregion
  //#region private
  tzComponents() {
    const offset = this.getTimezoneOffset();
    const sign = offset > 0 ? "-" : "+";
    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, "0");
    const minutes = String(Math.abs(offset) % 60).padStart(2, "0");
    return [sign, hours, minutes];
  }
  //#endregion
  withTimeZone(timeZone) {
    return new _TZDate(+this, timeZone);
  }
  //#region date-fns integration
  [Symbol.for("constructDateFrom")](date) {
    return new _TZDate(+new Date(date), this.timeZone);
  }
  //#endregion
};

// ../../node_modules/react-day-picker/dist/esm/helpers/getBroadcastWeeksInMonth.js
var FIVE_WEEKS = 5;
var FOUR_WEEKS = 4;
function getBroadcastWeeksInMonth(month, dateLib) {
  const firstDayOfMonth = dateLib.startOfMonth(month);
  const firstDayOfWeek = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7;
  const broadcastStartDate = dateLib.addDays(month, -firstDayOfWeek + 1);
  const lastDateOfLastWeek = dateLib.addDays(broadcastStartDate, FIVE_WEEKS * 7 - 1);
  const numberOfWeeks = dateLib.getMonth(month) === dateLib.getMonth(lastDateOfLastWeek) ? FIVE_WEEKS : FOUR_WEEKS;
  return numberOfWeeks;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/startOfBroadcastWeek.js
function startOfBroadcastWeek(date, dateLib) {
  const firstOfMonth = dateLib.startOfMonth(date);
  const dayOfWeek = firstOfMonth.getDay();
  if (dayOfWeek === 1) {
    return firstOfMonth;
  } else if (dayOfWeek === 0) {
    return dateLib.addDays(firstOfMonth, -1 * 6);
  } else {
    return dateLib.addDays(firstOfMonth, -1 * (dayOfWeek - 1));
  }
}

// ../../node_modules/react-day-picker/dist/esm/helpers/endOfBroadcastWeek.js
function endOfBroadcastWeek(date, dateLib) {
  const startDate = startOfBroadcastWeek(date, dateLib);
  const numberOfWeeks = getBroadcastWeeksInMonth(date, dateLib);
  const endDate = dateLib.addDays(startDate, numberOfWeeks * 7 - 1);
  return endDate;
}

// ../../node_modules/react-day-picker/dist/esm/classes/DateLib.js
var DateLib = class _DateLib {
  /**
   * Creates an instance of `DateLib`.
   *
   * @param options Configuration options for the date library.
   * @param overrides Custom overrides for the date library functions.
   */
  constructor(options, overrides) {
    this.Date = Date;
    this.today = () => {
      if (this.overrides?.today) {
        return this.overrides.today();
      }
      if (this.options.timeZone) {
        return TZDate.tz(this.options.timeZone);
      }
      return new this.Date();
    };
    this.newDate = (year, monthIndex, date) => {
      if (this.overrides?.newDate) {
        return this.overrides.newDate(year, monthIndex, date);
      }
      if (this.options.timeZone) {
        return new TZDate(year, monthIndex, date, this.options.timeZone);
      }
      return new Date(year, monthIndex, date);
    };
    this.addDays = (date, amount) => {
      return this.overrides?.addDays ? this.overrides.addDays(date, amount) : addDays(date, amount);
    };
    this.addMonths = (date, amount) => {
      return this.overrides?.addMonths ? this.overrides.addMonths(date, amount) : addMonths(date, amount);
    };
    this.addWeeks = (date, amount) => {
      return this.overrides?.addWeeks ? this.overrides.addWeeks(date, amount) : addWeeks(date, amount);
    };
    this.addYears = (date, amount) => {
      return this.overrides?.addYears ? this.overrides.addYears(date, amount) : addYears(date, amount);
    };
    this.differenceInCalendarDays = (dateLeft, dateRight) => {
      return this.overrides?.differenceInCalendarDays ? this.overrides.differenceInCalendarDays(dateLeft, dateRight) : differenceInCalendarDays(dateLeft, dateRight);
    };
    this.differenceInCalendarMonths = (dateLeft, dateRight) => {
      return this.overrides?.differenceInCalendarMonths ? this.overrides.differenceInCalendarMonths(dateLeft, dateRight) : differenceInCalendarMonths(dateLeft, dateRight);
    };
    this.eachMonthOfInterval = (interval) => {
      return this.overrides?.eachMonthOfInterval ? this.overrides.eachMonthOfInterval(interval) : eachMonthOfInterval(interval);
    };
    this.eachYearOfInterval = (interval) => {
      const years = this.overrides?.eachYearOfInterval ? this.overrides.eachYearOfInterval(interval) : eachYearOfInterval(interval);
      const uniqueYears = new Set(years.map((d) => this.getYear(d)));
      if (uniqueYears.size === years.length) {
        return years;
      }
      const yearsArray = [];
      uniqueYears.forEach((y) => {
        yearsArray.push(new Date(y, 0, 1));
      });
      return yearsArray;
    };
    this.endOfBroadcastWeek = (date) => {
      return this.overrides?.endOfBroadcastWeek ? this.overrides.endOfBroadcastWeek(date) : endOfBroadcastWeek(date, this);
    };
    this.endOfISOWeek = (date) => {
      return this.overrides?.endOfISOWeek ? this.overrides.endOfISOWeek(date) : endOfISOWeek(date);
    };
    this.endOfMonth = (date) => {
      return this.overrides?.endOfMonth ? this.overrides.endOfMonth(date) : endOfMonth(date);
    };
    this.endOfWeek = (date, options2) => {
      return this.overrides?.endOfWeek ? this.overrides.endOfWeek(date, options2) : endOfWeek(date, this.options);
    };
    this.endOfYear = (date) => {
      return this.overrides?.endOfYear ? this.overrides.endOfYear(date) : endOfYear(date);
    };
    this.format = (date, formatStr, _options) => {
      const formatted = this.overrides?.format ? this.overrides.format(date, formatStr, this.options) : format(date, formatStr, this.options);
      if (this.options.numerals && this.options.numerals !== "latn") {
        return this.replaceDigits(formatted);
      }
      return formatted;
    };
    this.getISOWeek = (date) => {
      return this.overrides?.getISOWeek ? this.overrides.getISOWeek(date) : getISOWeek(date);
    };
    this.getMonth = (date, _options) => {
      return this.overrides?.getMonth ? this.overrides.getMonth(date, this.options) : getMonth(date, this.options);
    };
    this.getYear = (date, _options) => {
      return this.overrides?.getYear ? this.overrides.getYear(date, this.options) : getYear(date, this.options);
    };
    this.getWeek = (date, _options) => {
      return this.overrides?.getWeek ? this.overrides.getWeek(date, this.options) : getWeek(date, this.options);
    };
    this.isAfter = (date, dateToCompare) => {
      return this.overrides?.isAfter ? this.overrides.isAfter(date, dateToCompare) : isAfter(date, dateToCompare);
    };
    this.isBefore = (date, dateToCompare) => {
      return this.overrides?.isBefore ? this.overrides.isBefore(date, dateToCompare) : isBefore(date, dateToCompare);
    };
    this.isDate = (value) => {
      return this.overrides?.isDate ? this.overrides.isDate(value) : isDate2(value);
    };
    this.isSameDay = (dateLeft, dateRight) => {
      return this.overrides?.isSameDay ? this.overrides.isSameDay(dateLeft, dateRight) : isSameDay(dateLeft, dateRight);
    };
    this.isSameMonth = (dateLeft, dateRight) => {
      return this.overrides?.isSameMonth ? this.overrides.isSameMonth(dateLeft, dateRight) : isSameMonth(dateLeft, dateRight);
    };
    this.isSameYear = (dateLeft, dateRight) => {
      return this.overrides?.isSameYear ? this.overrides.isSameYear(dateLeft, dateRight) : isSameYear(dateLeft, dateRight);
    };
    this.max = (dates) => {
      return this.overrides?.max ? this.overrides.max(dates) : max2(dates);
    };
    this.min = (dates) => {
      return this.overrides?.min ? this.overrides.min(dates) : min2(dates);
    };
    this.setMonth = (date, month) => {
      return this.overrides?.setMonth ? this.overrides.setMonth(date, month) : setMonth(date, month);
    };
    this.setYear = (date, year) => {
      return this.overrides?.setYear ? this.overrides.setYear(date, year) : setYear(date, year);
    };
    this.startOfBroadcastWeek = (date, _dateLib) => {
      return this.overrides?.startOfBroadcastWeek ? this.overrides.startOfBroadcastWeek(date, this) : startOfBroadcastWeek(date, this);
    };
    this.startOfDay = (date) => {
      return this.overrides?.startOfDay ? this.overrides.startOfDay(date) : startOfDay(date);
    };
    this.startOfISOWeek = (date) => {
      return this.overrides?.startOfISOWeek ? this.overrides.startOfISOWeek(date) : startOfISOWeek(date);
    };
    this.startOfMonth = (date) => {
      return this.overrides?.startOfMonth ? this.overrides.startOfMonth(date) : startOfMonth(date);
    };
    this.startOfWeek = (date, _options) => {
      return this.overrides?.startOfWeek ? this.overrides.startOfWeek(date, this.options) : startOfWeek(date, this.options);
    };
    this.startOfYear = (date) => {
      return this.overrides?.startOfYear ? this.overrides.startOfYear(date) : startOfYear(date);
    };
    this.options = { locale: enUS, ...options };
    this.overrides = overrides;
  }
  /**
   * Generates a mapping of Arabic digits (0-9) to the target numbering system
   * digits.
   *
   * @since 9.5.0
   * @returns A record mapping Arabic digits to the target numerals.
   */
  getDigitMap() {
    const { numerals = "latn" } = this.options;
    const formatter = new Intl.NumberFormat("en-US", {
      numberingSystem: numerals
    });
    const digitMap = {};
    for (let i = 0; i < 10; i++) {
      digitMap[i.toString()] = formatter.format(i);
    }
    return digitMap;
  }
  /**
   * Replaces Arabic digits in a string with the target numbering system digits.
   *
   * @since 9.5.0
   * @param input The string containing Arabic digits.
   * @returns The string with digits replaced.
   */
  replaceDigits(input) {
    const digitMap = this.getDigitMap();
    return input.replace(/\d/g, (digit) => digitMap[digit] || digit);
  }
  /**
   * Formats a number using the configured numbering system.
   *
   * @since 9.5.0
   * @param value The number to format.
   * @returns The formatted number as a string.
   */
  formatNumber(value) {
    return this.replaceDigits(value.toString());
  }
  /**
   * Returns the preferred ordering for month and year labels for the current
   * locale.
   */
  getMonthYearOrder() {
    const code = this.options.locale?.code;
    if (!code) {
      return "month-first";
    }
    return _DateLib.yearFirstLocales.has(code) ? "year-first" : "month-first";
  }
  /**
   * Formats the month/year pair respecting locale conventions.
   *
   * @since 9.11.0
   */
  formatMonthYear(date) {
    const { locale, timeZone, numerals } = this.options;
    const localeCode = locale?.code;
    if (localeCode && _DateLib.yearFirstLocales.has(localeCode)) {
      try {
        const intl = new Intl.DateTimeFormat(localeCode, {
          month: "long",
          year: "numeric",
          timeZone,
          numberingSystem: numerals
        });
        const formatted = intl.format(date);
        return formatted;
      } catch {
      }
    }
    const pattern = this.getMonthYearOrder() === "year-first" ? "y LLLL" : "LLLL y";
    return this.format(date, pattern);
  }
};
DateLib.yearFirstLocales = /* @__PURE__ */ new Set([
  "eu",
  "hu",
  "ja",
  "ja-Hira",
  "ja-JP",
  "ko",
  "ko-KR",
  "lt",
  "lt-LT",
  "lv",
  "lv-LV",
  "mn",
  "mn-MN",
  "zh",
  "zh-CN",
  "zh-HK",
  "zh-TW"
]);
var defaultDateLib = new DateLib();

// ../../node_modules/react-day-picker/dist/esm/classes/CalendarDay.js
var CalendarDay = class {
  constructor(date, displayMonth, dateLib = defaultDateLib) {
    this.date = date;
    this.displayMonth = displayMonth;
    this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));
    this.dateLib = dateLib;
  }
  /**
   * Checks if this day is equal to another `CalendarDay`, considering both the
   * date and the displayed month.
   *
   * @param day The `CalendarDay` to compare with.
   * @returns `true` if the days are equal, otherwise `false`.
   */
  isEqualTo(day) {
    return this.dateLib.isSameDay(day.date, this.date) && this.dateLib.isSameMonth(day.displayMonth, this.displayMonth);
  }
};

// ../../node_modules/react-day-picker/dist/esm/classes/CalendarMonth.js
var CalendarMonth = class {
  constructor(month, weeks) {
    this.date = month;
    this.weeks = weeks;
  }
};

// ../../node_modules/react-day-picker/dist/esm/classes/CalendarWeek.js
var CalendarWeek = class {
  constructor(weekNumber, days) {
    this.days = days;
    this.weekNumber = weekNumber;
  }
};

// ../../node_modules/react-day-picker/dist/esm/components/custom-components.js
var custom_components_exports = {};
__export(custom_components_exports, {
  Button: () => Button2,
  CaptionLabel: () => CaptionLabel,
  Chevron: () => Chevron,
  Day: () => Day,
  DayButton: () => DayButton,
  Dropdown: () => Dropdown,
  DropdownNav: () => DropdownNav,
  Footer: () => Footer,
  Month: () => Month,
  MonthCaption: () => MonthCaption,
  MonthGrid: () => MonthGrid,
  Months: () => Months,
  MonthsDropdown: () => MonthsDropdown,
  Nav: () => Nav,
  NextMonthButton: () => NextMonthButton,
  Option: () => Option2,
  PreviousMonthButton: () => PreviousMonthButton,
  Root: () => Root,
  Select: () => Select,
  Week: () => Week,
  WeekNumber: () => WeekNumber,
  WeekNumberHeader: () => WeekNumberHeader,
  Weekday: () => Weekday,
  Weekdays: () => Weekdays,
  Weeks: () => Weeks,
  YearsDropdown: () => YearsDropdown
});

// ../../node_modules/react-day-picker/dist/esm/components/Button.js
var import_react136 = __toESM(require_react(), 1);
function Button2(props) {
  return import_react136.default.createElement("button", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/CaptionLabel.js
var import_react137 = __toESM(require_react(), 1);
function CaptionLabel(props) {
  return import_react137.default.createElement("span", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Chevron.js
var import_react138 = __toESM(require_react(), 1);
function Chevron(props) {
  const { size: size2 = 24, orientation = "left", className } = props;
  return (
    // biome-ignore lint/a11y/noSvgWithoutTitle: handled by the parent component
    import_react138.default.createElement(
      "svg",
      { className, width: size2, height: size2, viewBox: "0 0 24 24" },
      orientation === "up" && import_react138.default.createElement("polygon", { points: "6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28" }),
      orientation === "down" && import_react138.default.createElement("polygon", { points: "6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72" }),
      orientation === "left" && import_react138.default.createElement("polygon", { points: "16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20" }),
      orientation === "right" && import_react138.default.createElement("polygon", { points: "8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20" })
    )
  );
}

// ../../node_modules/react-day-picker/dist/esm/components/Day.js
var import_react139 = __toESM(require_react(), 1);
function Day(props) {
  const { day, modifiers, ...tdProps } = props;
  return import_react139.default.createElement("td", { ...tdProps });
}

// ../../node_modules/react-day-picker/dist/esm/components/DayButton.js
var import_react140 = __toESM(require_react(), 1);
function DayButton(props) {
  const { day, modifiers, ...buttonProps } = props;
  const ref = import_react140.default.useRef(null);
  import_react140.default.useEffect(() => {
    if (modifiers.focused)
      ref.current?.focus();
  }, [modifiers.focused]);
  return import_react140.default.createElement("button", { ref, ...buttonProps });
}

// ../../node_modules/react-day-picker/dist/esm/components/Dropdown.js
var import_react141 = __toESM(require_react(), 1);

// ../../node_modules/react-day-picker/dist/esm/UI.js
var UI;
(function(UI2) {
  UI2["Root"] = "root";
  UI2["Chevron"] = "chevron";
  UI2["Day"] = "day";
  UI2["DayButton"] = "day_button";
  UI2["CaptionLabel"] = "caption_label";
  UI2["Dropdowns"] = "dropdowns";
  UI2["Dropdown"] = "dropdown";
  UI2["DropdownRoot"] = "dropdown_root";
  UI2["Footer"] = "footer";
  UI2["MonthGrid"] = "month_grid";
  UI2["MonthCaption"] = "month_caption";
  UI2["MonthsDropdown"] = "months_dropdown";
  UI2["Month"] = "month";
  UI2["Months"] = "months";
  UI2["Nav"] = "nav";
  UI2["NextMonthButton"] = "button_next";
  UI2["PreviousMonthButton"] = "button_previous";
  UI2["Week"] = "week";
  UI2["Weeks"] = "weeks";
  UI2["Weekday"] = "weekday";
  UI2["Weekdays"] = "weekdays";
  UI2["WeekNumber"] = "week_number";
  UI2["WeekNumberHeader"] = "week_number_header";
  UI2["YearsDropdown"] = "years_dropdown";
})(UI || (UI = {}));
var DayFlag;
(function(DayFlag2) {
  DayFlag2["disabled"] = "disabled";
  DayFlag2["hidden"] = "hidden";
  DayFlag2["outside"] = "outside";
  DayFlag2["focused"] = "focused";
  DayFlag2["today"] = "today";
})(DayFlag || (DayFlag = {}));
var SelectionState;
(function(SelectionState2) {
  SelectionState2["range_end"] = "range_end";
  SelectionState2["range_middle"] = "range_middle";
  SelectionState2["range_start"] = "range_start";
  SelectionState2["selected"] = "selected";
})(SelectionState || (SelectionState = {}));
var Animation;
(function(Animation2) {
  Animation2["weeks_before_enter"] = "weeks_before_enter";
  Animation2["weeks_before_exit"] = "weeks_before_exit";
  Animation2["weeks_after_enter"] = "weeks_after_enter";
  Animation2["weeks_after_exit"] = "weeks_after_exit";
  Animation2["caption_after_enter"] = "caption_after_enter";
  Animation2["caption_after_exit"] = "caption_after_exit";
  Animation2["caption_before_enter"] = "caption_before_enter";
  Animation2["caption_before_exit"] = "caption_before_exit";
})(Animation || (Animation = {}));

// ../../node_modules/react-day-picker/dist/esm/components/Dropdown.js
function Dropdown(props) {
  const { options, className, components, classNames, ...selectProps } = props;
  const cssClassSelect = [classNames[UI.Dropdown], className].join(" ");
  const selectedOption = options?.find(({ value }) => value === selectProps.value);
  return import_react141.default.createElement(
    "span",
    { "data-disabled": selectProps.disabled, className: classNames[UI.DropdownRoot] },
    import_react141.default.createElement(components.Select, { className: cssClassSelect, ...selectProps }, options?.map(({ value, label, disabled }) => import_react141.default.createElement(components.Option, { key: value, value, disabled }, label))),
    import_react141.default.createElement(
      "span",
      { className: classNames[UI.CaptionLabel], "aria-hidden": true },
      selectedOption?.label,
      import_react141.default.createElement(components.Chevron, { orientation: "down", size: 18, className: classNames[UI.Chevron] })
    )
  );
}

// ../../node_modules/react-day-picker/dist/esm/components/DropdownNav.js
var import_react142 = __toESM(require_react(), 1);
function DropdownNav(props) {
  return import_react142.default.createElement("div", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Footer.js
var import_react143 = __toESM(require_react(), 1);
function Footer(props) {
  return import_react143.default.createElement("div", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Month.js
var import_react144 = __toESM(require_react(), 1);
function Month(props) {
  const { calendarMonth, displayIndex, ...divProps } = props;
  return import_react144.default.createElement("div", { ...divProps }, props.children);
}

// ../../node_modules/react-day-picker/dist/esm/components/MonthCaption.js
var import_react145 = __toESM(require_react(), 1);
function MonthCaption(props) {
  const { calendarMonth, displayIndex, ...divProps } = props;
  return import_react145.default.createElement("div", { ...divProps });
}

// ../../node_modules/react-day-picker/dist/esm/components/MonthGrid.js
var import_react146 = __toESM(require_react(), 1);
function MonthGrid(props) {
  return import_react146.default.createElement("table", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Months.js
var import_react147 = __toESM(require_react(), 1);
function Months(props) {
  return import_react147.default.createElement("div", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/MonthsDropdown.js
var import_react149 = __toESM(require_react(), 1);

// ../../node_modules/react-day-picker/dist/esm/useDayPicker.js
var import_react148 = __toESM(require_react(), 1);
var dayPickerContext = (0, import_react148.createContext)(void 0);
function useDayPicker() {
  const context = (0, import_react148.useContext)(dayPickerContext);
  if (context === void 0) {
    throw new Error("useDayPicker() must be used within a custom component.");
  }
  return context;
}

// ../../node_modules/react-day-picker/dist/esm/components/MonthsDropdown.js
function MonthsDropdown(props) {
  const { components } = useDayPicker();
  return import_react149.default.createElement(components.Dropdown, { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Nav.js
var import_react150 = __toESM(require_react(), 1);
function Nav(props) {
  const { onPreviousClick, onNextClick, previousMonth, nextMonth, ...navProps } = props;
  const { components, classNames, labels: { labelPrevious: labelPrevious2, labelNext: labelNext2 } } = useDayPicker();
  const handleNextClick = (0, import_react150.useCallback)((e2) => {
    if (nextMonth) {
      onNextClick?.(e2);
    }
  }, [nextMonth, onNextClick]);
  const handlePreviousClick = (0, import_react150.useCallback)((e2) => {
    if (previousMonth) {
      onPreviousClick?.(e2);
    }
  }, [previousMonth, onPreviousClick]);
  return import_react150.default.createElement(
    "nav",
    { ...navProps },
    import_react150.default.createElement(
      components.PreviousMonthButton,
      { type: "button", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? void 0 : -1, "aria-disabled": previousMonth ? void 0 : true, "aria-label": labelPrevious2(previousMonth), onClick: handlePreviousClick },
      import_react150.default.createElement(components.Chevron, { disabled: previousMonth ? void 0 : true, className: classNames[UI.Chevron], orientation: "left" })
    ),
    import_react150.default.createElement(
      components.NextMonthButton,
      { type: "button", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? void 0 : -1, "aria-disabled": nextMonth ? void 0 : true, "aria-label": labelNext2(nextMonth), onClick: handleNextClick },
      import_react150.default.createElement(components.Chevron, { disabled: nextMonth ? void 0 : true, orientation: "right", className: classNames[UI.Chevron] })
    )
  );
}

// ../../node_modules/react-day-picker/dist/esm/components/NextMonthButton.js
var import_react151 = __toESM(require_react(), 1);
function NextMonthButton(props) {
  const { components } = useDayPicker();
  return import_react151.default.createElement(components.Button, { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Option.js
var import_react152 = __toESM(require_react(), 1);
function Option2(props) {
  return import_react152.default.createElement("option", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/PreviousMonthButton.js
var import_react153 = __toESM(require_react(), 1);
function PreviousMonthButton(props) {
  const { components } = useDayPicker();
  return import_react153.default.createElement(components.Button, { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Root.js
var import_react154 = __toESM(require_react(), 1);
function Root(props) {
  const { rootRef, ...rest2 } = props;
  return import_react154.default.createElement("div", { ...rest2, ref: rootRef });
}

// ../../node_modules/react-day-picker/dist/esm/components/Select.js
var import_react155 = __toESM(require_react(), 1);
function Select(props) {
  return import_react155.default.createElement("select", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Week.js
var import_react156 = __toESM(require_react(), 1);
function Week(props) {
  const { week, ...trProps } = props;
  return import_react156.default.createElement("tr", { ...trProps });
}

// ../../node_modules/react-day-picker/dist/esm/components/Weekday.js
var import_react157 = __toESM(require_react(), 1);
function Weekday(props) {
  return import_react157.default.createElement("th", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Weekdays.js
var import_react158 = __toESM(require_react(), 1);
function Weekdays(props) {
  return import_react158.default.createElement(
    "thead",
    { "aria-hidden": true },
    import_react158.default.createElement("tr", { ...props })
  );
}

// ../../node_modules/react-day-picker/dist/esm/components/WeekNumber.js
var import_react159 = __toESM(require_react(), 1);
function WeekNumber(props) {
  const { week, ...thProps } = props;
  return import_react159.default.createElement("th", { ...thProps });
}

// ../../node_modules/react-day-picker/dist/esm/components/WeekNumberHeader.js
var import_react160 = __toESM(require_react(), 1);
function WeekNumberHeader(props) {
  return import_react160.default.createElement("th", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/Weeks.js
var import_react161 = __toESM(require_react(), 1);
function Weeks(props) {
  return import_react161.default.createElement("tbody", { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/components/YearsDropdown.js
var import_react162 = __toESM(require_react(), 1);
function YearsDropdown(props) {
  const { components } = useDayPicker();
  return import_react162.default.createElement(components.Dropdown, { ...props });
}

// ../../node_modules/react-day-picker/dist/esm/DayPicker.js
var import_react167 = __toESM(require_react(), 1);

// ../../node_modules/react-day-picker/dist/esm/utils/rangeIncludesDate.js
function rangeIncludesDate(range2, date, excludeEnds = false, dateLib = defaultDateLib) {
  let { from, to } = range2;
  const { differenceInCalendarDays: differenceInCalendarDays2, isSameDay: isSameDay2 } = dateLib;
  if (from && to) {
    const isRangeInverted = differenceInCalendarDays2(to, from) < 0;
    if (isRangeInverted) {
      [from, to] = [to, from];
    }
    const isInRange = differenceInCalendarDays2(date, from) >= (excludeEnds ? 1 : 0) && differenceInCalendarDays2(to, date) >= (excludeEnds ? 1 : 0);
    return isInRange;
  }
  if (!excludeEnds && to) {
    return isSameDay2(to, date);
  }
  if (!excludeEnds && from) {
    return isSameDay2(from, date);
  }
  return false;
}

// ../../node_modules/react-day-picker/dist/esm/utils/typeguards.js
function isDateInterval(matcher) {
  return Boolean(matcher && typeof matcher === "object" && "before" in matcher && "after" in matcher);
}
function isDateRange(value) {
  return Boolean(value && typeof value === "object" && "from" in value);
}
function isDateAfterType(value) {
  return Boolean(value && typeof value === "object" && "after" in value);
}
function isDateBeforeType(value) {
  return Boolean(value && typeof value === "object" && "before" in value);
}
function isDayOfWeekType(value) {
  return Boolean(value && typeof value === "object" && "dayOfWeek" in value);
}
function isDatesArray(value, dateLib) {
  return Array.isArray(value) && value.every(dateLib.isDate);
}

// ../../node_modules/react-day-picker/dist/esm/utils/dateMatchModifiers.js
function dateMatchModifiers(date, matchers, dateLib = defaultDateLib) {
  const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;
  const { isSameDay: isSameDay2, differenceInCalendarDays: differenceInCalendarDays2, isAfter: isAfter2 } = dateLib;
  return matchersArr.some((matcher) => {
    if (typeof matcher === "boolean") {
      return matcher;
    }
    if (dateLib.isDate(matcher)) {
      return isSameDay2(date, matcher);
    }
    if (isDatesArray(matcher, dateLib)) {
      return matcher.includes(date);
    }
    if (isDateRange(matcher)) {
      return rangeIncludesDate(matcher, date, false, dateLib);
    }
    if (isDayOfWeekType(matcher)) {
      if (!Array.isArray(matcher.dayOfWeek)) {
        return matcher.dayOfWeek === date.getDay();
      }
      return matcher.dayOfWeek.includes(date.getDay());
    }
    if (isDateInterval(matcher)) {
      const diffBefore = differenceInCalendarDays2(matcher.before, date);
      const diffAfter = differenceInCalendarDays2(matcher.after, date);
      const isDayBefore = diffBefore > 0;
      const isDayAfter = diffAfter < 0;
      const isClosedInterval = isAfter2(matcher.before, matcher.after);
      if (isClosedInterval) {
        return isDayAfter && isDayBefore;
      } else {
        return isDayBefore || isDayAfter;
      }
    }
    if (isDateAfterType(matcher)) {
      return differenceInCalendarDays2(date, matcher.after) > 0;
    }
    if (isDateBeforeType(matcher)) {
      return differenceInCalendarDays2(matcher.before, date) > 0;
    }
    if (typeof matcher === "function") {
      return matcher(date);
    }
    return false;
  });
}

// ../../node_modules/react-day-picker/dist/esm/helpers/createGetModifiers.js
function createGetModifiers(days, props, navStart, navEnd, dateLib) {
  const { disabled, hidden, modifiers, showOutsideDays, broadcastCalendar, today } = props;
  const { isSameDay: isSameDay2, isSameMonth: isSameMonth2, startOfMonth: startOfMonth2, isBefore: isBefore2, endOfMonth: endOfMonth2, isAfter: isAfter2 } = dateLib;
  const computedNavStart = navStart && startOfMonth2(navStart);
  const computedNavEnd = navEnd && endOfMonth2(navEnd);
  const internalModifiersMap = {
    [DayFlag.focused]: [],
    [DayFlag.outside]: [],
    [DayFlag.disabled]: [],
    [DayFlag.hidden]: [],
    [DayFlag.today]: []
  };
  const customModifiersMap = {};
  for (const day of days) {
    const { date, displayMonth } = day;
    const isOutside = Boolean(displayMonth && !isSameMonth2(date, displayMonth));
    const isBeforeNavStart = Boolean(computedNavStart && isBefore2(date, computedNavStart));
    const isAfterNavEnd = Boolean(computedNavEnd && isAfter2(date, computedNavEnd));
    const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));
    const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) || isBeforeNavStart || isAfterNavEnd || // Broadcast calendar will show outside days as default
    !broadcastCalendar && !showOutsideDays && isOutside || broadcastCalendar && showOutsideDays === false && isOutside;
    const isToday = isSameDay2(date, today ?? dateLib.today());
    if (isOutside)
      internalModifiersMap.outside.push(day);
    if (isDisabled)
      internalModifiersMap.disabled.push(day);
    if (isHidden)
      internalModifiersMap.hidden.push(day);
    if (isToday)
      internalModifiersMap.today.push(day);
    if (modifiers) {
      Object.keys(modifiers).forEach((name) => {
        const modifierValue = modifiers?.[name];
        const isMatch2 = modifierValue ? dateMatchModifiers(date, modifierValue, dateLib) : false;
        if (!isMatch2)
          return;
        if (customModifiersMap[name]) {
          customModifiersMap[name].push(day);
        } else {
          customModifiersMap[name] = [day];
        }
      });
    }
  }
  return (day) => {
    const dayFlags = {
      [DayFlag.focused]: false,
      [DayFlag.disabled]: false,
      [DayFlag.hidden]: false,
      [DayFlag.outside]: false,
      [DayFlag.today]: false
    };
    const customModifiers = {};
    for (const name in internalModifiersMap) {
      const days2 = internalModifiersMap[name];
      dayFlags[name] = days2.some((d) => d === day);
    }
    for (const name in customModifiersMap) {
      customModifiers[name] = customModifiersMap[name].some((d) => d === day);
    }
    return {
      ...dayFlags,
      // custom modifiers should override all the previous ones
      ...customModifiers
    };
  };
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getClassNamesForModifiers.js
function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {
  const modifierClassNames = Object.entries(modifiers).filter(([, active]) => active === true).reduce((previousValue, [key]) => {
    if (modifiersClassNames[key]) {
      previousValue.push(modifiersClassNames[key]);
    } else if (classNames[DayFlag[key]]) {
      previousValue.push(classNames[DayFlag[key]]);
    } else if (classNames[SelectionState[key]]) {
      previousValue.push(classNames[SelectionState[key]]);
    }
    return previousValue;
  }, [classNames[UI.Day]]);
  return modifierClassNames;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getComponents.js
function getComponents(customComponents) {
  return {
    ...custom_components_exports,
    ...customComponents
  };
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getDataAttributes.js
function getDataAttributes(props) {
  const dataAttributes = {
    "data-mode": props.mode ?? void 0,
    "data-required": "required" in props ? props.required : void 0,
    "data-multiple-months": props.numberOfMonths && props.numberOfMonths > 1 || void 0,
    "data-week-numbers": props.showWeekNumber || void 0,
    "data-broadcast-calendar": props.broadcastCalendar || void 0,
    "data-nav-layout": props.navLayout || void 0
  };
  Object.entries(props).forEach(([key, val]) => {
    if (key.startsWith("data-")) {
      dataAttributes[key] = val;
    }
  });
  return dataAttributes;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getDefaultClassNames.js
function getDefaultClassNames() {
  const classNames = {};
  for (const key in UI) {
    classNames[UI[key]] = `rdp-${UI[key]}`;
  }
  for (const key in DayFlag) {
    classNames[DayFlag[key]] = `rdp-${DayFlag[key]}`;
  }
  for (const key in SelectionState) {
    classNames[SelectionState[key]] = `rdp-${SelectionState[key]}`;
  }
  for (const key in Animation) {
    classNames[Animation[key]] = `rdp-${Animation[key]}`;
  }
  return classNames;
}

// ../../node_modules/react-day-picker/dist/esm/formatters/index.js
var formatters_exports = {};
__export(formatters_exports, {
  formatCaption: () => formatCaption,
  formatDay: () => formatDay,
  formatMonthCaption: () => formatMonthCaption,
  formatMonthDropdown: () => formatMonthDropdown,
  formatWeekNumber: () => formatWeekNumber,
  formatWeekNumberHeader: () => formatWeekNumberHeader,
  formatWeekdayName: () => formatWeekdayName,
  formatYearCaption: () => formatYearCaption,
  formatYearDropdown: () => formatYearDropdown
});

// ../../node_modules/react-day-picker/dist/esm/formatters/formatCaption.js
function formatCaption(month, options, dateLib) {
  const lib = dateLib ?? new DateLib(options);
  return lib.formatMonthYear(month);
}
var formatMonthCaption = formatCaption;

// ../../node_modules/react-day-picker/dist/esm/formatters/formatDay.js
function formatDay(date, options, dateLib) {
  return (dateLib ?? new DateLib(options)).format(date, "d");
}

// ../../node_modules/react-day-picker/dist/esm/formatters/formatMonthDropdown.js
function formatMonthDropdown(month, dateLib = defaultDateLib) {
  return dateLib.format(month, "LLLL");
}

// ../../node_modules/react-day-picker/dist/esm/formatters/formatWeekdayName.js
function formatWeekdayName(weekday, options, dateLib) {
  return (dateLib ?? new DateLib(options)).format(weekday, "cccccc");
}

// ../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumber.js
function formatWeekNumber(weekNumber, dateLib = defaultDateLib) {
  if (weekNumber < 10) {
    return dateLib.formatNumber(`0${weekNumber.toLocaleString()}`);
  }
  return dateLib.formatNumber(`${weekNumber.toLocaleString()}`);
}

// ../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumberHeader.js
function formatWeekNumberHeader() {
  return ``;
}

// ../../node_modules/react-day-picker/dist/esm/formatters/formatYearDropdown.js
function formatYearDropdown(year, dateLib = defaultDateLib) {
  return dateLib.format(year, "yyyy");
}
var formatYearCaption = formatYearDropdown;

// ../../node_modules/react-day-picker/dist/esm/helpers/getFormatters.js
function getFormatters(customFormatters) {
  if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {
    customFormatters.formatCaption = customFormatters.formatMonthCaption;
  }
  if (customFormatters?.formatYearCaption && !customFormatters.formatYearDropdown) {
    customFormatters.formatYearDropdown = customFormatters.formatYearCaption;
  }
  return {
    ...formatters_exports,
    ...customFormatters
  };
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getMonthOptions.js
function getMonthOptions(displayMonth, navStart, navEnd, formatters2, dateLib) {
  const { startOfMonth: startOfMonth2, startOfYear: startOfYear2, endOfYear: endOfYear2, eachMonthOfInterval: eachMonthOfInterval2, getMonth: getMonth2 } = dateLib;
  const months = eachMonthOfInterval2({
    start: startOfYear2(displayMonth),
    end: endOfYear2(displayMonth)
  });
  const options = months.map((month) => {
    const label = formatters2.formatMonthDropdown(month, dateLib);
    const value = getMonth2(month);
    const disabled = navStart && month < startOfMonth2(navStart) || navEnd && month > startOfMonth2(navEnd) || false;
    return { value, label, disabled };
  });
  return options;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getStyleForModifiers.js
function getStyleForModifiers(dayModifiers, styles = {}, modifiersStyles = {}) {
  let style = { ...styles?.[UI.Day] };
  Object.entries(dayModifiers).filter(([, active]) => active === true).forEach(([modifier]) => {
    style = {
      ...style,
      ...modifiersStyles?.[modifier]
    };
  });
  return style;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getWeekdays.js
function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {
  const today = dateLib.today();
  const start = broadcastCalendar ? dateLib.startOfBroadcastWeek(today, dateLib) : ISOWeek ? dateLib.startOfISOWeek(today) : dateLib.startOfWeek(today);
  const days = [];
  for (let i = 0; i < 7; i++) {
    const day = dateLib.addDays(start, i);
    days.push(day);
  }
  return days;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getYearOptions.js
function getYearOptions(navStart, navEnd, formatters2, dateLib, reverse2 = false) {
  if (!navStart)
    return void 0;
  if (!navEnd)
    return void 0;
  const { startOfYear: startOfYear2, endOfYear: endOfYear2, eachYearOfInterval: eachYearOfInterval2, getYear: getYear2 } = dateLib;
  const firstNavYear = startOfYear2(navStart);
  const lastNavYear = endOfYear2(navEnd);
  const years = eachYearOfInterval2({ start: firstNavYear, end: lastNavYear });
  if (reverse2)
    years.reverse();
  return years.map((year) => {
    const label = formatters2.formatYearDropdown(year, dateLib);
    return {
      value: getYear2(year),
      label,
      disabled: false
    };
  });
}

// ../../node_modules/react-day-picker/dist/esm/labels/index.js
var labels_exports = {};
__export(labels_exports, {
  labelCaption: () => labelCaption,
  labelDay: () => labelDay,
  labelDayButton: () => labelDayButton,
  labelGrid: () => labelGrid,
  labelGridcell: () => labelGridcell,
  labelMonthDropdown: () => labelMonthDropdown,
  labelNav: () => labelNav,
  labelNext: () => labelNext,
  labelPrevious: () => labelPrevious,
  labelWeekNumber: () => labelWeekNumber,
  labelWeekNumberHeader: () => labelWeekNumberHeader,
  labelWeekday: () => labelWeekday,
  labelYearDropdown: () => labelYearDropdown
});

// ../../node_modules/react-day-picker/dist/esm/labels/labelDayButton.js
function labelDayButton(date, modifiers, options, dateLib) {
  let label = (dateLib ?? new DateLib(options)).format(date, "PPPP");
  if (modifiers.today)
    label = `Today, ${label}`;
  if (modifiers.selected)
    label = `${label}, selected`;
  return label;
}
var labelDay = labelDayButton;

// ../../node_modules/react-day-picker/dist/esm/labels/labelGrid.js
function labelGrid(date, options, dateLib) {
  const lib = dateLib ?? new DateLib(options);
  return lib.formatMonthYear(date);
}
var labelCaption = labelGrid;

// ../../node_modules/react-day-picker/dist/esm/labels/labelGridcell.js
function labelGridcell(date, modifiers, options, dateLib) {
  let label = (dateLib ?? new DateLib(options)).format(date, "PPPP");
  if (modifiers?.today) {
    label = `Today, ${label}`;
  }
  return label;
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelMonthDropdown.js
function labelMonthDropdown(_options) {
  return "Choose the Month";
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelNav.js
function labelNav() {
  return "";
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelNext.js
function labelNext(_month) {
  return "Go to the Next Month";
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelPrevious.js
function labelPrevious(_month) {
  return "Go to the Previous Month";
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelWeekday.js
function labelWeekday(date, options, dateLib) {
  return (dateLib ?? new DateLib(options)).format(date, "cccc");
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumber.js
function labelWeekNumber(weekNumber, _options) {
  return `Week ${weekNumber}`;
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumberHeader.js
function labelWeekNumberHeader(_options) {
  return "Week Number";
}

// ../../node_modules/react-day-picker/dist/esm/labels/labelYearDropdown.js
function labelYearDropdown(_options) {
  return "Choose the Year";
}

// ../../node_modules/react-day-picker/dist/esm/useAnimation.js
var import_react163 = __toESM(require_react(), 1);
var asHtmlElement = (element) => {
  if (element instanceof HTMLElement)
    return element;
  return null;
};
var queryMonthEls = (element) => [
  ...element.querySelectorAll("[data-animated-month]") ?? []
];
var queryMonthEl = (element) => asHtmlElement(element.querySelector("[data-animated-month]"));
var queryCaptionEl = (element) => asHtmlElement(element.querySelector("[data-animated-caption]"));
var queryWeeksEl = (element) => asHtmlElement(element.querySelector("[data-animated-weeks]"));
var queryNavEl = (element) => asHtmlElement(element.querySelector("[data-animated-nav]"));
var queryWeekdaysEl = (element) => asHtmlElement(element.querySelector("[data-animated-weekdays]"));
function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib }) {
  const previousRootElSnapshotRef = (0, import_react163.useRef)(null);
  const previousMonthsRef = (0, import_react163.useRef)(months);
  const animatingRef = (0, import_react163.useRef)(false);
  (0, import_react163.useLayoutEffect)(() => {
    const previousMonths = previousMonthsRef.current;
    previousMonthsRef.current = months;
    if (!enabled || !rootElRef.current || // safety check because the ref can be set to anything by consumers
    !(rootElRef.current instanceof HTMLElement) || // validation required for the animation to work as expected
    months.length === 0 || previousMonths.length === 0 || months.length !== previousMonths.length) {
      return;
    }
    const isSameMonth2 = dateLib.isSameMonth(months[0].date, previousMonths[0].date);
    const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);
    const captionAnimationClass = isAfterPreviousMonth ? classNames[Animation.caption_after_enter] : classNames[Animation.caption_before_enter];
    const weeksAnimationClass = isAfterPreviousMonth ? classNames[Animation.weeks_after_enter] : classNames[Animation.weeks_before_enter];
    const previousRootElSnapshot = previousRootElSnapshotRef.current;
    const rootElSnapshot = rootElRef.current.cloneNode(true);
    if (rootElSnapshot instanceof HTMLElement) {
      const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);
      currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {
        if (!(currentMonthElSnapshot instanceof HTMLElement))
          return;
        const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);
        if (previousMonthElSnapshot && currentMonthElSnapshot.contains(previousMonthElSnapshot)) {
          currentMonthElSnapshot.removeChild(previousMonthElSnapshot);
        }
        const captionEl = queryCaptionEl(currentMonthElSnapshot);
        if (captionEl) {
          captionEl.classList.remove(captionAnimationClass);
        }
        const weeksEl = queryWeeksEl(currentMonthElSnapshot);
        if (weeksEl) {
          weeksEl.classList.remove(weeksAnimationClass);
        }
      });
      previousRootElSnapshotRef.current = rootElSnapshot;
    } else {
      previousRootElSnapshotRef.current = null;
    }
    if (animatingRef.current || isSameMonth2 || // skip animation if a day is focused because it can cause issues to the animation and is better for a11y
    focused) {
      return;
    }
    const previousMonthEls = previousRootElSnapshot instanceof HTMLElement ? queryMonthEls(previousRootElSnapshot) : [];
    const currentMonthEls = queryMonthEls(rootElRef.current);
    if (currentMonthEls?.every((el) => el instanceof HTMLElement) && previousMonthEls && previousMonthEls.every((el) => el instanceof HTMLElement)) {
      animatingRef.current = true;
      const cleanUpFunctions = [];
      rootElRef.current.style.isolation = "isolate";
      const navEl = queryNavEl(rootElRef.current);
      if (navEl) {
        navEl.style.zIndex = "1";
      }
      currentMonthEls.forEach((currentMonthEl, index3) => {
        const previousMonthEl = previousMonthEls[index3];
        if (!previousMonthEl) {
          return;
        }
        currentMonthEl.style.position = "relative";
        currentMonthEl.style.overflow = "hidden";
        const captionEl = queryCaptionEl(currentMonthEl);
        if (captionEl) {
          captionEl.classList.add(captionAnimationClass);
        }
        const weeksEl = queryWeeksEl(currentMonthEl);
        if (weeksEl) {
          weeksEl.classList.add(weeksAnimationClass);
        }
        const cleanUp = () => {
          animatingRef.current = false;
          if (rootElRef.current) {
            rootElRef.current.style.isolation = "";
          }
          if (navEl) {
            navEl.style.zIndex = "";
          }
          if (captionEl) {
            captionEl.classList.remove(captionAnimationClass);
          }
          if (weeksEl) {
            weeksEl.classList.remove(weeksAnimationClass);
          }
          currentMonthEl.style.position = "";
          currentMonthEl.style.overflow = "";
          if (currentMonthEl.contains(previousMonthEl)) {
            currentMonthEl.removeChild(previousMonthEl);
          }
        };
        cleanUpFunctions.push(cleanUp);
        previousMonthEl.style.pointerEvents = "none";
        previousMonthEl.style.position = "absolute";
        previousMonthEl.style.overflow = "hidden";
        previousMonthEl.setAttribute("aria-hidden", "true");
        const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);
        if (previousWeekdaysEl) {
          previousWeekdaysEl.style.opacity = "0";
        }
        const previousCaptionEl = queryCaptionEl(previousMonthEl);
        if (previousCaptionEl) {
          previousCaptionEl.classList.add(isAfterPreviousMonth ? classNames[Animation.caption_before_exit] : classNames[Animation.caption_after_exit]);
          previousCaptionEl.addEventListener("animationend", cleanUp);
        }
        const previousWeeksEl = queryWeeksEl(previousMonthEl);
        if (previousWeeksEl) {
          previousWeeksEl.classList.add(isAfterPreviousMonth ? classNames[Animation.weeks_before_exit] : classNames[Animation.weeks_after_exit]);
        }
        currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);
      });
    }
  });
}

// ../../node_modules/react-day-picker/dist/esm/useCalendar.js
var import_react165 = __toESM(require_react(), 1);

// ../../node_modules/react-day-picker/dist/esm/helpers/getDates.js
function getDates(displayMonths, maxDate, props, dateLib) {
  const firstMonth = displayMonths[0];
  const lastMonth = displayMonths[displayMonths.length - 1];
  const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};
  const { addDays: addDays2, differenceInCalendarDays: differenceInCalendarDays2, differenceInCalendarMonths: differenceInCalendarMonths2, endOfBroadcastWeek: endOfBroadcastWeek2, endOfISOWeek: endOfISOWeek2, endOfMonth: endOfMonth2, endOfWeek: endOfWeek2, isAfter: isAfter2, startOfBroadcastWeek: startOfBroadcastWeek2, startOfISOWeek: startOfISOWeek2, startOfWeek: startOfWeek2 } = dateLib;
  const startWeekFirstDate = broadcastCalendar ? startOfBroadcastWeek2(firstMonth, dateLib) : ISOWeek ? startOfISOWeek2(firstMonth) : startOfWeek2(firstMonth);
  const endWeekLastDate = broadcastCalendar ? endOfBroadcastWeek2(lastMonth) : ISOWeek ? endOfISOWeek2(endOfMonth2(lastMonth)) : endOfWeek2(endOfMonth2(lastMonth));
  const nOfDays = differenceInCalendarDays2(endWeekLastDate, startWeekFirstDate);
  const nOfMonths = differenceInCalendarMonths2(lastMonth, firstMonth) + 1;
  const dates = [];
  for (let i = 0; i <= nOfDays; i++) {
    const date = addDays2(startWeekFirstDate, i);
    if (maxDate && isAfter2(date, maxDate)) {
      break;
    }
    dates.push(date);
  }
  const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;
  const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;
  if (fixedWeeks && dates.length < extraDates) {
    const daysToAdd = extraDates - dates.length;
    for (let i = 0; i < daysToAdd; i++) {
      const date = addDays2(dates[dates.length - 1], 1);
      dates.push(date);
    }
  }
  return dates;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getDays.js
function getDays(calendarMonths) {
  const initialDays = [];
  return calendarMonths.reduce((days, month) => {
    const weekDays = month.weeks.reduce((weekDays2, week) => {
      return weekDays2.concat(week.days.slice());
    }, initialDays.slice());
    return days.concat(weekDays.slice());
  }, initialDays.slice());
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getDisplayMonths.js
function getDisplayMonths(firstDisplayedMonth, calendarEndMonth, props, dateLib) {
  const { numberOfMonths = 1 } = props;
  const months = [];
  for (let i = 0; i < numberOfMonths; i++) {
    const month = dateLib.addMonths(firstDisplayedMonth, i);
    if (calendarEndMonth && month > calendarEndMonth) {
      break;
    }
    months.push(month);
  }
  return months;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getInitialMonth.js
function getInitialMonth(props, navStart, navEnd, dateLib) {
  const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1 } = props;
  let initialMonth = month || defaultMonth || today;
  const { differenceInCalendarMonths: differenceInCalendarMonths2, addMonths: addMonths2, startOfMonth: startOfMonth2 } = dateLib;
  if (navEnd && differenceInCalendarMonths2(navEnd, initialMonth) < numberOfMonths - 1) {
    const offset = -1 * (numberOfMonths - 1);
    initialMonth = addMonths2(navEnd, offset);
  }
  if (navStart && differenceInCalendarMonths2(initialMonth, navStart) < 0) {
    initialMonth = navStart;
  }
  return startOfMonth2(initialMonth);
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getMonths.js
function getMonths(displayMonths, dates, props, dateLib) {
  const { addDays: addDays2, endOfBroadcastWeek: endOfBroadcastWeek2, endOfISOWeek: endOfISOWeek2, endOfMonth: endOfMonth2, endOfWeek: endOfWeek2, getISOWeek: getISOWeek2, getWeek: getWeek2, startOfBroadcastWeek: startOfBroadcastWeek2, startOfISOWeek: startOfISOWeek2, startOfWeek: startOfWeek2 } = dateLib;
  const dayPickerMonths = displayMonths.reduce((months, month) => {
    const firstDateOfFirstWeek = props.broadcastCalendar ? startOfBroadcastWeek2(month, dateLib) : props.ISOWeek ? startOfISOWeek2(month) : startOfWeek2(month);
    const lastDateOfLastWeek = props.broadcastCalendar ? endOfBroadcastWeek2(month) : props.ISOWeek ? endOfISOWeek2(endOfMonth2(month)) : endOfWeek2(endOfMonth2(month));
    const monthDates = dates.filter((date) => {
      return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;
    });
    const nrOfDaysWithFixedWeeks = props.broadcastCalendar ? 35 : 42;
    if (props.fixedWeeks && monthDates.length < nrOfDaysWithFixedWeeks) {
      const extraDates = dates.filter((date) => {
        const daysToAdd = nrOfDaysWithFixedWeeks - monthDates.length;
        return date > lastDateOfLastWeek && date <= addDays2(lastDateOfLastWeek, daysToAdd);
      });
      monthDates.push(...extraDates);
    }
    const weeks = monthDates.reduce((weeks2, date) => {
      const weekNumber = props.ISOWeek ? getISOWeek2(date) : getWeek2(date);
      const week = weeks2.find((week2) => week2.weekNumber === weekNumber);
      const day = new CalendarDay(date, month, dateLib);
      if (!week) {
        weeks2.push(new CalendarWeek(weekNumber, [day]));
      } else {
        week.days.push(day);
      }
      return weeks2;
    }, []);
    const dayPickerMonth = new CalendarMonth(month, weeks);
    months.push(dayPickerMonth);
    return months;
  }, []);
  if (!props.reverseMonths) {
    return dayPickerMonths;
  } else {
    return dayPickerMonths.reverse();
  }
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js
function getNavMonths(props, dateLib) {
  let { startMonth, endMonth } = props;
  const { startOfYear: startOfYear2, startOfDay: startOfDay2, startOfMonth: startOfMonth2, endOfMonth: endOfMonth2, addYears: addYears2, endOfYear: endOfYear2, newDate, today } = dateLib;
  const { fromYear, toYear, fromMonth, toMonth } = props;
  if (!startMonth && fromMonth) {
    startMonth = fromMonth;
  }
  if (!startMonth && fromYear) {
    startMonth = dateLib.newDate(fromYear, 0, 1);
  }
  if (!endMonth && toMonth) {
    endMonth = toMonth;
  }
  if (!endMonth && toYear) {
    endMonth = newDate(toYear, 11, 31);
  }
  const hasYearDropdown = props.captionLayout === "dropdown" || props.captionLayout === "dropdown-years";
  if (startMonth) {
    startMonth = startOfMonth2(startMonth);
  } else if (fromYear) {
    startMonth = newDate(fromYear, 0, 1);
  } else if (!startMonth && hasYearDropdown) {
    startMonth = startOfYear2(addYears2(props.today ?? today(), -100));
  }
  if (endMonth) {
    endMonth = endOfMonth2(endMonth);
  } else if (toYear) {
    endMonth = newDate(toYear, 11, 31);
  } else if (!endMonth && hasYearDropdown) {
    endMonth = endOfYear2(props.today ?? today());
  }
  return [
    startMonth ? startOfDay2(startMonth) : startMonth,
    endMonth ? startOfDay2(endMonth) : endMonth
  ];
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getNextMonth.js
function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {
  if (options.disableNavigation) {
    return void 0;
  }
  const { pagedNavigation, numberOfMonths = 1 } = options;
  const { startOfMonth: startOfMonth2, addMonths: addMonths2, differenceInCalendarMonths: differenceInCalendarMonths2 } = dateLib;
  const offset = pagedNavigation ? numberOfMonths : 1;
  const month = startOfMonth2(firstDisplayedMonth);
  if (!calendarEndMonth) {
    return addMonths2(month, offset);
  }
  const monthsDiff = differenceInCalendarMonths2(calendarEndMonth, firstDisplayedMonth);
  if (monthsDiff < numberOfMonths) {
    return void 0;
  }
  return addMonths2(month, offset);
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getPreviousMonth.js
function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {
  if (options.disableNavigation) {
    return void 0;
  }
  const { pagedNavigation, numberOfMonths } = options;
  const { startOfMonth: startOfMonth2, addMonths: addMonths2, differenceInCalendarMonths: differenceInCalendarMonths2 } = dateLib;
  const offset = pagedNavigation ? numberOfMonths ?? 1 : 1;
  const month = startOfMonth2(firstDisplayedMonth);
  if (!calendarStartMonth) {
    return addMonths2(month, -offset);
  }
  const monthsDiff = differenceInCalendarMonths2(month, calendarStartMonth);
  if (monthsDiff <= 0) {
    return void 0;
  }
  return addMonths2(month, -offset);
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getWeeks.js
function getWeeks(months) {
  const initialWeeks = [];
  return months.reduce((weeks, month) => {
    return weeks.concat(month.weeks.slice());
  }, initialWeeks.slice());
}

// ../../node_modules/react-day-picker/dist/esm/helpers/useControlledValue.js
var import_react164 = __toESM(require_react(), 1);
function useControlledValue(defaultValue, controlledValue) {
  const [uncontrolledValue, setValue] = (0, import_react164.useState)(defaultValue);
  const value = controlledValue === void 0 ? uncontrolledValue : controlledValue;
  return [value, setValue];
}

// ../../node_modules/react-day-picker/dist/esm/useCalendar.js
function useCalendar(props, dateLib) {
  const [navStart, navEnd] = getNavMonths(props, dateLib);
  const { startOfMonth: startOfMonth2, endOfMonth: endOfMonth2 } = dateLib;
  const initialMonth = getInitialMonth(props, navStart, navEnd, dateLib);
  const [firstMonth, setFirstMonth] = useControlledValue(
    initialMonth,
    // initialMonth is always computed from props.month if provided
    props.month ? initialMonth : void 0
  );
  (0, import_react165.useEffect)(() => {
    const newInitialMonth = getInitialMonth(props, navStart, navEnd, dateLib);
    setFirstMonth(newInitialMonth);
  }, [props.timeZone]);
  const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);
  const dates = getDates(displayMonths, props.endMonth ? endOfMonth2(props.endMonth) : void 0, props, dateLib);
  const months = getMonths(displayMonths, dates, props, dateLib);
  const weeks = getWeeks(months);
  const days = getDays(months);
  const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);
  const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);
  const { disableNavigation, onMonthChange } = props;
  const isDayInCalendar = (day) => weeks.some((week) => week.days.some((d) => d.isEqualTo(day)));
  const goToMonth = (date) => {
    if (disableNavigation) {
      return;
    }
    let newMonth = startOfMonth2(date);
    if (navStart && newMonth < startOfMonth2(navStart)) {
      newMonth = startOfMonth2(navStart);
    }
    if (navEnd && newMonth > startOfMonth2(navEnd)) {
      newMonth = startOfMonth2(navEnd);
    }
    setFirstMonth(newMonth);
    onMonthChange?.(newMonth);
  };
  const goToDay = (day) => {
    if (isDayInCalendar(day)) {
      return;
    }
    goToMonth(day.date);
  };
  const calendar = {
    months,
    weeks,
    days,
    navStart,
    navEnd,
    previousMonth,
    nextMonth,
    goToMonth,
    goToDay
  };
  return calendar;
}

// ../../node_modules/react-day-picker/dist/esm/useFocus.js
var import_react166 = __toESM(require_react(), 1);

// ../../node_modules/react-day-picker/dist/esm/helpers/calculateFocusTarget.js
var FocusTargetPriority;
(function(FocusTargetPriority2) {
  FocusTargetPriority2[FocusTargetPriority2["Today"] = 0] = "Today";
  FocusTargetPriority2[FocusTargetPriority2["Selected"] = 1] = "Selected";
  FocusTargetPriority2[FocusTargetPriority2["LastFocused"] = 2] = "LastFocused";
  FocusTargetPriority2[FocusTargetPriority2["FocusedModifier"] = 3] = "FocusedModifier";
})(FocusTargetPriority || (FocusTargetPriority = {}));
function isFocusableDay(modifiers) {
  return !modifiers[DayFlag.disabled] && !modifiers[DayFlag.hidden] && !modifiers[DayFlag.outside];
}
function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {
  let focusTarget;
  let foundFocusTargetPriority = -1;
  for (const day of days) {
    const modifiers = getModifiers(day);
    if (isFocusableDay(modifiers)) {
      if (modifiers[DayFlag.focused] && foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {
        focusTarget = day;
        foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;
      } else if (lastFocused?.isEqualTo(day) && foundFocusTargetPriority < FocusTargetPriority.LastFocused) {
        focusTarget = day;
        foundFocusTargetPriority = FocusTargetPriority.LastFocused;
      } else if (isSelected(day.date) && foundFocusTargetPriority < FocusTargetPriority.Selected) {
        focusTarget = day;
        foundFocusTargetPriority = FocusTargetPriority.Selected;
      } else if (modifiers[DayFlag.today] && foundFocusTargetPriority < FocusTargetPriority.Today) {
        focusTarget = day;
        foundFocusTargetPriority = FocusTargetPriority.Today;
      }
    }
  }
  if (!focusTarget) {
    focusTarget = days.find((day) => isFocusableDay(getModifiers(day)));
  }
  return focusTarget;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getFocusableDate.js
function getFocusableDate(moveBy, moveDir, refDate, navStart, navEnd, props, dateLib) {
  const { ISOWeek, broadcastCalendar } = props;
  const { addDays: addDays2, addMonths: addMonths2, addWeeks: addWeeks2, addYears: addYears2, endOfBroadcastWeek: endOfBroadcastWeek2, endOfISOWeek: endOfISOWeek2, endOfWeek: endOfWeek2, max: max3, min: min3, startOfBroadcastWeek: startOfBroadcastWeek2, startOfISOWeek: startOfISOWeek2, startOfWeek: startOfWeek2 } = dateLib;
  const moveFns = {
    day: addDays2,
    week: addWeeks2,
    month: addMonths2,
    year: addYears2,
    startOfWeek: (date) => broadcastCalendar ? startOfBroadcastWeek2(date, dateLib) : ISOWeek ? startOfISOWeek2(date) : startOfWeek2(date),
    endOfWeek: (date) => broadcastCalendar ? endOfBroadcastWeek2(date) : ISOWeek ? endOfISOWeek2(date) : endOfWeek2(date)
  };
  let focusableDate = moveFns[moveBy](refDate, moveDir === "after" ? 1 : -1);
  if (moveDir === "before" && navStart) {
    focusableDate = max3([navStart, focusableDate]);
  } else if (moveDir === "after" && navEnd) {
    focusableDate = min3([navEnd, focusableDate]);
  }
  return focusableDate;
}

// ../../node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js
function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt2 = 0) {
  if (attempt2 > 365) {
    return void 0;
  }
  const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);
  const isDisabled = Boolean(props.disabled && dateMatchModifiers(focusableDate, props.disabled, dateLib));
  const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));
  const targetMonth = focusableDate;
  const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);
  if (!isDisabled && !isHidden) {
    return focusDay;
  }
  return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt2 + 1);
}

// ../../node_modules/react-day-picker/dist/esm/useFocus.js
function useFocus(props, calendar, getModifiers, isSelected, dateLib) {
  const { autoFocus } = props;
  const [lastFocused, setLastFocused] = (0, import_react166.useState)();
  const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);
  const [focusedDay, setFocused] = (0, import_react166.useState)(autoFocus ? focusTarget : void 0);
  const blur = () => {
    setLastFocused(focusedDay);
    setFocused(void 0);
  };
  const moveFocus = (moveBy, moveDir) => {
    if (!focusedDay)
      return;
    const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);
    if (!nextFocus)
      return;
    if (props.disableNavigation) {
      const isNextInCalendar = calendar.days.some((day) => day.isEqualTo(nextFocus));
      if (!isNextInCalendar) {
        return;
      }
    }
    calendar.goToDay(nextFocus);
    setFocused(nextFocus);
  };
  const isFocusTarget = (day) => {
    return Boolean(focusTarget?.isEqualTo(day));
  };
  const useFocus2 = {
    isFocusTarget,
    setFocused,
    focused: focusedDay,
    blur,
    moveFocus
  };
  return useFocus2;
}

// ../../node_modules/react-day-picker/dist/esm/selection/useMulti.js
function useMulti(props, dateLib) {
  const { selected: initiallySelected, required, onSelect } = props;
  const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : void 0);
  const selected = !onSelect ? internallySelected : initiallySelected;
  const { isSameDay: isSameDay2 } = dateLib;
  const isSelected = (date) => {
    return selected?.some((d) => isSameDay2(d, date)) ?? false;
  };
  const { min: min3, max: max3 } = props;
  const select = (triggerDate, modifiers, e2) => {
    let newDates = [...selected ?? []];
    if (isSelected(triggerDate)) {
      if (selected?.length === min3) {
        return;
      }
      if (required && selected?.length === 1) {
        return;
      }
      newDates = selected?.filter((d) => !isSameDay2(d, triggerDate));
    } else {
      if (selected?.length === max3) {
        newDates = [triggerDate];
      } else {
        newDates = [...newDates, triggerDate];
      }
    }
    if (!onSelect) {
      setSelected(newDates);
    }
    onSelect?.(newDates, triggerDate, modifiers, e2);
    return newDates;
  };
  return {
    selected,
    select,
    isSelected
  };
}

// ../../node_modules/react-day-picker/dist/esm/utils/addToRange.js
function addToRange(date, initialRange, min3 = 0, max3 = 0, required = false, dateLib = defaultDateLib) {
  const { from, to } = initialRange || {};
  const { isSameDay: isSameDay2, isAfter: isAfter2, isBefore: isBefore2 } = dateLib;
  let range2;
  if (!from && !to) {
    range2 = { from: date, to: min3 > 0 ? void 0 : date };
  } else if (from && !to) {
    if (isSameDay2(from, date)) {
      if (min3 === 0) {
        range2 = { from, to: date };
      } else if (required) {
        range2 = { from, to: void 0 };
      } else {
        range2 = void 0;
      }
    } else if (isBefore2(date, from)) {
      range2 = { from: date, to: from };
    } else {
      range2 = { from, to: date };
    }
  } else if (from && to) {
    if (isSameDay2(from, date) && isSameDay2(to, date)) {
      if (required) {
        range2 = { from, to };
      } else {
        range2 = void 0;
      }
    } else if (isSameDay2(from, date)) {
      range2 = { from, to: min3 > 0 ? void 0 : date };
    } else if (isSameDay2(to, date)) {
      range2 = { from: date, to: min3 > 0 ? void 0 : date };
    } else if (isBefore2(date, from)) {
      range2 = { from: date, to };
    } else if (isAfter2(date, from)) {
      range2 = { from, to: date };
    } else if (isAfter2(date, to)) {
      range2 = { from, to: date };
    } else {
      throw new Error("Invalid range");
    }
  }
  if (range2?.from && range2?.to) {
    const diff = dateLib.differenceInCalendarDays(range2.to, range2.from);
    if (max3 > 0 && diff > max3) {
      range2 = { from: date, to: void 0 };
    } else if (min3 > 1 && diff < min3) {
      range2 = { from: date, to: void 0 };
    }
  }
  return range2;
}

// ../../node_modules/react-day-picker/dist/esm/utils/rangeContainsDayOfWeek.js
function rangeContainsDayOfWeek(range2, dayOfWeek, dateLib = defaultDateLib) {
  const dayOfWeekArr = !Array.isArray(dayOfWeek) ? [dayOfWeek] : dayOfWeek;
  let date = range2.from;
  const totalDays = dateLib.differenceInCalendarDays(range2.to, range2.from);
  const totalDaysLimit = Math.min(totalDays, 6);
  for (let i = 0; i <= totalDaysLimit; i++) {
    if (dayOfWeekArr.includes(date.getDay())) {
      return true;
    }
    date = dateLib.addDays(date, 1);
  }
  return false;
}

// ../../node_modules/react-day-picker/dist/esm/utils/rangeOverlaps.js
function rangeOverlaps(rangeLeft, rangeRight2, dateLib = defaultDateLib) {
  return rangeIncludesDate(rangeLeft, rangeRight2.from, false, dateLib) || rangeIncludesDate(rangeLeft, rangeRight2.to, false, dateLib) || rangeIncludesDate(rangeRight2, rangeLeft.from, false, dateLib) || rangeIncludesDate(rangeRight2, rangeLeft.to, false, dateLib);
}

// ../../node_modules/react-day-picker/dist/esm/utils/rangeContainsModifiers.js
function rangeContainsModifiers(range2, modifiers, dateLib = defaultDateLib) {
  const matchers = Array.isArray(modifiers) ? modifiers : [modifiers];
  const nonFunctionMatchers = matchers.filter((matcher) => typeof matcher !== "function");
  const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher) => {
    if (typeof matcher === "boolean")
      return matcher;
    if (dateLib.isDate(matcher)) {
      return rangeIncludesDate(range2, matcher, false, dateLib);
    }
    if (isDatesArray(matcher, dateLib)) {
      return matcher.some((date) => rangeIncludesDate(range2, date, false, dateLib));
    }
    if (isDateRange(matcher)) {
      if (matcher.from && matcher.to) {
        return rangeOverlaps(range2, { from: matcher.from, to: matcher.to }, dateLib);
      }
      return false;
    }
    if (isDayOfWeekType(matcher)) {
      return rangeContainsDayOfWeek(range2, matcher.dayOfWeek, dateLib);
    }
    if (isDateInterval(matcher)) {
      const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);
      if (isClosedInterval) {
        return rangeOverlaps(range2, {
          from: dateLib.addDays(matcher.after, 1),
          to: dateLib.addDays(matcher.before, -1)
        }, dateLib);
      }
      return dateMatchModifiers(range2.from, matcher, dateLib) || dateMatchModifiers(range2.to, matcher, dateLib);
    }
    if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {
      return dateMatchModifiers(range2.from, matcher, dateLib) || dateMatchModifiers(range2.to, matcher, dateLib);
    }
    return false;
  });
  if (nonFunctionMatchersResult) {
    return true;
  }
  const functionMatchers = matchers.filter((matcher) => typeof matcher === "function");
  if (functionMatchers.length) {
    let date = range2.from;
    const totalDays = dateLib.differenceInCalendarDays(range2.to, range2.from);
    for (let i = 0; i <= totalDays; i++) {
      if (functionMatchers.some((matcher) => matcher(date))) {
        return true;
      }
      date = dateLib.addDays(date, 1);
    }
  }
  return false;
}

// ../../node_modules/react-day-picker/dist/esm/selection/useRange.js
function useRange(props, dateLib) {
  const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect } = props;
  const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : void 0);
  const selected = !onSelect ? internallySelected : initiallySelected;
  const isSelected = (date) => selected && rangeIncludesDate(selected, date, false, dateLib);
  const select = (triggerDate, modifiers, e2) => {
    const { min: min3, max: max3 } = props;
    const newRange = triggerDate ? addToRange(triggerDate, selected, min3, max3, required, dateLib) : void 0;
    if (excludeDisabled && disabled && newRange?.from && newRange.to) {
      if (rangeContainsModifiers({ from: newRange.from, to: newRange.to }, disabled, dateLib)) {
        newRange.from = triggerDate;
        newRange.to = void 0;
      }
    }
    if (!onSelect) {
      setSelected(newRange);
    }
    onSelect?.(newRange, triggerDate, modifiers, e2);
    return newRange;
  };
  return {
    selected,
    select,
    isSelected
  };
}

// ../../node_modules/react-day-picker/dist/esm/selection/useSingle.js
function useSingle(props, dateLib) {
  const { selected: initiallySelected, required, onSelect } = props;
  const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : void 0);
  const selected = !onSelect ? internallySelected : initiallySelected;
  const { isSameDay: isSameDay2 } = dateLib;
  const isSelected = (compareDate) => {
    return selected ? isSameDay2(selected, compareDate) : false;
  };
  const select = (triggerDate, modifiers, e2) => {
    let newDate = triggerDate;
    if (!required && selected && selected && isSameDay2(triggerDate, selected)) {
      newDate = void 0;
    }
    if (!onSelect) {
      setSelected(newDate);
    }
    if (required) {
      onSelect?.(newDate, triggerDate, modifiers, e2);
    } else {
      onSelect?.(newDate, triggerDate, modifiers, e2);
    }
    return newDate;
  };
  return {
    selected,
    select,
    isSelected
  };
}

// ../../node_modules/react-day-picker/dist/esm/useSelection.js
function useSelection2(props, dateLib) {
  const single = useSingle(props, dateLib);
  const multi = useMulti(props, dateLib);
  const range2 = useRange(props, dateLib);
  switch (props.mode) {
    case "single":
      return single;
    case "multiple":
      return multi;
    case "range":
      return range2;
    default:
      return void 0;
  }
}

// ../../node_modules/react-day-picker/dist/esm/DayPicker.js
function DayPicker(initialProps) {
  let props = initialProps;
  if (props.timeZone) {
    props = {
      ...initialProps
    };
    if (props.today) {
      props.today = new TZDate(props.today, props.timeZone);
    }
    if (props.month) {
      props.month = new TZDate(props.month, props.timeZone);
    }
    if (props.defaultMonth) {
      props.defaultMonth = new TZDate(props.defaultMonth, props.timeZone);
    }
    if (props.startMonth) {
      props.startMonth = new TZDate(props.startMonth, props.timeZone);
    }
    if (props.endMonth) {
      props.endMonth = new TZDate(props.endMonth, props.timeZone);
    }
    if (props.mode === "single" && props.selected) {
      props.selected = new TZDate(props.selected, props.timeZone);
    } else if (props.mode === "multiple" && props.selected) {
      props.selected = props.selected?.map((date) => new TZDate(date, props.timeZone));
    } else if (props.mode === "range" && props.selected) {
      props.selected = {
        from: props.selected.from ? new TZDate(props.selected.from, props.timeZone) : void 0,
        to: props.selected.to ? new TZDate(props.selected.to, props.timeZone) : void 0
      };
    }
  }
  const { components, formatters: formatters2, labels, dateLib, locale, classNames } = (0, import_react167.useMemo)(() => {
    const locale2 = { ...enUS, ...props.locale };
    const dateLib2 = new DateLib({
      locale: locale2,
      weekStartsOn: props.broadcastCalendar ? 1 : props.weekStartsOn,
      firstWeekContainsDate: props.firstWeekContainsDate,
      useAdditionalWeekYearTokens: props.useAdditionalWeekYearTokens,
      useAdditionalDayOfYearTokens: props.useAdditionalDayOfYearTokens,
      timeZone: props.timeZone,
      numerals: props.numerals
    }, props.dateLib);
    return {
      dateLib: dateLib2,
      components: getComponents(props.components),
      formatters: getFormatters(props.formatters),
      labels: { ...labels_exports, ...props.labels },
      locale: locale2,
      classNames: { ...getDefaultClassNames(), ...props.classNames }
    };
  }, [
    props.locale,
    props.broadcastCalendar,
    props.weekStartsOn,
    props.firstWeekContainsDate,
    props.useAdditionalWeekYearTokens,
    props.useAdditionalDayOfYearTokens,
    props.timeZone,
    props.numerals,
    props.dateLib,
    props.components,
    props.formatters,
    props.labels,
    props.classNames
  ]);
  const { captionLayout, mode, navLayout, numberOfMonths = 1, onDayBlur, onDayClick, onDayFocus, onDayKeyDown, onDayMouseEnter, onDayMouseLeave, onNextClick, onPrevClick, showWeekNumber, styles } = props;
  const { formatCaption: formatCaption2, formatDay: formatDay2, formatMonthDropdown: formatMonthDropdown2, formatWeekNumber: formatWeekNumber2, formatWeekNumberHeader: formatWeekNumberHeader2, formatWeekdayName: formatWeekdayName2, formatYearDropdown: formatYearDropdown2 } = formatters2;
  const calendar = useCalendar(props, dateLib);
  const { days, months, navStart, navEnd, previousMonth, nextMonth, goToMonth } = calendar;
  const getModifiers = createGetModifiers(days, props, navStart, navEnd, dateLib);
  const { isSelected, select, selected: selectedValue } = useSelection2(props, dateLib) ?? {};
  const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(props, calendar, getModifiers, isSelected ?? (() => false), dateLib);
  const { labelDayButton: labelDayButton2, labelGridcell: labelGridcell2, labelGrid: labelGrid2, labelMonthDropdown: labelMonthDropdown2, labelNav: labelNav2, labelPrevious: labelPrevious2, labelNext: labelNext2, labelWeekday: labelWeekday2, labelWeekNumber: labelWeekNumber2, labelWeekNumberHeader: labelWeekNumberHeader2, labelYearDropdown: labelYearDropdown2 } = labels;
  const weekdays = (0, import_react167.useMemo)(() => getWeekdays(dateLib, props.ISOWeek), [dateLib, props.ISOWeek]);
  const isInteractive = mode !== void 0 || onDayClick !== void 0;
  const handlePreviousClick = (0, import_react167.useCallback)(() => {
    if (!previousMonth)
      return;
    goToMonth(previousMonth);
    onPrevClick?.(previousMonth);
  }, [previousMonth, goToMonth, onPrevClick]);
  const handleNextClick = (0, import_react167.useCallback)(() => {
    if (!nextMonth)
      return;
    goToMonth(nextMonth);
    onNextClick?.(nextMonth);
  }, [goToMonth, nextMonth, onNextClick]);
  const handleDayClick = (0, import_react167.useCallback)((day, m) => (e2) => {
    e2.preventDefault();
    e2.stopPropagation();
    setFocused(day);
    select?.(day.date, m, e2);
    onDayClick?.(day.date, m, e2);
  }, [select, onDayClick, setFocused]);
  const handleDayFocus = (0, import_react167.useCallback)((day, m) => (e2) => {
    setFocused(day);
    onDayFocus?.(day.date, m, e2);
  }, [onDayFocus, setFocused]);
  const handleDayBlur = (0, import_react167.useCallback)((day, m) => (e2) => {
    blur();
    onDayBlur?.(day.date, m, e2);
  }, [blur, onDayBlur]);
  const handleDayKeyDown = (0, import_react167.useCallback)((day, modifiers) => (e2) => {
    const keyMap = {
      ArrowLeft: [
        e2.shiftKey ? "month" : "day",
        props.dir === "rtl" ? "after" : "before"
      ],
      ArrowRight: [
        e2.shiftKey ? "month" : "day",
        props.dir === "rtl" ? "before" : "after"
      ],
      ArrowDown: [e2.shiftKey ? "year" : "week", "after"],
      ArrowUp: [e2.shiftKey ? "year" : "week", "before"],
      PageUp: [e2.shiftKey ? "year" : "month", "before"],
      PageDown: [e2.shiftKey ? "year" : "month", "after"],
      Home: ["startOfWeek", "before"],
      End: ["endOfWeek", "after"]
    };
    if (keyMap[e2.key]) {
      e2.preventDefault();
      e2.stopPropagation();
      const [moveBy, moveDir] = keyMap[e2.key];
      moveFocus(moveBy, moveDir);
    }
    onDayKeyDown?.(day.date, modifiers, e2);
  }, [moveFocus, onDayKeyDown, props.dir]);
  const handleDayMouseEnter = (0, import_react167.useCallback)((day, modifiers) => (e2) => {
    onDayMouseEnter?.(day.date, modifiers, e2);
  }, [onDayMouseEnter]);
  const handleDayMouseLeave = (0, import_react167.useCallback)((day, modifiers) => (e2) => {
    onDayMouseLeave?.(day.date, modifiers, e2);
  }, [onDayMouseLeave]);
  const handleMonthChange = (0, import_react167.useCallback)((date) => (e2) => {
    const selectedMonth = Number(e2.target.value);
    const month = dateLib.setMonth(dateLib.startOfMonth(date), selectedMonth);
    goToMonth(month);
  }, [dateLib, goToMonth]);
  const handleYearChange = (0, import_react167.useCallback)((date) => (e2) => {
    const selectedYear = Number(e2.target.value);
    const month = dateLib.setYear(dateLib.startOfMonth(date), selectedYear);
    goToMonth(month);
  }, [dateLib, goToMonth]);
  const { className, style } = (0, import_react167.useMemo)(() => ({
    className: [classNames[UI.Root], props.className].filter(Boolean).join(" "),
    style: { ...styles?.[UI.Root], ...props.style }
  }), [classNames, props.className, props.style, styles]);
  const dataAttributes = getDataAttributes(props);
  const rootElRef = (0, import_react167.useRef)(null);
  useAnimation(rootElRef, Boolean(props.animate), {
    classNames,
    months,
    focused,
    dateLib
  });
  const contextValue = {
    dayPickerProps: props,
    selected: selectedValue,
    select,
    isSelected,
    months,
    nextMonth,
    previousMonth,
    goToMonth,
    getModifiers,
    components,
    classNames,
    styles,
    labels,
    formatters: formatters2
  };
  return import_react167.default.createElement(
    dayPickerContext.Provider,
    { value: contextValue },
    import_react167.default.createElement(
      components.Root,
      { rootRef: props.animate ? rootElRef : void 0, className, style, dir: props.dir, id: props.id, lang: props.lang, nonce: props.nonce, title: props.title, role: props.role, "aria-label": props["aria-label"], "aria-labelledby": props["aria-labelledby"], ...dataAttributes },
      import_react167.default.createElement(
        components.Months,
        { className: classNames[UI.Months], style: styles?.[UI.Months] },
        !props.hideNavigation && !navLayout && import_react167.default.createElement(components.Nav, { "data-animated-nav": props.animate ? "true" : void 0, className: classNames[UI.Nav], style: styles?.[UI.Nav], "aria-label": labelNav2(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth, nextMonth }),
        months.map((calendarMonth, displayIndex) => {
          return import_react167.default.createElement(
            components.Month,
            {
              "data-animated-month": props.animate ? "true" : void 0,
              className: classNames[UI.Month],
              style: styles?.[UI.Month],
              // biome-ignore lint/suspicious/noArrayIndexKey: breaks animation
              key: displayIndex,
              displayIndex,
              calendarMonth
            },
            navLayout === "around" && !props.hideNavigation && displayIndex === 0 && import_react167.default.createElement(
              components.PreviousMonthButton,
              { type: "button", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? void 0 : -1, "aria-disabled": previousMonth ? void 0 : true, "aria-label": labelPrevious2(previousMonth), onClick: handlePreviousClick, "data-animated-button": props.animate ? "true" : void 0 },
              import_react167.default.createElement(components.Chevron, { disabled: previousMonth ? void 0 : true, className: classNames[UI.Chevron], orientation: props.dir === "rtl" ? "right" : "left" })
            ),
            import_react167.default.createElement(components.MonthCaption, { "data-animated-caption": props.animate ? "true" : void 0, className: classNames[UI.MonthCaption], style: styles?.[UI.MonthCaption], calendarMonth, displayIndex }, captionLayout?.startsWith("dropdown") ? import_react167.default.createElement(
              components.DropdownNav,
              { className: classNames[UI.Dropdowns], style: styles?.[UI.Dropdowns] },
              (() => {
                const monthControl = captionLayout === "dropdown" || captionLayout === "dropdown-months" ? import_react167.default.createElement(components.MonthsDropdown, { key: "month", className: classNames[UI.MonthsDropdown], "aria-label": labelMonthDropdown2(), classNames, components, disabled: Boolean(props.disableNavigation), onChange: handleMonthChange(calendarMonth.date), options: getMonthOptions(calendarMonth.date, navStart, navEnd, formatters2, dateLib), style: styles?.[UI.Dropdown], value: dateLib.getMonth(calendarMonth.date) }) : import_react167.default.createElement("span", { key: "month" }, formatMonthDropdown2(calendarMonth.date, dateLib));
                const yearControl = captionLayout === "dropdown" || captionLayout === "dropdown-years" ? import_react167.default.createElement(components.YearsDropdown, { key: "year", className: classNames[UI.YearsDropdown], "aria-label": labelYearDropdown2(dateLib.options), classNames, components, disabled: Boolean(props.disableNavigation), onChange: handleYearChange(calendarMonth.date), options: getYearOptions(navStart, navEnd, formatters2, dateLib, Boolean(props.reverseYears)), style: styles?.[UI.Dropdown], value: dateLib.getYear(calendarMonth.date) }) : import_react167.default.createElement("span", { key: "year" }, formatYearDropdown2(calendarMonth.date, dateLib));
                const controls = dateLib.getMonthYearOrder() === "year-first" ? [yearControl, monthControl] : [monthControl, yearControl];
                return controls;
              })(),
              import_react167.default.createElement("span", { role: "status", "aria-live": "polite", style: {
                border: 0,
                clip: "rect(0 0 0 0)",
                height: "1px",
                margin: "-1px",
                overflow: "hidden",
                padding: 0,
                position: "absolute",
                width: "1px",
                whiteSpace: "nowrap",
                wordWrap: "normal"
              } }, formatCaption2(calendarMonth.date, dateLib.options, dateLib))
            ) : (
              // biome-ignore lint/a11y/useSemanticElements: breaking change
              import_react167.default.createElement(components.CaptionLabel, { className: classNames[UI.CaptionLabel], role: "status", "aria-live": "polite" }, formatCaption2(calendarMonth.date, dateLib.options, dateLib))
            )),
            navLayout === "around" && !props.hideNavigation && displayIndex === numberOfMonths - 1 && import_react167.default.createElement(
              components.NextMonthButton,
              { type: "button", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? void 0 : -1, "aria-disabled": nextMonth ? void 0 : true, "aria-label": labelNext2(nextMonth), onClick: handleNextClick, "data-animated-button": props.animate ? "true" : void 0 },
              import_react167.default.createElement(components.Chevron, { disabled: nextMonth ? void 0 : true, className: classNames[UI.Chevron], orientation: props.dir === "rtl" ? "left" : "right" })
            ),
            displayIndex === numberOfMonths - 1 && navLayout === "after" && !props.hideNavigation && import_react167.default.createElement(components.Nav, { "data-animated-nav": props.animate ? "true" : void 0, className: classNames[UI.Nav], style: styles?.[UI.Nav], "aria-label": labelNav2(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth, nextMonth }),
            import_react167.default.createElement(
              components.MonthGrid,
              { role: "grid", "aria-multiselectable": mode === "multiple" || mode === "range", "aria-label": labelGrid2(calendarMonth.date, dateLib.options, dateLib) || void 0, className: classNames[UI.MonthGrid], style: styles?.[UI.MonthGrid] },
              !props.hideWeekdays && import_react167.default.createElement(
                components.Weekdays,
                { "data-animated-weekdays": props.animate ? "true" : void 0, className: classNames[UI.Weekdays], style: styles?.[UI.Weekdays] },
                showWeekNumber && import_react167.default.createElement(components.WeekNumberHeader, { "aria-label": labelWeekNumberHeader2(dateLib.options), className: classNames[UI.WeekNumberHeader], style: styles?.[UI.WeekNumberHeader], scope: "col" }, formatWeekNumberHeader2()),
                weekdays.map((weekday) => import_react167.default.createElement(components.Weekday, { "aria-label": labelWeekday2(weekday, dateLib.options, dateLib), className: classNames[UI.Weekday], key: String(weekday), style: styles?.[UI.Weekday], scope: "col" }, formatWeekdayName2(weekday, dateLib.options, dateLib)))
              ),
              import_react167.default.createElement(components.Weeks, { "data-animated-weeks": props.animate ? "true" : void 0, className: classNames[UI.Weeks], style: styles?.[UI.Weeks] }, calendarMonth.weeks.map((week) => {
                return import_react167.default.createElement(
                  components.Week,
                  { className: classNames[UI.Week], key: week.weekNumber, style: styles?.[UI.Week], week },
                  showWeekNumber && // biome-ignore lint/a11y/useSemanticElements: react component
                  import_react167.default.createElement(components.WeekNumber, { week, style: styles?.[UI.WeekNumber], "aria-label": labelWeekNumber2(week.weekNumber, {
                    locale
                  }), className: classNames[UI.WeekNumber], scope: "row", role: "rowheader" }, formatWeekNumber2(week.weekNumber, dateLib)),
                  week.days.map((day) => {
                    const { date } = day;
                    const modifiers = getModifiers(day);
                    modifiers[DayFlag.focused] = !modifiers.hidden && Boolean(focused?.isEqualTo(day));
                    modifiers[SelectionState.selected] = isSelected?.(date) || modifiers.selected;
                    if (isDateRange(selectedValue)) {
                      const { from, to } = selectedValue;
                      modifiers[SelectionState.range_start] = Boolean(from && to && dateLib.isSameDay(date, from));
                      modifiers[SelectionState.range_end] = Boolean(from && to && dateLib.isSameDay(date, to));
                      modifiers[SelectionState.range_middle] = rangeIncludesDate(selectedValue, date, true, dateLib);
                    }
                    const style2 = getStyleForModifiers(modifiers, styles, props.modifiersStyles);
                    const className2 = getClassNamesForModifiers(modifiers, classNames, props.modifiersClassNames);
                    const ariaLabel = !isInteractive && !modifiers.hidden ? labelGridcell2(date, modifiers, dateLib.options, dateLib) : void 0;
                    return (
                      // biome-ignore lint/a11y/useSemanticElements: react component
                      import_react167.default.createElement(components.Day, { key: `${dateLib.format(date, "yyyy-MM-dd")}_${dateLib.format(day.displayMonth, "yyyy-MM")}`, day, modifiers, className: className2.join(" "), style: style2, role: "gridcell", "aria-selected": modifiers.selected || void 0, "aria-label": ariaLabel, "data-day": dateLib.format(date, "yyyy-MM-dd"), "data-month": day.outside ? dateLib.format(date, "yyyy-MM") : void 0, "data-selected": modifiers.selected || void 0, "data-disabled": modifiers.disabled || void 0, "data-hidden": modifiers.hidden || void 0, "data-outside": day.outside || void 0, "data-focused": modifiers.focused || void 0, "data-today": modifiers.today || void 0 }, !modifiers.hidden && isInteractive ? import_react167.default.createElement(components.DayButton, { className: classNames[UI.DayButton], style: styles?.[UI.DayButton], type: "button", day, modifiers, disabled: modifiers.disabled || void 0, tabIndex: isFocusTarget(day) ? 0 : -1, "aria-label": labelDayButton2(date, modifiers, dateLib.options, dateLib), onClick: handleDayClick(day, modifiers), onBlur: handleDayBlur(day, modifiers), onFocus: handleDayFocus(day, modifiers), onKeyDown: handleDayKeyDown(day, modifiers), onMouseEnter: handleDayMouseEnter(day, modifiers), onMouseLeave: handleDayMouseLeave(day, modifiers) }, formatDay2(date, dateLib.options, dateLib)) : !modifiers.hidden && formatDay2(day.date, dateLib.options, dateLib))
                    );
                  })
                );
              }))
            )
          );
        })
      ),
      props.footer && // biome-ignore lint/a11y/useSemanticElements: react component
      import_react167.default.createElement(components.Footer, { className: classNames[UI.Footer], style: styles?.[UI.Footer], role: "status", "aria-live": "polite" }, props.footer)
    )
  );
}

// ../../packages/aitable/src/grid/components/editors/enhanced/DateEditor.tsx
var import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1);
import "/Users/leven/space/b/easydb/node_modules/react-day-picker/src/style.css";
var DateEditor = ({
  value,
  onChange,
  onSave,
  onCancel,
  readonly = false,
  format: dateFormat = "yyyy-MM-dd",
  showTime = false,
  timeFormat = "HH:mm",
  className,
  style,
  rect
}) => {
  const parseDate2 = (dateStr) => {
    if (!dateStr) {
      return void 0;
    }
    try {
      const parsedDate = parse(dateStr, dateFormat, /* @__PURE__ */ new Date());
      return isValid(parsedDate) ? parsedDate : void 0;
    } catch {
      return void 0;
    }
  };
  const [selectedDate, setSelectedDate] = (0, import_react168.useState)(
    parseDate2(value)
  );
  const [timeValue, setTimeValue] = (0, import_react168.useState)(() => {
    if (!showTime || !value) {
      return "00:00";
    }
    try {
      const date = parseDate2(value);
      return date ? format(date, timeFormat) : "00:00";
    } catch {
      return "00:00";
    }
  });
  const popupPosition = rect ? useGridPopupPosition(rect, 400) : void 0;
  const handleDateSelect = (0, import_react168.useCallback)(
    (date) => {
      setSelectedDate(date);
      if (!date) {
        onChange(null);
        return;
      }
      try {
        let formattedDate = format(date, dateFormat);
        if (showTime) {
          const [hours, minutes] = timeValue.split(":").map(Number);
          date.setHours(hours, minutes);
          formattedDate = format(date, `${dateFormat} ${timeFormat}`);
        }
        onChange(formattedDate);
      } catch (error) {
        console.error("Date format error:", error);
      }
    },
    [onChange, dateFormat, showTime, timeFormat, timeValue]
  );
  const handleTimeChange = (0, import_react168.useCallback)(
    (e2) => {
      const newTime = e2.target.value;
      setTimeValue(newTime);
      if (!selectedDate) {
        return;
      }
      try {
        const [hours, minutes] = newTime.split(":").map(Number);
        const newDate = new Date(selectedDate);
        newDate.setHours(hours, minutes);
        const formattedDate = format(newDate, `${dateFormat} ${timeFormat}`);
        onChange(formattedDate);
      } catch (error) {
        console.error("Time format error:", error);
      }
    },
    [selectedDate, onChange, dateFormat, timeFormat]
  );
  const handleKeyDown = (0, import_react168.useCallback)(
    (e2) => {
      if (e2.key === "Enter") {
        e2.preventDefault();
        onSave?.();
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        onCancel?.();
      }
    },
    [onSave, onCancel]
  );
  return (0, import_jsx_runtime13.jsxs)(
    "div",
    {
      className,
      style: {
        position: "absolute",
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        padding: "12px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e3,
        minWidth: "280px",
        ...popupPosition,
        ...style
      },
      onKeyDown: handleKeyDown,
      children: [
        (0, import_jsx_runtime13.jsx)(
          DayPicker,
          {
            mode: "single",
            selected: selectedDate,
            onSelect: handleDateSelect,
            disabled: readonly,
            showOutsideDays: true,
            styles: {
              root: { margin: 0 }
            }
          }
        ),
        showTime && (0, import_jsx_runtime13.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              alignItems: "center",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime13.jsx)("label", { style: { fontSize: "13px", color: "#6b7280" }, children: "Time:" }),
              (0, import_jsx_runtime13.jsx)(
                "input",
                {
                  type: "time",
                  value: timeValue,
                  onChange: handleTimeChange,
                  disabled: readonly,
                  style: {
                    padding: "6px 8px",
                    border: "1px solid #d1d5db",
                    borderRadius: "4px",
                    fontSize: "13px",
                    flex: 1
                  }
                }
              )
            ]
          }
        ),
        (0, import_jsx_runtime13.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "flex-end",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime13.jsx)(
                "button",
                {
                  onClick: () => {
                    handleDateSelect(void 0);
                    onSave?.();
                  },
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#6b7280",
                    backgroundColor: "#f3f4f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: "pointer"
                  },
                  children: "Clear"
                }
              ),
              (0, import_jsx_runtime13.jsx)(
                "button",
                {
                  onClick: onSave,
                  disabled: readonly,
                  style: {
                    padding: "6px 16px",
                    fontSize: "13px",
                    color: "#ffffff",
                    backgroundColor: "#3b82f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: readonly ? "not-allowed" : "pointer",
                    opacity: readonly ? 0.5 : 1
                  },
                  children: "Confirm"
                }
              )
            ]
          }
        )
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/enhanced/AttachmentEditor.tsx
var import_react170 = __toESM(require_react(), 1);

// ../../node_modules/use-file-picker/dist/index.mjs
var import_react169 = __toESM(require_react(), 1);

// ../../node_modules/file-selector/dist/es2015/file-selector.js
init_tslib_es6();

// ../../node_modules/file-selector/dist/es2015/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  // https://github.com/guzzle/psr7/blob/2d9260799e713f1c475d3c5fdc3d6561ff7441b2/src/MimeType.php
  ["1km", "application/vnd.1000minds.decision-model+xml"],
  ["3dml", "text/vnd.in3d.3dml"],
  ["3ds", "image/x-3ds"],
  ["3g2", "video/3gpp2"],
  ["3gp", "video/3gp"],
  ["3gpp", "video/3gpp"],
  ["3mf", "model/3mf"],
  ["7z", "application/x-7z-compressed"],
  ["7zip", "application/x-7z-compressed"],
  ["123", "application/vnd.lotus-1-2-3"],
  ["aab", "application/x-authorware-bin"],
  ["aac", "audio/x-acc"],
  ["aam", "application/x-authorware-map"],
  ["aas", "application/x-authorware-seg"],
  ["abw", "application/x-abiword"],
  ["ac", "application/vnd.nokia.n-gage.ac+xml"],
  ["ac3", "audio/ac3"],
  ["acc", "application/vnd.americandynamics.acc"],
  ["ace", "application/x-ace-compressed"],
  ["acu", "application/vnd.acucobol"],
  ["acutc", "application/vnd.acucorp"],
  ["adp", "audio/adpcm"],
  ["aep", "application/vnd.audiograph"],
  ["afm", "application/x-font-type1"],
  ["afp", "application/vnd.ibm.modcap"],
  ["ahead", "application/vnd.ahead.space"],
  ["ai", "application/pdf"],
  ["aif", "audio/x-aiff"],
  ["aifc", "audio/x-aiff"],
  ["aiff", "audio/x-aiff"],
  ["air", "application/vnd.adobe.air-application-installer-package+zip"],
  ["ait", "application/vnd.dvb.ait"],
  ["ami", "application/vnd.amiga.ami"],
  ["amr", "audio/amr"],
  ["apk", "application/vnd.android.package-archive"],
  ["apng", "image/apng"],
  ["appcache", "text/cache-manifest"],
  ["application", "application/x-ms-application"],
  ["apr", "application/vnd.lotus-approach"],
  ["arc", "application/x-freearc"],
  ["arj", "application/x-arj"],
  ["asc", "application/pgp-signature"],
  ["asf", "video/x-ms-asf"],
  ["asm", "text/x-asm"],
  ["aso", "application/vnd.accpac.simply.aso"],
  ["asx", "video/x-ms-asf"],
  ["atc", "application/vnd.acucorp"],
  ["atom", "application/atom+xml"],
  ["atomcat", "application/atomcat+xml"],
  ["atomdeleted", "application/atomdeleted+xml"],
  ["atomsvc", "application/atomsvc+xml"],
  ["atx", "application/vnd.antix.game-component"],
  ["au", "audio/x-au"],
  ["avi", "video/x-msvideo"],
  ["avif", "image/avif"],
  ["aw", "application/applixware"],
  ["azf", "application/vnd.airzip.filesecure.azf"],
  ["azs", "application/vnd.airzip.filesecure.azs"],
  ["azv", "image/vnd.airzip.accelerator.azv"],
  ["azw", "application/vnd.amazon.ebook"],
  ["b16", "image/vnd.pco.b16"],
  ["bat", "application/x-msdownload"],
  ["bcpio", "application/x-bcpio"],
  ["bdf", "application/x-font-bdf"],
  ["bdm", "application/vnd.syncml.dm+wbxml"],
  ["bdoc", "application/x-bdoc"],
  ["bed", "application/vnd.realvnc.bed"],
  ["bh2", "application/vnd.fujitsu.oasysprs"],
  ["bin", "application/octet-stream"],
  ["blb", "application/x-blorb"],
  ["blorb", "application/x-blorb"],
  ["bmi", "application/vnd.bmi"],
  ["bmml", "application/vnd.balsamiq.bmml+xml"],
  ["bmp", "image/bmp"],
  ["book", "application/vnd.framemaker"],
  ["box", "application/vnd.previewsystems.box"],
  ["boz", "application/x-bzip2"],
  ["bpk", "application/octet-stream"],
  ["bpmn", "application/octet-stream"],
  ["bsp", "model/vnd.valve.source.compiled-map"],
  ["btif", "image/prs.btif"],
  ["buffer", "application/octet-stream"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["c", "text/x-c"],
  ["c4d", "application/vnd.clonk.c4group"],
  ["c4f", "application/vnd.clonk.c4group"],
  ["c4g", "application/vnd.clonk.c4group"],
  ["c4p", "application/vnd.clonk.c4group"],
  ["c4u", "application/vnd.clonk.c4group"],
  ["c11amc", "application/vnd.cluetrust.cartomobile-config"],
  ["c11amz", "application/vnd.cluetrust.cartomobile-config-pkg"],
  ["cab", "application/vnd.ms-cab-compressed"],
  ["caf", "audio/x-caf"],
  ["cap", "application/vnd.tcpdump.pcap"],
  ["car", "application/vnd.curl.car"],
  ["cat", "application/vnd.ms-pki.seccat"],
  ["cb7", "application/x-cbr"],
  ["cba", "application/x-cbr"],
  ["cbr", "application/x-cbr"],
  ["cbt", "application/x-cbr"],
  ["cbz", "application/x-cbr"],
  ["cc", "text/x-c"],
  ["cco", "application/x-cocoa"],
  ["cct", "application/x-director"],
  ["ccxml", "application/ccxml+xml"],
  ["cdbcmsg", "application/vnd.contact.cmsg"],
  ["cda", "application/x-cdf"],
  ["cdf", "application/x-netcdf"],
  ["cdfx", "application/cdfx+xml"],
  ["cdkey", "application/vnd.mediastation.cdkey"],
  ["cdmia", "application/cdmi-capability"],
  ["cdmic", "application/cdmi-container"],
  ["cdmid", "application/cdmi-domain"],
  ["cdmio", "application/cdmi-object"],
  ["cdmiq", "application/cdmi-queue"],
  ["cdr", "application/cdr"],
  ["cdx", "chemical/x-cdx"],
  ["cdxml", "application/vnd.chemdraw+xml"],
  ["cdy", "application/vnd.cinderella"],
  ["cer", "application/pkix-cert"],
  ["cfs", "application/x-cfs-compressed"],
  ["cgm", "image/cgm"],
  ["chat", "application/x-chat"],
  ["chm", "application/vnd.ms-htmlhelp"],
  ["chrt", "application/vnd.kde.kchart"],
  ["cif", "chemical/x-cif"],
  ["cii", "application/vnd.anser-web-certificate-issue-initiation"],
  ["cil", "application/vnd.ms-artgalry"],
  ["cjs", "application/node"],
  ["cla", "application/vnd.claymore"],
  ["class", "application/octet-stream"],
  ["clkk", "application/vnd.crick.clicker.keyboard"],
  ["clkp", "application/vnd.crick.clicker.palette"],
  ["clkt", "application/vnd.crick.clicker.template"],
  ["clkw", "application/vnd.crick.clicker.wordbank"],
  ["clkx", "application/vnd.crick.clicker"],
  ["clp", "application/x-msclip"],
  ["cmc", "application/vnd.cosmocaller"],
  ["cmdf", "chemical/x-cmdf"],
  ["cml", "chemical/x-cml"],
  ["cmp", "application/vnd.yellowriver-custom-menu"],
  ["cmx", "image/x-cmx"],
  ["cod", "application/vnd.rim.cod"],
  ["coffee", "text/coffeescript"],
  ["com", "application/x-msdownload"],
  ["conf", "text/plain"],
  ["cpio", "application/x-cpio"],
  ["cpp", "text/x-c"],
  ["cpt", "application/mac-compactpro"],
  ["crd", "application/x-mscardfile"],
  ["crl", "application/pkix-crl"],
  ["crt", "application/x-x509-ca-cert"],
  ["crx", "application/x-chrome-extension"],
  ["cryptonote", "application/vnd.rig.cryptonote"],
  ["csh", "application/x-csh"],
  ["csl", "application/vnd.citationstyles.style+xml"],
  ["csml", "chemical/x-csml"],
  ["csp", "application/vnd.commonspace"],
  ["csr", "application/octet-stream"],
  ["css", "text/css"],
  ["cst", "application/x-director"],
  ["csv", "text/csv"],
  ["cu", "application/cu-seeme"],
  ["curl", "text/vnd.curl"],
  ["cww", "application/prs.cww"],
  ["cxt", "application/x-director"],
  ["cxx", "text/x-c"],
  ["dae", "model/vnd.collada+xml"],
  ["daf", "application/vnd.mobius.daf"],
  ["dart", "application/vnd.dart"],
  ["dataless", "application/vnd.fdsn.seed"],
  ["davmount", "application/davmount+xml"],
  ["dbf", "application/vnd.dbf"],
  ["dbk", "application/docbook+xml"],
  ["dcr", "application/x-director"],
  ["dcurl", "text/vnd.curl.dcurl"],
  ["dd2", "application/vnd.oma.dd2+xml"],
  ["ddd", "application/vnd.fujixerox.ddd"],
  ["ddf", "application/vnd.syncml.dmddf+xml"],
  ["dds", "image/vnd.ms-dds"],
  ["deb", "application/x-debian-package"],
  ["def", "text/plain"],
  ["deploy", "application/octet-stream"],
  ["der", "application/x-x509-ca-cert"],
  ["dfac", "application/vnd.dreamfactory"],
  ["dgc", "application/x-dgc-compressed"],
  ["dic", "text/x-c"],
  ["dir", "application/x-director"],
  ["dis", "application/vnd.mobius.dis"],
  ["disposition-notification", "message/disposition-notification"],
  ["dist", "application/octet-stream"],
  ["distz", "application/octet-stream"],
  ["djv", "image/vnd.djvu"],
  ["djvu", "image/vnd.djvu"],
  ["dll", "application/octet-stream"],
  ["dmg", "application/x-apple-diskimage"],
  ["dmn", "application/octet-stream"],
  ["dmp", "application/vnd.tcpdump.pcap"],
  ["dms", "application/octet-stream"],
  ["dna", "application/vnd.dna"],
  ["doc", "application/msword"],
  ["docm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["dot", "application/msword"],
  ["dotm", "application/vnd.ms-word.template.macroEnabled.12"],
  ["dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template"],
  ["dp", "application/vnd.osgi.dp"],
  ["dpg", "application/vnd.dpgraph"],
  ["dra", "audio/vnd.dra"],
  ["drle", "image/dicom-rle"],
  ["dsc", "text/prs.lines.tag"],
  ["dssc", "application/dssc+der"],
  ["dtb", "application/x-dtbook+xml"],
  ["dtd", "application/xml-dtd"],
  ["dts", "audio/vnd.dts"],
  ["dtshd", "audio/vnd.dts.hd"],
  ["dump", "application/octet-stream"],
  ["dvb", "video/vnd.dvb.file"],
  ["dvi", "application/x-dvi"],
  ["dwd", "application/atsc-dwd+xml"],
  ["dwf", "model/vnd.dwf"],
  ["dwg", "image/vnd.dwg"],
  ["dxf", "image/vnd.dxf"],
  ["dxp", "application/vnd.spotfire.dxp"],
  ["dxr", "application/x-director"],
  ["ear", "application/java-archive"],
  ["ecelp4800", "audio/vnd.nuera.ecelp4800"],
  ["ecelp7470", "audio/vnd.nuera.ecelp7470"],
  ["ecelp9600", "audio/vnd.nuera.ecelp9600"],
  ["ecma", "application/ecmascript"],
  ["edm", "application/vnd.novadigm.edm"],
  ["edx", "application/vnd.novadigm.edx"],
  ["efif", "application/vnd.picsel"],
  ["ei6", "application/vnd.pg.osasli"],
  ["elc", "application/octet-stream"],
  ["emf", "image/emf"],
  ["eml", "message/rfc822"],
  ["emma", "application/emma+xml"],
  ["emotionml", "application/emotionml+xml"],
  ["emz", "application/x-msmetafile"],
  ["eol", "audio/vnd.digital-winds"],
  ["eot", "application/vnd.ms-fontobject"],
  ["eps", "application/postscript"],
  ["epub", "application/epub+zip"],
  ["es", "application/ecmascript"],
  ["es3", "application/vnd.eszigno3+xml"],
  ["esa", "application/vnd.osgi.subsystem"],
  ["esf", "application/vnd.epson.esf"],
  ["et3", "application/vnd.eszigno3+xml"],
  ["etx", "text/x-setext"],
  ["eva", "application/x-eva"],
  ["evy", "application/x-envoy"],
  ["exe", "application/octet-stream"],
  ["exi", "application/exi"],
  ["exp", "application/express"],
  ["exr", "image/aces"],
  ["ext", "application/vnd.novadigm.ext"],
  ["ez", "application/andrew-inset"],
  ["ez2", "application/vnd.ezpix-album"],
  ["ez3", "application/vnd.ezpix-package"],
  ["f", "text/x-fortran"],
  ["f4v", "video/mp4"],
  ["f77", "text/x-fortran"],
  ["f90", "text/x-fortran"],
  ["fbs", "image/vnd.fastbidsheet"],
  ["fcdt", "application/vnd.adobe.formscentral.fcdt"],
  ["fcs", "application/vnd.isac.fcs"],
  ["fdf", "application/vnd.fdf"],
  ["fdt", "application/fdt+xml"],
  ["fe_launch", "application/vnd.denovo.fcselayout-link"],
  ["fg5", "application/vnd.fujitsu.oasysgp"],
  ["fgd", "application/x-director"],
  ["fh", "image/x-freehand"],
  ["fh4", "image/x-freehand"],
  ["fh5", "image/x-freehand"],
  ["fh7", "image/x-freehand"],
  ["fhc", "image/x-freehand"],
  ["fig", "application/x-xfig"],
  ["fits", "image/fits"],
  ["flac", "audio/x-flac"],
  ["fli", "video/x-fli"],
  ["flo", "application/vnd.micrografx.flo"],
  ["flv", "video/x-flv"],
  ["flw", "application/vnd.kde.kivio"],
  ["flx", "text/vnd.fmi.flexstor"],
  ["fly", "text/vnd.fly"],
  ["fm", "application/vnd.framemaker"],
  ["fnc", "application/vnd.frogans.fnc"],
  ["fo", "application/vnd.software602.filler.form+xml"],
  ["for", "text/x-fortran"],
  ["fpx", "image/vnd.fpx"],
  ["frame", "application/vnd.framemaker"],
  ["fsc", "application/vnd.fsc.weblaunch"],
  ["fst", "image/vnd.fst"],
  ["ftc", "application/vnd.fluxtime.clip"],
  ["fti", "application/vnd.anser-web-funds-transfer-initiation"],
  ["fvt", "video/vnd.fvt"],
  ["fxp", "application/vnd.adobe.fxp"],
  ["fxpl", "application/vnd.adobe.fxp"],
  ["fzs", "application/vnd.fuzzysheet"],
  ["g2w", "application/vnd.geoplan"],
  ["g3", "image/g3fax"],
  ["g3w", "application/vnd.geospace"],
  ["gac", "application/vnd.groove-account"],
  ["gam", "application/x-tads"],
  ["gbr", "application/rpki-ghostbusters"],
  ["gca", "application/x-gca-compressed"],
  ["gdl", "model/vnd.gdl"],
  ["gdoc", "application/vnd.google-apps.document"],
  ["geo", "application/vnd.dynageo"],
  ["geojson", "application/geo+json"],
  ["gex", "application/vnd.geometry-explorer"],
  ["ggb", "application/vnd.geogebra.file"],
  ["ggt", "application/vnd.geogebra.tool"],
  ["ghf", "application/vnd.groove-help"],
  ["gif", "image/gif"],
  ["gim", "application/vnd.groove-identity-message"],
  ["glb", "model/gltf-binary"],
  ["gltf", "model/gltf+json"],
  ["gml", "application/gml+xml"],
  ["gmx", "application/vnd.gmx"],
  ["gnumeric", "application/x-gnumeric"],
  ["gpg", "application/gpg-keys"],
  ["gph", "application/vnd.flographit"],
  ["gpx", "application/gpx+xml"],
  ["gqf", "application/vnd.grafeq"],
  ["gqs", "application/vnd.grafeq"],
  ["gram", "application/srgs"],
  ["gramps", "application/x-gramps-xml"],
  ["gre", "application/vnd.geometry-explorer"],
  ["grv", "application/vnd.groove-injector"],
  ["grxml", "application/srgs+xml"],
  ["gsf", "application/x-font-ghostscript"],
  ["gsheet", "application/vnd.google-apps.spreadsheet"],
  ["gslides", "application/vnd.google-apps.presentation"],
  ["gtar", "application/x-gtar"],
  ["gtm", "application/vnd.groove-tool-message"],
  ["gtw", "model/vnd.gtw"],
  ["gv", "text/vnd.graphviz"],
  ["gxf", "application/gxf"],
  ["gxt", "application/vnd.geonext"],
  ["gz", "application/gzip"],
  ["gzip", "application/gzip"],
  ["h", "text/x-c"],
  ["h261", "video/h261"],
  ["h263", "video/h263"],
  ["h264", "video/h264"],
  ["hal", "application/vnd.hal+xml"],
  ["hbci", "application/vnd.hbci"],
  ["hbs", "text/x-handlebars-template"],
  ["hdd", "application/x-virtualbox-hdd"],
  ["hdf", "application/x-hdf"],
  ["heic", "image/heic"],
  ["heics", "image/heic-sequence"],
  ["heif", "image/heif"],
  ["heifs", "image/heif-sequence"],
  ["hej2", "image/hej2k"],
  ["held", "application/atsc-held+xml"],
  ["hh", "text/x-c"],
  ["hjson", "application/hjson"],
  ["hlp", "application/winhlp"],
  ["hpgl", "application/vnd.hp-hpgl"],
  ["hpid", "application/vnd.hp-hpid"],
  ["hps", "application/vnd.hp-hps"],
  ["hqx", "application/mac-binhex40"],
  ["hsj2", "image/hsj2"],
  ["htc", "text/x-component"],
  ["htke", "application/vnd.kenameaapp"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["hvd", "application/vnd.yamaha.hv-dic"],
  ["hvp", "application/vnd.yamaha.hv-voice"],
  ["hvs", "application/vnd.yamaha.hv-script"],
  ["i2g", "application/vnd.intergeo"],
  ["icc", "application/vnd.iccprofile"],
  ["ice", "x-conference/x-cooltalk"],
  ["icm", "application/vnd.iccprofile"],
  ["ico", "image/x-icon"],
  ["ics", "text/calendar"],
  ["ief", "image/ief"],
  ["ifb", "text/calendar"],
  ["ifm", "application/vnd.shana.informed.formdata"],
  ["iges", "model/iges"],
  ["igl", "application/vnd.igloader"],
  ["igm", "application/vnd.insors.igm"],
  ["igs", "model/iges"],
  ["igx", "application/vnd.micrografx.igx"],
  ["iif", "application/vnd.shana.informed.interchange"],
  ["img", "application/octet-stream"],
  ["imp", "application/vnd.accpac.simply.imp"],
  ["ims", "application/vnd.ms-ims"],
  ["in", "text/plain"],
  ["ini", "text/plain"],
  ["ink", "application/inkml+xml"],
  ["inkml", "application/inkml+xml"],
  ["install", "application/x-install-instructions"],
  ["iota", "application/vnd.astraea-software.iota"],
  ["ipfix", "application/ipfix"],
  ["ipk", "application/vnd.shana.informed.package"],
  ["irm", "application/vnd.ibm.rights-management"],
  ["irp", "application/vnd.irepository.package+xml"],
  ["iso", "application/x-iso9660-image"],
  ["itp", "application/vnd.shana.informed.formtemplate"],
  ["its", "application/its+xml"],
  ["ivp", "application/vnd.immervision-ivp"],
  ["ivu", "application/vnd.immervision-ivu"],
  ["jad", "text/vnd.sun.j2me.app-descriptor"],
  ["jade", "text/jade"],
  ["jam", "application/vnd.jam"],
  ["jar", "application/java-archive"],
  ["jardiff", "application/x-java-archive-diff"],
  ["java", "text/x-java-source"],
  ["jhc", "image/jphc"],
  ["jisp", "application/vnd.jisp"],
  ["jls", "image/jls"],
  ["jlt", "application/vnd.hp-jlyt"],
  ["jng", "image/x-jng"],
  ["jnlp", "application/x-java-jnlp-file"],
  ["joda", "application/vnd.joost.joda-archive"],
  ["jp2", "image/jp2"],
  ["jpe", "image/jpeg"],
  ["jpeg", "image/jpeg"],
  ["jpf", "image/jpx"],
  ["jpg", "image/jpeg"],
  ["jpg2", "image/jp2"],
  ["jpgm", "video/jpm"],
  ["jpgv", "video/jpeg"],
  ["jph", "image/jph"],
  ["jpm", "video/jpm"],
  ["jpx", "image/jpx"],
  ["js", "application/javascript"],
  ["json", "application/json"],
  ["json5", "application/json5"],
  ["jsonld", "application/ld+json"],
  // https://jsonlines.org/
  ["jsonl", "application/jsonl"],
  ["jsonml", "application/jsonml+json"],
  ["jsx", "text/jsx"],
  ["jxr", "image/jxr"],
  ["jxra", "image/jxra"],
  ["jxrs", "image/jxrs"],
  ["jxs", "image/jxs"],
  ["jxsc", "image/jxsc"],
  ["jxsi", "image/jxsi"],
  ["jxss", "image/jxss"],
  ["kar", "audio/midi"],
  ["karbon", "application/vnd.kde.karbon"],
  ["kdb", "application/octet-stream"],
  ["kdbx", "application/x-keepass2"],
  ["key", "application/x-iwork-keynote-sffkey"],
  ["kfo", "application/vnd.kde.kformula"],
  ["kia", "application/vnd.kidspiration"],
  ["kml", "application/vnd.google-earth.kml+xml"],
  ["kmz", "application/vnd.google-earth.kmz"],
  ["kne", "application/vnd.kinar"],
  ["knp", "application/vnd.kinar"],
  ["kon", "application/vnd.kde.kontour"],
  ["kpr", "application/vnd.kde.kpresenter"],
  ["kpt", "application/vnd.kde.kpresenter"],
  ["kpxx", "application/vnd.ds-keypoint"],
  ["ksp", "application/vnd.kde.kspread"],
  ["ktr", "application/vnd.kahootz"],
  ["ktx", "image/ktx"],
  ["ktx2", "image/ktx2"],
  ["ktz", "application/vnd.kahootz"],
  ["kwd", "application/vnd.kde.kword"],
  ["kwt", "application/vnd.kde.kword"],
  ["lasxml", "application/vnd.las.las+xml"],
  ["latex", "application/x-latex"],
  ["lbd", "application/vnd.llamagraphics.life-balance.desktop"],
  ["lbe", "application/vnd.llamagraphics.life-balance.exchange+xml"],
  ["les", "application/vnd.hhe.lesson-player"],
  ["less", "text/less"],
  ["lgr", "application/lgr+xml"],
  ["lha", "application/octet-stream"],
  ["link66", "application/vnd.route66.link66+xml"],
  ["list", "text/plain"],
  ["list3820", "application/vnd.ibm.modcap"],
  ["listafp", "application/vnd.ibm.modcap"],
  ["litcoffee", "text/coffeescript"],
  ["lnk", "application/x-ms-shortcut"],
  ["log", "text/plain"],
  ["lostxml", "application/lost+xml"],
  ["lrf", "application/octet-stream"],
  ["lrm", "application/vnd.ms-lrm"],
  ["ltf", "application/vnd.frogans.ltf"],
  ["lua", "text/x-lua"],
  ["luac", "application/x-lua-bytecode"],
  ["lvp", "audio/vnd.lucent.voice"],
  ["lwp", "application/vnd.lotus-wordpro"],
  ["lzh", "application/octet-stream"],
  ["m1v", "video/mpeg"],
  ["m2a", "audio/mpeg"],
  ["m2v", "video/mpeg"],
  ["m3a", "audio/mpeg"],
  ["m3u", "text/plain"],
  ["m3u8", "application/vnd.apple.mpegurl"],
  ["m4a", "audio/x-m4a"],
  ["m4p", "application/mp4"],
  ["m4s", "video/iso.segment"],
  ["m4u", "application/vnd.mpegurl"],
  ["m4v", "video/x-m4v"],
  ["m13", "application/x-msmediaview"],
  ["m14", "application/x-msmediaview"],
  ["m21", "application/mp21"],
  ["ma", "application/mathematica"],
  ["mads", "application/mads+xml"],
  ["maei", "application/mmt-aei+xml"],
  ["mag", "application/vnd.ecowin.chart"],
  ["maker", "application/vnd.framemaker"],
  ["man", "text/troff"],
  ["manifest", "text/cache-manifest"],
  ["map", "application/json"],
  ["mar", "application/octet-stream"],
  ["markdown", "text/markdown"],
  ["mathml", "application/mathml+xml"],
  ["mb", "application/mathematica"],
  ["mbk", "application/vnd.mobius.mbk"],
  ["mbox", "application/mbox"],
  ["mc1", "application/vnd.medcalcdata"],
  ["mcd", "application/vnd.mcd"],
  ["mcurl", "text/vnd.curl.mcurl"],
  ["md", "text/markdown"],
  ["mdb", "application/x-msaccess"],
  ["mdi", "image/vnd.ms-modi"],
  ["mdx", "text/mdx"],
  ["me", "text/troff"],
  ["mesh", "model/mesh"],
  ["meta4", "application/metalink4+xml"],
  ["metalink", "application/metalink+xml"],
  ["mets", "application/mets+xml"],
  ["mfm", "application/vnd.mfmp"],
  ["mft", "application/rpki-manifest"],
  ["mgp", "application/vnd.osgeo.mapguide.package"],
  ["mgz", "application/vnd.proteus.magazine"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mie", "application/x-mie"],
  ["mif", "application/vnd.mif"],
  ["mime", "message/rfc822"],
  ["mj2", "video/mj2"],
  ["mjp2", "video/mj2"],
  ["mjs", "application/javascript"],
  ["mk3d", "video/x-matroska"],
  ["mka", "audio/x-matroska"],
  ["mkd", "text/x-markdown"],
  ["mks", "video/x-matroska"],
  ["mkv", "video/x-matroska"],
  ["mlp", "application/vnd.dolby.mlp"],
  ["mmd", "application/vnd.chipnuts.karaoke-mmd"],
  ["mmf", "application/vnd.smaf"],
  ["mml", "text/mathml"],
  ["mmr", "image/vnd.fujixerox.edmics-mmr"],
  ["mng", "video/x-mng"],
  ["mny", "application/x-msmoney"],
  ["mobi", "application/x-mobipocket-ebook"],
  ["mods", "application/mods+xml"],
  ["mov", "video/quicktime"],
  ["movie", "video/x-sgi-movie"],
  ["mp2", "audio/mpeg"],
  ["mp2a", "audio/mpeg"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mp4a", "audio/mp4"],
  ["mp4s", "application/mp4"],
  ["mp4v", "video/mp4"],
  ["mp21", "application/mp21"],
  ["mpc", "application/vnd.mophun.certificate"],
  ["mpd", "application/dash+xml"],
  ["mpe", "video/mpeg"],
  ["mpeg", "video/mpeg"],
  ["mpg", "video/mpeg"],
  ["mpg4", "video/mp4"],
  ["mpga", "audio/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["mpm", "application/vnd.blueice.multipass"],
  ["mpn", "application/vnd.mophun.application"],
  ["mpp", "application/vnd.ms-project"],
  ["mpt", "application/vnd.ms-project"],
  ["mpy", "application/vnd.ibm.minipay"],
  ["mqy", "application/vnd.mobius.mqy"],
  ["mrc", "application/marc"],
  ["mrcx", "application/marcxml+xml"],
  ["ms", "text/troff"],
  ["mscml", "application/mediaservercontrol+xml"],
  ["mseed", "application/vnd.fdsn.mseed"],
  ["mseq", "application/vnd.mseq"],
  ["msf", "application/vnd.epson.msf"],
  ["msg", "application/vnd.ms-outlook"],
  ["msh", "model/mesh"],
  ["msi", "application/x-msdownload"],
  ["msl", "application/vnd.mobius.msl"],
  ["msm", "application/octet-stream"],
  ["msp", "application/octet-stream"],
  ["msty", "application/vnd.muvee.style"],
  ["mtl", "model/mtl"],
  ["mts", "model/vnd.mts"],
  ["mus", "application/vnd.musician"],
  ["musd", "application/mmt-usd+xml"],
  ["musicxml", "application/vnd.recordare.musicxml+xml"],
  ["mvb", "application/x-msmediaview"],
  ["mvt", "application/vnd.mapbox-vector-tile"],
  ["mwf", "application/vnd.mfer"],
  ["mxf", "application/mxf"],
  ["mxl", "application/vnd.recordare.musicxml"],
  ["mxmf", "audio/mobile-xmf"],
  ["mxml", "application/xv+xml"],
  ["mxs", "application/vnd.triscape.mxs"],
  ["mxu", "video/vnd.mpegurl"],
  ["n-gage", "application/vnd.nokia.n-gage.symbian.install"],
  ["n3", "text/n3"],
  ["nb", "application/mathematica"],
  ["nbp", "application/vnd.wolfram.player"],
  ["nc", "application/x-netcdf"],
  ["ncx", "application/x-dtbncx+xml"],
  ["nfo", "text/x-nfo"],
  ["ngdat", "application/vnd.nokia.n-gage.data"],
  ["nitf", "application/vnd.nitf"],
  ["nlu", "application/vnd.neurolanguage.nlu"],
  ["nml", "application/vnd.enliven"],
  ["nnd", "application/vnd.noblenet-directory"],
  ["nns", "application/vnd.noblenet-sealer"],
  ["nnw", "application/vnd.noblenet-web"],
  ["npx", "image/vnd.net-fpx"],
  ["nq", "application/n-quads"],
  ["nsc", "application/x-conference"],
  ["nsf", "application/vnd.lotus-notes"],
  ["nt", "application/n-triples"],
  ["ntf", "application/vnd.nitf"],
  ["numbers", "application/x-iwork-numbers-sffnumbers"],
  ["nzb", "application/x-nzb"],
  ["oa2", "application/vnd.fujitsu.oasys2"],
  ["oa3", "application/vnd.fujitsu.oasys3"],
  ["oas", "application/vnd.fujitsu.oasys"],
  ["obd", "application/x-msbinder"],
  ["obgx", "application/vnd.openblox.game+xml"],
  ["obj", "model/obj"],
  ["oda", "application/oda"],
  ["odb", "application/vnd.oasis.opendocument.database"],
  ["odc", "application/vnd.oasis.opendocument.chart"],
  ["odf", "application/vnd.oasis.opendocument.formula"],
  ["odft", "application/vnd.oasis.opendocument.formula-template"],
  ["odg", "application/vnd.oasis.opendocument.graphics"],
  ["odi", "application/vnd.oasis.opendocument.image"],
  ["odm", "application/vnd.oasis.opendocument.text-master"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogex", "model/vnd.opengex"],
  ["ogg", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["omdoc", "application/omdoc+xml"],
  ["onepkg", "application/onenote"],
  ["onetmp", "application/onenote"],
  ["onetoc", "application/onenote"],
  ["onetoc2", "application/onenote"],
  ["opf", "application/oebps-package+xml"],
  ["opml", "text/x-opml"],
  ["oprc", "application/vnd.palm"],
  ["opus", "audio/ogg"],
  ["org", "text/x-org"],
  ["osf", "application/vnd.yamaha.openscoreformat"],
  ["osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml"],
  ["osm", "application/vnd.openstreetmap.data+xml"],
  ["otc", "application/vnd.oasis.opendocument.chart-template"],
  ["otf", "font/otf"],
  ["otg", "application/vnd.oasis.opendocument.graphics-template"],
  ["oth", "application/vnd.oasis.opendocument.text-web"],
  ["oti", "application/vnd.oasis.opendocument.image-template"],
  ["otp", "application/vnd.oasis.opendocument.presentation-template"],
  ["ots", "application/vnd.oasis.opendocument.spreadsheet-template"],
  ["ott", "application/vnd.oasis.opendocument.text-template"],
  ["ova", "application/x-virtualbox-ova"],
  ["ovf", "application/x-virtualbox-ovf"],
  ["owl", "application/rdf+xml"],
  ["oxps", "application/oxps"],
  ["oxt", "application/vnd.openofficeorg.extension"],
  ["p", "text/x-pascal"],
  ["p7a", "application/x-pkcs7-signature"],
  ["p7b", "application/x-pkcs7-certificates"],
  ["p7c", "application/pkcs7-mime"],
  ["p7m", "application/pkcs7-mime"],
  ["p7r", "application/x-pkcs7-certreqresp"],
  ["p7s", "application/pkcs7-signature"],
  ["p8", "application/pkcs8"],
  ["p10", "application/x-pkcs10"],
  ["p12", "application/x-pkcs12"],
  ["pac", "application/x-ns-proxy-autoconfig"],
  ["pages", "application/x-iwork-pages-sffpages"],
  ["pas", "text/x-pascal"],
  ["paw", "application/vnd.pawaafile"],
  ["pbd", "application/vnd.powerbuilder6"],
  ["pbm", "image/x-portable-bitmap"],
  ["pcap", "application/vnd.tcpdump.pcap"],
  ["pcf", "application/x-font-pcf"],
  ["pcl", "application/vnd.hp-pcl"],
  ["pclxl", "application/vnd.hp-pclxl"],
  ["pct", "image/x-pict"],
  ["pcurl", "application/vnd.curl.pcurl"],
  ["pcx", "image/x-pcx"],
  ["pdb", "application/x-pilot"],
  ["pde", "text/x-processing"],
  ["pdf", "application/pdf"],
  ["pem", "application/x-x509-user-cert"],
  ["pfa", "application/x-font-type1"],
  ["pfb", "application/x-font-type1"],
  ["pfm", "application/x-font-type1"],
  ["pfr", "application/font-tdpfr"],
  ["pfx", "application/x-pkcs12"],
  ["pgm", "image/x-portable-graymap"],
  ["pgn", "application/x-chess-pgn"],
  ["pgp", "application/pgp"],
  ["php", "application/x-httpd-php"],
  ["php3", "application/x-httpd-php"],
  ["php4", "application/x-httpd-php"],
  ["phps", "application/x-httpd-php-source"],
  ["phtml", "application/x-httpd-php"],
  ["pic", "image/x-pict"],
  ["pkg", "application/octet-stream"],
  ["pki", "application/pkixcmp"],
  ["pkipath", "application/pkix-pkipath"],
  ["pkpass", "application/vnd.apple.pkpass"],
  ["pl", "application/x-perl"],
  ["plb", "application/vnd.3gpp.pic-bw-large"],
  ["plc", "application/vnd.mobius.plc"],
  ["plf", "application/vnd.pocketlearn"],
  ["pls", "application/pls+xml"],
  ["pm", "application/x-perl"],
  ["pml", "application/vnd.ctc-posml"],
  ["png", "image/png"],
  ["pnm", "image/x-portable-anymap"],
  ["portpkg", "application/vnd.macports.portpkg"],
  ["pot", "application/vnd.ms-powerpoint"],
  ["potm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["potx", "application/vnd.openxmlformats-officedocument.presentationml.template"],
  ["ppa", "application/vnd.ms-powerpoint"],
  ["ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12"],
  ["ppd", "application/vnd.cups-ppd"],
  ["ppm", "image/x-portable-pixmap"],
  ["pps", "application/vnd.ms-powerpoint"],
  ["ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12"],
  ["ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow"],
  ["ppt", "application/powerpoint"],
  ["pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["pqa", "application/vnd.palm"],
  ["prc", "application/x-pilot"],
  ["pre", "application/vnd.lotus-freelance"],
  ["prf", "application/pics-rules"],
  ["provx", "application/provenance+xml"],
  ["ps", "application/postscript"],
  ["psb", "application/vnd.3gpp.pic-bw-small"],
  ["psd", "application/x-photoshop"],
  ["psf", "application/x-font-linux-psf"],
  ["pskcxml", "application/pskc+xml"],
  ["pti", "image/prs.pti"],
  ["ptid", "application/vnd.pvi.ptid1"],
  ["pub", "application/x-mspublisher"],
  ["pvb", "application/vnd.3gpp.pic-bw-var"],
  ["pwn", "application/vnd.3m.post-it-notes"],
  ["pya", "audio/vnd.ms-playready.media.pya"],
  ["pyv", "video/vnd.ms-playready.media.pyv"],
  ["qam", "application/vnd.epson.quickanime"],
  ["qbo", "application/vnd.intu.qbo"],
  ["qfx", "application/vnd.intu.qfx"],
  ["qps", "application/vnd.publishare-delta-tree"],
  ["qt", "video/quicktime"],
  ["qwd", "application/vnd.quark.quarkxpress"],
  ["qwt", "application/vnd.quark.quarkxpress"],
  ["qxb", "application/vnd.quark.quarkxpress"],
  ["qxd", "application/vnd.quark.quarkxpress"],
  ["qxl", "application/vnd.quark.quarkxpress"],
  ["qxt", "application/vnd.quark.quarkxpress"],
  ["ra", "audio/x-realaudio"],
  ["ram", "audio/x-pn-realaudio"],
  ["raml", "application/raml+yaml"],
  ["rapd", "application/route-apd+xml"],
  ["rar", "application/x-rar"],
  ["ras", "image/x-cmu-raster"],
  ["rcprofile", "application/vnd.ipunplugged.rcprofile"],
  ["rdf", "application/rdf+xml"],
  ["rdz", "application/vnd.data-vision.rdz"],
  ["relo", "application/p2p-overlay+xml"],
  ["rep", "application/vnd.businessobjects"],
  ["res", "application/x-dtbresource+xml"],
  ["rgb", "image/x-rgb"],
  ["rif", "application/reginfo+xml"],
  ["rip", "audio/vnd.rip"],
  ["ris", "application/x-research-info-systems"],
  ["rl", "application/resource-lists+xml"],
  ["rlc", "image/vnd.fujixerox.edmics-rlc"],
  ["rld", "application/resource-lists-diff+xml"],
  ["rm", "audio/x-pn-realaudio"],
  ["rmi", "audio/midi"],
  ["rmp", "audio/x-pn-realaudio-plugin"],
  ["rms", "application/vnd.jcp.javame.midlet-rms"],
  ["rmvb", "application/vnd.rn-realmedia-vbr"],
  ["rnc", "application/relax-ng-compact-syntax"],
  ["rng", "application/xml"],
  ["roa", "application/rpki-roa"],
  ["roff", "text/troff"],
  ["rp9", "application/vnd.cloanto.rp9"],
  ["rpm", "audio/x-pn-realaudio-plugin"],
  ["rpss", "application/vnd.nokia.radio-presets"],
  ["rpst", "application/vnd.nokia.radio-preset"],
  ["rq", "application/sparql-query"],
  ["rs", "application/rls-services+xml"],
  ["rsa", "application/x-pkcs7"],
  ["rsat", "application/atsc-rsat+xml"],
  ["rsd", "application/rsd+xml"],
  ["rsheet", "application/urc-ressheet+xml"],
  ["rss", "application/rss+xml"],
  ["rtf", "text/rtf"],
  ["rtx", "text/richtext"],
  ["run", "application/x-makeself"],
  ["rusd", "application/route-usd+xml"],
  ["rv", "video/vnd.rn-realvideo"],
  ["s", "text/x-asm"],
  ["s3m", "audio/s3m"],
  ["saf", "application/vnd.yamaha.smaf-audio"],
  ["sass", "text/x-sass"],
  ["sbml", "application/sbml+xml"],
  ["sc", "application/vnd.ibm.secure-container"],
  ["scd", "application/x-msschedule"],
  ["scm", "application/vnd.lotus-screencam"],
  ["scq", "application/scvp-cv-request"],
  ["scs", "application/scvp-cv-response"],
  ["scss", "text/x-scss"],
  ["scurl", "text/vnd.curl.scurl"],
  ["sda", "application/vnd.stardivision.draw"],
  ["sdc", "application/vnd.stardivision.calc"],
  ["sdd", "application/vnd.stardivision.impress"],
  ["sdkd", "application/vnd.solent.sdkm+xml"],
  ["sdkm", "application/vnd.solent.sdkm+xml"],
  ["sdp", "application/sdp"],
  ["sdw", "application/vnd.stardivision.writer"],
  ["sea", "application/octet-stream"],
  ["see", "application/vnd.seemail"],
  ["seed", "application/vnd.fdsn.seed"],
  ["sema", "application/vnd.sema"],
  ["semd", "application/vnd.semd"],
  ["semf", "application/vnd.semf"],
  ["senmlx", "application/senml+xml"],
  ["sensmlx", "application/sensml+xml"],
  ["ser", "application/java-serialized-object"],
  ["setpay", "application/set-payment-initiation"],
  ["setreg", "application/set-registration-initiation"],
  ["sfd-hdstx", "application/vnd.hydrostatix.sof-data"],
  ["sfs", "application/vnd.spotfire.sfs"],
  ["sfv", "text/x-sfv"],
  ["sgi", "image/sgi"],
  ["sgl", "application/vnd.stardivision.writer-global"],
  ["sgm", "text/sgml"],
  ["sgml", "text/sgml"],
  ["sh", "application/x-sh"],
  ["shar", "application/x-shar"],
  ["shex", "text/shex"],
  ["shf", "application/shf+xml"],
  ["shtml", "text/html"],
  ["sid", "image/x-mrsid-image"],
  ["sieve", "application/sieve"],
  ["sig", "application/pgp-signature"],
  ["sil", "audio/silk"],
  ["silo", "model/mesh"],
  ["sis", "application/vnd.symbian.install"],
  ["sisx", "application/vnd.symbian.install"],
  ["sit", "application/x-stuffit"],
  ["sitx", "application/x-stuffitx"],
  ["siv", "application/sieve"],
  ["skd", "application/vnd.koan"],
  ["skm", "application/vnd.koan"],
  ["skp", "application/vnd.koan"],
  ["skt", "application/vnd.koan"],
  ["sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12"],
  ["sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide"],
  ["slim", "text/slim"],
  ["slm", "text/slim"],
  ["sls", "application/route-s-tsid+xml"],
  ["slt", "application/vnd.epson.salt"],
  ["sm", "application/vnd.stepmania.stepchart"],
  ["smf", "application/vnd.stardivision.math"],
  ["smi", "application/smil"],
  ["smil", "application/smil"],
  ["smv", "video/x-smv"],
  ["smzip", "application/vnd.stepmania.package"],
  ["snd", "audio/basic"],
  ["snf", "application/x-font-snf"],
  ["so", "application/octet-stream"],
  ["spc", "application/x-pkcs7-certificates"],
  ["spdx", "text/spdx"],
  ["spf", "application/vnd.yamaha.smaf-phrase"],
  ["spl", "application/x-futuresplash"],
  ["spot", "text/vnd.in3d.spot"],
  ["spp", "application/scvp-vp-response"],
  ["spq", "application/scvp-vp-request"],
  ["spx", "audio/ogg"],
  ["sql", "application/x-sql"],
  ["src", "application/x-wais-source"],
  ["srt", "application/x-subrip"],
  ["sru", "application/sru+xml"],
  ["srx", "application/sparql-results+xml"],
  ["ssdl", "application/ssdl+xml"],
  ["sse", "application/vnd.kodak-descriptor"],
  ["ssf", "application/vnd.epson.ssf"],
  ["ssml", "application/ssml+xml"],
  ["sst", "application/octet-stream"],
  ["st", "application/vnd.sailingtracker.track"],
  ["stc", "application/vnd.sun.xml.calc.template"],
  ["std", "application/vnd.sun.xml.draw.template"],
  ["stf", "application/vnd.wt.stf"],
  ["sti", "application/vnd.sun.xml.impress.template"],
  ["stk", "application/hyperstudio"],
  ["stl", "model/stl"],
  ["stpx", "model/step+xml"],
  ["stpxz", "model/step-xml+zip"],
  ["stpz", "model/step+zip"],
  ["str", "application/vnd.pg.format"],
  ["stw", "application/vnd.sun.xml.writer.template"],
  ["styl", "text/stylus"],
  ["stylus", "text/stylus"],
  ["sub", "text/vnd.dvb.subtitle"],
  ["sus", "application/vnd.sus-calendar"],
  ["susp", "application/vnd.sus-calendar"],
  ["sv4cpio", "application/x-sv4cpio"],
  ["sv4crc", "application/x-sv4crc"],
  ["svc", "application/vnd.dvb.service"],
  ["svd", "application/vnd.svd"],
  ["svg", "image/svg+xml"],
  ["svgz", "image/svg+xml"],
  ["swa", "application/x-director"],
  ["swf", "application/x-shockwave-flash"],
  ["swi", "application/vnd.aristanetworks.swi"],
  ["swidtag", "application/swid+xml"],
  ["sxc", "application/vnd.sun.xml.calc"],
  ["sxd", "application/vnd.sun.xml.draw"],
  ["sxg", "application/vnd.sun.xml.writer.global"],
  ["sxi", "application/vnd.sun.xml.impress"],
  ["sxm", "application/vnd.sun.xml.math"],
  ["sxw", "application/vnd.sun.xml.writer"],
  ["t", "text/troff"],
  ["t3", "application/x-t3vm-image"],
  ["t38", "image/t38"],
  ["taglet", "application/vnd.mynfc"],
  ["tao", "application/vnd.tao.intent-module-archive"],
  ["tap", "image/vnd.tencent.tap"],
  ["tar", "application/x-tar"],
  ["tcap", "application/vnd.3gpp2.tcap"],
  ["tcl", "application/x-tcl"],
  ["td", "application/urc-targetdesc+xml"],
  ["teacher", "application/vnd.smart.teacher"],
  ["tei", "application/tei+xml"],
  ["teicorpus", "application/tei+xml"],
  ["tex", "application/x-tex"],
  ["texi", "application/x-texinfo"],
  ["texinfo", "application/x-texinfo"],
  ["text", "text/plain"],
  ["tfi", "application/thraud+xml"],
  ["tfm", "application/x-tex-tfm"],
  ["tfx", "image/tiff-fx"],
  ["tga", "image/x-tga"],
  ["tgz", "application/x-tar"],
  ["thmx", "application/vnd.ms-officetheme"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["tk", "application/x-tcl"],
  ["tmo", "application/vnd.tmobile-livetv"],
  ["toml", "application/toml"],
  ["torrent", "application/x-bittorrent"],
  ["tpl", "application/vnd.groove-tool-template"],
  ["tpt", "application/vnd.trid.tpt"],
  ["tr", "text/troff"],
  ["tra", "application/vnd.trueapp"],
  ["trig", "application/trig"],
  ["trm", "application/x-msterminal"],
  ["ts", "video/mp2t"],
  ["tsd", "application/timestamped-data"],
  ["tsv", "text/tab-separated-values"],
  ["ttc", "font/collection"],
  ["ttf", "font/ttf"],
  ["ttl", "text/turtle"],
  ["ttml", "application/ttml+xml"],
  ["twd", "application/vnd.simtech-mindmapper"],
  ["twds", "application/vnd.simtech-mindmapper"],
  ["txd", "application/vnd.genomatix.tuxedo"],
  ["txf", "application/vnd.mobius.txf"],
  ["txt", "text/plain"],
  ["u8dsn", "message/global-delivery-status"],
  ["u8hdr", "message/global-headers"],
  ["u8mdn", "message/global-disposition-notification"],
  ["u8msg", "message/global"],
  ["u32", "application/x-authorware-bin"],
  ["ubj", "application/ubjson"],
  ["udeb", "application/x-debian-package"],
  ["ufd", "application/vnd.ufdl"],
  ["ufdl", "application/vnd.ufdl"],
  ["ulx", "application/x-glulx"],
  ["umj", "application/vnd.umajin"],
  ["unityweb", "application/vnd.unity"],
  ["uoml", "application/vnd.uoml+xml"],
  ["uri", "text/uri-list"],
  ["uris", "text/uri-list"],
  ["urls", "text/uri-list"],
  ["usdz", "model/vnd.usdz+zip"],
  ["ustar", "application/x-ustar"],
  ["utz", "application/vnd.uiq.theme"],
  ["uu", "text/x-uuencode"],
  ["uva", "audio/vnd.dece.audio"],
  ["uvd", "application/vnd.dece.data"],
  ["uvf", "application/vnd.dece.data"],
  ["uvg", "image/vnd.dece.graphic"],
  ["uvh", "video/vnd.dece.hd"],
  ["uvi", "image/vnd.dece.graphic"],
  ["uvm", "video/vnd.dece.mobile"],
  ["uvp", "video/vnd.dece.pd"],
  ["uvs", "video/vnd.dece.sd"],
  ["uvt", "application/vnd.dece.ttml+xml"],
  ["uvu", "video/vnd.uvvu.mp4"],
  ["uvv", "video/vnd.dece.video"],
  ["uvva", "audio/vnd.dece.audio"],
  ["uvvd", "application/vnd.dece.data"],
  ["uvvf", "application/vnd.dece.data"],
  ["uvvg", "image/vnd.dece.graphic"],
  ["uvvh", "video/vnd.dece.hd"],
  ["uvvi", "image/vnd.dece.graphic"],
  ["uvvm", "video/vnd.dece.mobile"],
  ["uvvp", "video/vnd.dece.pd"],
  ["uvvs", "video/vnd.dece.sd"],
  ["uvvt", "application/vnd.dece.ttml+xml"],
  ["uvvu", "video/vnd.uvvu.mp4"],
  ["uvvv", "video/vnd.dece.video"],
  ["uvvx", "application/vnd.dece.unspecified"],
  ["uvvz", "application/vnd.dece.zip"],
  ["uvx", "application/vnd.dece.unspecified"],
  ["uvz", "application/vnd.dece.zip"],
  ["vbox", "application/x-virtualbox-vbox"],
  ["vbox-extpack", "application/x-virtualbox-vbox-extpack"],
  ["vcard", "text/vcard"],
  ["vcd", "application/x-cdlink"],
  ["vcf", "text/x-vcard"],
  ["vcg", "application/vnd.groove-vcard"],
  ["vcs", "text/x-vcalendar"],
  ["vcx", "application/vnd.vcx"],
  ["vdi", "application/x-virtualbox-vdi"],
  ["vds", "model/vnd.sap.vds"],
  ["vhd", "application/x-virtualbox-vhd"],
  ["vis", "application/vnd.visionary"],
  ["viv", "video/vnd.vivo"],
  ["vlc", "application/videolan"],
  ["vmdk", "application/x-virtualbox-vmdk"],
  ["vob", "video/x-ms-vob"],
  ["vor", "application/vnd.stardivision.writer"],
  ["vox", "application/x-authorware-bin"],
  ["vrml", "model/vrml"],
  ["vsd", "application/vnd.visio"],
  ["vsf", "application/vnd.vsf"],
  ["vss", "application/vnd.visio"],
  ["vst", "application/vnd.visio"],
  ["vsw", "application/vnd.visio"],
  ["vtf", "image/vnd.valve.source.texture"],
  ["vtt", "text/vtt"],
  ["vtu", "model/vnd.vtu"],
  ["vxml", "application/voicexml+xml"],
  ["w3d", "application/x-director"],
  ["wad", "application/x-doom"],
  ["wadl", "application/vnd.sun.wadl+xml"],
  ["war", "application/java-archive"],
  ["wasm", "application/wasm"],
  ["wav", "audio/x-wav"],
  ["wax", "audio/x-ms-wax"],
  ["wbmp", "image/vnd.wap.wbmp"],
  ["wbs", "application/vnd.criticaltools.wbs+xml"],
  ["wbxml", "application/wbxml"],
  ["wcm", "application/vnd.ms-works"],
  ["wdb", "application/vnd.ms-works"],
  ["wdp", "image/vnd.ms-photo"],
  ["weba", "audio/webm"],
  ["webapp", "application/x-web-app-manifest+json"],
  ["webm", "video/webm"],
  ["webmanifest", "application/manifest+json"],
  ["webp", "image/webp"],
  ["wg", "application/vnd.pmi.widget"],
  ["wgt", "application/widget"],
  ["wks", "application/vnd.ms-works"],
  ["wm", "video/x-ms-wm"],
  ["wma", "audio/x-ms-wma"],
  ["wmd", "application/x-ms-wmd"],
  ["wmf", "image/wmf"],
  ["wml", "text/vnd.wap.wml"],
  ["wmlc", "application/wmlc"],
  ["wmls", "text/vnd.wap.wmlscript"],
  ["wmlsc", "application/vnd.wap.wmlscriptc"],
  ["wmv", "video/x-ms-wmv"],
  ["wmx", "video/x-ms-wmx"],
  ["wmz", "application/x-msmetafile"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["word", "application/msword"],
  ["wpd", "application/vnd.wordperfect"],
  ["wpl", "application/vnd.ms-wpl"],
  ["wps", "application/vnd.ms-works"],
  ["wqd", "application/vnd.wqd"],
  ["wri", "application/x-mswrite"],
  ["wrl", "model/vrml"],
  ["wsc", "message/vnd.wfa.wsc"],
  ["wsdl", "application/wsdl+xml"],
  ["wspolicy", "application/wspolicy+xml"],
  ["wtb", "application/vnd.webturbo"],
  ["wvx", "video/x-ms-wvx"],
  ["x3d", "model/x3d+xml"],
  ["x3db", "model/x3d+fastinfoset"],
  ["x3dbz", "model/x3d+binary"],
  ["x3dv", "model/x3d-vrml"],
  ["x3dvz", "model/x3d+vrml"],
  ["x3dz", "model/x3d+xml"],
  ["x32", "application/x-authorware-bin"],
  ["x_b", "model/vnd.parasolid.transmit.binary"],
  ["x_t", "model/vnd.parasolid.transmit.text"],
  ["xaml", "application/xaml+xml"],
  ["xap", "application/x-silverlight-app"],
  ["xar", "application/vnd.xara"],
  ["xav", "application/xcap-att+xml"],
  ["xbap", "application/x-ms-xbap"],
  ["xbd", "application/vnd.fujixerox.docuworks.binder"],
  ["xbm", "image/x-xbitmap"],
  ["xca", "application/xcap-caps+xml"],
  ["xcs", "application/calendar+xml"],
  ["xdf", "application/xcap-diff+xml"],
  ["xdm", "application/vnd.syncml.dm+xml"],
  ["xdp", "application/vnd.adobe.xdp+xml"],
  ["xdssc", "application/dssc+xml"],
  ["xdw", "application/vnd.fujixerox.docuworks"],
  ["xel", "application/xcap-el+xml"],
  ["xenc", "application/xenc+xml"],
  ["xer", "application/patch-ops-error+xml"],
  ["xfdf", "application/vnd.adobe.xfdf"],
  ["xfdl", "application/vnd.xfdl"],
  ["xht", "application/xhtml+xml"],
  ["xhtml", "application/xhtml+xml"],
  ["xhvml", "application/xv+xml"],
  ["xif", "image/vnd.xiff"],
  ["xl", "application/excel"],
  ["xla", "application/vnd.ms-excel"],
  ["xlam", "application/vnd.ms-excel.addin.macroEnabled.12"],
  ["xlc", "application/vnd.ms-excel"],
  ["xlf", "application/xliff+xml"],
  ["xlm", "application/vnd.ms-excel"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12"],
  ["xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xlt", "application/vnd.ms-excel"],
  ["xltm", "application/vnd.ms-excel.template.macroEnabled.12"],
  ["xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template"],
  ["xlw", "application/vnd.ms-excel"],
  ["xm", "audio/xm"],
  ["xml", "application/xml"],
  ["xns", "application/xcap-ns+xml"],
  ["xo", "application/vnd.olpc-sugar"],
  ["xop", "application/xop+xml"],
  ["xpi", "application/x-xpinstall"],
  ["xpl", "application/xproc+xml"],
  ["xpm", "image/x-xpixmap"],
  ["xpr", "application/vnd.is-xpr"],
  ["xps", "application/vnd.ms-xpsdocument"],
  ["xpw", "application/vnd.intercon.formnet"],
  ["xpx", "application/vnd.intercon.formnet"],
  ["xsd", "application/xml"],
  ["xsl", "application/xml"],
  ["xslt", "application/xslt+xml"],
  ["xsm", "application/vnd.syncml+xml"],
  ["xspf", "application/xspf+xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["xvm", "application/xv+xml"],
  ["xvml", "application/xv+xml"],
  ["xwd", "image/x-xwindowdump"],
  ["xyz", "chemical/x-xyz"],
  ["xz", "application/x-xz"],
  ["yaml", "text/yaml"],
  ["yang", "application/yang"],
  ["yin", "application/yin+xml"],
  ["yml", "text/yaml"],
  ["ymp", "text/x-suse-ymp"],
  ["z", "application/x-compress"],
  ["z1", "application/x-zmachine"],
  ["z2", "application/x-zmachine"],
  ["z3", "application/x-zmachine"],
  ["z4", "application/x-zmachine"],
  ["z5", "application/x-zmachine"],
  ["z6", "application/x-zmachine"],
  ["z7", "application/x-zmachine"],
  ["z8", "application/x-zmachine"],
  ["zaz", "application/vnd.zzazz.deck+xml"],
  ["zip", "application/zip"],
  ["zir", "application/vnd.zul"],
  ["zirz", "application/vnd.zul"],
  ["zmm", "application/vnd.handheld-entertainment+xml"],
  ["zsh", "text/x-scriptzsh"]
]);
function toFileWithPath(file, path, h) {
  const f = withMimeType(file);
  const { webkitRelativePath } = file;
  const p = typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : `./${file.name}`;
  if (typeof f.path !== "string") {
    setObjProp(f, "path", p);
  }
  if (h !== void 0) {
    Object.defineProperty(f, "handle", {
      value: h,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  setObjProp(f, "relativePath", p);
  return f;
}
function withMimeType(file) {
  const { name } = file;
  const hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    const ext = name.split(".").pop().toLowerCase();
    const type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
function setObjProp(f, key, value) {
  Object.defineProperty(f, key, {
    value,
    writable: false,
    configurable: false,
    enumerable: true
  });
}

// ../../node_modules/file-selector/dist/es2015/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  // macOs
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function* () {
    if (isObject3(evt) && isDataTransfer(evt.dataTransfer)) {
      return getDataTransferFiles(evt.dataTransfer, evt.type);
    } else if (isChangeEvt(evt)) {
      return getInputFiles(evt);
    } else if (Array.isArray(evt) && evt.every((item) => "getFile" in item && typeof item.getFile === "function")) {
      return getFsHandleFiles(evt);
    }
    return [];
  });
}
function isDataTransfer(value) {
  return isObject3(value);
}
function isChangeEvt(value) {
  return isObject3(value) && isObject3(value.target);
}
function isObject3(v) {
  return typeof v === "object" && v !== null;
}
function getInputFiles(evt) {
  return fromList(evt.target.files).map((file) => toFileWithPath(file));
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function* () {
    const files = yield Promise.all(handles.map((h) => h.getFile()));
    return files.map((file) => toFileWithPath(file));
  });
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function* () {
    if (dt.items) {
      const items = fromList(dt.items).filter((item) => item.kind === "file");
      if (type !== "drop") {
        return items;
      }
      const files = yield Promise.all(items.map(toFilePromises));
      return noIgnoredFiles(flatten2(files));
    }
    return noIgnoredFiles(fromList(dt.files).map((file) => toFileWithPath(file)));
  });
}
function noIgnoredFiles(files) {
  return files.filter((file) => FILES_TO_IGNORE.indexOf(file.name) === -1);
}
function fromList(items) {
  if (items === null) {
    return [];
  }
  const files = [];
  for (let i = 0; i < items.length; i++) {
    const file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  const entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item, entry);
}
function flatten2(items) {
  return items.reduce((acc, files) => [
    ...acc,
    ...Array.isArray(files) ? flatten2(files) : [files]
  ], []);
}
function fromDataTransferItem(item, entry) {
  return __awaiter(this, void 0, void 0, function* () {
    var _a;
    if (globalThis.isSecureContext && typeof item.getAsFileSystemHandle === "function") {
      const h = yield item.getAsFileSystemHandle();
      if (h === null) {
        throw new Error(`${item} is not a File`);
      }
      if (h !== void 0) {
        const file2 = yield h.getFile();
        file2.handle = h;
        return toFileWithPath(file2);
      }
    }
    const file = item.getAsFile();
    if (!file) {
      throw new Error(`${item} is not a File`);
    }
    const fwp = toFileWithPath(file, (_a = entry === null || entry === void 0 ? void 0 : entry.fullPath) !== null && _a !== void 0 ? _a : void 0);
    return fwp;
  });
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);
  });
}
function fromDirEntry(entry) {
  const reader = entry.createReader();
  return new Promise((resolve, reject2) => {
    const entries = [];
    function readEntries() {
      reader.readEntries((batch) => __awaiter(this, void 0, void 0, function* () {
        if (!batch.length) {
          try {
            const files = yield Promise.all(entries);
            resolve(files);
          } catch (err) {
            reject2(err);
          }
        } else {
          const items = Promise.all(batch.map(fromEntry));
          entries.push(items);
          readEntries();
        }
      }), (err) => {
        reject2(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function* () {
    return new Promise((resolve, reject2) => {
      entry.file((file) => {
        const fwp = toFileWithPath(file, entry.fullPath);
        resolve(fwp);
      }, (err) => {
        reject2(err);
      });
    });
  });
}

// ../../node_modules/use-file-picker/dist/index.mjs
function openFileDialog(accept, multiple, callback, initializeWithCustomAttributes) {
  const inputElement = document.createElement("input");
  inputElement.style.display = "none";
  document.body.appendChild(inputElement);
  inputElement.type = "file";
  if (accept !== "*") inputElement.accept = accept;
  inputElement.multiple = multiple;
  inputElement.addEventListener("change", (arg) => {
    callback(arg);
    document.body.removeChild(inputElement);
  });
  inputElement.addEventListener("cancel", () => {
    document.body.removeChild(inputElement);
  });
  if (initializeWithCustomAttributes) {
    initializeWithCustomAttributes(inputElement);
  }
  inputElement.dispatchEvent(new MouseEvent("click"));
}
var useValidators = ({
  onFilesSelected: onFilesSelectedProp,
  onFilesSuccessfullySelected: onFilesSuccessfullySelectedProp,
  onFilesRejected: onFilesRejectedProp,
  onClear: onClearProp,
  validators: validators3
}) => {
  const onFilesSelected = (0, import_react169.useCallback)(
    (data) => {
      onFilesSelectedProp == null ? void 0 : onFilesSelectedProp(data);
      validators3 == null ? void 0 : validators3.forEach((validator) => {
        validator.onFilesSelected(data);
      });
    },
    [onFilesSelectedProp, validators3]
  );
  const onFilesSuccessfullySelected = (0, import_react169.useCallback)(
    (data) => {
      onFilesSuccessfullySelectedProp == null ? void 0 : onFilesSuccessfullySelectedProp(data);
      validators3 == null ? void 0 : validators3.forEach((validator) => {
        validator.onFilesSuccessfullySelected(data);
      });
    },
    [validators3, onFilesSuccessfullySelectedProp]
  );
  const onFilesRejected = (0, import_react169.useCallback)(
    (errors) => {
      onFilesRejectedProp == null ? void 0 : onFilesRejectedProp(errors);
      validators3 == null ? void 0 : validators3.forEach((validator) => {
        validator.onFilesRejected(errors);
      });
    },
    [validators3, onFilesRejectedProp]
  );
  const onClear = (0, import_react169.useCallback)(() => {
    onClearProp == null ? void 0 : onClearProp();
    validators3 == null ? void 0 : validators3.forEach((validator) => {
      var _a;
      (_a = validator.onClear) == null ? void 0 : _a.call(validator);
    });
  }, [validators3, onClearProp]);
  return {
    onFilesSelected,
    onFilesSuccessfullySelected,
    onFilesRejected,
    onClear
  };
};
var __defProp$1 = Object.defineProperty;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$1 = (a, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp$1.call(b2, prop))
      __defNormalProp$1(a, prop, b2[prop]);
  if (__getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(b2)) {
      if (__propIsEnum$1.call(b2, prop))
        __defNormalProp$1(a, prop, b2[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject2) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject2(e2);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e2) {
        reject2(e2);
      }
    };
    var step = (x2) => x2.done ? resolve(x2.value) : Promise.resolve(x2.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
var EMPTY_ARRAY = [];
function useFilePicker(props = {}) {
  const {
    accept = "*",
    multiple = true,
    readAs = "Text",
    readFilesContent = true,
    validators: validators3 = EMPTY_ARRAY,
    initializeWithCustomParameters
  } = props;
  const [plainFiles, setPlainFiles] = (0, import_react169.useState)([]);
  const [filesContent, setFilesContent] = (0, import_react169.useState)([]);
  const [fileErrors, setFileErrors] = (0, import_react169.useState)([]);
  const [loading, setLoading] = (0, import_react169.useState)(false);
  const { onFilesSelected, onFilesSuccessfullySelected, onFilesRejected, onClear } = useValidators(props);
  const clear = (0, import_react169.useCallback)(() => {
    setPlainFiles([]);
    setFilesContent([]);
    setFileErrors([]);
  }, []);
  const clearWithEventListener = (0, import_react169.useCallback)(() => {
    clear();
    onClear == null ? void 0 : onClear();
  }, [clear, onClear]);
  const parseFile = (0, import_react169.useCallback)(
    (file) => new Promise(
      (resolve, reject2) => {
        const reader = new FileReader();
        const readStrategy = reader[`readAs${readAs}`];
        readStrategy.call(reader, file, props.readAs === "Text" ? props.encoding : void 0);
        const addError = (_a) => {
          var others = __objRest(_a, []);
          reject2(__spreadValues$1({}, others));
        };
        reader.onload = () => __async(null, null, function* () {
          return Promise.all(
            validators3.map(
              (validator) => validator.validateAfterParsing(props, file, reader).catch((err) => Promise.reject(addError(err)))
            )
          ).then(
            () => resolve({
              content: reader.result,
              name: file.name,
              lastModified: file.lastModified,
              path: file.path,
              size: file.size,
              type: file.type
            })
          ).catch(() => {
          });
        });
        reader.onerror = () => {
          addError({ name: "FileReaderError", readerError: reader.error, causedByFile: file });
        };
      }
    ),
    [props, readAs, validators3]
  );
  const openFilePicker = (0, import_react169.useCallback)(() => {
    const fileExtensions = accept instanceof Array ? accept.join(",") : accept;
    openFileDialog(
      fileExtensions,
      multiple,
      (evt) => __async(null, null, function* () {
        clear();
        setLoading(true);
        const plainFileObjects = yield fromEvent(evt);
        const validationsBeforeParsing = (yield Promise.all(
          validators3.map(
            (validator) => validator.validateBeforeParsing(props, plainFileObjects).catch((err) => Array.isArray(err) ? err : [err])
          )
        )).flat(1).filter(Boolean);
        setPlainFiles(plainFileObjects);
        setFileErrors(validationsBeforeParsing);
        if (validationsBeforeParsing.length) {
          setPlainFiles([]);
          onFilesRejected == null ? void 0 : onFilesRejected({ errors: validationsBeforeParsing });
          onFilesSelected == null ? void 0 : onFilesSelected({ errors: validationsBeforeParsing });
          setLoading(false);
          return;
        }
        if (!readFilesContent) {
          onFilesSelected == null ? void 0 : onFilesSelected({ plainFiles: plainFileObjects, filesContent: [] });
          setLoading(false);
          return;
        }
        const validationsAfterParsing = [];
        const filesContent2 = yield Promise.all(
          plainFileObjects.map(
            (file) => parseFile(file).catch(
              (fileError) => {
                validationsAfterParsing.push(...Array.isArray(fileError) ? fileError : [fileError]);
              }
            )
          )
        );
        setLoading(false);
        if (validationsAfterParsing.length) {
          setPlainFiles([]);
          setFilesContent([]);
          setFileErrors((errors) => [...errors, ...validationsAfterParsing]);
          onFilesRejected == null ? void 0 : onFilesRejected({ errors: validationsAfterParsing });
          onFilesSelected == null ? void 0 : onFilesSelected({
            errors: validationsBeforeParsing.concat(validationsAfterParsing)
          });
          return;
        }
        setFilesContent(filesContent2);
        setPlainFiles(plainFileObjects);
        setFileErrors([]);
        onFilesSuccessfullySelected == null ? void 0 : onFilesSuccessfullySelected({ filesContent: filesContent2, plainFiles: plainFileObjects });
        onFilesSelected == null ? void 0 : onFilesSelected({
          plainFiles: plainFileObjects,
          filesContent: filesContent2
        });
      }),
      initializeWithCustomParameters
    );
  }, [
    props,
    accept,
    clear,
    initializeWithCustomParameters,
    multiple,
    onFilesRejected,
    onFilesSelected,
    onFilesSuccessfullySelected,
    parseFile,
    readFilesContent,
    validators3
  ]);
  return {
    openFilePicker,
    filesContent,
    errors: fileErrors,
    loading,
    plainFiles,
    clear: clearWithEventListener
  };
}

// ../../packages/aitable/src/grid/components/editors/enhanced/AttachmentEditor.tsx
var import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1);
var AttachmentEditor = ({
  value,
  onChange,
  onSave,
  onCancel,
  readonly = false,
  maxFiles = 10,
  maxSize = 10 * 1024 * 1024,
  // 10MB
  allowedTypes = [],
  onUpload,
  className,
  style,
  rect
}) => {
  const [files, setFiles] = (0, import_react170.useState)(value || []);
  const [isUploading, setIsUploading] = (0, import_react170.useState)(false);
  const { openFilePicker } = useFilePicker({
    readAs: "DataURL",
    accept: allowedTypes.length > 0 ? allowedTypes : void 0,
    multiple: maxFiles > 1,
    onFilesSuccessfullySelected: async ({ plainFiles }) => {
      const oversizedFile = plainFiles.find((file) => file.size > maxSize);
      if (oversizedFile) {
        console.error(`File size exceeds ${formatFileSize(maxSize)}`);
        return;
      }
      if (!onUpload) {
        return;
      }
      setIsUploading(true);
      try {
        const uploadedFiles = await onUpload(plainFiles);
        const newFiles = [...files, ...uploadedFiles].slice(0, maxFiles);
        setFiles(newFiles);
        onChange(newFiles.length > 0 ? newFiles : null);
      } catch (error) {
        console.error("Upload failed:", error);
      } finally {
        setIsUploading(false);
      }
    }
  });
  const handleRemove = (0, import_react170.useCallback)(
    (fileId) => {
      if (readonly) {
        return;
      }
      const newFiles = files.filter((f) => f.id !== fileId);
      setFiles(newFiles);
      onChange(newFiles.length > 0 ? newFiles : null);
    },
    [files, readonly, onChange]
  );
  const popupPosition = rect ? useGridPopupPosition(rect, 400) : void 0;
  const handlePreview = (0, import_react170.useCallback)((file) => {
    window.open(file.url, "_blank", "noopener,noreferrer");
  }, []);
  return (0, import_jsx_runtime14.jsxs)(
    "div",
    {
      className,
      style: {
        position: "absolute",
        display: "flex",
        flexDirection: "column",
        gap: "12px",
        padding: "12px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e3,
        minWidth: "320px",
        maxWidth: "480px",
        ...popupPosition,
        ...style
      },
      children: [
        (0, import_jsx_runtime14.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              flexDirection: "column",
              gap: "8px",
              maxHeight: "320px",
              overflowY: "auto"
            },
            children: [
              files.length === 0 && (0, import_jsx_runtime14.jsx)(
                "div",
                {
                  style: {
                    padding: "24px",
                    textAlign: "center",
                    color: "#9ca3af",
                    fontSize: "13px"
                  },
                  children: "No attachments yet"
                }
              ),
              files.map((file) => {
                const isImage = file.type.startsWith("image/");
                return (0, import_jsx_runtime14.jsxs)(
                  "div",
                  {
                    style: {
                      display: "flex",
                      alignItems: "center",
                      gap: "12px",
                      padding: "8px",
                      border: "1px solid #e5e7eb",
                      borderRadius: "6px",
                      backgroundColor: "#f9fafb"
                    },
                    children: [
                      isImage && file.thumbnailUrl ? (0, import_jsx_runtime14.jsx)(
                        "img",
                        {
                          src: file.thumbnailUrl,
                          alt: file.name,
                          style: {
                            width: "48px",
                            height: "48px",
                            objectFit: "cover",
                            borderRadius: "4px",
                            flexShrink: 0
                          }
                        }
                      ) : (0, import_jsx_runtime14.jsx)(
                        "div",
                        {
                          style: {
                            width: "48px",
                            height: "48px",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            backgroundColor: "#e5e7eb",
                            borderRadius: "4px",
                            fontSize: "20px",
                            flexShrink: 0
                          },
                          children: "📄"
                        }
                      ),
                      (0, import_jsx_runtime14.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                        (0, import_jsx_runtime14.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "13px",
                              fontWeight: 500,
                              color: "#374151",
                              overflow: "hidden",
                              textOverflow: "ellipsis",
                              whiteSpace: "nowrap"
                            },
                            children: file.name
                          }
                        ),
                        (0, import_jsx_runtime14.jsxs)("div", { style: { fontSize: "12px", color: "#9ca3af" }, children: [
                          formatFileSize(file.size),
                          file.width && file.height && ` • ${file.width}×${file.height}`
                        ] })
                      ] }),
                      (0, import_jsx_runtime14.jsxs)("div", { style: { display: "flex", gap: "4px", flexShrink: 0 }, children: [
                        (0, import_jsx_runtime14.jsx)(
                          "button",
                          {
                            onClick: () => handlePreview(file),
                            title: "Preview",
                            style: {
                              width: "32px",
                              height: "32px",
                              display: "flex",
                              alignItems: "center",
                              justifyContent: "center",
                              border: "1px solid #d1d5db",
                              borderRadius: "4px",
                              backgroundColor: "#ffffff",
                              cursor: "pointer",
                              fontSize: "16px"
                            },
                            children: "👁️"
                          }
                        ),
                        (0, import_jsx_runtime14.jsx)(
                          "button",
                          {
                            onClick: () => handleRemove(file.id),
                            disabled: readonly,
                            title: "Remove",
                            style: {
                              width: "32px",
                              height: "32px",
                              display: "flex",
                              alignItems: "center",
                              justifyContent: "center",
                              border: "1px solid #d1d5db",
                              borderRadius: "4px",
                              backgroundColor: "#ffffff",
                              cursor: readonly ? "not-allowed" : "pointer",
                              opacity: readonly ? 0.5 : 1,
                              fontSize: "16px"
                            },
                            children: "🗑️"
                          }
                        )
                      ] })
                    ]
                  },
                  file.id
                );
              })
            ]
          }
        ),
        files.length < maxFiles && (0, import_jsx_runtime14.jsx)(
          "button",
          {
            onClick: () => openFilePicker(),
            disabled: readonly || isUploading,
            style: {
              padding: "10px 16px",
              fontSize: "13px",
              fontWeight: 500,
              color: "#3b82f6",
              backgroundColor: "#ffffff",
              border: "2px dashed #3b82f6",
              borderRadius: "6px",
              cursor: readonly || isUploading ? "not-allowed" : "pointer",
              opacity: readonly || isUploading ? 0.5 : 1,
              transition: "all 0.2s"
            },
            children: isUploading ? "Uploading..." : `📎 Add Attachment (${files.length}/${maxFiles})`
          }
        ),
        (0, import_jsx_runtime14.jsxs)("div", { style: { fontSize: "11px", color: "#9ca3af", textAlign: "center" }, children: [
          "Max ",
          maxFiles,
          " files • ",
          formatFileSize(maxSize),
          " per file",
          allowedTypes.length > 0 && ` • ${allowedTypes.join(", ")}`
        ] }),
        (0, import_jsx_runtime14.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "flex-end",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime14.jsx)(
                "button",
                {
                  onClick: onCancel,
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#6b7280",
                    backgroundColor: "#f3f4f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: "pointer"
                  },
                  children: "Cancel"
                }
              ),
              (0, import_jsx_runtime14.jsx)(
                "button",
                {
                  onClick: onSave,
                  disabled: readonly,
                  style: {
                    padding: "6px 16px",
                    fontSize: "13px",
                    color: "#ffffff",
                    backgroundColor: "#3b82f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: readonly ? "not-allowed" : "pointer",
                    opacity: readonly ? 0.5 : 1
                  },
                  children: "Confirm"
                }
              )
            ]
          }
        )
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/enhanced/RatingEditor.tsx
var import_react171 = __toESM(require_react(), 1);
var import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1);
var RATING_ICON_COMPONENT = {
  star: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" })
    }
  ),
  moon: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" })
    }
  ),
  sun: ({ className, style }) => (0, import_jsx_runtime15.jsxs)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: [
        (0, import_jsx_runtime15.jsx)("circle", { cx: "12", cy: "12", r: "5" }),
        (0, import_jsx_runtime15.jsx)(
          "path",
          {
            d: "M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42",
            stroke: "currentColor",
            strokeWidth: "2",
            strokeLinecap: "round"
          }
        )
      ]
    }
  ),
  heart: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" })
    }
  ),
  flame: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z" })
    }
  ),
  zap: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M13 2L3 14h8l-1 8 10-12h-8l1-8z" })
    }
  ),
  "thumb-up": ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)("path", { d: "M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3" })
    }
  ),
  apple: ({ className, style }) => (0, import_jsx_runtime15.jsx)(
    "svg",
    {
      className,
      style,
      viewBox: "0 0 24 24",
      fill: "currentColor",
      xmlns: "http://www.w3.org/2000/svg",
      children: (0, import_jsx_runtime15.jsx)(
        "path",
        {
          d: "M12 2c2 0 3 1 3 1s1-1 3-1c3 0 5 2.5 5 5 0 5-5 10-8 13-3-3-8-8-8-13 0-2.5 2-5 5-5zM12 2c-1-2-3-2-4-2",
          stroke: "currentColor",
          strokeWidth: "2",
          strokeLinecap: "round"
        }
      )
    }
  )
};
var getColorValue = (color) => {
  const colorMap = {
    yellowBright: "#fbbf24",
    redBright: "#ef4444",
    tealBright: "#14b8a6",
    yellow: "#f59e0b",
    red: "#dc2626",
    teal: "#0d9488"
  };
  return colorMap[color] || color;
};
var RatingEditor = (0, import_react171.forwardRef)(
  (props, ref) => {
    const { value, options = {}, readonly, className, style, onChange } = props;
    const { icon = "star", color: colorKey = "yellow", max: max3 = 5 } = options;
    const [hoverIndex, setHoverIndex] = (0, import_react171.useState)(-1);
    const IconComponent = RATING_ICON_COMPONENT[icon] || RATING_ICON_COMPONENT.star;
    const color = (0, import_react171.useMemo)(() => getColorValue(colorKey), [colorKey]);
    const hoveredColor = (0, import_react171.useMemo)(() => {
      const r = parseInt(color.slice(1, 3), 16);
      const g = parseInt(color.slice(3, 5), 16);
      const b2 = parseInt(color.slice(5, 7), 16);
      return `rgba(${r}, ${g}, ${b2}, 0.3)`;
    }, [color]);
    const onChangeInner = (index3) => {
      if (readonly) {
        return;
      }
      const finalValue = index3 + 1 === value ? null : index3 + 1;
      onChange?.(finalValue);
    };
    const onHoverIndexChange = (index3) => {
      if (readonly) {
        return;
      }
      setHoverIndex(index3);
    };
    return (0, import_jsx_runtime15.jsx)(
      "div",
      {
        ref,
        className,
        style: {
          display: "inline-flex",
          alignItems: "center",
          height: "32px",
          padding: "0 8px",
          ...style
        },
        children: Array.from({ length: max3 }).map((_2, index3) => {
          let iconStyle = {
            fill: "#d1d5db",
            color: "#d1d5db"
          };
          if (value != null && index3 < value) {
            iconStyle = { fill: color, color };
          } else if (index3 <= hoverIndex) {
            iconStyle = { fill: hoveredColor, color: hoveredColor };
          }
          return (0, import_jsx_runtime15.jsx)(
            "span",
            {
              style: {
                display: "inline-flex",
                cursor: readonly ? "not-allowed" : "pointer"
              },
              onMouseEnter: () => onHoverIndexChange(index3),
              onMouseLeave: () => onHoverIndexChange(-1),
              onClick: () => onChangeInner(index3),
              children: (0, import_jsx_runtime15.jsx)(
                IconComponent,
                {
                  className: "rating-icon",
                  style: {
                    width: "24px",
                    height: "24px",
                    marginRight: "8px",
                    borderRadius: "4px",
                    transition: "all 0.15s",
                    ...iconStyle
                  }
                }
              )
            },
            index3
          );
        })
      }
    );
  }
);
RatingEditor.displayName = "GridRatingEditor";

// ../../packages/aitable/src/grid/components/editors/enhanced/LinkEditor.tsx
var import_react172 = __toESM(require_react(), 1);
var import_jsx_runtime16 = __toESM(require_jsx_runtime(), 1);
var isValidUrl = (url) => {
  try {
    new URL(url);
    return true;
  } catch {
    try {
      new URL(`http://${url}`);
      return true;
    } catch {
      return false;
    }
  }
};
var normalizeUrl = (url) => {
  if (!url) {
    return "";
  }
  if (url.match(/^https?:\/\//i)) {
    return url;
  }
  if (url.match(/^mailto:/i)) {
    return url;
  }
  if (url.match(/^tel:/i)) {
    return url;
  }
  return `http://${url}`;
};
var LinkEditor = ({
  value,
  onChange,
  onSave,
  onCancel,
  readonly = false,
  validateUrl: shouldValidate = true,
  openInNewTab = true,
  className,
  style,
  rect
}) => {
  const [inputValue, setInputValue] = (0, import_react172.useState)(value || "");
  const [error, setError] = (0, import_react172.useState)("");
  const inputRef = (0, import_react172.useRef)(null);
  const handleChange = (0, import_react172.useCallback)(
    (e2) => {
      const newValue = e2.target.value;
      setInputValue(newValue);
      setError("");
      if (newValue && shouldValidate && !isValidUrl(newValue)) {
        setError("Please enter a valid URL");
      }
      onChange(newValue || null);
    },
    [onChange, shouldValidate]
  );
  const handleSave = (0, import_react172.useCallback)(() => {
    if (shouldValidate && inputValue && !isValidUrl(inputValue)) {
      setError("Please enter a valid URL before saving");
      return;
    }
    const normalizedValue = inputValue ? normalizeUrl(inputValue) : null;
    onChange(normalizedValue);
    onSave?.();
  }, [inputValue, shouldValidate, onChange, onSave]);
  const handleOpen = (0, import_react172.useCallback)(() => {
    if (!inputValue) {
      return;
    }
    const url = normalizeUrl(inputValue);
    if (openInNewTab) {
      window.open(url, "_blank", "noopener,noreferrer");
    } else {
      window.location.href = url;
    }
  }, [inputValue, openInNewTab]);
  const handleKeyDown = (0, import_react172.useCallback)(
    (e2) => {
      if (e2.key === "Enter") {
        e2.preventDefault();
        handleSave();
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        onCancel?.();
      }
    },
    [handleSave, onCancel]
  );
  const popupPosition = rect ? useGridPopupPosition(rect, 200) : void 0;
  (0, import_react172.useEffect)(() => {
    inputRef.current?.focus();
    inputRef.current?.select();
  }, []);
  return (0, import_jsx_runtime16.jsxs)(
    "div",
    {
      className,
      style: {
        position: "absolute",
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        padding: "12px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e3,
        minWidth: "300px",
        ...popupPosition,
        ...style
      },
      children: [
        (0, import_jsx_runtime16.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "4px" }, children: [
          (0, import_jsx_runtime16.jsx)("label", { style: { fontSize: "12px", color: "#6b7280", fontWeight: 500 }, children: "URL" }),
          (0, import_jsx_runtime16.jsx)(
            "input",
            {
              ref: inputRef,
              type: "text",
              value: inputValue,
              onChange: handleChange,
              onKeyDown: handleKeyDown,
              placeholder: "https://example.com",
              disabled: readonly,
              style: {
                padding: "8px 10px",
                border: `1px solid ${error ? "#ef4444" : "#d1d5db"}`,
                borderRadius: "4px",
                fontSize: "14px",
                outline: "none"
              }
            }
          ),
          error && (0, import_jsx_runtime16.jsx)("span", { style: { fontSize: "12px", color: "#ef4444" }, children: error })
        ] }),
        inputValue && isValidUrl(inputValue) && (0, import_jsx_runtime16.jsxs)(
          "div",
          {
            style: {
              padding: "8px",
              backgroundColor: "#f9fafb",
              borderRadius: "4px",
              fontSize: "12px",
              color: "#6b7280",
              wordBreak: "break-all"
            },
            children: [
              (0, import_jsx_runtime16.jsx)("div", { style: { marginBottom: "4px", fontWeight: 500 }, children: "Preview:" }),
              (0, import_jsx_runtime16.jsx)(
                "a",
                {
                  href: normalizeUrl(inputValue),
                  target: "_blank",
                  rel: "noopener noreferrer",
                  style: {
                    color: "#3b82f6",
                    textDecoration: "underline"
                  },
                  children: normalizeUrl(inputValue)
                }
              )
            ]
          }
        ),
        (0, import_jsx_runtime16.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "space-between",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime16.jsx)(
                "button",
                {
                  onClick: handleOpen,
                  disabled: !inputValue || shouldValidate && !isValidUrl(inputValue),
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#3b82f6",
                    backgroundColor: "#ffffff",
                    border: "1px solid #3b82f6",
                    borderRadius: "4px",
                    cursor: !inputValue || shouldValidate && !isValidUrl(inputValue) ? "not-allowed" : "pointer",
                    opacity: !inputValue || shouldValidate && !isValidUrl(inputValue) ? 0.5 : 1
                  },
                  children: "Open Link"
                }
              ),
              (0, import_jsx_runtime16.jsxs)("div", { style: { display: "flex", gap: "8px" }, children: [
                (0, import_jsx_runtime16.jsx)(
                  "button",
                  {
                    onClick: onCancel,
                    style: {
                      padding: "6px 12px",
                      fontSize: "13px",
                      color: "#6b7280",
                      backgroundColor: "#f3f4f6",
                      border: "none",
                      borderRadius: "4px",
                      cursor: "pointer"
                    },
                    children: "Cancel"
                  }
                ),
                (0, import_jsx_runtime16.jsx)(
                  "button",
                  {
                    onClick: handleSave,
                    disabled: readonly || shouldValidate && !!error,
                    style: {
                      padding: "6px 16px",
                      fontSize: "13px",
                      color: "#ffffff",
                      backgroundColor: "#3b82f6",
                      border: "none",
                      borderRadius: "4px",
                      cursor: readonly || shouldValidate && !!error ? "not-allowed" : "pointer",
                      opacity: readonly || shouldValidate && !!error ? 0.5 : 1
                    },
                    children: "Confirm"
                  }
                )
              ] })
            ]
          }
        )
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/enhanced/UserEditor.tsx
var import_react173 = __toESM(require_react(), 1);
var import_jsx_runtime17 = __toESM(require_jsx_runtime(), 1);
var getUserInitials = (name) => {
  return name.split(" ").map((part) => part[0]).join("").toUpperCase().slice(0, 2);
};
var getAvatarColor = (name) => {
  const colors2 = [
    "#ef4444",
    "#f97316",
    "#f59e0b",
    "#eab308",
    "#84cc16",
    "#22c55e",
    "#10b981",
    "#14b8a6",
    "#06b6d4",
    "#0ea5e9",
    "#3b82f6",
    "#6366f1",
    "#8b5cf6",
    "#a855f7",
    "#d946ef",
    "#ec4899",
    "#f43f5e"
  ];
  const hash = name.split("").reduce((acc, char) => acc + char.charCodeAt(0), 0);
  return colors2[hash % colors2.length];
};
var UserEditor = ({
  value,
  users = [],
  // 添加默认值
  onChange,
  onSave,
  onCancel,
  readonly = false,
  multiple = false,
  searchable = true,
  className,
  style,
  rect
}) => {
  const [searchQuery, setSearchQuery] = (0, import_react173.useState)("");
  const inputRef = (0, import_react173.useRef)(null);
  const fuse = (0, import_react173.useMemo)(
    () => new Fuse(users || [], {
      // 添加防御性检查
      keys: ["name", "email"],
      threshold: 0.3,
      includeScore: true
    }),
    [users]
  );
  const filteredUsers = (0, import_react173.useMemo)(() => {
    if (!searchQuery) {
      return users || [];
    }
    return fuse.search(searchQuery).map((result2) => result2.item);
  }, [users, fuse, searchQuery]);
  const selectedUserIds = (0, import_react173.useMemo)(() => {
    if (!value) {
      return [];
    }
    return Array.isArray(value) ? value : [value];
  }, [value]);
  const selectedUsers = (0, import_react173.useMemo)(() => {
    return (users || []).filter((user) => selectedUserIds.includes(user.id));
  }, [users, selectedUserIds]);
  const isSelected = (0, import_react173.useCallback)(
    (userId) => selectedUserIds.includes(userId),
    [selectedUserIds]
  );
  const handleSelect = (0, import_react173.useCallback)(
    (userId) => {
      if (readonly) {
        return;
      }
      if (multiple) {
        const newValue = isSelected(userId) ? selectedUserIds.filter((id) => id !== userId) : [...selectedUserIds, userId];
        onChange(newValue.length > 0 ? newValue : null);
      } else {
        onChange(userId);
        onSave?.();
      }
    },
    [readonly, multiple, isSelected, selectedUserIds, onChange, onSave]
  );
  const handleKeyDown = (0, import_react173.useCallback)(
    (e2) => {
      if (e2.key === "Enter") {
        e2.preventDefault();
        if (filteredUsers.length === 1) {
          handleSelect(filteredUsers[0].id);
        } else {
          onSave?.();
        }
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        onCancel?.();
      }
    },
    [filteredUsers, handleSelect, onSave, onCancel]
  );
  const popupPosition = rect ? useGridPopupPosition(rect, 340) : void 0;
  (0, import_react173.useEffect)(() => {
    inputRef.current?.focus();
  }, []);
  return (0, import_jsx_runtime17.jsxs)(
    "div",
    {
      className,
      style: {
        position: "absolute",
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        padding: "8px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e3,
        minWidth: "280px",
        maxWidth: "360px",
        ...popupPosition,
        ...style
      },
      children: [
        selectedUsers.length > 0 && multiple && (0, import_jsx_runtime17.jsx)(
          "div",
          {
            style: {
              display: "flex",
              flexWrap: "wrap",
              gap: "6px",
              padding: "8px",
              backgroundColor: "#f9fafb",
              borderRadius: "6px"
            },
            children: selectedUsers.map((user) => {
              const avatarColor = getAvatarColor(user.name);
              return (0, import_jsx_runtime17.jsxs)(
                "div",
                {
                  style: {
                    display: "flex",
                    alignItems: "center",
                    gap: "6px",
                    padding: "4px 8px",
                    backgroundColor: "#ffffff",
                    border: "1px solid #e5e7eb",
                    borderRadius: "16px",
                    fontSize: "12px"
                  },
                  children: [
                    user.avatar ? (0, import_jsx_runtime17.jsx)(
                      "img",
                      {
                        src: user.avatar,
                        alt: user.name,
                        style: {
                          width: "20px",
                          height: "20px",
                          borderRadius: "50%",
                          objectFit: "cover"
                        }
                      }
                    ) : (0, import_jsx_runtime17.jsx)(
                      "div",
                      {
                        style: {
                          width: "20px",
                          height: "20px",
                          borderRadius: "50%",
                          backgroundColor: avatarColor,
                          color: "#ffffff",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          fontSize: "10px",
                          fontWeight: 600
                        },
                        children: getUserInitials(user.name)
                      }
                    ),
                    (0, import_jsx_runtime17.jsx)("span", { children: user.name }),
                    !readonly && (0, import_jsx_runtime17.jsx)(
                      "button",
                      {
                        onClick: () => handleSelect(user.id),
                        style: {
                          width: "16px",
                          height: "16px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          border: "none",
                          borderRadius: "50%",
                          backgroundColor: "transparent",
                          cursor: "pointer",
                          fontSize: "12px",
                          color: "#9ca3af"
                        },
                        children: "×"
                      }
                    )
                  ]
                },
                user.id
              );
            })
          }
        ),
        searchable && (0, import_jsx_runtime17.jsx)(
          "input",
          {
            ref: inputRef,
            type: "text",
            value: searchQuery,
            onChange: (e2) => setSearchQuery(e2.target.value),
            onKeyDown: handleKeyDown,
            placeholder: "Search users...",
            disabled: readonly,
            style: {
              padding: "6px 8px",
              border: "1px solid #d1d5db",
              borderRadius: "4px",
              fontSize: "13px",
              outline: "none"
            }
          }
        ),
        (0, import_jsx_runtime17.jsxs)(
          "div",
          {
            style: {
              maxHeight: "280px",
              overflowY: "auto",
              display: "flex",
              flexDirection: "column",
              gap: "2px"
            },
            children: [
              filteredUsers.map((user) => {
                const selected = isSelected(user.id);
                const avatarColor = getAvatarColor(user.name);
                return (0, import_jsx_runtime17.jsxs)(
                  "div",
                  {
                    onClick: () => handleSelect(user.id),
                    style: {
                      display: "flex",
                      alignItems: "center",
                      gap: "10px",
                      padding: "8px",
                      borderRadius: "6px",
                      cursor: readonly ? "not-allowed" : "pointer",
                      backgroundColor: selected ? "#dbeafe" : "transparent",
                      transition: "background-color 0.15s"
                    },
                    onMouseEnter: (e2) => {
                      if (!readonly) {
                        e2.currentTarget.style.backgroundColor = selected ? "#bfdbfe" : "#f3f4f6";
                      }
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = selected ? "#dbeafe" : "transparent";
                    },
                    children: [
                      multiple && (0, import_jsx_runtime17.jsx)(
                        "div",
                        {
                          style: {
                            width: "16px",
                            height: "16px",
                            border: "2px solid #d1d5db",
                            borderRadius: "2px",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            backgroundColor: selected ? "#3b82f6" : "#ffffff",
                            borderColor: selected ? "#3b82f6" : "#d1d5db",
                            flexShrink: 0
                          },
                          children: selected && (0, import_jsx_runtime17.jsx)("span", { style: { color: "#ffffff", fontSize: "11px" }, children: "✓" })
                        }
                      ),
                      user.avatar ? (0, import_jsx_runtime17.jsx)(
                        "img",
                        {
                          src: user.avatar,
                          alt: user.name,
                          style: {
                            width: "32px",
                            height: "32px",
                            borderRadius: "50%",
                            objectFit: "cover",
                            flexShrink: 0
                          }
                        }
                      ) : (0, import_jsx_runtime17.jsx)(
                        "div",
                        {
                          style: {
                            width: "32px",
                            height: "32px",
                            borderRadius: "50%",
                            backgroundColor: avatarColor,
                            color: "#ffffff",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            fontSize: "13px",
                            fontWeight: 600,
                            flexShrink: 0
                          },
                          children: getUserInitials(user.name)
                        }
                      ),
                      (0, import_jsx_runtime17.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                        (0, import_jsx_runtime17.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "13px",
                              fontWeight: 500,
                              color: "#374151",
                              overflow: "hidden",
                              textOverflow: "ellipsis",
                              whiteSpace: "nowrap"
                            },
                            children: user.name
                          }
                        ),
                        user.email && (0, import_jsx_runtime17.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "12px",
                              color: "#9ca3af",
                              overflow: "hidden",
                              textOverflow: "ellipsis",
                              whiteSpace: "nowrap"
                            },
                            children: user.email
                          }
                        )
                      ] })
                    ]
                  },
                  user.id
                );
              }),
              filteredUsers.length === 0 && (0, import_jsx_runtime17.jsx)(
                "div",
                {
                  style: {
                    padding: "16px",
                    textAlign: "center",
                    color: "#9ca3af",
                    fontSize: "13px"
                  },
                  children: "No users found"
                }
              )
            ]
          }
        ),
        multiple && (0, import_jsx_runtime17.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "flex-end",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime17.jsx)(
                "button",
                {
                  onClick: onCancel,
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#6b7280",
                    backgroundColor: "#f3f4f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: "pointer"
                  },
                  children: "Cancel"
                }
              ),
              (0, import_jsx_runtime17.jsx)(
                "button",
                {
                  onClick: onSave,
                  disabled: readonly,
                  style: {
                    padding: "6px 16px",
                    fontSize: "13px",
                    color: "#ffffff",
                    backgroundColor: "#3b82f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: readonly ? "not-allowed" : "pointer",
                    opacity: readonly ? 0.5 : 1
                  },
                  children: "Confirm"
                }
              )
            ]
          }
        )
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/enhanced/NumberEditor.tsx
var import_react174 = __toESM(require_react(), 1);
var import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1);
var formatNumber = (num, format3, precision, currencySymbol, thousandsSeparator) => {
  let formatted = num.toFixed(precision);
  if (thousandsSeparator) {
    const parts = formatted.split(".");
    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    formatted = parts.join(".");
  }
  switch (format3) {
    case "percent":
      return `${formatted}%`;
    case "currency":
      return `${currencySymbol}${formatted}`;
    default:
      return formatted;
  }
};
var parseFormattedNumber = (str) => {
  const cleaned = str.replace(/[^\d.-]/g, "");
  const num = parseFloat(cleaned);
  return isNaN(num) ? null : num;
};
var NumberEditor = ({
  value,
  onChange,
  onSave,
  onCancel,
  readonly = false,
  min: min3,
  max: max3,
  step = 1,
  precision = 0,
  format: format3 = "decimal",
  currencySymbol = "$",
  thousandsSeparator = false,
  className,
  style,
  rect
}) => {
  const [inputValue, setInputValue] = (0, import_react174.useState)(
    () => value !== null ? String(value) : ""
  );
  const [isFocused, setIsFocused] = (0, import_react174.useState)(false);
  const inputRef = (0, import_react174.useRef)(null);
  const displayValue = (0, import_react174.useCallback)(() => {
    if (isFocused) {
      return inputValue;
    }
    const num = parseFormattedNumber(inputValue);
    return num !== null ? formatNumber(num, format3, precision, currencySymbol, thousandsSeparator) : "";
  }, [
    inputValue,
    isFocused,
    format3,
    precision,
    currencySymbol,
    thousandsSeparator
  ]);
  const handleChange = (0, import_react174.useCallback)(
    (e2) => {
      const newValue = e2.target.value;
      setInputValue(newValue);
      const num = parseFormattedNumber(newValue);
      if (num !== null) {
        let validNum = num;
        if (min3 !== void 0 && validNum < min3) {
          validNum = min3;
        }
        if (max3 !== void 0 && validNum > max3) {
          validNum = max3;
        }
        onChange(validNum);
      } else if (newValue === "" || newValue === "-") {
        onChange(null);
      }
    },
    [onChange, min3, max3]
  );
  const handleIncrement = (0, import_react174.useCallback)(
    (delta) => {
      if (readonly) {
        return;
      }
      const currentNum = value ?? 0;
      let newNum = currentNum + delta;
      if (min3 !== void 0 && newNum < min3) {
        newNum = min3;
      }
      if (max3 !== void 0 && newNum > max3) {
        newNum = max3;
      }
      setInputValue(String(newNum));
      onChange(newNum);
    },
    [value, readonly, min3, max3, onChange]
  );
  const handleKeyDown = (0, import_react174.useCallback)(
    (e2) => {
      if (e2.key === "Enter") {
        e2.preventDefault();
        onSave?.();
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        onCancel?.();
      } else if (e2.key === "ArrowUp") {
        e2.preventDefault();
        handleIncrement(step);
      } else if (e2.key === "ArrowDown") {
        e2.preventDefault();
        handleIncrement(-step);
      }
    },
    [onSave, onCancel, handleIncrement, step]
  );
  const popupPosition = rect ? useGridPopupPosition(rect, 240) : void 0;
  (0, import_react174.useEffect)(() => {
    inputRef.current?.focus();
    inputRef.current?.select();
  }, []);
  return (0, import_jsx_runtime18.jsxs)(
    "div",
    {
      className,
      style: {
        position: "absolute",
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        padding: "12px",
        backgroundColor: "#ffffff",
        border: "1px solid #d1d5db",
        borderRadius: "8px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
        zIndex: 1e3,
        minWidth: "200px",
        ...popupPosition,
        ...style
      },
      children: [
        (0, import_jsx_runtime18.jsxs)("div", { style: { display: "flex", alignItems: "center", gap: "8px" }, children: [
          (0, import_jsx_runtime18.jsx)(
            "button",
            {
              onClick: () => handleIncrement(-step),
              disabled: readonly || min3 !== void 0 && value !== null && value <= min3,
              style: {
                width: "28px",
                height: "28px",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                border: "1px solid #d1d5db",
                borderRadius: "4px",
                backgroundColor: "#ffffff",
                cursor: readonly ? "not-allowed" : "pointer",
                fontSize: "16px",
                color: "#6b7280"
              },
              children: "−"
            }
          ),
          (0, import_jsx_runtime18.jsx)(
            "input",
            {
              ref: inputRef,
              type: "text",
              value: displayValue(),
              onChange: handleChange,
              onKeyDown: handleKeyDown,
              onFocus: () => setIsFocused(true),
              onBlur: () => setIsFocused(false),
              disabled: readonly,
              style: {
                flex: 1,
                padding: "6px 8px",
                border: "1px solid #d1d5db",
                borderRadius: "4px",
                fontSize: "14px",
                textAlign: "right",
                outline: "none"
              }
            }
          ),
          (0, import_jsx_runtime18.jsx)(
            "button",
            {
              onClick: () => handleIncrement(step),
              disabled: readonly || max3 !== void 0 && value !== null && value >= max3,
              style: {
                width: "28px",
                height: "28px",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                border: "1px solid #d1d5db",
                borderRadius: "4px",
                backgroundColor: "#ffffff",
                cursor: readonly ? "not-allowed" : "pointer",
                fontSize: "16px",
                color: "#6b7280"
              },
              children: "+"
            }
          )
        ] }),
        (0, import_jsx_runtime18.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              gap: "4px",
              fontSize: "11px",
              color: "#9ca3af"
            },
            children: [
              min3 !== void 0 && (0, import_jsx_runtime18.jsxs)("span", { children: [
                "Min: ",
                min3
              ] }),
              max3 !== void 0 && (0, import_jsx_runtime18.jsxs)("span", { children: [
                "Max: ",
                max3
              ] }),
              step !== 1 && (0, import_jsx_runtime18.jsxs)("span", { children: [
                "Step: ",
                step
              ] })
            ]
          }
        ),
        (0, import_jsx_runtime18.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              justifyContent: "flex-end",
              gap: "8px",
              paddingTop: "8px",
              borderTop: "1px solid #e5e7eb"
            },
            children: [
              (0, import_jsx_runtime18.jsx)(
                "button",
                {
                  onClick: onCancel,
                  style: {
                    padding: "6px 12px",
                    fontSize: "13px",
                    color: "#6b7280",
                    backgroundColor: "#f3f4f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: "pointer"
                  },
                  children: "Cancel"
                }
              ),
              (0, import_jsx_runtime18.jsx)(
                "button",
                {
                  onClick: onSave,
                  disabled: readonly,
                  style: {
                    padding: "6px 16px",
                    fontSize: "13px",
                    color: "#ffffff",
                    backgroundColor: "#3b82f6",
                    border: "none",
                    borderRadius: "4px",
                    cursor: readonly ? "not-allowed" : "pointer",
                    opacity: readonly ? 0.5 : 1
                  },
                  children: "Confirm"
                }
              )
            ]
          }
        )
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/enhanced/FilePreviewer.tsx
var import_react175 = __toESM(require_react(), 1);
var import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1);
var FilePreviewer = ({
  file,
  onClose,
  onDelete,
  onDownload
}) => {
  const [imageError, setImageError] = (0, import_react175.useState)(false);
  const isImage = file.type.startsWith("image/");
  const isPDF = file.type === "application/pdf";
  const canPreview = isImage || isPDF;
  const handleDownload = (0, import_react175.useCallback)(() => {
    if (onDownload) {
      onDownload(file);
    } else {
      const link = document.createElement("a");
      link.href = file.url;
      link.download = file.name;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  }, [file, onDownload]);
  const handleDelete = (0, import_react175.useCallback)(() => {
    if (window.confirm(`Are you sure you want to delete "${file.name}"?`)) {
      onDelete?.(file.id);
    }
  }, [file, onDelete]);
  const handleKeyDown = (0, import_react175.useCallback)(
    (e2) => {
      if (e2.key === "Escape") {
        onClose?.();
      }
    },
    [onClose]
  );
  return (0, import_jsx_runtime19.jsx)(
    "div",
    {
      style: {
        position: "fixed",
        inset: 0,
        zIndex: 1e3,
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        backgroundColor: "rgba(0, 0, 0, 0.8)"
      },
      onClick: onClose,
      onKeyDown: handleKeyDown,
      tabIndex: 0,
      children: (0, import_jsx_runtime19.jsxs)(
        "div",
        {
          style: {
            position: "relative",
            maxWidth: "90vw",
            maxHeight: "90vh",
            display: "flex",
            flexDirection: "column",
            backgroundColor: "#ffffff",
            borderRadius: "12px",
            boxShadow: "0 20px 60px rgba(0, 0, 0, 0.5)",
            overflow: "hidden"
          },
          onClick: (e2) => e2.stopPropagation(),
          children: [
            (0, import_jsx_runtime19.jsxs)(
              "div",
              {
                style: {
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "space-between",
                  padding: "16px 20px",
                  borderBottom: "1px solid #e5e7eb",
                  backgroundColor: "#f9fafb"
                },
                children: [
                  (0, import_jsx_runtime19.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                    (0, import_jsx_runtime19.jsx)(
                      "h3",
                      {
                        style: {
                          margin: 0,
                          fontSize: "16px",
                          fontWeight: 600,
                          color: "#111827",
                          overflow: "hidden",
                          textOverflow: "ellipsis",
                          whiteSpace: "nowrap"
                        },
                        children: file.name
                      }
                    ),
                    (0, import_jsx_runtime19.jsxs)(
                      "p",
                      {
                        style: { margin: "4px 0 0", fontSize: "13px", color: "#6b7280" },
                        children: [
                          formatFileSize(file.size),
                          file.width && file.height && ` • ${file.width}×${file.height}`
                        ]
                      }
                    )
                  ] }),
                  (0, import_jsx_runtime19.jsxs)("div", { style: { display: "flex", gap: "8px", marginLeft: "16px" }, children: [
                    (0, import_jsx_runtime19.jsx)(
                      "button",
                      {
                        onClick: handleDownload,
                        title: "Download",
                        style: {
                          width: "36px",
                          height: "36px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          backgroundColor: "#ffffff",
                          cursor: "pointer",
                          fontSize: "18px",
                          transition: "background-color 0.2s"
                        },
                        onMouseEnter: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#f3f4f6";
                        },
                        onMouseLeave: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#ffffff";
                        },
                        children: "⬇️"
                      }
                    ),
                    onDelete && (0, import_jsx_runtime19.jsx)(
                      "button",
                      {
                        onClick: handleDelete,
                        title: "Delete",
                        style: {
                          width: "36px",
                          height: "36px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          backgroundColor: "#ffffff",
                          cursor: "pointer",
                          fontSize: "18px",
                          transition: "background-color 0.2s"
                        },
                        onMouseEnter: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#fee2e2";
                        },
                        onMouseLeave: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#ffffff";
                        },
                        children: "🗑️"
                      }
                    ),
                    (0, import_jsx_runtime19.jsx)(
                      "button",
                      {
                        onClick: onClose,
                        title: "Close",
                        style: {
                          width: "36px",
                          height: "36px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          backgroundColor: "#ffffff",
                          cursor: "pointer",
                          fontSize: "18px",
                          transition: "background-color 0.2s"
                        },
                        onMouseEnter: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#f3f4f6";
                        },
                        onMouseLeave: (e2) => {
                          e2.currentTarget.style.backgroundColor = "#ffffff";
                        },
                        children: "✕"
                      }
                    )
                  ] })
                ]
              }
            ),
            (0, import_jsx_runtime19.jsx)(
              "div",
              {
                style: {
                  flex: 1,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  padding: "20px",
                  minWidth: "400px",
                  minHeight: "300px",
                  maxHeight: "70vh",
                  overflow: "auto",
                  backgroundColor: "#f3f4f6"
                },
                children: isImage && !imageError ? (0, import_jsx_runtime19.jsx)(
                  "img",
                  {
                    src: file.url,
                    alt: file.name,
                    onError: () => setImageError(true),
                    style: {
                      maxWidth: "100%",
                      maxHeight: "100%",
                      objectFit: "contain",
                      borderRadius: "8px"
                    }
                  }
                ) : isPDF ? (0, import_jsx_runtime19.jsx)(
                  "iframe",
                  {
                    src: file.url,
                    title: file.name,
                    style: {
                      width: "100%",
                      height: "100%",
                      border: "none",
                      borderRadius: "8px"
                    }
                  }
                ) : (0, import_jsx_runtime19.jsxs)(
                  "div",
                  {
                    style: {
                      display: "flex",
                      flexDirection: "column",
                      alignItems: "center",
                      gap: "16px",
                      padding: "40px"
                    },
                    children: [
                      (0, import_jsx_runtime19.jsx)(
                        "div",
                        {
                          style: {
                            fontSize: "64px",
                            opacity: 0.5
                          },
                          children: "📄"
                        }
                      ),
                      (0, import_jsx_runtime19.jsx)(
                        "p",
                        {
                          style: {
                            fontSize: "14px",
                            color: "#6b7280",
                            textAlign: "center"
                          },
                          children: "Preview not available for this file type"
                        }
                      ),
                      (0, import_jsx_runtime19.jsx)(
                        "button",
                        {
                          onClick: handleDownload,
                          style: {
                            padding: "10px 20px",
                            fontSize: "14px",
                            fontWeight: 500,
                            color: "#ffffff",
                            backgroundColor: "#3b82f6",
                            border: "none",
                            borderRadius: "6px",
                            cursor: "pointer"
                          },
                          children: "Download File"
                        }
                      )
                    ]
                  }
                )
              }
            )
          ]
        }
      )
    }
  );
};

// ../../packages/aitable/src/grid/components/editors/EditorContainer.tsx
var import_react176 = __toESM(require_react(), 1);
var import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);
var NO_EDITING_CELL_TYPES = /* @__PURE__ */ new Set([
  "boolean" /* Boolean */,
  "rating" /* Rating */,
  "button" /* Button */
]);
var EditorContainerBase = (props, ref) => {
  const {
    theme,
    isEditing,
    coordInstance,
    scrollState,
    activeCell,
    selection,
    activeCellBound,
    scrollToItem,
    onUndo,
    onRedo,
    onCopy,
    onPaste,
    onChange,
    onDelete,
    onRowExpand,
    setEditing,
    setActiveCell,
    setSelection,
    real2RowIndex,
    getCellContent,
    scrollBy
  } = props;
  const { scrollLeft, scrollTop } = scrollState;
  const { rowIndex, realRowIndex, columnIndex } = (0, import_react176.useMemo)(() => {
    const [columnIndex2, realRowIndex2] = activeCell ?? [-1, -1];
    return {
      rowIndex: real2RowIndex(realRowIndex2) ?? -1,
      realRowIndex: realRowIndex2,
      columnIndex: columnIndex2
    };
  }, [activeCell, real2RowIndex]);
  const cellContent = (0, import_react176.useMemo)(() => {
    return getCellContent([columnIndex, realRowIndex]);
  }, [columnIndex, realRowIndex, getCellContent]);
  const { type: cellType, readonly, editorWidth } = cellContent;
  const editingEnable = !readonly && isEditing && activeCell;
  const width = editorWidth ?? coordInstance.getColumnWidth(columnIndex);
  const height = activeCellBound?.height ?? coordInstance.getRowHeight(rowIndex);
  const editorRef = (0, import_react176.useRef)(null);
  const defaultFocusRef = (0, import_react176.useRef)(null);
  const editorId = (0, import_react176.useMemo)(() => `editor-container-${getRandomString(8)}`, []);
  (0, import_react176.useImperativeHandle)(ref, () => ({
    focus: () => editorRef.current?.focus?.(),
    saveValue: () => editorRef.current?.saveValue?.()
  }));
  (0, import_react176.useEffect)(() => {
    if (cellContent.type === "loading" /* Loading */) {
      return;
    }
    if (!activeCell || isEditing) {
      return;
    }
    editorRef.current?.setValue?.(cellContent.data);
  }, [cellContent, activeCell, isEditing]);
  (0, import_react176.useEffect)(() => {
    if (cellType === "loading" /* Loading */) {
      return;
    }
    if (!activeCell || selection.type === "None" /* None */) {
      return;
    }
    requestAnimationFrame(
      () => (editorRef.current || defaultFocusRef.current)?.focus?.()
    );
  }, [cellType, activeCell, selection, isEditing]);
  useKeyboardSelection({
    editorRef,
    isEditing,
    activeCell,
    selection,
    coordInstance,
    onUndo,
    onRedo,
    onDelete,
    onRowExpand,
    setEditing,
    setActiveCell,
    setSelection,
    scrollToItem,
    scrollBy
  });
  const editorStyle = (0, import_react176.useMemo)(
    () => editingEnable ? { pointerEvents: "auto", minWidth: width, minHeight: height } : {
      pointerEvents: "none",
      opacity: 0,
      width: 0,
      height: 0
    },
    [editingEnable, height, width]
  );
  const rect = (0, import_react176.useMemo)(() => {
    const { rowInitSize, columnInitSize, containerWidth, containerHeight } = coordInstance;
    const x2 = clamp_default(
      coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft),
      columnInitSize,
      containerWidth - width
    );
    const y = clamp_default(
      coordInstance.getRowOffset(rowIndex) - scrollTop,
      rowInitSize,
      containerHeight - height
    );
    return {
      x: x2,
      y,
      width,
      height,
      editorId
    };
  }, [
    coordInstance,
    rowIndex,
    columnIndex,
    width,
    height,
    scrollLeft,
    scrollTop,
    editorId
  ]);
  const EditorRenderer = (0, import_react176.useMemo)(() => {
    if (readonly) {
      return null;
    }
    if (!isEditing) {
      return null;
    }
    const onChangeInner = (value) => {
      onChange?.([columnIndex, realRowIndex], {
        ...cellContent,
        data: value
      });
    };
    const { customEditor } = cellContent;
    if (customEditor) {
      return customEditor(
        {
          rect,
          theme,
          style: editorStyle,
          cell: cellContent,
          isEditing,
          setEditing,
          onChange: onChangeInner
        },
        editorRef
      );
    }
    switch (cellType) {
      case "text" /* Text */:
      case "number" /* Number */: {
        return (0, import_jsx_runtime20.jsx)(
          TextEditor,
          {
            ref: editorRef,
            rect,
            theme,
            style: editorStyle,
            cell: cellContent,
            isEditing,
            onChange: onChangeInner
          }
        );
      }
      case "link" /* Link */: {
        return (0, import_jsx_runtime20.jsx)(
          LinkEditor,
          {
            value: cellContent?.data || null,
            rect,
            style: editorStyle,
            onChange: onChangeInner
          }
        );
      }
      case "boolean" /* Boolean */:
        return (0, import_jsx_runtime20.jsx)(
          BooleanEditor,
          {
            ref: editorRef,
            rect,
            theme,
            cell: cellContent,
            onChange: onChangeInner
          }
        );
      case "rating" /* Rating */:
        return (0, import_jsx_runtime20.jsx)("div", { ref: editorRef, children: (0, import_jsx_runtime20.jsx)(
          RatingEditor,
          {
            value: cellContent?.data || null,
            rect,
            style: editorStyle,
            onChange: onChangeInner,
            options: {
              icon: cellContent?.icon,
              color: cellContent?.color,
              max: cellContent?.max
            }
          }
        ) });
      case "select" /* Select */:
      case "multiSelect" /* MultiSelect */:
        return (0, import_jsx_runtime20.jsx)(
          SelectEditor,
          {
            ref: editorRef,
            rect,
            theme,
            cell: cellContent,
            style: editorStyle,
            isEditing,
            setEditing,
            onChange: onChangeInner
          }
        );
      case "image" /* Image */:
        return (0, import_jsx_runtime20.jsx)(
          ImageEditor,
          {
            ref: editorRef,
            rect,
            theme,
            cell: {
              ...cellContent,
              url: cellContent?.url || ""
            },
            style: editorStyle,
            isEditing,
            onChange: onChangeInner
          }
        );
      case "date" /* Date */:
        return (0, import_jsx_runtime20.jsx)("div", { ref: editorRef, children: (0, import_jsx_runtime20.jsx)(
          DateEditor,
          {
            value: cellContent?.data || null,
            rect,
            style: editorStyle,
            onChange: (value) => onChangeInner(value)
          }
        ) });
      case "user" /* User */:
        return (0, import_jsx_runtime20.jsx)("div", { ref: editorRef, children: (0, import_jsx_runtime20.jsx)(
          UserEditor,
          {
            value: cellContent?.data || null,
            users: [],
            rect,
            style: editorStyle,
            onChange: (value) => onChangeInner(value)
          }
        ) });
      case "attachment" /* Attachment */:
        return (0, import_jsx_runtime20.jsx)("div", { ref: editorRef, children: (0, import_jsx_runtime20.jsx)(
          AttachmentEditor,
          {
            value: cellContent?.data || null,
            rect,
            style: editorStyle,
            onChange: (value) => onChangeInner(value)
          }
        ) });
      case "chart" /* Chart */:
        return (0, import_jsx_runtime20.jsx)(
          ChartEditor,
          {
            ref: editorRef,
            rect,
            theme,
            cell: cellContent,
            style: editorStyle,
            isEditing,
            onChange: onChangeInner
          }
        );
      default:
        return null;
    }
  }, [
    rect,
    theme,
    readonly,
    cellType,
    cellContent,
    columnIndex,
    realRowIndex,
    editorStyle,
    isEditing,
    onChange,
    setEditing
  ]);
  const onKeyDown = (event) => {
    if (!activeCell || isEditing) {
      return;
    }
    if (!isPrintableKey(event.nativeEvent)) {
      return;
    }
    if (NO_EDITING_CELL_TYPES.has(cellType)) {
      return;
    }
    setEditing(true);
    editorRef.current?.setValue?.(null);
  };
  const onPasteInner = (e2) => {
    if (!activeCell || isEditing) {
      return;
    }
    onPaste?.(selection, e2);
  };
  const onCopyInner = (e2) => {
    if (!activeCell || isEditing) {
      return;
    }
    onCopy?.(selection, e2);
  };
  const containerStyle = (0, import_react176.useMemo)(() => {
    const isInvisibleEditor = NO_EDITING_CELL_TYPES.has(cellType);
    if (isInvisibleEditor) {
      return {
        position: "absolute",
        zIndex: 10,
        top: rect.y,
        left: rect.x,
        width: 0,
        height: 0,
        overflow: "hidden"
      };
    }
    return {
      position: "absolute",
      zIndex: 10,
      top: rect.y,
      left: rect.x,
      minWidth: width,
      minHeight: height
    };
  }, [cellType, rect.y, rect.x, width, height]);
  return (0, import_jsx_runtime20.jsx)(
    "div",
    {
      id: editorId,
      className: "click-outside-ignore",
      style: {
        pointerEvents: "none",
        position: "absolute",
        left: 0,
        top: 0,
        width: "100%"
      },
      children: (0, import_jsx_runtime20.jsxs)(
        "div",
        {
          style: containerStyle,
          onKeyDown,
          onPaste: onPasteInner,
          onCopy: onCopyInner,
          children: [
            EditorRenderer,
            (0, import_jsx_runtime20.jsx)("input", { style: { opacity: 0 }, ref: defaultFocusRef })
          ]
        }
      )
    }
  );
};
var EditorContainer = (0, import_react176.forwardRef)(EditorContainerBase);

// ../../packages/aitable/src/grid/components/context-menu/ColumnContextMenu.tsx
var import_react177 = __toESM(require_react(), 1);
var import_react178 = __toESM(require_react(), 1);
var import_jsx_runtime21 = __toESM(require_jsx_runtime(), 1);
var ColumnContextMenuBase = (props, ref) => {
  const {
    onEditField,
    onDuplicateField,
    onInsertFieldLeft,
    onInsertFieldRight,
    onFilterByField,
    onSortByField,
    onGroupByField,
    onFreezeToField,
    onHideField,
    onDeleteField
  } = props;
  const [isVisible, setIsVisible] = (0, import_react177.useState)(false);
  const [position, setPosition] = (0, import_react177.useState)({ x: 0, y: 0 });
  const [columnIndex, setColumnIndex] = (0, import_react177.useState)(-1);
  const [computedPosition, setComputedPosition] = (0, import_react177.useState)({
    left: 0,
    top: 0,
    transformOrigin: "top left"
  });
  const menuRef = (0, import_react177.useRef)(null);
  (0, import_react178.useImperativeHandle)(ref, () => ({
    show: (pos, colIndex) => {
      setPosition(pos);
      setColumnIndex(colIndex);
      setIsVisible(true);
    },
    hide: () => {
      setIsVisible(false);
      setColumnIndex(-1);
    }
  }));
  (0, import_react177.useEffect)(() => {
    if (isVisible && menuRef.current) {
      const menuSize = {
        width: menuRef.current.offsetWidth || 192,
        // min-w-48 = 192px
        height: menuRef.current.offsetHeight || 400
        // 估算高度
      };
      const computed = calculateMenuPosition(position, menuSize, {
        preferredPlacement: "bottom-start",
        padding: 8
      });
      setComputedPosition({
        left: computed.left,
        top: computed.top,
        transformOrigin: computed.transformOrigin || "top left"
      });
    }
  }, [isVisible, position]);
  (0, import_react177.useEffect)(() => {
    if (!isVisible) {
      return;
    }
    const handleClickOutside = (e2) => {
      if (menuRef.current && !menuRef.current.contains(e2.target)) {
        setIsVisible(false);
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setIsVisible(false);
      }
    };
    const timer = setTimeout(() => {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }, 0);
    return () => {
      clearTimeout(timer);
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [isVisible]);
  const handleAction = (action) => {
    action();
    setIsVisible(false);
  };
  if (!isVisible) {
    return null;
  }
  const menuItems = [
    {
      label: "编辑字段",
      icon: "✓",
      onClick: () => handleAction(() => onEditField?.(columnIndex))
    },
    {
      label: "复制字段",
      icon: "□",
      onClick: () => handleAction(() => onDuplicateField?.(columnIndex))
    },
    {
      label: "← 在左侧插入字段",
      icon: "←",
      onClick: () => handleAction(() => onInsertFieldLeft?.(columnIndex))
    },
    {
      label: "→ 在右侧插入字段",
      icon: "→",
      onClick: () => handleAction(() => onInsertFieldRight?.(columnIndex))
    },
    {
      label: "按此字段筛选",
      icon: "🔍",
      onClick: () => handleAction(() => onFilterByField?.(columnIndex))
    },
    {
      label: "↓↑ 按此字段排序",
      icon: "↓↑",
      onClick: () => handleAction(() => onSortByField?.(columnIndex))
    },
    {
      label: "按此字段分组",
      icon: "≡",
      onClick: () => handleAction(() => onGroupByField?.(columnIndex))
    },
    {
      label: "冻结至此字段",
      icon: "⊞",
      onClick: () => handleAction(() => onFreezeToField?.(columnIndex))
    },
    {
      label: "隐藏字段",
      icon: "👁",
      onClick: () => handleAction(() => onHideField?.(columnIndex))
    },
    {
      label: "删除字段",
      icon: "🗑",
      onClick: () => handleAction(() => onDeleteField?.(columnIndex)),
      className: "text-red-600 hover:bg-red-50"
    }
  ];
  return (0, import_jsx_runtime21.jsx)(
    "div",
    {
      ref: menuRef,
      style: {
        position: "fixed",
        zIndex: 9999,
        left: `${computedPosition.left}px`,
        top: `${computedPosition.top}px`,
        transformOrigin: computedPosition.transformOrigin,
        backgroundColor: "white",
        border: "2px solid #e5e7eb",
        borderRadius: "8px",
        boxShadow: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
        padding: "4px 0",
        minWidth: "192px",
        maxWidth: "240px",
        // 添加最大宽度限制
        width: "max-content",
        // 内容自适应宽度
        opacity: computedPosition.left === 0 && computedPosition.top === 0 ? 0 : 1
      },
      onClick: (e2) => e2.stopPropagation(),
      children: menuItems.map((item, index3) => (0, import_jsx_runtime21.jsxs)(
        "button",
        {
          style: {
            width: "100%",
            display: "flex",
            alignItems: "center",
            padding: "8px 12px",
            textAlign: "left",
            backgroundColor: "transparent",
            border: "none",
            cursor: "pointer",
            fontSize: "14px",
            whiteSpace: "nowrap",
            // 防止文本换行
            color: item.className?.includes("red") ? "#dc2626" : "#374151"
          },
          onMouseEnter: (e2) => {
            e2.currentTarget.style.backgroundColor = item.className?.includes(
              "red"
            ) ? "#fef2f2" : "#f9fafb";
          },
          onMouseLeave: (e2) => {
            e2.currentTarget.style.backgroundColor = "transparent";
          },
          onClick: item.onClick,
          children: [
            (0, import_jsx_runtime21.jsx)(
              "span",
              {
                style: { marginRight: "12px", width: "16px", textAlign: "center" },
                children: item.icon
              }
            ),
            item.label
          ]
        },
        index3
      ))
    }
  );
};
var ColumnContextMenu = (0, import_react178.forwardRef)(ColumnContextMenuBase);

// ../../packages/aitable/src/grid/components/context-menu/RowContextMenu.tsx
var import_react179 = __toESM(require_react(), 1);
var import_react180 = __toESM(require_react(), 1);
var import_jsx_runtime22 = __toESM(require_jsx_runtime(), 1);
var RowContextMenuBase = (props, ref) => {
  const {
    onDeleteRow,
    onDuplicateRow,
    onInsertRowAbove,
    onInsertRowBelow,
    onExpandRow
  } = props;
  const [isVisible, setIsVisible] = (0, import_react179.useState)(false);
  const [position, setPosition] = (0, import_react179.useState)({ x: 0, y: 0 });
  const [rowIndex, setRowIndex] = (0, import_react179.useState)(-1);
  const [computedPosition, setComputedPosition] = (0, import_react179.useState)({
    left: 0,
    top: 0,
    transformOrigin: "top left"
  });
  const menuRef = (0, import_react179.useRef)(null);
  (0, import_react180.useImperativeHandle)(ref, () => ({
    show: (pos, rIndex) => {
      setPosition(pos);
      setRowIndex(rIndex);
      setIsVisible(true);
    },
    hide: () => {
      setIsVisible(false);
      setRowIndex(-1);
    }
  }));
  (0, import_react179.useEffect)(() => {
    if (isVisible && menuRef.current) {
      const menuSize = {
        width: menuRef.current.offsetWidth || 160,
        // min-w-40 = 160px
        height: menuRef.current.offsetHeight || 200
      };
      const computed = calculateMenuPosition(position, menuSize, {
        preferredPlacement: "bottom-start",
        padding: 8
      });
      setComputedPosition({
        left: computed.left,
        top: computed.top,
        transformOrigin: computed.transformOrigin || "top left"
      });
    }
  }, [isVisible, position]);
  (0, import_react179.useEffect)(() => {
    if (!isVisible) {
      return;
    }
    const handleClickOutside = (e2) => {
      if (menuRef.current && !menuRef.current.contains(e2.target)) {
        setIsVisible(false);
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setIsVisible(false);
      }
    };
    const timer = setTimeout(() => {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }, 0);
    return () => {
      clearTimeout(timer);
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [isVisible]);
  const handleAction = (action) => {
    action();
    setIsVisible(false);
  };
  if (!isVisible) {
    return null;
  }
  const menuItems = [
    onExpandRow && {
      label: "展开记录",
      icon: "🔍",
      onClick: () => handleAction(() => onExpandRow(rowIndex))
    },
    onDuplicateRow && {
      label: "复制记录",
      icon: "📋",
      onClick: () => handleAction(() => onDuplicateRow(rowIndex))
    },
    onInsertRowAbove && {
      label: "在上方插入",
      icon: "↑",
      onClick: () => handleAction(() => onInsertRowAbove(rowIndex))
    },
    onInsertRowBelow && {
      label: "在下方插入",
      icon: "↓",
      onClick: () => handleAction(() => onInsertRowBelow(rowIndex))
    },
    { type: "divider" },
    onDeleteRow && {
      label: "删除记录",
      icon: "🗑",
      onClick: () => handleAction(() => onDeleteRow(rowIndex)),
      className: "text-red-600 hover:bg-red-50"
    }
  ].filter(Boolean);
  return (0, import_jsx_runtime22.jsx)(
    "div",
    {
      ref: menuRef,
      style: {
        position: "fixed",
        zIndex: 9999,
        left: `${computedPosition.left}px`,
        top: `${computedPosition.top}px`,
        transformOrigin: computedPosition.transformOrigin,
        backgroundColor: "white",
        border: "2px solid #e5e7eb",
        borderRadius: "8px",
        boxShadow: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
        padding: "4px 0",
        minWidth: "160px",
        maxWidth: "220px",
        width: "max-content",
        opacity: computedPosition.left === 0 && computedPosition.top === 0 ? 0 : 1
      },
      onClick: (e2) => e2.stopPropagation(),
      children: menuItems.map((item, index3) => {
        if (item.type === "divider") {
          return (0, import_jsx_runtime22.jsx)(
            "div",
            {
              style: {
                height: "1px",
                backgroundColor: "#e5e7eb",
                margin: "4px 0"
              }
            },
            index3
          );
        }
        return (0, import_jsx_runtime22.jsxs)(
          "button",
          {
            style: {
              width: "100%",
              display: "flex",
              alignItems: "center",
              padding: "8px 12px",
              textAlign: "left",
              backgroundColor: "transparent",
              border: "none",
              cursor: "pointer",
              fontSize: "14px",
              whiteSpace: "nowrap",
              color: item.className?.includes("red") ? "#dc2626" : "#374151"
            },
            onMouseEnter: (e2) => {
              e2.currentTarget.style.backgroundColor = item.className?.includes(
                "red"
              ) ? "#fef2f2" : "#f9fafb";
            },
            onMouseLeave: (e2) => {
              e2.currentTarget.style.backgroundColor = "transparent";
            },
            onClick: item.onClick,
            children: [
              (0, import_jsx_runtime22.jsx)(
                "span",
                {
                  style: {
                    marginRight: "12px",
                    width: "16px",
                    textAlign: "center"
                  },
                  children: item.icon
                }
              ),
              item.label
            ]
          },
          index3
        );
      })
    }
  );
};
var RowContextMenu = (0, import_react180.forwardRef)(RowContextMenuBase);

// ../../packages/aitable/src/grid/components/column-management/ColumnManagement.tsx
var import_react190 = __toESM(require_react(), 1);
var import_react191 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/components/field/FieldTypeSelector.tsx
var import_react181 = __toESM(require_react(), 1);
var import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1);
var FieldTypeSelectorBase = ({ onSelect, onClose }, ref) => {
  const [visible, setVisible] = (0, import_react181.useState)(false);
  const [position, setPosition] = (0, import_react181.useState)({ x: 0, y: 0 });
  (0, import_react181.useImperativeHandle)(ref, () => ({
    show: (pos) => {
      setPosition(pos);
      setVisible(true);
    },
    hide: () => {
      setVisible(false);
      onClose?.();
    }
  }));
  if (!visible) {
    return null;
  }
  const fieldTypes4 = [
    { type: "text", label: "单行文本", icon: "📝" },
    { type: "number", label: "数字", icon: "🔢" },
    { type: "checkbox", label: "复选框", icon: "☑️" },
    { type: "select", label: "单选", icon: "🔘" },
    { type: "multipleSelect", label: "多选", icon: "☑️" },
    { type: "date", label: "日期", icon: "📅" },
    { type: "user", label: "用户", icon: "👤" },
    { type: "attachment", label: "附件", icon: "📎" },
    { type: "link", label: "关联", icon: "🔗" },
    { type: "rating", label: "评分", icon: "⭐" }
  ];
  const handleSelect = (type) => {
    onSelect?.(type);
    setVisible(false);
  };
  return (0, import_jsx_runtime23.jsx)(
    "div",
    {
      style: {
        position: "fixed",
        left: position.x,
        top: position.y,
        background: "white",
        border: "1px solid #ddd",
        borderRadius: "4px",
        padding: "8px",
        boxShadow: "0 2px 8px rgba(0,0,0,0.1)",
        zIndex: 1e4
      },
      children: fieldTypes4.map(({ type, label, icon }) => (0, import_jsx_runtime23.jsxs)(
        "div",
        {
          onClick: () => handleSelect(type),
          style: {
            padding: "8px 12px",
            cursor: "pointer",
            display: "flex",
            alignItems: "center",
            gap: "8px"
          },
          children: [
            (0, import_jsx_runtime23.jsx)("span", { children: icon }),
            (0, import_jsx_runtime23.jsx)("span", { children: label })
          ]
        },
        type
      ))
    }
  );
};
var FieldTypeSelector = (0, import_react181.forwardRef)(FieldTypeSelectorBase);

// ../../packages/aitable/src/grid/components/field/FieldPropertyEditor.tsx
var import_react182 = __toESM(require_react(), 1);
var import_jsx_runtime24 = __toESM(require_jsx_runtime(), 1);
var FieldPropertyEditorBase = ({ onSave, onClose }, ref) => {
  const [visible, setVisible] = (0, import_react182.useState)(false);
  const [currentColumn, setCurrentColumn] = (0, import_react182.useState)(null);
  const [columnIndex, setColumnIndex] = (0, import_react182.useState)(-1);
  const [position, setPosition] = (0, import_react182.useState)({ x: 0, y: 0, width: 300 });
  const [name, setName] = (0, import_react182.useState)("");
  (0, import_react182.useImperativeHandle)(ref, () => ({
    show: (column, index3, pos) => {
      setCurrentColumn(column);
      setColumnIndex(index3);
      setName(column.name);
      if (pos) {
        setPosition({ x: pos.x, y: pos.y, width: pos.width || 300 });
      }
      setVisible(true);
    },
    hide: () => {
      setVisible(false);
      onClose?.();
    }
  }));
  if (!visible || !currentColumn) {
    return null;
  }
  const handleSave = () => {
    if (currentColumn) {
      onSave?.(columnIndex, {
        ...currentColumn,
        name
      });
    }
    setVisible(false);
  };
  return (0, import_jsx_runtime24.jsxs)(
    "div",
    {
      style: {
        position: "fixed",
        left: position.x,
        top: position.y,
        width: position.width,
        background: "white",
        border: "1px solid #ddd",
        borderRadius: "8px",
        padding: "16px",
        boxShadow: "0 4px 12px rgba(0,0,0,0.15)",
        zIndex: 1e4
      },
      children: [
        (0, import_jsx_runtime24.jsx)("h3", { style: { margin: "0 0 16px 0", fontSize: "16px", fontWeight: 600 }, children: "编辑字段属性" }),
        (0, import_jsx_runtime24.jsxs)("div", { style: { marginBottom: "12px" }, children: [
          (0, import_jsx_runtime24.jsx)(
            "label",
            {
              style: { display: "block", marginBottom: "4px", fontSize: "14px" },
              children: "字段名称"
            }
          ),
          (0, import_jsx_runtime24.jsx)(
            "input",
            {
              type: "text",
              value: name,
              onChange: (e2) => setName(e2.target.value),
              style: {
                width: "100%",
                padding: "8px",
                border: "1px solid #ddd",
                borderRadius: "4px",
                fontSize: "14px"
              }
            }
          )
        ] }),
        (0, import_jsx_runtime24.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              gap: "8px",
              justifyContent: "flex-end",
              marginTop: "16px"
            },
            children: [
              (0, import_jsx_runtime24.jsx)(
                "button",
                {
                  onClick: () => setVisible(false),
                  style: {
                    padding: "8px 16px",
                    border: "1px solid #ddd",
                    borderRadius: "4px",
                    background: "white",
                    cursor: "pointer"
                  },
                  children: "取消"
                }
              ),
              (0, import_jsx_runtime24.jsx)(
                "button",
                {
                  onClick: handleSave,
                  style: {
                    padding: "8px 16px",
                    border: "none",
                    borderRadius: "4px",
                    background: "#1890ff",
                    color: "white",
                    cursor: "pointer"
                  },
                  children: "保存"
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var FieldPropertyEditor = (0, import_react182.forwardRef)(FieldPropertyEditorBase);

// ../../packages/aitable/src/grid/components/field/FieldTypeSelectModal.tsx
var import_react184 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/components/field/VirtualFieldConfig.tsx
var import_react183 = __toESM(require_react(), 1);
var import_jsx_runtime25 = __toESM(require_jsx_runtime(), 1);
var ROLLUP_FUNCTIONS = [
  { value: "sum({values})", label: "求和", description: "计算所有值的总和" },
  {
    value: "average({values})",
    label: "平均值",
    description: "计算所有值的平均值"
  },
  { value: "count({values})", label: "计数", description: "计算值的数量" },
  { value: "max({values})", label: "最大值", description: "找出最大值" },
  { value: "min({values})", label: "最小值", description: "找出最小值" },
  {
    value: "concatenate({values})",
    label: "连接",
    description: "连接所有值为文本"
  }
];
var VirtualFieldConfigBase = ({ onConfirm, onCancel }, ref) => {
  const [visible, setVisible] = (0, import_react183.useState)(false);
  const [fieldType, setFieldType] = (0, import_react183.useState)("formula");
  const [expression, setExpression] = (0, import_react183.useState)("");
  const [formatting, setFormatting] = (0, import_react183.useState)({});
  const modalRef = (0, import_react183.useRef)(null);
  (0, import_react183.useImperativeHandle)(ref, () => ({
    show: (type, initialOptions) => {
      setFieldType(type);
      if (initialOptions) {
        setExpression(initialOptions.expression || "");
        setFormatting(initialOptions.formatting || {});
      } else {
        setExpression("");
        setFormatting({});
      }
      setVisible(true);
    },
    hide: () => {
      setVisible(false);
    }
  }));
  (0, import_react183.useEffect)(() => {
    if (!visible) {
      return;
    }
    const handleClickOutside = (e2) => {
      if (modalRef.current && !modalRef.current.contains(e2.target)) {
        setVisible(false);
        onCancel?.();
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setVisible(false);
        onCancel?.();
      }
    };
    const timer = setTimeout(() => {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }, 0);
    return () => {
      clearTimeout(timer);
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [visible, onCancel]);
  const handleConfirm = () => {
    if (expression.trim()) {
      const options = {
        expression: expression.trim(),
        formatting: Object.keys(formatting).length > 0 ? formatting : void 0
      };
      onConfirm?.(options);
      setVisible(false);
    }
  };
  const handleCancel = () => {
    setVisible(false);
    onCancel?.();
  };
  const handleRollupFunctionSelect = (func) => {
    setExpression(func.value);
  };
  if (!visible) {
    return null;
  }
  return (0, import_jsx_runtime25.jsxs)(
    "div",
    {
      ref: modalRef,
      style: {
        position: "fixed",
        left: "50%",
        top: "50%",
        transform: "translate(-50%, -50%)",
        backgroundColor: "white",
        border: "2px solid #e5e7eb",
        borderRadius: "12px",
        boxShadow: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
        padding: "0",
        minWidth: "500px",
        maxWidth: "600px",
        width: "max-content",
        zIndex: 10001,
        maxHeight: "80vh",
        overflow: "hidden"
      },
      onClick: (e2) => e2.stopPropagation(),
      children: [
        (0, import_jsx_runtime25.jsxs)(
          "div",
          {
            style: {
              padding: "20px 24px 16px",
              borderBottom: "1px solid #f3f4f6"
            },
            children: [
              (0, import_jsx_runtime25.jsx)(
                "h3",
                {
                  style: {
                    margin: 0,
                    fontSize: "18px",
                    fontWeight: 600,
                    color: "#111827"
                  },
                  children: fieldType === "formula" ? "配置公式字段" : "配置汇总字段"
                }
              ),
              (0, import_jsx_runtime25.jsx)(
                "p",
                {
                  style: {
                    margin: "4px 0 0",
                    fontSize: "14px",
                    color: "#6b7280"
                  },
                  children: fieldType === "formula" ? "设置公式表达式和格式" : "选择汇总函数和格式"
                }
              )
            ]
          }
        ),
        (0, import_jsx_runtime25.jsx)(
          "div",
          {
            style: { padding: "20px 24px", maxHeight: "60vh", overflow: "auto" },
            children: fieldType === "formula" ? (
              // 公式字段配置
              (0, import_jsx_runtime25.jsxs)(
                "div",
                {
                  style: { display: "flex", flexDirection: "column", gap: "16px" },
                  children: [
                    (0, import_jsx_runtime25.jsxs)("div", { children: [
                      (0, import_jsx_runtime25.jsxs)(
                        "label",
                        {
                          style: {
                            display: "block",
                            marginBottom: "8px",
                            fontSize: "14px",
                            fontWeight: 500,
                            color: "#374151"
                          },
                          children: [
                            "公式表达式 ",
                            (0, import_jsx_runtime25.jsx)("span", { style: { color: "#ef4444" }, children: "*" })
                          ]
                        }
                      ),
                      (0, import_jsx_runtime25.jsx)(
                        "textarea",
                        {
                          value: expression,
                          onChange: (e2) => setExpression(e2.target.value),
                          placeholder: "输入公式表达式，例如：{字段1} + {字段2}",
                          style: {
                            width: "100%",
                            minHeight: "80px",
                            padding: "12px",
                            border: "1px solid #d1d5db",
                            borderRadius: "8px",
                            fontSize: "14px",
                            fontFamily: "monospace",
                            outline: "none",
                            resize: "vertical"
                          },
                          onFocus: (e2) => {
                            e2.currentTarget.style.borderColor = "#3b82f6";
                          },
                          onBlur: (e2) => {
                            e2.currentTarget.style.borderColor = "#d1d5db";
                          }
                        }
                      ),
                      (0, import_jsx_runtime25.jsxs)(
                        "div",
                        {
                          style: {
                            marginTop: "8px",
                            fontSize: "12px",
                            color: "#6b7280"
                          },
                          children: [
                            "提示：使用 ",
                            `{字段名}`,
                            " 来引用其他字段"
                          ]
                        }
                      )
                    ] }),
                    (0, import_jsx_runtime25.jsxs)("div", { children: [
                      (0, import_jsx_runtime25.jsx)(
                        "label",
                        {
                          style: {
                            display: "block",
                            marginBottom: "8px",
                            fontSize: "14px",
                            fontWeight: 500,
                            color: "#374151"
                          },
                          children: "数字格式"
                        }
                      ),
                      (0, import_jsx_runtime25.jsxs)(
                        "div",
                        {
                          style: { display: "flex", gap: "12px", alignItems: "center" },
                          children: [
                            (0, import_jsx_runtime25.jsxs)(
                              "select",
                              {
                                value: formatting.type || "decimal",
                                onChange: (e2) => setFormatting({ ...formatting, type: e2.target.value }),
                                style: {
                                  padding: "8px 12px",
                                  border: "1px solid #d1d5db",
                                  borderRadius: "6px",
                                  fontSize: "14px",
                                  outline: "none"
                                },
                                children: [
                                  (0, import_jsx_runtime25.jsx)("option", { value: "decimal", children: "小数" }),
                                  (0, import_jsx_runtime25.jsx)("option", { value: "percent", children: "百分比" }),
                                  (0, import_jsx_runtime25.jsx)("option", { value: "currency", children: "货币" })
                                ]
                              }
                            ),
                            (0, import_jsx_runtime25.jsx)(
                              "input",
                              {
                                type: "number",
                                min: "0",
                                max: "10",
                                value: formatting.precision || 2,
                                onChange: (e2) => setFormatting({
                                  ...formatting,
                                  precision: parseInt(e2.target.value)
                                }),
                                placeholder: "精度",
                                style: {
                                  width: "80px",
                                  padding: "8px 12px",
                                  border: "1px solid #d1d5db",
                                  borderRadius: "6px",
                                  fontSize: "14px",
                                  outline: "none"
                                }
                              }
                            ),
                            (0, import_jsx_runtime25.jsx)("span", { style: { fontSize: "12px", color: "#6b7280" }, children: "位小数" })
                          ]
                        }
                      )
                    ] })
                  ]
                }
              )
            ) : (
              // 汇总字段配置
              (0, import_jsx_runtime25.jsxs)(
                "div",
                {
                  style: { display: "flex", flexDirection: "column", gap: "16px" },
                  children: [
                    (0, import_jsx_runtime25.jsxs)("div", { children: [
                      (0, import_jsx_runtime25.jsxs)(
                        "label",
                        {
                          style: {
                            display: "block",
                            marginBottom: "8px",
                            fontSize: "14px",
                            fontWeight: 500,
                            color: "#374151"
                          },
                          children: [
                            "汇总函数 ",
                            (0, import_jsx_runtime25.jsx)("span", { style: { color: "#ef4444" }, children: "*" })
                          ]
                        }
                      ),
                      (0, import_jsx_runtime25.jsx)(
                        "div",
                        {
                          style: {
                            display: "grid",
                            gridTemplateColumns: "repeat(2, 1fr)",
                            gap: "8px"
                          },
                          children: ROLLUP_FUNCTIONS.map((func) => (0, import_jsx_runtime25.jsxs)(
                            "button",
                            {
                              onClick: () => handleRollupFunctionSelect(func),
                              style: {
                                display: "flex",
                                flexDirection: "column",
                                alignItems: "flex-start",
                                gap: "4px",
                                padding: "12px",
                                border: expression === func.value ? "2px solid #3b82f6" : "1px solid #e5e7eb",
                                borderRadius: "8px",
                                backgroundColor: expression === func.value ? "#f0f9ff" : "white",
                                cursor: "pointer",
                                transition: "all 0.2s",
                                textAlign: "left"
                              },
                              onMouseEnter: (e2) => {
                                if (expression !== func.value) {
                                  e2.currentTarget.style.borderColor = "#3b82f6";
                                  e2.currentTarget.style.backgroundColor = "#f8fafc";
                                }
                              },
                              onMouseLeave: (e2) => {
                                if (expression !== func.value) {
                                  e2.currentTarget.style.borderColor = "#e5e7eb";
                                  e2.currentTarget.style.backgroundColor = "white";
                                }
                              },
                              children: [
                                (0, import_jsx_runtime25.jsx)(
                                  "div",
                                  {
                                    style: {
                                      fontSize: "14px",
                                      fontWeight: 500,
                                      color: "#111827"
                                    },
                                    children: func.label
                                  }
                                ),
                                (0, import_jsx_runtime25.jsx)(
                                  "div",
                                  {
                                    style: {
                                      fontSize: "12px",
                                      color: "#6b7280"
                                    },
                                    children: func.description
                                  }
                                )
                              ]
                            },
                            func.value
                          ))
                        }
                      )
                    ] }),
                    (0, import_jsx_runtime25.jsxs)("div", { children: [
                      (0, import_jsx_runtime25.jsx)(
                        "label",
                        {
                          style: {
                            display: "block",
                            marginBottom: "8px",
                            fontSize: "14px",
                            fontWeight: 500,
                            color: "#374151"
                          },
                          children: "数字格式"
                        }
                      ),
                      (0, import_jsx_runtime25.jsxs)(
                        "div",
                        {
                          style: { display: "flex", gap: "12px", alignItems: "center" },
                          children: [
                            (0, import_jsx_runtime25.jsxs)(
                              "select",
                              {
                                value: formatting.type || "decimal",
                                onChange: (e2) => setFormatting({ ...formatting, type: e2.target.value }),
                                style: {
                                  padding: "8px 12px",
                                  border: "1px solid #d1d5db",
                                  borderRadius: "6px",
                                  fontSize: "14px",
                                  outline: "none"
                                },
                                children: [
                                  (0, import_jsx_runtime25.jsx)("option", { value: "decimal", children: "小数" }),
                                  (0, import_jsx_runtime25.jsx)("option", { value: "percent", children: "百分比" }),
                                  (0, import_jsx_runtime25.jsx)("option", { value: "currency", children: "货币" })
                                ]
                              }
                            ),
                            (0, import_jsx_runtime25.jsx)(
                              "input",
                              {
                                type: "number",
                                min: "0",
                                max: "10",
                                value: formatting.precision || 2,
                                onChange: (e2) => setFormatting({
                                  ...formatting,
                                  precision: parseInt(e2.target.value)
                                }),
                                placeholder: "精度",
                                style: {
                                  width: "80px",
                                  padding: "8px 12px",
                                  border: "1px solid #d1d5db",
                                  borderRadius: "6px",
                                  fontSize: "14px",
                                  outline: "none"
                                }
                              }
                            ),
                            (0, import_jsx_runtime25.jsx)("span", { style: { fontSize: "12px", color: "#6b7280" }, children: "位小数" })
                          ]
                        }
                      )
                    ] })
                  ]
                }
              )
            )
          }
        ),
        (0, import_jsx_runtime25.jsxs)(
          "div",
          {
            style: {
              padding: "16px 24px 20px",
              borderTop: "1px solid #f3f4f6",
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center"
            },
            children: [
              (0, import_jsx_runtime25.jsx)(
                "button",
                {
                  onClick: handleCancel,
                  style: {
                    padding: "8px 16px",
                    border: "1px solid #d1d5db",
                    borderRadius: "6px",
                    background: "white",
                    color: "#374151",
                    fontSize: "14px",
                    cursor: "pointer",
                    transition: "all 0.2s"
                  },
                  onMouseEnter: (e2) => {
                    e2.currentTarget.style.backgroundColor = "#f9fafb";
                  },
                  onMouseLeave: (e2) => {
                    e2.currentTarget.style.backgroundColor = "white";
                  },
                  children: "取消"
                }
              ),
              (0, import_jsx_runtime25.jsx)(
                "button",
                {
                  onClick: handleConfirm,
                  disabled: !expression.trim(),
                  style: {
                    padding: "8px 16px",
                    border: "none",
                    borderRadius: "6px",
                    background: expression.trim() ? "#3b82f6" : "#d1d5db",
                    color: expression.trim() ? "white" : "#9ca3af",
                    fontSize: "14px",
                    cursor: expression.trim() ? "pointer" : "not-allowed",
                    transition: "all 0.2s"
                  },
                  onMouseEnter: (e2) => {
                    if (expression.trim()) {
                      e2.currentTarget.style.backgroundColor = "#2563eb";
                    }
                  },
                  onMouseLeave: (e2) => {
                    if (expression.trim()) {
                      e2.currentTarget.style.backgroundColor = "#3b82f6";
                    }
                  },
                  children: "确认"
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var VirtualFieldConfig = (0, import_react183.forwardRef)(VirtualFieldConfigBase);

// ../../packages/aitable/src/grid/components/field/FieldTypeSelectModal.tsx
var import_jsx_runtime26 = __toESM(require_jsx_runtime(), 1);
var BASE_FIELD_TYPES = [
  {
    type: "singleLineText",
    name: "单行文本",
    icon: "📝",
    description: "用于输入短文本内容"
  },
  {
    type: "longText",
    name: "长文本",
    icon: "📄",
    description: "用于输入多行文本内容"
  },
  { type: "number", name: "数字", icon: "🔢", description: "用于输入数值" },
  {
    type: "singleSelect",
    name: "单选",
    icon: "🔘",
    description: "从预设选项中选择一个"
  },
  {
    type: "multipleSelect",
    name: "多选",
    icon: "☑️",
    description: "从预设选项中选择多个"
  },
  { type: "date", name: "日期", icon: "📅", description: "选择日期" },
  { type: "checkbox", name: "复选框", icon: "☑️", description: "是/否选择" },
  { type: "user", name: "用户", icon: "👤", description: "选择系统用户" },
  { type: "rating", name: "评分", icon: "⭐", description: "星级评分" }
];
var ADVANCED_FIELD_TYPES = [
  { type: "attachment", name: "附件", icon: "📎", description: "上传文件附件" },
  { type: "link", name: "关联", icon: "🔗", description: "关联其他表格记录" },
  {
    type: "formula",
    name: "公式",
    icon: "🧮",
    description: "基于其他字段计算得出"
  },
  {
    type: "rollup",
    name: "汇总",
    icon: "📊",
    description: "汇总关联字段的数据"
  },
  {
    type: "autoNumber",
    name: "自动编号",
    icon: "#️⃣",
    description: "自动生成递增数字"
  }
];
var SYSTEM_FIELD_TYPES = [
  {
    type: "createdTime",
    name: "创建时间",
    icon: "🕒",
    description: "记录创建时间"
  },
  {
    type: "lastModifiedTime",
    name: "修改时间",
    icon: "🕐",
    description: "记录最后修改时间"
  },
  { type: "createdBy", name: "创建者", icon: "👤", description: "记录创建者" },
  {
    type: "lastModifiedBy",
    name: "修改者",
    icon: "👤",
    description: "记录最后修改者"
  }
];
var FieldTypeSelectModalBase = ({ onConfirm, onCancel }, ref) => {
  const [visible, setVisible] = (0, import_react184.useState)(false);
  const [position, setPosition] = (0, import_react184.useState)({ x: 0, y: 0 });
  const [adjustedPosition, setAdjustedPosition] = (0, import_react184.useState)({ x: 0, y: 0 });
  const [mode, setMode] = (0, import_react184.useState)("create");
  const [selectedType, setSelectedType] = (0, import_react184.useState)("singleLineText");
  const [fieldName, setFieldName] = (0, import_react184.useState)("");
  const [isCreating, setIsCreating] = (0, import_react184.useState)(false);
  const [isConfiguring, setIsConfiguring] = (0, import_react184.useState)(false);
  const [fieldOptions, setFieldOptions] = (0, import_react184.useState)();
  const modalRef = (0, import_react184.useRef)(null);
  const virtualFieldConfigRef = (0, import_react184.useRef)(null);
  const [pendingVirtual, setPendingVirtual] = (0, import_react184.useState)(null);
  const [numberFormatType, setNumberFormatType] = (0, import_react184.useState)("decimal");
  const [numberPrecision, setNumberPrecision] = (0, import_react184.useState)(2);
  const [numberDefaultValue, setNumberDefaultValue] = (0, import_react184.useState)("");
  const [numberDisplay, setNumberDisplay] = (0, import_react184.useState)(
    "number"
  );
  (0, import_react184.useImperativeHandle)(ref, () => ({
    show: (pos = { x: 100, y: 100 }, modalMode = "create", initialData) => {
      setPosition(pos);
      setMode(modalMode);
      setSelectedType(initialData?.type || "singleLineText");
      setFieldName(initialData?.name || "");
      setFieldOptions(initialData?.options);
      setIsCreating(false);
      setIsConfiguring(false);
      setNumberFormatType("decimal");
      setNumberPrecision(2);
      setNumberDefaultValue("");
      setNumberDisplay("number");
      setVisible(true);
      setAdjustedPosition(pos);
    },
    hide: () => {
      setVisible(false);
      setIsCreating(false);
      setIsConfiguring(false);
    }
  }));
  (0, import_react184.useEffect)(() => {
    if (!visible) {
      return;
    }
    const handleClickOutside = (e2) => {
      if (modalRef.current && !modalRef.current.contains(e2.target)) {
        setVisible(false);
        onCancel?.();
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setVisible(false);
        onCancel?.();
      }
    };
    const timer = setTimeout(() => {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }, 0);
    return () => {
      clearTimeout(timer);
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [visible, onCancel]);
  (0, import_react184.useEffect)(() => {
    if (!visible) {
      return;
    }
    const el = modalRef.current;
    if (!el) {
      return;
    }
    const id = window.requestAnimationFrame(() => {
      const rect = el.getBoundingClientRect();
      const vw = window.innerWidth;
      const vh = window.innerHeight;
      const margin = 12;
      let x2 = position.x;
      let y = position.y;
      if (x2 + rect.width > vw - margin) {
        x2 = Math.max(margin, vw - rect.width - margin);
      }
      if (x2 < margin) {
        x2 = margin;
      }
      if (y + rect.height > vh - margin) {
        y = Math.max(margin, vh - rect.height - margin);
      }
      if (y < margin) {
        y = margin;
      }
      x2 = Math.round(x2) + 2;
      y = Math.round(y);
      setAdjustedPosition({ x: x2, y });
    });
    return () => window.cancelAnimationFrame(id);
  }, [visible, position]);
  const handleTypeSelect = (type) => {
    setSelectedType(type);
    if (type === "formula" || type === "rollup") {
      setIsConfiguring(true);
      setPendingVirtual({ type, options: fieldOptions });
    } else {
      setIsCreating(true);
    }
  };
  const handleBack = () => {
    setIsCreating(false);
    setIsConfiguring(false);
  };
  const handleVirtualFieldConfigConfirm = (options) => {
    setFieldOptions(options);
    setIsConfiguring(false);
    setIsCreating(true);
  };
  const handleVirtualFieldConfigCancel = () => {
    setIsConfiguring(false);
    setIsCreating(false);
  };
  (0, import_react184.useEffect)(() => {
    if (!isConfiguring || !pendingVirtual) {
      return;
    }
    const timer = window.requestAnimationFrame(() => {
      virtualFieldConfigRef.current?.show(
        pendingVirtual.type,
        pendingVirtual.options
      );
    });
    return () => window.cancelAnimationFrame(timer);
  }, [isConfiguring, pendingVirtual]);
  const handleConfirm = () => {
    if (fieldName.trim()) {
      let options = fieldOptions;
      if (selectedType === "number") {
        options = {
          formatting: { type: numberFormatType, precision: numberPrecision },
          defaultValue: numberDefaultValue !== "" ? Number(numberDefaultValue) : void 0,
          display: numberDisplay
        };
      }
      onConfirm?.({ type: selectedType, name: fieldName.trim(), options });
      setVisible(false);
    }
  };
  const handleCancel = () => {
    setVisible(false);
    onCancel?.();
  };
  const getSelectedTypeInfo = () => {
    const allTypes = [
      ...BASE_FIELD_TYPES,
      ...ADVANCED_FIELD_TYPES,
      ...SYSTEM_FIELD_TYPES
    ];
    return allTypes.find((t) => t.type === selectedType) || BASE_FIELD_TYPES[0];
  };
  if (!visible) {
    return null;
  }
  if (isConfiguring) {
    return (0, import_jsx_runtime26.jsx)(
      VirtualFieldConfig,
      {
        ref: virtualFieldConfigRef,
        onConfirm: handleVirtualFieldConfigConfirm,
        onCancel: handleVirtualFieldConfigCancel
      }
    );
  }
  const selectedTypeInfo = getSelectedTypeInfo();
  return (0, import_jsx_runtime26.jsxs)(
    "div",
    {
      ref: modalRef,
      style: {
        position: "fixed",
        left: adjustedPosition.x,
        top: adjustedPosition.y,
        backgroundColor: "white",
        border: "2px solid #e5e7eb",
        borderRadius: "12px",
        boxShadow: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
        padding: "0",
        minWidth: "400px",
        maxWidth: "500px",
        width: "max-content",
        zIndex: 1e4
      },
      onClick: (e2) => e2.stopPropagation(),
      children: [
        (0, import_jsx_runtime26.jsx)(
          "div",
          {
            style: {
              padding: "20px 24px 16px",
              borderBottom: "1px solid #f3f4f6",
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between"
            },
            children: (0, import_jsx_runtime26.jsxs)("div", { children: [
              (0, import_jsx_runtime26.jsxs)(
                "h3",
                {
                  style: {
                    margin: 0,
                    fontSize: "18px",
                    fontWeight: 600,
                    color: "#111827",
                    display: "flex",
                    alignItems: "center",
                    gap: "8px"
                  },
                  children: [
                    isCreating && (0, import_jsx_runtime26.jsx)(
                      "button",
                      {
                        onClick: handleBack,
                        style: {
                          background: "none",
                          border: "none",
                          cursor: "pointer",
                          fontSize: "16px",
                          color: "#6b7280",
                          padding: "4px",
                          display: "flex",
                          alignItems: "center"
                        },
                        children: "←"
                      }
                    ),
                    mode === "create" ? "添加字段" : "编辑字段"
                  ]
                }
              ),
              !isCreating && (0, import_jsx_runtime26.jsx)(
                "p",
                {
                  style: {
                    margin: "4px 0 0",
                    fontSize: "14px",
                    color: "#6b7280"
                  },
                  children: "选择字段类型"
                }
              )
            ] })
          }
        ),
        (0, import_jsx_runtime26.jsx)("div", { style: { padding: "16px 24px" }, children: !isCreating ? (
          // 字段类型选择
          (0, import_jsx_runtime26.jsxs)("div", { children: [
            (0, import_jsx_runtime26.jsxs)("div", { style: { marginBottom: "20px" }, children: [
              (0, import_jsx_runtime26.jsx)(
                "h4",
                {
                  style: {
                    margin: "0 0 12px",
                    fontSize: "14px",
                    fontWeight: 600,
                    color: "#374151"
                  },
                  children: "基础字段"
                }
              ),
              (0, import_jsx_runtime26.jsx)(
                "div",
                {
                  style: {
                    display: "grid",
                    gridTemplateColumns: "repeat(2, 1fr)",
                    gap: "8px"
                  },
                  children: BASE_FIELD_TYPES.map((fieldType) => (0, import_jsx_runtime26.jsxs)(
                    "button",
                    {
                      onClick: () => handleTypeSelect(fieldType.type),
                      style: {
                        display: "flex",
                        alignItems: "center",
                        gap: "12px",
                        padding: "12px",
                        border: "1px solid #e5e7eb",
                        borderRadius: "8px",
                        backgroundColor: "white",
                        cursor: "pointer",
                        transition: "all 0.2s",
                        textAlign: "left"
                      },
                      onMouseEnter: (e2) => {
                        e2.currentTarget.style.borderColor = "#3b82f6";
                        e2.currentTarget.style.backgroundColor = "#f8fafc";
                      },
                      onMouseLeave: (e2) => {
                        e2.currentTarget.style.borderColor = "#e5e7eb";
                        e2.currentTarget.style.backgroundColor = "white";
                      },
                      children: [
                        (0, import_jsx_runtime26.jsx)("span", { style: { fontSize: "20px" }, children: fieldType.icon }),
                        (0, import_jsx_runtime26.jsxs)("div", { children: [
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "14px",
                                fontWeight: 500,
                                color: "#111827",
                                marginBottom: "2px"
                              },
                              children: fieldType.name
                            }
                          ),
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "12px",
                                color: "#6b7280"
                              },
                              children: fieldType.description
                            }
                          )
                        ] })
                      ]
                    },
                    fieldType.type
                  ))
                }
              )
            ] }),
            (0, import_jsx_runtime26.jsxs)("div", { style: { marginBottom: "20px" }, children: [
              (0, import_jsx_runtime26.jsx)(
                "h4",
                {
                  style: {
                    margin: "0 0 12px",
                    fontSize: "14px",
                    fontWeight: 600,
                    color: "#374151"
                  },
                  children: "高级字段"
                }
              ),
              (0, import_jsx_runtime26.jsx)(
                "div",
                {
                  style: {
                    display: "grid",
                    gridTemplateColumns: "repeat(2, 1fr)",
                    gap: "8px"
                  },
                  children: ADVANCED_FIELD_TYPES.map((fieldType) => (0, import_jsx_runtime26.jsxs)(
                    "button",
                    {
                      onClick: () => handleTypeSelect(fieldType.type),
                      style: {
                        display: "flex",
                        alignItems: "center",
                        gap: "12px",
                        padding: "12px",
                        border: "1px solid #e5e7eb",
                        borderRadius: "8px",
                        backgroundColor: "white",
                        cursor: "pointer",
                        transition: "all 0.2s",
                        textAlign: "left"
                      },
                      onMouseEnter: (e2) => {
                        e2.currentTarget.style.borderColor = "#3b82f6";
                        e2.currentTarget.style.backgroundColor = "#f8fafc";
                      },
                      onMouseLeave: (e2) => {
                        e2.currentTarget.style.borderColor = "#e5e7eb";
                        e2.currentTarget.style.backgroundColor = "white";
                      },
                      children: [
                        (0, import_jsx_runtime26.jsx)("span", { style: { fontSize: "20px" }, children: fieldType.icon }),
                        (0, import_jsx_runtime26.jsxs)("div", { children: [
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "14px",
                                fontWeight: 500,
                                color: "#111827",
                                marginBottom: "2px"
                              },
                              children: fieldType.name
                            }
                          ),
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "12px",
                                color: "#6b7280"
                              },
                              children: fieldType.description
                            }
                          )
                        ] })
                      ]
                    },
                    fieldType.type
                  ))
                }
              )
            ] }),
            (0, import_jsx_runtime26.jsxs)("div", { children: [
              (0, import_jsx_runtime26.jsx)(
                "h4",
                {
                  style: {
                    margin: "0 0 12px",
                    fontSize: "14px",
                    fontWeight: 600,
                    color: "#374151"
                  },
                  children: "系统字段"
                }
              ),
              (0, import_jsx_runtime26.jsx)(
                "div",
                {
                  style: {
                    display: "grid",
                    gridTemplateColumns: "repeat(2, 1fr)",
                    gap: "8px"
                  },
                  children: SYSTEM_FIELD_TYPES.map((fieldType) => (0, import_jsx_runtime26.jsxs)(
                    "button",
                    {
                      onClick: () => handleTypeSelect(fieldType.type),
                      style: {
                        display: "flex",
                        alignItems: "center",
                        gap: "12px",
                        padding: "12px",
                        border: "1px solid #e5e7eb",
                        borderRadius: "8px",
                        backgroundColor: "white",
                        cursor: "pointer",
                        transition: "all 0.2s",
                        textAlign: "left"
                      },
                      onMouseEnter: (e2) => {
                        e2.currentTarget.style.borderColor = "#3b82f6";
                        e2.currentTarget.style.backgroundColor = "#f8fafc";
                      },
                      onMouseLeave: (e2) => {
                        e2.currentTarget.style.borderColor = "#e5e7eb";
                        e2.currentTarget.style.backgroundColor = "white";
                      },
                      children: [
                        (0, import_jsx_runtime26.jsx)("span", { style: { fontSize: "20px" }, children: fieldType.icon }),
                        (0, import_jsx_runtime26.jsxs)("div", { children: [
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "14px",
                                fontWeight: 500,
                                color: "#111827",
                                marginBottom: "2px"
                              },
                              children: fieldType.name
                            }
                          ),
                          (0, import_jsx_runtime26.jsx)(
                            "div",
                            {
                              style: {
                                fontSize: "12px",
                                color: "#6b7280"
                              },
                              children: fieldType.description
                            }
                          )
                        ] })
                      ]
                    },
                    fieldType.type
                  ))
                }
              )
            ] })
          ] })
        ) : (
          // 字段名称输入
          (0, import_jsx_runtime26.jsxs)("div", { children: [
            (0, import_jsx_runtime26.jsxs)("div", { style: { marginBottom: "16px" }, children: [
              (0, import_jsx_runtime26.jsx)(
                "label",
                {
                  style: {
                    display: "block",
                    marginBottom: "8px",
                    fontSize: "14px",
                    fontWeight: 500,
                    color: "#374151"
                  },
                  children: "字段名称"
                }
              ),
              (0, import_jsx_runtime26.jsx)(
                "input",
                {
                  type: "text",
                  value: fieldName,
                  onChange: (e2) => setFieldName(e2.target.value),
                  placeholder: "请输入字段名称",
                  autoFocus: true,
                  style: {
                    width: "100%",
                    padding: "12px",
                    border: "1px solid #d1d5db",
                    borderRadius: "8px",
                    fontSize: "14px",
                    outline: "none",
                    transition: "border-color 0.2s"
                  },
                  onFocus: (e2) => {
                    e2.currentTarget.style.borderColor = "#3b82f6";
                  },
                  onBlur: (e2) => {
                    e2.currentTarget.style.borderColor = "#d1d5db";
                  }
                }
              )
            ] }),
            (0, import_jsx_runtime26.jsxs)(
              "div",
              {
                style: {
                  padding: "12px",
                  backgroundColor: "#f9fafb",
                  borderRadius: "8px",
                  border: "1px solid #e5e7eb",
                  marginBottom: "12px"
                },
                children: [
                  (0, import_jsx_runtime26.jsxs)(
                    "div",
                    {
                      style: {
                        fontSize: "14px",
                        fontWeight: 500,
                        color: "#374151",
                        marginBottom: "4px",
                        display: "flex",
                        alignItems: "center",
                        gap: "8px"
                      },
                      children: [
                        (0, import_jsx_runtime26.jsx)("span", { style: { fontSize: "16px" }, children: selectedTypeInfo.icon }),
                        selectedTypeInfo.name
                      ]
                    }
                  ),
                  (0, import_jsx_runtime26.jsx)(
                    "div",
                    {
                      style: {
                        fontSize: "12px",
                        color: "#6b7280",
                        marginBottom: "4px"
                      },
                      children: selectedTypeInfo.description
                    }
                  ),
                  fieldOptions && (0, import_jsx_runtime26.jsxs)(
                    "div",
                    {
                      style: {
                        marginTop: "8px",
                        padding: "8px",
                        backgroundColor: "#e0f2fe",
                        borderRadius: "4px",
                        border: "1px solid #0ea5e9"
                      },
                      children: [
                        (0, import_jsx_runtime26.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "12px",
                              fontWeight: 500,
                              color: "#0c4a6e",
                              marginBottom: "2px"
                            },
                            children: "配置信息"
                          }
                        ),
                        (0, import_jsx_runtime26.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "11px",
                              color: "#075985",
                              fontFamily: "monospace",
                              wordBreak: "break-all"
                            },
                            children: fieldOptions.expression
                          }
                        )
                      ]
                    }
                  )
                ]
              }
            ),
            selectedType === "number" && (0, import_jsx_runtime26.jsxs)(
              "div",
              {
                style: {
                  display: "flex",
                  flexDirection: "column",
                  gap: "12px"
                },
                children: [
                  (0, import_jsx_runtime26.jsxs)("div", { children: [
                    (0, import_jsx_runtime26.jsx)(
                      "label",
                      {
                        style: {
                          display: "block",
                          marginBottom: "6px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: "#374151"
                        },
                        children: "格式类型"
                      }
                    ),
                    (0, import_jsx_runtime26.jsxs)(
                      "select",
                      {
                        value: numberFormatType,
                        onChange: (e2) => setNumberFormatType(e2.target.value),
                        style: {
                          padding: "8px 12px",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          fontSize: "14px"
                        },
                        children: [
                          (0, import_jsx_runtime26.jsx)("option", { value: "decimal", children: "小数 (1.23)" }),
                          (0, import_jsx_runtime26.jsx)("option", { value: "percent", children: "百分比 (12%)" }),
                          (0, import_jsx_runtime26.jsx)("option", { value: "currency", children: "货币 (¥1.23)" })
                        ]
                      }
                    )
                  ] }),
                  (0, import_jsx_runtime26.jsxs)("div", { children: [
                    (0, import_jsx_runtime26.jsx)(
                      "label",
                      {
                        style: {
                          display: "block",
                          marginBottom: "6px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: "#374151"
                        },
                        children: "精度"
                      }
                    ),
                    (0, import_jsx_runtime26.jsx)(
                      "input",
                      {
                        type: "number",
                        min: 0,
                        max: 10,
                        value: numberPrecision,
                        onChange: (e2) => setNumberPrecision(parseInt(e2.target.value) || 0),
                        style: {
                          width: "120px",
                          padding: "8px 12px",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          fontSize: "14px"
                        }
                      }
                    )
                  ] }),
                  (0, import_jsx_runtime26.jsxs)("div", { children: [
                    (0, import_jsx_runtime26.jsx)(
                      "label",
                      {
                        style: {
                          display: "block",
                          marginBottom: "6px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: "#374151"
                        },
                        children: "默认值"
                      }
                    ),
                    (0, import_jsx_runtime26.jsx)(
                      "input",
                      {
                        type: "number",
                        value: numberDefaultValue,
                        onChange: (e2) => setNumberDefaultValue(e2.target.value),
                        placeholder: "请输入默认值",
                        style: {
                          width: "100%",
                          padding: "8px 12px",
                          border: "1px solid #d1d5db",
                          borderRadius: "6px",
                          fontSize: "14px"
                        }
                      }
                    )
                  ] }),
                  (0, import_jsx_runtime26.jsxs)("div", { children: [
                    (0, import_jsx_runtime26.jsx)(
                      "label",
                      {
                        style: {
                          display: "block",
                          marginBottom: "6px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: "#374151"
                        },
                        children: "显示样式"
                      }
                    ),
                    (0, import_jsx_runtime26.jsx)("div", { style: { display: "flex", gap: "8px" }, children: [
                      { id: "number", name: "数字" },
                      { id: "ring", name: "环形" },
                      { id: "bar", name: "条形" }
                    ].map((opt) => (0, import_jsx_runtime26.jsx)(
                      "button",
                      {
                        onClick: () => setNumberDisplay(opt.id),
                        style: {
                          padding: "8px 12px",
                          borderRadius: "6px",
                          border: numberDisplay === opt.id ? "2px solid #3b82f6" : "1px solid #d1d5db",
                          background: numberDisplay === opt.id ? "#eff6ff" : "white",
                          cursor: "pointer",
                          fontSize: "13px"
                        },
                        children: opt.name
                      },
                      opt.id
                    )) })
                  ] })
                ]
              }
            )
          ] })
        ) }),
        (0, import_jsx_runtime26.jsxs)(
          "div",
          {
            style: {
              padding: "16px 24px 20px",
              borderTop: "1px solid #f3f4f6",
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center"
            },
            children: [
              (0, import_jsx_runtime26.jsx)(
                "button",
                {
                  onClick: handleCancel,
                  style: {
                    padding: "8px 16px",
                    border: "1px solid #d1d5db",
                    borderRadius: "6px",
                    background: "white",
                    color: "#374151",
                    fontSize: "14px",
                    cursor: "pointer",
                    transition: "all 0.2s"
                  },
                  onMouseEnter: (e2) => {
                    e2.currentTarget.style.backgroundColor = "#f9fafb";
                  },
                  onMouseLeave: (e2) => {
                    e2.currentTarget.style.backgroundColor = "white";
                  },
                  children: "取消"
                }
              ),
              isCreating && (0, import_jsx_runtime26.jsx)(
                "button",
                {
                  onClick: handleConfirm,
                  disabled: !fieldName.trim(),
                  style: {
                    padding: "8px 16px",
                    border: "none",
                    borderRadius: "6px",
                    background: fieldName.trim() ? "#3b82f6" : "#d1d5db",
                    color: fieldName.trim() ? "white" : "#9ca3af",
                    fontSize: "14px",
                    cursor: fieldName.trim() ? "pointer" : "not-allowed",
                    transition: "all 0.2s"
                  },
                  onMouseEnter: (e2) => {
                    if (fieldName.trim()) {
                      e2.currentTarget.style.backgroundColor = "#2563eb";
                    }
                  },
                  onMouseLeave: (e2) => {
                    if (fieldName.trim()) {
                      e2.currentTarget.style.backgroundColor = "#3b82f6";
                    }
                  },
                  children: "确认"
                }
              )
            ]
          }
        )
      ]
    }
  );
};
var FieldTypeSelectModal = (0, import_react184.forwardRef)(FieldTypeSelectModalBase);

// ../../packages/aitable/src/grid/components/dialogs/DeleteConfirmDialog.tsx
var import_react185 = __toESM(require_react(), 1);
var import_jsx_runtime27 = __toESM(require_jsx_runtime(), 1);
var DeleteConfirmDialogBase = ({ onConfirm, onCancel }, ref) => {
  const [visible, setVisible] = (0, import_react185.useState)(false);
  const [deleteType, setDeleteType] = (0, import_react185.useState)("column");
  const [itemName, setItemName] = (0, import_react185.useState)("");
  const [itemIndex, setItemIndex] = (0, import_react185.useState)(-1);
  const modalRef = (0, import_react185.useRef)(null);
  (0, import_react185.useImperativeHandle)(ref, () => ({
    show: (type, name, index3) => {
      setDeleteType(type);
      setItemName(name);
      setItemIndex(index3);
      setVisible(true);
    },
    hide: () => {
      setVisible(false);
    }
  }));
  (0, import_react185.useEffect)(() => {
    if (!visible) {
      return;
    }
    const handleClickOutside = (e2) => {
      if (modalRef.current && !modalRef.current.contains(e2.target)) {
        setVisible(false);
        onCancel?.();
      }
    };
    const handleEscape = (e2) => {
      if (e2.key === "Escape") {
        setVisible(false);
        onCancel?.();
      }
    };
    const timer = setTimeout(() => {
      document.addEventListener("mousedown", handleClickOutside);
      document.addEventListener("keydown", handleEscape);
    }, 0);
    return () => {
      clearTimeout(timer);
      document.removeEventListener("mousedown", handleClickOutside);
      document.removeEventListener("keydown", handleEscape);
    };
  }, [visible, onCancel]);
  const handleConfirm = () => {
    onConfirm?.(deleteType, itemIndex);
    setVisible(false);
  };
  const handleCancel = () => {
    setVisible(false);
    onCancel?.();
  };
  if (!visible) {
    return null;
  }
  const typeLabel = deleteType === "column" ? "字段" : "记录";
  const typeIcon = deleteType === "column" ? "📋" : "📝";
  return (0, import_jsx_runtime27.jsx)(
    "div",
    {
      style: {
        position: "fixed",
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "rgba(0, 0, 0, 0.5)",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        zIndex: 10002
      },
      onClick: (e2) => {
        if (e2.target === e2.currentTarget) {
          handleCancel();
        }
      },
      children: (0, import_jsx_runtime27.jsxs)(
        "div",
        {
          ref: modalRef,
          style: {
            backgroundColor: "white",
            border: "2px solid #e5e7eb",
            borderRadius: "12px",
            boxShadow: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)",
            padding: "0",
            minWidth: "400px",
            maxWidth: "500px",
            width: "max-content",
            maxHeight: "80vh",
            overflow: "hidden"
          },
          onClick: (e2) => e2.stopPropagation(),
          children: [
            (0, import_jsx_runtime27.jsx)(
              "div",
              {
                style: {
                  padding: "24px 24px 16px",
                  borderBottom: "1px solid #f3f4f6"
                },
                children: (0, import_jsx_runtime27.jsxs)(
                  "div",
                  {
                    style: {
                      display: "flex",
                      alignItems: "center",
                      gap: "12px",
                      marginBottom: "8px"
                    },
                    children: [
                      (0, import_jsx_runtime27.jsx)(
                        "div",
                        {
                          style: {
                            width: "48px",
                            height: "48px",
                            borderRadius: "50%",
                            backgroundColor: "#fef2f2",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            fontSize: "24px"
                          },
                          children: "⚠️"
                        }
                      ),
                      (0, import_jsx_runtime27.jsxs)("div", { children: [
                        (0, import_jsx_runtime27.jsxs)(
                          "h3",
                          {
                            style: {
                              margin: 0,
                              fontSize: "18px",
                              fontWeight: 600,
                              color: "#111827"
                            },
                            children: [
                              "确认删除",
                              typeLabel
                            ]
                          }
                        ),
                        (0, import_jsx_runtime27.jsx)(
                          "p",
                          {
                            style: {
                              margin: "4px 0 0",
                              fontSize: "14px",
                              color: "#6b7280"
                            },
                            children: "此操作无法撤销"
                          }
                        )
                      ] })
                    ]
                  }
                )
              }
            ),
            (0, import_jsx_runtime27.jsxs)("div", { style: { padding: "20px 24px" }, children: [
              (0, import_jsx_runtime27.jsxs)(
                "div",
                {
                  style: {
                    padding: "16px",
                    backgroundColor: "#f9fafb",
                    borderRadius: "8px",
                    border: "1px solid #e5e7eb",
                    marginBottom: "16px"
                  },
                  children: [
                    (0, import_jsx_runtime27.jsxs)(
                      "div",
                      {
                        style: {
                          fontSize: "14px",
                          color: "#374151",
                          marginBottom: "8px",
                          display: "flex",
                          alignItems: "center",
                          gap: "8px"
                        },
                        children: [
                          (0, import_jsx_runtime27.jsx)("span", { style: { fontSize: "16px" }, children: typeIcon }),
                          (0, import_jsx_runtime27.jsxs)("strong", { children: [
                            "即将删除的",
                            typeLabel,
                            "："
                          ] })
                        ]
                      }
                    ),
                    (0, import_jsx_runtime27.jsx)(
                      "div",
                      {
                        style: {
                          fontSize: "16px",
                          fontWeight: 500,
                          color: "#111827",
                          fontFamily: deleteType === "column" ? "inherit" : "monospace",
                          wordBreak: "break-all"
                        },
                        children: itemName
                      }
                    )
                  ]
                }
              ),
              (0, import_jsx_runtime27.jsx)(
                "div",
                {
                  style: {
                    padding: "12px",
                    backgroundColor: "#fef3c7",
                    borderRadius: "6px",
                    border: "1px solid #f59e0b"
                  },
                  children: (0, import_jsx_runtime27.jsxs)(
                    "div",
                    {
                      style: {
                        fontSize: "14px",
                        color: "#92400e",
                        display: "flex",
                        alignItems: "flex-start",
                        gap: "8px"
                      },
                      children: [
                        (0, import_jsx_runtime27.jsx)("span", { style: { fontSize: "16px", marginTop: "2px" }, children: "⚠️" }),
                        (0, import_jsx_runtime27.jsxs)("div", { children: [
                          (0, import_jsx_runtime27.jsxs)("div", { style: { fontWeight: 500, marginBottom: "4px" }, children: [
                            "删除",
                            typeLabel,
                            "会："
                          ] }),
                          (0, import_jsx_runtime27.jsx)(
                            "ul",
                            {
                              style: {
                                margin: 0,
                                paddingLeft: "16px",
                                fontSize: "13px",
                                lineHeight: "1.5"
                              },
                              children: deleteType === "column" ? (0, import_jsx_runtime27.jsxs)(import_jsx_runtime27.Fragment, { children: [
                                (0, import_jsx_runtime27.jsx)("li", { children: "永久删除此字段及其所有数据" }),
                                (0, import_jsx_runtime27.jsx)("li", { children: "删除所有依赖此字段的公式和关联" }),
                                (0, import_jsx_runtime27.jsx)("li", { children: "影响使用此字段的视图和筛选器" })
                              ] }) : (0, import_jsx_runtime27.jsxs)(import_jsx_runtime27.Fragment, { children: [
                                (0, import_jsx_runtime27.jsx)("li", { children: "永久删除此记录及其所有数据" }),
                                (0, import_jsx_runtime27.jsx)("li", { children: "删除所有与此记录相关的关联" }),
                                (0, import_jsx_runtime27.jsx)("li", { children: "此操作无法撤销" })
                              ] })
                            }
                          )
                        ] })
                      ]
                    }
                  )
                }
              )
            ] }),
            (0, import_jsx_runtime27.jsxs)(
              "div",
              {
                style: {
                  padding: "16px 24px 24px",
                  borderTop: "1px solid #f3f4f6",
                  display: "flex",
                  justifyContent: "flex-end",
                  gap: "12px"
                },
                children: [
                  (0, import_jsx_runtime27.jsx)(
                    "button",
                    {
                      onClick: handleCancel,
                      style: {
                        padding: "10px 20px",
                        border: "1px solid #d1d5db",
                        borderRadius: "6px",
                        background: "white",
                        color: "#374151",
                        fontSize: "14px",
                        fontWeight: 500,
                        cursor: "pointer",
                        transition: "all 0.2s"
                      },
                      onMouseEnter: (e2) => {
                        e2.currentTarget.style.backgroundColor = "#f9fafb";
                        e2.currentTarget.style.borderColor = "#9ca3af";
                      },
                      onMouseLeave: (e2) => {
                        e2.currentTarget.style.backgroundColor = "white";
                        e2.currentTarget.style.borderColor = "#d1d5db";
                      },
                      children: "取消"
                    }
                  ),
                  (0, import_jsx_runtime27.jsx)(
                    "button",
                    {
                      onClick: handleConfirm,
                      style: {
                        padding: "10px 20px",
                        border: "none",
                        borderRadius: "6px",
                        background: "#dc2626",
                        color: "white",
                        fontSize: "14px",
                        fontWeight: 500,
                        cursor: "pointer",
                        transition: "all 0.2s"
                      },
                      onMouseEnter: (e2) => {
                        e2.currentTarget.style.backgroundColor = "#b91c1c";
                      },
                      onMouseLeave: (e2) => {
                        e2.currentTarget.style.backgroundColor = "#dc2626";
                      },
                      children: "确认删除"
                    }
                  )
                ]
              }
            )
          ]
        }
      )
    }
  );
};
var DeleteConfirmDialog = (0, import_react185.forwardRef)(DeleteConfirmDialogBase);

// ../../packages/aitable/src/components/field-config/FieldManagementProvider.tsx
var import_react189 = __toESM(require_react(), 1);

// ../../packages/aitable/src/components/field-config/EnhancedEditFieldDialog.tsx
var import_react187 = __toESM(require_react(), 1);

// ../../packages/aitable/src/context/field/FieldContext.tsx
var import_react186 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/query-core/build/modern/subscribable.js
var Subscribable = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set();
    this.subscribe = this.subscribe.bind(this);
  }
  subscribe(listener) {
    this.listeners.add(listener);
    this.onSubscribe();
    return () => {
      this.listeners.delete(listener);
      this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js
var defaultTimeoutProvider = {
  // We need the wrapper function syntax below instead of direct references to
  // global setTimeout etc.
  //
  // BAD: `setTimeout: setTimeout`
  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`
  //
  // If we use direct references here, then anything that wants to spy on or
  // replace the global setTimeout (like tests) won't work since we'll already
  // have a hard reference to the original implementation at the time when this
  // file was imported.
  setTimeout: (callback, delay2) => setTimeout(callback, delay2),
  clearTimeout: (timeoutId) => clearTimeout(timeoutId),
  setInterval: (callback, delay2) => setInterval(callback, delay2),
  clearInterval: (intervalId) => clearInterval(intervalId)
};
var TimeoutManager = class {
  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete
  // type at app boot; and if we leave that type, then any new timer provider
  // would need to support ReturnType<typeof setTimeout>, which is infeasible.
  //
  // We settle for type safety for the TimeoutProvider type, and accept that
  // this class is unsafe internally to allow for extension.
  #provider = defaultTimeoutProvider;
  #providerCalled = false;
  setTimeoutProvider(provider) {
    if (true) {
      if (this.#providerCalled && provider !== this.#provider) {
        console.error(
          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,
          { previous: this.#provider, provider }
        );
      }
    }
    this.#provider = provider;
    if (true) {
      this.#providerCalled = false;
    }
  }
  setTimeout(callback, delay2) {
    if (true) {
      this.#providerCalled = true;
    }
    return this.#provider.setTimeout(callback, delay2);
  }
  clearTimeout(timeoutId) {
    this.#provider.clearTimeout(timeoutId);
  }
  setInterval(callback, delay2) {
    if (true) {
      this.#providerCalled = true;
    }
    return this.#provider.setInterval(callback, delay2);
  }
  clearInterval(intervalId) {
    this.#provider.clearInterval(intervalId);
  }
};
var timeoutManager = new TimeoutManager();
function systemSetTimeoutZero(callback) {
  setTimeout(callback, 0);
}

// ../../node_modules/@tanstack/query-core/build/modern/utils.js
var isServer = typeof window === "undefined" || "Deno" in globalThis;
function noop5() {
}
function functionalUpdate(updater, input) {
  return typeof updater === "function" ? updater(input) : updater;
}
function isValidTimeout(value) {
  return typeof value === "number" && value >= 0 && value !== Infinity;
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function resolveStaleTime(staleTime, query) {
  return typeof staleTime === "function" ? staleTime(query) : staleTime;
}
function resolveEnabled(enabled, query) {
  return typeof enabled === "function" ? enabled(query) : enabled;
}
function matchQuery(filters, query) {
  const {
    type = "all",
    exact,
    fetchStatus,
    predicate,
    queryKey,
    stale
  } = filters;
  if (queryKey) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {
        return false;
      }
    } else if (!partialMatchKey(query.queryKey, queryKey)) {
      return false;
    }
  }
  if (type !== "all") {
    const isActive = query.isActive();
    if (type === "active" && !isActive) {
      return false;
    }
    if (type === "inactive" && isActive) {
      return false;
    }
  }
  if (typeof stale === "boolean" && query.isStale() !== stale) {
    return false;
  }
  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {
    return false;
  }
  if (predicate && !predicate(query)) {
    return false;
  }
  return true;
}
function matchMutation(filters, mutation) {
  const { exact, status, predicate, mutationKey } = filters;
  if (mutationKey) {
    if (!mutation.options.mutationKey) {
      return false;
    }
    if (exact) {
      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {
        return false;
      }
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {
      return false;
    }
  }
  if (status && mutation.state.status !== status) {
    return false;
  }
  if (predicate && !predicate(mutation)) {
    return false;
  }
  return true;
}
function hashQueryKeyByOptions(queryKey, options) {
  const hashFn = options?.queryKeyHashFn || hashKey;
  return hashFn(queryKey);
}
function hashKey(queryKey) {
  return JSON.stringify(
    queryKey,
    (_2, val) => isPlainObject2(val) ? Object.keys(val).sort().reduce((result2, key) => {
      result2[key] = val[key];
      return result2;
    }, {}) : val
  );
}
function partialMatchKey(a, b2) {
  if (a === b2) {
    return true;
  }
  if (typeof a !== typeof b2) {
    return false;
  }
  if (a && b2 && typeof a === "object" && typeof b2 === "object") {
    return Object.keys(b2).every((key) => partialMatchKey(a[key], b2[key]));
  }
  return false;
}
var hasOwn2 = Object.prototype.hasOwnProperty;
function replaceEqualDeep(a, b2) {
  if (a === b2) {
    return a;
  }
  const array = isPlainArray(a) && isPlainArray(b2);
  if (!array && !(isPlainObject2(a) && isPlainObject2(b2))) return b2;
  const aItems = array ? a : Object.keys(a);
  const aSize = aItems.length;
  const bItems = array ? b2 : Object.keys(b2);
  const bSize = bItems.length;
  const copy = array ? new Array(bSize) : {};
  let equalItems = 0;
  for (let i = 0; i < bSize; i++) {
    const key = array ? i : bItems[i];
    const aItem = a[key];
    const bItem = b2[key];
    if (aItem === bItem) {
      copy[key] = aItem;
      if (array ? i < aSize : hasOwn2.call(a, key)) equalItems++;
      continue;
    }
    if (aItem === null || bItem === null || typeof aItem !== "object" || typeof bItem !== "object") {
      copy[key] = bItem;
      continue;
    }
    const v = replaceEqualDeep(aItem, bItem);
    copy[key] = v;
    if (v === aItem) equalItems++;
  }
  return aSize === bSize && equalItems === aSize ? a : copy;
}
function shallowEqualObjects(a, b2) {
  if (!b2 || Object.keys(a).length !== Object.keys(b2).length) {
    return false;
  }
  for (const key in a) {
    if (a[key] !== b2[key]) {
      return false;
    }
  }
  return true;
}
function isPlainArray(value) {
  return Array.isArray(value) && value.length === Object.keys(value).length;
}
function isPlainObject2(o) {
  if (!hasObjectPrototype(o)) {
    return false;
  }
  const ctor = o.constructor;
  if (ctor === void 0) {
    return true;
  }
  const prot = ctor.prototype;
  if (!hasObjectPrototype(prot)) {
    return false;
  }
  if (!prot.hasOwnProperty("isPrototypeOf")) {
    return false;
  }
  if (Object.getPrototypeOf(o) !== Object.prototype) {
    return false;
  }
  return true;
}
function hasObjectPrototype(o) {
  return Object.prototype.toString.call(o) === "[object Object]";
}
function sleep(timeout) {
  return new Promise((resolve) => {
    timeoutManager.setTimeout(resolve, timeout);
  });
}
function replaceData(prevData, data, options) {
  if (typeof options.structuralSharing === "function") {
    return options.structuralSharing(prevData, data);
  } else if (options.structuralSharing !== false) {
    if (true) {
      try {
        return replaceEqualDeep(prevData, data);
      } catch (error) {
        console.error(
          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`
        );
        throw error;
      }
    }
    return replaceEqualDeep(prevData, data);
  }
  return data;
}
function addToEnd(items, item, max3 = 0) {
  const newItems = [...items, item];
  return max3 && newItems.length > max3 ? newItems.slice(1) : newItems;
}
function addToStart(items, item, max3 = 0) {
  const newItems = [item, ...items];
  return max3 && newItems.length > max3 ? newItems.slice(0, -1) : newItems;
}
var skipToken = Symbol();
function ensureQueryFn(options, fetchOptions) {
  if (true) {
    if (options.queryFn === skipToken) {
      console.error(
        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`
      );
    }
  }
  if (!options.queryFn && fetchOptions?.initialPromise) {
    return () => fetchOptions.initialPromise;
  }
  if (!options.queryFn || options.queryFn === skipToken) {
    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));
  }
  return options.queryFn;
}
function shouldThrowError(throwOnError, params) {
  if (typeof throwOnError === "function") {
    return throwOnError(...params);
  }
  return !!throwOnError;
}

// ../../node_modules/@tanstack/query-core/build/modern/focusManager.js
var FocusManager = class extends Subscribable {
  #focused;
  #cleanup;
  #setup;
  constructor() {
    super();
    this.#setup = (onFocus) => {
      if (!isServer && window.addEventListener) {
        const listener = () => onFocus();
        window.addEventListener("visibilitychange", listener, false);
        return () => {
          window.removeEventListener("visibilitychange", listener);
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.#cleanup) {
      this.setEventListener(this.#setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#cleanup?.();
      this.#cleanup = void 0;
    }
  }
  setEventListener(setup) {
    this.#setup = setup;
    this.#cleanup?.();
    this.#cleanup = setup((focused) => {
      if (typeof focused === "boolean") {
        this.setFocused(focused);
      } else {
        this.onFocus();
      }
    });
  }
  setFocused(focused) {
    const changed = this.#focused !== focused;
    if (changed) {
      this.#focused = focused;
      this.onFocus();
    }
  }
  onFocus() {
    const isFocused = this.isFocused();
    this.listeners.forEach((listener) => {
      listener(isFocused);
    });
  }
  isFocused() {
    if (typeof this.#focused === "boolean") {
      return this.#focused;
    }
    return globalThis.document?.visibilityState !== "hidden";
  }
};
var focusManager = new FocusManager();

// ../../node_modules/@tanstack/query-core/build/modern/thenable.js
function pendingThenable() {
  let resolve;
  let reject2;
  const thenable = new Promise((_resolve, _reject) => {
    resolve = _resolve;
    reject2 = _reject;
  });
  thenable.status = "pending";
  thenable.catch(() => {
  });
  function finalize(data) {
    Object.assign(thenable, data);
    delete thenable.resolve;
    delete thenable.reject;
  }
  thenable.resolve = (value) => {
    finalize({
      status: "fulfilled",
      value
    });
    resolve(value);
  };
  thenable.reject = (reason) => {
    finalize({
      status: "rejected",
      reason
    });
    reject2(reason);
  };
  return thenable;
}

// ../../node_modules/@tanstack/query-core/build/modern/notifyManager.js
var defaultScheduler = systemSetTimeoutZero;
function createNotifyManager() {
  let queue = [];
  let transactions = 0;
  let notifyFn = (callback) => {
    callback();
  };
  let batchNotifyFn = (callback) => {
    callback();
  };
  let scheduleFn = defaultScheduler;
  const schedule = (callback) => {
    if (transactions) {
      queue.push(callback);
    } else {
      scheduleFn(() => {
        notifyFn(callback);
      });
    }
  };
  const flush = () => {
    const originalQueue = queue;
    queue = [];
    if (originalQueue.length) {
      scheduleFn(() => {
        batchNotifyFn(() => {
          originalQueue.forEach((callback) => {
            notifyFn(callback);
          });
        });
      });
    }
  };
  return {
    batch: (callback) => {
      let result2;
      transactions++;
      try {
        result2 = callback();
      } finally {
        transactions--;
        if (!transactions) {
          flush();
        }
      }
      return result2;
    },
    /**
     * All calls to the wrapped function will be batched.
     */
    batchCalls: (callback) => {
      return (...args) => {
        schedule(() => {
          callback(...args);
        });
      };
    },
    schedule,
    /**
     * Use this method to set a custom notify function.
     * This can be used to for example wrap notifications with `React.act` while running tests.
     */
    setNotifyFunction: (fn) => {
      notifyFn = fn;
    },
    /**
     * Use this method to set a custom function to batch notifications together into a single tick.
     * By default React Query will use the batch function provided by ReactDOM or React Native.
     */
    setBatchNotifyFunction: (fn) => {
      batchNotifyFn = fn;
    },
    setScheduler: (fn) => {
      scheduleFn = fn;
    }
  };
}
var notifyManager = createNotifyManager();

// ../../node_modules/@tanstack/query-core/build/modern/onlineManager.js
var OnlineManager = class extends Subscribable {
  #online = true;
  #cleanup;
  #setup;
  constructor() {
    super();
    this.#setup = (onOnline) => {
      if (!isServer && window.addEventListener) {
        const onlineListener = () => onOnline(true);
        const offlineListener = () => onOnline(false);
        window.addEventListener("online", onlineListener, false);
        window.addEventListener("offline", offlineListener, false);
        return () => {
          window.removeEventListener("online", onlineListener);
          window.removeEventListener("offline", offlineListener);
        };
      }
      return;
    };
  }
  onSubscribe() {
    if (!this.#cleanup) {
      this.setEventListener(this.#setup);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#cleanup?.();
      this.#cleanup = void 0;
    }
  }
  setEventListener(setup) {
    this.#setup = setup;
    this.#cleanup?.();
    this.#cleanup = setup(this.setOnline.bind(this));
  }
  setOnline(online) {
    const changed = this.#online !== online;
    if (changed) {
      this.#online = online;
      this.listeners.forEach((listener) => {
        listener(online);
      });
    }
  }
  isOnline() {
    return this.#online;
  }
};
var onlineManager = new OnlineManager();

// ../../node_modules/@tanstack/query-core/build/modern/retryer.js
function defaultRetryDelay(failureCount) {
  return Math.min(1e3 * 2 ** failureCount, 3e4);
}
function canFetch(networkMode) {
  return (networkMode ?? "online") === "online" ? onlineManager.isOnline() : true;
}
var CancelledError = class extends Error {
  constructor(options) {
    super("CancelledError");
    this.revert = options?.revert;
    this.silent = options?.silent;
  }
};
function createRetryer(config) {
  let isRetryCancelled = false;
  let failureCount = 0;
  let continueFn;
  const thenable = pendingThenable();
  const isResolved = () => thenable.status !== "pending";
  const cancel = (cancelOptions) => {
    if (!isResolved()) {
      const error = new CancelledError(cancelOptions);
      reject2(error);
      config.onCancel?.(error);
    }
  };
  const cancelRetry = () => {
    isRetryCancelled = true;
  };
  const continueRetry = () => {
    isRetryCancelled = false;
  };
  const canContinue = () => focusManager.isFocused() && (config.networkMode === "always" || onlineManager.isOnline()) && config.canRun();
  const canStart = () => canFetch(config.networkMode) && config.canRun();
  const resolve = (value) => {
    if (!isResolved()) {
      continueFn?.();
      thenable.resolve(value);
    }
  };
  const reject2 = (value) => {
    if (!isResolved()) {
      continueFn?.();
      thenable.reject(value);
    }
  };
  const pause = () => {
    return new Promise((continueResolve) => {
      continueFn = (value) => {
        if (isResolved() || canContinue()) {
          continueResolve(value);
        }
      };
      config.onPause?.();
    }).then(() => {
      continueFn = void 0;
      if (!isResolved()) {
        config.onContinue?.();
      }
    });
  };
  const run = () => {
    if (isResolved()) {
      return;
    }
    let promiseOrValue;
    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;
    try {
      promiseOrValue = initialPromise ?? config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    }
    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {
      if (isResolved()) {
        return;
      }
      const retry = config.retry ?? (isServer ? 0 : 3);
      const retryDelay = config.retryDelay ?? defaultRetryDelay;
      const delay2 = typeof retryDelay === "function" ? retryDelay(failureCount, error) : retryDelay;
      const shouldRetry = retry === true || typeof retry === "number" && failureCount < retry || typeof retry === "function" && retry(failureCount, error);
      if (isRetryCancelled || !shouldRetry) {
        reject2(error);
        return;
      }
      failureCount++;
      config.onFail?.(failureCount, error);
      sleep(delay2).then(() => {
        return canContinue() ? void 0 : pause();
      }).then(() => {
        if (isRetryCancelled) {
          reject2(error);
        } else {
          run();
        }
      });
    });
  };
  return {
    promise: thenable,
    status: () => thenable.status,
    cancel,
    continue: () => {
      continueFn?.();
      return thenable;
    },
    cancelRetry,
    continueRetry,
    canStart,
    start: () => {
      if (canStart()) {
        run();
      } else {
        pause().then(run);
      }
      return thenable;
    }
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/removable.js
var Removable = class {
  #gcTimeout;
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout();
    if (isValidTimeout(this.gcTime)) {
      this.#gcTimeout = timeoutManager.setTimeout(() => {
        this.optionalRemove();
      }, this.gcTime);
    }
  }
  updateGcTime(newGcTime) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    if (this.#gcTimeout) {
      timeoutManager.clearTimeout(this.#gcTimeout);
      this.#gcTimeout = void 0;
    }
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/query.js
var Query = class extends Removable {
  #initialState;
  #revertState;
  #cache;
  #client;
  #retryer;
  #defaultOptions;
  #abortSignalConsumed;
  constructor(config) {
    super();
    this.#abortSignalConsumed = false;
    this.#defaultOptions = config.defaultOptions;
    this.setOptions(config.options);
    this.observers = [];
    this.#client = config.client;
    this.#cache = this.#client.getQueryCache();
    this.queryKey = config.queryKey;
    this.queryHash = config.queryHash;
    this.#initialState = getDefaultState(this.options);
    this.state = config.state ?? this.#initialState;
    this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  get promise() {
    return this.#retryer?.promise;
  }
  setOptions(options) {
    this.options = { ...this.#defaultOptions, ...options };
    this.updateGcTime(this.options.gcTime);
    if (this.state && this.state.data === void 0) {
      const defaultState2 = getDefaultState(this.options);
      if (defaultState2.data !== void 0) {
        this.setData(defaultState2.data, {
          updatedAt: defaultState2.dataUpdatedAt,
          manual: true
        });
        this.#initialState = defaultState2;
      }
    }
  }
  optionalRemove() {
    if (!this.observers.length && this.state.fetchStatus === "idle") {
      this.#cache.remove(this);
    }
  }
  setData(newData, options) {
    const data = replaceData(this.state.data, newData, this.options);
    this.#dispatch({
      data,
      type: "success",
      dataUpdatedAt: options?.updatedAt,
      manual: options?.manual
    });
    return data;
  }
  setState(state, setStateOptions) {
    this.#dispatch({ type: "setState", state, setStateOptions });
  }
  cancel(options) {
    const promise = this.#retryer?.promise;
    this.#retryer?.cancel(options);
    return promise ? promise.then(noop5).catch(noop5) : Promise.resolve();
  }
  destroy() {
    super.destroy();
    this.cancel({ silent: true });
  }
  reset() {
    this.destroy();
    this.setState(this.#initialState);
  }
  isActive() {
    return this.observers.some(
      (observer) => resolveEnabled(observer.options.enabled, this) !== false
    );
  }
  isDisabled() {
    if (this.getObserversCount() > 0) {
      return !this.isActive();
    }
    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;
  }
  isStatic() {
    if (this.getObserversCount() > 0) {
      return this.observers.some(
        (observer) => resolveStaleTime(observer.options.staleTime, this) === "static"
      );
    }
    return false;
  }
  isStale() {
    if (this.getObserversCount() > 0) {
      return this.observers.some(
        (observer) => observer.getCurrentResult().isStale
      );
    }
    return this.state.data === void 0 || this.state.isInvalidated;
  }
  isStaleByTime(staleTime = 0) {
    if (this.state.data === void 0) {
      return true;
    }
    if (staleTime === "static") {
      return false;
    }
    if (this.state.isInvalidated) {
      return true;
    }
    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);
  }
  onFocus() {
    const observer = this.observers.find((x2) => x2.shouldFetchOnWindowFocus());
    observer?.refetch({ cancelRefetch: false });
    this.#retryer?.continue();
  }
  onOnline() {
    const observer = this.observers.find((x2) => x2.shouldFetchOnReconnect());
    observer?.refetch({ cancelRefetch: false });
    this.#retryer?.continue();
  }
  addObserver(observer) {
    if (!this.observers.includes(observer)) {
      this.observers.push(observer);
      this.clearGcTimeout();
      this.#cache.notify({ type: "observerAdded", query: this, observer });
    }
  }
  removeObserver(observer) {
    if (this.observers.includes(observer)) {
      this.observers = this.observers.filter((x2) => x2 !== observer);
      if (!this.observers.length) {
        if (this.#retryer) {
          if (this.#abortSignalConsumed) {
            this.#retryer.cancel({ revert: true });
          } else {
            this.#retryer.cancelRetry();
          }
        }
        this.scheduleGc();
      }
      this.#cache.notify({ type: "observerRemoved", query: this, observer });
    }
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    if (!this.state.isInvalidated) {
      this.#dispatch({ type: "invalidate" });
    }
  }
  async fetch(options, fetchOptions) {
    if (this.state.fetchStatus !== "idle" && // If the promise in the retyer is already rejected, we have to definitely
    // re-start the fetch; there is a chance that the query is still in a
    // pending state when that happens
    this.#retryer?.status() !== "rejected") {
      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {
        this.cancel({ silent: true });
      } else if (this.#retryer) {
        this.#retryer.continueRetry();
        return this.#retryer.promise;
      }
    }
    if (options) {
      this.setOptions(options);
    }
    if (!this.options.queryFn) {
      const observer = this.observers.find((x2) => x2.options.queryFn);
      if (observer) {
        this.setOptions(observer.options);
      }
    }
    if (true) {
      if (!Array.isArray(this.options.queryKey)) {
        console.error(
          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`
        );
      }
    }
    const abortController = new AbortController();
    const addSignalProperty = (object) => {
      Object.defineProperty(object, "signal", {
        enumerable: true,
        get: () => {
          this.#abortSignalConsumed = true;
          return abortController.signal;
        }
      });
    };
    const fetchFn = () => {
      const queryFn = ensureQueryFn(this.options, fetchOptions);
      const createQueryFnContext = () => {
        const queryFnContext2 = {
          client: this.#client,
          queryKey: this.queryKey,
          meta: this.meta
        };
        addSignalProperty(queryFnContext2);
        return queryFnContext2;
      };
      const queryFnContext = createQueryFnContext();
      this.#abortSignalConsumed = false;
      if (this.options.persister) {
        return this.options.persister(
          queryFn,
          queryFnContext,
          this
        );
      }
      return queryFn(queryFnContext);
    };
    const createFetchContext = () => {
      const context2 = {
        fetchOptions,
        options: this.options,
        queryKey: this.queryKey,
        client: this.#client,
        state: this.state,
        fetchFn
      };
      addSignalProperty(context2);
      return context2;
    };
    const context = createFetchContext();
    this.options.behavior?.onFetch(context, this);
    this.#revertState = this.state;
    if (this.state.fetchStatus === "idle" || this.state.fetchMeta !== context.fetchOptions?.meta) {
      this.#dispatch({ type: "fetch", meta: context.fetchOptions?.meta });
    }
    this.#retryer = createRetryer({
      initialPromise: fetchOptions?.initialPromise,
      fn: context.fetchFn,
      onCancel: (error) => {
        if (error instanceof CancelledError && error.revert) {
          this.setState({
            ...this.#revertState,
            fetchStatus: "idle"
          });
        }
        abortController.abort();
      },
      onFail: (failureCount, error) => {
        this.#dispatch({ type: "failed", failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: "pause" });
      },
      onContinue: () => {
        this.#dispatch({ type: "continue" });
      },
      retry: context.options.retry,
      retryDelay: context.options.retryDelay,
      networkMode: context.options.networkMode,
      canRun: () => true
    });
    try {
      const data = await this.#retryer.start();
      if (data === void 0) {
        if (true) {
          console.error(
            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`
          );
        }
        throw new Error(`${this.queryHash} data is undefined`);
      }
      this.setData(data);
      this.#cache.config.onSuccess?.(data, this);
      this.#cache.config.onSettled?.(
        data,
        this.state.error,
        this
      );
      return data;
    } catch (error) {
      if (error instanceof CancelledError) {
        if (error.silent) {
          return this.#retryer.promise;
        } else if (error.revert) {
          if (this.state.data === void 0) {
            throw error;
          }
          return this.state.data;
        }
      }
      this.#dispatch({
        type: "error",
        error
      });
      this.#cache.config.onError?.(
        error,
        this
      );
      this.#cache.config.onSettled?.(
        this.state.data,
        error,
        this
      );
      throw error;
    } finally {
      this.scheduleGc();
    }
  }
  #dispatch(action) {
    const reducer = (state) => {
      switch (action.type) {
        case "failed":
          return {
            ...state,
            fetchFailureCount: action.failureCount,
            fetchFailureReason: action.error
          };
        case "pause":
          return {
            ...state,
            fetchStatus: "paused"
          };
        case "continue":
          return {
            ...state,
            fetchStatus: "fetching"
          };
        case "fetch":
          return {
            ...state,
            ...fetchState(state.data, this.options),
            fetchMeta: action.meta ?? null
          };
        case "success":
          const newState = {
            ...state,
            data: action.data,
            dataUpdateCount: state.dataUpdateCount + 1,
            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),
            error: null,
            isInvalidated: false,
            status: "success",
            ...!action.manual && {
              fetchStatus: "idle",
              fetchFailureCount: 0,
              fetchFailureReason: null
            }
          };
          this.#revertState = action.manual ? newState : void 0;
          return newState;
        case "error":
          const error = action.error;
          return {
            ...state,
            error,
            errorUpdateCount: state.errorUpdateCount + 1,
            errorUpdatedAt: Date.now(),
            fetchFailureCount: state.fetchFailureCount + 1,
            fetchFailureReason: error,
            fetchStatus: "idle",
            status: "error"
          };
        case "invalidate":
          return {
            ...state,
            isInvalidated: true
          };
        case "setState":
          return {
            ...state,
            ...action.state
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.observers.forEach((observer) => {
        observer.onQueryUpdate();
      });
      this.#cache.notify({ query: this, type: "updated", action });
    });
  }
};
function fetchState(data, options) {
  return {
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchStatus: canFetch(options.networkMode) ? "fetching" : "paused",
    ...data === void 0 && {
      error: null,
      status: "pending"
    }
  };
}
function getDefaultState(options) {
  const data = typeof options.initialData === "function" ? options.initialData() : options.initialData;
  const hasData = data !== void 0;
  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
  return {
    data,
    dataUpdateCount: 0,
    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: false,
    status: hasData ? "success" : "pending",
    fetchStatus: "idle"
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/queryObserver.js
var QueryObserver = class extends Subscribable {
  constructor(client, options) {
    super();
    this.options = options;
    this.#client = client;
    this.#selectError = null;
    this.#currentThenable = pendingThenable();
    this.bindMethods();
    this.setOptions(options);
  }
  #client;
  #currentQuery = void 0;
  #currentQueryInitialState = void 0;
  #currentResult = void 0;
  #currentResultState;
  #currentResultOptions;
  #currentThenable;
  #selectError;
  #selectFn;
  #selectResult;
  // This property keeps track of the last query with defined data.
  // It will be used to pass the previous data and query to the placeholder function between renders.
  #lastQueryWithDefinedData;
  #staleTimeoutId;
  #refetchIntervalId;
  #currentRefetchInterval;
  #trackedProps = /* @__PURE__ */ new Set();
  bindMethods() {
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    if (this.listeners.size === 1) {
      this.#currentQuery.addObserver(this);
      if (shouldFetchOnMount(this.#currentQuery, this.options)) {
        this.#executeFetch();
      } else {
        this.updateResult();
      }
      this.#updateTimers();
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.destroy();
    }
  }
  shouldFetchOnReconnect() {
    return shouldFetchOn(
      this.#currentQuery,
      this.options,
      this.options.refetchOnReconnect
    );
  }
  shouldFetchOnWindowFocus() {
    return shouldFetchOn(
      this.#currentQuery,
      this.options,
      this.options.refetchOnWindowFocus
    );
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set();
    this.#clearStaleTimeout();
    this.#clearRefetchInterval();
    this.#currentQuery.removeObserver(this);
  }
  setOptions(options) {
    const prevOptions = this.options;
    const prevQuery = this.#currentQuery;
    this.options = this.#client.defaultQueryOptions(options);
    if (this.options.enabled !== void 0 && typeof this.options.enabled !== "boolean" && typeof this.options.enabled !== "function" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== "boolean") {
      throw new Error(
        "Expected enabled to be a boolean or a callback that returns a boolean"
      );
    }
    this.#updateQuery();
    this.#currentQuery.setOptions(this.options);
    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {
      this.#client.getQueryCache().notify({
        type: "observerOptionsUpdated",
        query: this.#currentQuery,
        observer: this
      });
    }
    const mounted = this.hasListeners();
    if (mounted && shouldFetchOptionally(
      this.#currentQuery,
      prevQuery,
      this.options,
      prevOptions
    )) {
      this.#executeFetch();
    }
    this.updateResult();
    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {
      this.#updateStaleTimeout();
    }
    const nextRefetchInterval = this.#computeRefetchInterval();
    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {
      this.#updateRefetchInterval(nextRefetchInterval);
    }
  }
  getOptimisticResult(options) {
    const query = this.#client.getQueryCache().build(this.#client, options);
    const result2 = this.createResult(query, options);
    if (shouldAssignObserverCurrentProperties(this, result2)) {
      this.#currentResult = result2;
      this.#currentResultOptions = this.options;
      this.#currentResultState = this.#currentQuery.state;
    }
    return result2;
  }
  getCurrentResult() {
    return this.#currentResult;
  }
  trackResult(result2, onPropTracked) {
    return new Proxy(result2, {
      get: (target, key) => {
        this.trackProp(key);
        onPropTracked?.(key);
        if (key === "promise") {
          this.trackProp("data");
          if (!this.options.experimental_prefetchInRender && this.#currentThenable.status === "pending") {
            this.#currentThenable.reject(
              new Error(
                "experimental_prefetchInRender feature flag is not enabled"
              )
            );
          }
        }
        return Reflect.get(target, key);
      }
    });
  }
  trackProp(key) {
    this.#trackedProps.add(key);
  }
  getCurrentQuery() {
    return this.#currentQuery;
  }
  refetch({ ...options } = {}) {
    return this.fetch({
      ...options
    });
  }
  fetchOptimistic(options) {
    const defaultedOptions = this.#client.defaultQueryOptions(options);
    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);
    return query.fetch().then(() => this.createResult(query, defaultedOptions));
  }
  fetch(fetchOptions) {
    return this.#executeFetch({
      ...fetchOptions,
      cancelRefetch: fetchOptions.cancelRefetch ?? true
    }).then(() => {
      this.updateResult();
      return this.#currentResult;
    });
  }
  #executeFetch(fetchOptions) {
    this.#updateQuery();
    let promise = this.#currentQuery.fetch(
      this.options,
      fetchOptions
    );
    if (!fetchOptions?.throwOnError) {
      promise = promise.catch(noop5);
    }
    return promise;
  }
  #updateStaleTimeout() {
    this.#clearStaleTimeout();
    const staleTime = resolveStaleTime(
      this.options.staleTime,
      this.#currentQuery
    );
    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {
      return;
    }
    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);
    const timeout = time + 1;
    this.#staleTimeoutId = timeoutManager.setTimeout(() => {
      if (!this.#currentResult.isStale) {
        this.updateResult();
      }
    }, timeout);
  }
  #computeRefetchInterval() {
    return (typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;
  }
  #updateRefetchInterval(nextInterval) {
    this.#clearRefetchInterval();
    this.#currentRefetchInterval = nextInterval;
    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {
      return;
    }
    this.#refetchIntervalId = timeoutManager.setInterval(() => {
      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {
        this.#executeFetch();
      }
    }, this.#currentRefetchInterval);
  }
  #updateTimers() {
    this.#updateStaleTimeout();
    this.#updateRefetchInterval(this.#computeRefetchInterval());
  }
  #clearStaleTimeout() {
    if (this.#staleTimeoutId) {
      timeoutManager.clearTimeout(this.#staleTimeoutId);
      this.#staleTimeoutId = void 0;
    }
  }
  #clearRefetchInterval() {
    if (this.#refetchIntervalId) {
      timeoutManager.clearInterval(this.#refetchIntervalId);
      this.#refetchIntervalId = void 0;
    }
  }
  createResult(query, options) {
    const prevQuery = this.#currentQuery;
    const prevOptions = this.options;
    const prevResult = this.#currentResult;
    const prevResultState = this.#currentResultState;
    const prevResultOptions = this.#currentResultOptions;
    const queryChange = query !== prevQuery;
    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;
    const { state } = query;
    let newState = { ...state };
    let isPlaceholderData = false;
    let data;
    if (options._optimisticResults) {
      const mounted = this.hasListeners();
      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);
      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
      if (fetchOnMount || fetchOptionally) {
        newState = {
          ...newState,
          ...fetchState(state.data, query.options)
        };
      }
      if (options._optimisticResults === "isRestoring") {
        newState.fetchStatus = "idle";
      }
    }
    let { error, errorUpdatedAt, status } = newState;
    data = newState.data;
    let skipSelect = false;
    if (options.placeholderData !== void 0 && data === void 0 && status === "pending") {
      let placeholderData;
      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {
        placeholderData = prevResult.data;
        skipSelect = true;
      } else {
        placeholderData = typeof options.placeholderData === "function" ? options.placeholderData(
          this.#lastQueryWithDefinedData?.state.data,
          this.#lastQueryWithDefinedData
        ) : options.placeholderData;
      }
      if (placeholderData !== void 0) {
        status = "success";
        data = replaceData(
          prevResult?.data,
          placeholderData,
          options
        );
        isPlaceholderData = true;
      }
    }
    if (options.select && data !== void 0 && !skipSelect) {
      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {
        data = this.#selectResult;
      } else {
        try {
          this.#selectFn = options.select;
          data = options.select(data);
          data = replaceData(prevResult?.data, data, options);
          this.#selectResult = data;
          this.#selectError = null;
        } catch (selectError) {
          this.#selectError = selectError;
        }
      }
    }
    if (this.#selectError) {
      error = this.#selectError;
      data = this.#selectResult;
      errorUpdatedAt = Date.now();
      status = "error";
    }
    const isFetching = newState.fetchStatus === "fetching";
    const isPending = status === "pending";
    const isError2 = status === "error";
    const isLoading = isPending && isFetching;
    const hasData = data !== void 0;
    const result2 = {
      status,
      fetchStatus: newState.fetchStatus,
      isPending,
      isSuccess: status === "success",
      isError: isError2,
      isInitialLoading: isLoading,
      isLoading,
      data,
      dataUpdatedAt: newState.dataUpdatedAt,
      error,
      errorUpdatedAt,
      failureCount: newState.fetchFailureCount,
      failureReason: newState.fetchFailureReason,
      errorUpdateCount: newState.errorUpdateCount,
      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,
      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,
      isFetching,
      isRefetching: isFetching && !isPending,
      isLoadingError: isError2 && !hasData,
      isPaused: newState.fetchStatus === "paused",
      isPlaceholderData,
      isRefetchError: isError2 && hasData,
      isStale: isStale(query, options),
      refetch: this.refetch,
      promise: this.#currentThenable,
      isEnabled: resolveEnabled(options.enabled, query) !== false
    };
    const nextResult = result2;
    if (this.options.experimental_prefetchInRender) {
      const finalizeThenableIfPossible = (thenable) => {
        if (nextResult.status === "error") {
          thenable.reject(nextResult.error);
        } else if (nextResult.data !== void 0) {
          thenable.resolve(nextResult.data);
        }
      };
      const recreateThenable = () => {
        const pending = this.#currentThenable = nextResult.promise = pendingThenable();
        finalizeThenableIfPossible(pending);
      };
      const prevThenable = this.#currentThenable;
      switch (prevThenable.status) {
        case "pending":
          if (query.queryHash === prevQuery.queryHash) {
            finalizeThenableIfPossible(prevThenable);
          }
          break;
        case "fulfilled":
          if (nextResult.status === "error" || nextResult.data !== prevThenable.value) {
            recreateThenable();
          }
          break;
        case "rejected":
          if (nextResult.status !== "error" || nextResult.error !== prevThenable.reason) {
            recreateThenable();
          }
          break;
      }
    }
    return nextResult;
  }
  updateResult() {
    const prevResult = this.#currentResult;
    const nextResult = this.createResult(this.#currentQuery, this.options);
    this.#currentResultState = this.#currentQuery.state;
    this.#currentResultOptions = this.options;
    if (this.#currentResultState.data !== void 0) {
      this.#lastQueryWithDefinedData = this.#currentQuery;
    }
    if (shallowEqualObjects(nextResult, prevResult)) {
      return;
    }
    this.#currentResult = nextResult;
    const shouldNotifyListeners = () => {
      if (!prevResult) {
        return true;
      }
      const { notifyOnChangeProps } = this.options;
      const notifyOnChangePropsValue = typeof notifyOnChangeProps === "function" ? notifyOnChangeProps() : notifyOnChangeProps;
      if (notifyOnChangePropsValue === "all" || !notifyOnChangePropsValue && !this.#trackedProps.size) {
        return true;
      }
      const includedProps = new Set(
        notifyOnChangePropsValue ?? this.#trackedProps
      );
      if (this.options.throwOnError) {
        includedProps.add("error");
      }
      return Object.keys(this.#currentResult).some((key) => {
        const typedKey = key;
        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];
        return changed && includedProps.has(typedKey);
      });
    };
    this.#notify({ listeners: shouldNotifyListeners() });
  }
  #updateQuery() {
    const query = this.#client.getQueryCache().build(this.#client, this.options);
    if (query === this.#currentQuery) {
      return;
    }
    const prevQuery = this.#currentQuery;
    this.#currentQuery = query;
    this.#currentQueryInitialState = query.state;
    if (this.hasListeners()) {
      prevQuery?.removeObserver(this);
      query.addObserver(this);
    }
  }
  onQueryUpdate() {
    this.updateResult();
    if (this.hasListeners()) {
      this.#updateTimers();
    }
  }
  #notify(notifyOptions) {
    notifyManager.batch(() => {
      if (notifyOptions.listeners) {
        this.listeners.forEach((listener) => {
          listener(this.#currentResult);
        });
      }
      this.#client.getQueryCache().notify({
        query: this.#currentQuery,
        type: "observerResultsUpdated"
      });
    });
  }
};
function shouldLoadOnMount(query, options) {
  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === "error" && options.retryOnMount === false);
}
function shouldFetchOnMount(query, options) {
  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);
}
function shouldFetchOn(query, options, field) {
  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== "static") {
    const value = typeof field === "function" ? field(query) : field;
    return value === "always" || value !== false && isStale(query, options);
  }
  return false;
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== "error") && isStale(query, options);
}
function isStale(query, options) {
  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));
}
function shouldAssignObserverCurrentProperties(observer, optimisticResult) {
  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {
    return true;
  }
  return false;
}

// ../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js
function infiniteQueryBehavior(pages) {
  return {
    onFetch: (context, query) => {
      const options = context.options;
      const direction = context.fetchOptions?.meta?.fetchMore?.direction;
      const oldPages = context.state.data?.pages || [];
      const oldPageParams = context.state.data?.pageParams || [];
      let result2 = { pages: [], pageParams: [] };
      let currentPage = 0;
      const fetchFn = async () => {
        let cancelled = false;
        const addSignalProperty = (object) => {
          Object.defineProperty(object, "signal", {
            enumerable: true,
            get: () => {
              if (context.signal.aborted) {
                cancelled = true;
              } else {
                context.signal.addEventListener("abort", () => {
                  cancelled = true;
                });
              }
              return context.signal;
            }
          });
        };
        const queryFn = ensureQueryFn(context.options, context.fetchOptions);
        const fetchPage = async (data, param, previous) => {
          if (cancelled) {
            return Promise.reject();
          }
          if (param == null && data.pages.length) {
            return Promise.resolve(data);
          }
          const createQueryFnContext = () => {
            const queryFnContext2 = {
              client: context.client,
              queryKey: context.queryKey,
              pageParam: param,
              direction: previous ? "backward" : "forward",
              meta: context.options.meta
            };
            addSignalProperty(queryFnContext2);
            return queryFnContext2;
          };
          const queryFnContext = createQueryFnContext();
          const page = await queryFn(queryFnContext);
          const { maxPages } = context.options;
          const addTo = previous ? addToStart : addToEnd;
          return {
            pages: addTo(data.pages, page, maxPages),
            pageParams: addTo(data.pageParams, param, maxPages)
          };
        };
        if (direction && oldPages.length) {
          const previous = direction === "backward";
          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;
          const oldData = {
            pages: oldPages,
            pageParams: oldPageParams
          };
          const param = pageParamFn(options, oldData);
          result2 = await fetchPage(oldData, param, previous);
        } else {
          const remainingPages = pages ?? oldPages.length;
          do {
            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result2);
            if (currentPage > 0 && param == null) {
              break;
            }
            result2 = await fetchPage(result2, param);
            currentPage++;
          } while (currentPage < remainingPages);
        }
        return result2;
      };
      if (context.options.persister) {
        context.fetchFn = () => {
          return context.options.persister?.(
            fetchFn,
            {
              client: context.client,
              queryKey: context.queryKey,
              meta: context.options.meta,
              signal: context.signal
            },
            query
          );
        };
      } else {
        context.fetchFn = fetchFn;
      }
    }
  };
}
function getNextPageParam(options, { pages, pageParams }) {
  const lastIndex = pages.length - 1;
  return pages.length > 0 ? options.getNextPageParam(
    pages[lastIndex],
    pages,
    pageParams[lastIndex],
    pageParams
  ) : void 0;
}
function getPreviousPageParam(options, { pages, pageParams }) {
  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;
}

// ../../node_modules/@tanstack/query-core/build/modern/mutation.js
var Mutation = class extends Removable {
  #client;
  #observers;
  #mutationCache;
  #retryer;
  constructor(config) {
    super();
    this.#client = config.client;
    this.mutationId = config.mutationId;
    this.#mutationCache = config.mutationCache;
    this.#observers = [];
    this.state = config.state || getDefaultState2();
    this.setOptions(config.options);
    this.scheduleGc();
  }
  setOptions(options) {
    this.options = options;
    this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(observer) {
    if (!this.#observers.includes(observer)) {
      this.#observers.push(observer);
      this.clearGcTimeout();
      this.#mutationCache.notify({
        type: "observerAdded",
        mutation: this,
        observer
      });
    }
  }
  removeObserver(observer) {
    this.#observers = this.#observers.filter((x2) => x2 !== observer);
    this.scheduleGc();
    this.#mutationCache.notify({
      type: "observerRemoved",
      mutation: this,
      observer
    });
  }
  optionalRemove() {
    if (!this.#observers.length) {
      if (this.state.status === "pending") {
        this.scheduleGc();
      } else {
        this.#mutationCache.remove(this);
      }
    }
  }
  continue() {
    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(variables) {
    const onContinue = () => {
      this.#dispatch({ type: "continue" });
    };
    const mutationFnContext = {
      client: this.#client,
      meta: this.options.meta,
      mutationKey: this.options.mutationKey
    };
    this.#retryer = createRetryer({
      fn: () => {
        if (!this.options.mutationFn) {
          return Promise.reject(new Error("No mutationFn found"));
        }
        return this.options.mutationFn(variables, mutationFnContext);
      },
      onFail: (failureCount, error) => {
        this.#dispatch({ type: "failed", failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: "pause" });
      },
      onContinue,
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode,
      canRun: () => this.#mutationCache.canRun(this)
    });
    const restored = this.state.status === "pending";
    const isPaused = !this.#retryer.canStart();
    try {
      if (restored) {
        onContinue();
      } else {
        this.#dispatch({ type: "pending", variables, isPaused });
        await this.#mutationCache.config.onMutate?.(
          variables,
          this,
          mutationFnContext
        );
        const context = await this.options.onMutate?.(
          variables,
          mutationFnContext
        );
        if (context !== this.state.context) {
          this.#dispatch({
            type: "pending",
            context,
            variables,
            isPaused
          });
        }
      }
      const data = await this.#retryer.start();
      await this.#mutationCache.config.onSuccess?.(
        data,
        variables,
        this.state.context,
        this,
        mutationFnContext
      );
      await this.options.onSuccess?.(
        data,
        variables,
        this.state.context,
        mutationFnContext
      );
      await this.#mutationCache.config.onSettled?.(
        data,
        null,
        this.state.variables,
        this.state.context,
        this,
        mutationFnContext
      );
      await this.options.onSettled?.(
        data,
        null,
        variables,
        this.state.context,
        mutationFnContext
      );
      this.#dispatch({ type: "success", data });
      return data;
    } catch (error) {
      try {
        await this.#mutationCache.config.onError?.(
          error,
          variables,
          this.state.context,
          this,
          mutationFnContext
        );
        await this.options.onError?.(
          error,
          variables,
          this.state.context,
          mutationFnContext
        );
        await this.#mutationCache.config.onSettled?.(
          void 0,
          error,
          this.state.variables,
          this.state.context,
          this,
          mutationFnContext
        );
        await this.options.onSettled?.(
          void 0,
          error,
          variables,
          this.state.context,
          mutationFnContext
        );
        throw error;
      } finally {
        this.#dispatch({ type: "error", error });
      }
    } finally {
      this.#mutationCache.runNext(this);
    }
  }
  #dispatch(action) {
    const reducer = (state) => {
      switch (action.type) {
        case "failed":
          return {
            ...state,
            failureCount: action.failureCount,
            failureReason: action.error
          };
        case "pause":
          return {
            ...state,
            isPaused: true
          };
        case "continue":
          return {
            ...state,
            isPaused: false
          };
        case "pending":
          return {
            ...state,
            context: action.context,
            data: void 0,
            failureCount: 0,
            failureReason: null,
            error: null,
            isPaused: action.isPaused,
            status: "pending",
            variables: action.variables,
            submittedAt: Date.now()
          };
        case "success":
          return {
            ...state,
            data: action.data,
            failureCount: 0,
            failureReason: null,
            error: null,
            status: "success",
            isPaused: false
          };
        case "error":
          return {
            ...state,
            data: void 0,
            error: action.error,
            failureCount: state.failureCount + 1,
            failureReason: action.error,
            isPaused: false,
            status: "error"
          };
      }
    };
    this.state = reducer(this.state);
    notifyManager.batch(() => {
      this.#observers.forEach((observer) => {
        observer.onMutationUpdate(action);
      });
      this.#mutationCache.notify({
        mutation: this,
        type: "updated",
        action
      });
    });
  }
};
function getDefaultState2() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: false,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/mutationCache.js
var MutationCache = class extends Subscribable {
  constructor(config = {}) {
    super();
    this.config = config;
    this.#mutations = /* @__PURE__ */ new Set();
    this.#scopes = /* @__PURE__ */ new Map();
    this.#mutationId = 0;
  }
  #mutations;
  #scopes;
  #mutationId;
  build(client, options, state) {
    const mutation = new Mutation({
      client,
      mutationCache: this,
      mutationId: ++this.#mutationId,
      options: client.defaultMutationOptions(options),
      state
    });
    this.add(mutation);
    return mutation;
  }
  add(mutation) {
    this.#mutations.add(mutation);
    const scope = scopeFor(mutation);
    if (typeof scope === "string") {
      const scopedMutations = this.#scopes.get(scope);
      if (scopedMutations) {
        scopedMutations.push(mutation);
      } else {
        this.#scopes.set(scope, [mutation]);
      }
    }
    this.notify({ type: "added", mutation });
  }
  remove(mutation) {
    if (this.#mutations.delete(mutation)) {
      const scope = scopeFor(mutation);
      if (typeof scope === "string") {
        const scopedMutations = this.#scopes.get(scope);
        if (scopedMutations) {
          if (scopedMutations.length > 1) {
            const index3 = scopedMutations.indexOf(mutation);
            if (index3 !== -1) {
              scopedMutations.splice(index3, 1);
            }
          } else if (scopedMutations[0] === mutation) {
            this.#scopes.delete(scope);
          }
        }
      }
    }
    this.notify({ type: "removed", mutation });
  }
  canRun(mutation) {
    const scope = scopeFor(mutation);
    if (typeof scope === "string") {
      const mutationsWithSameScope = this.#scopes.get(scope);
      const firstPendingMutation = mutationsWithSameScope?.find(
        (m) => m.state.status === "pending"
      );
      return !firstPendingMutation || firstPendingMutation === mutation;
    } else {
      return true;
    }
  }
  runNext(mutation) {
    const scope = scopeFor(mutation);
    if (typeof scope === "string") {
      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);
      return foundMutation?.continue() ?? Promise.resolve();
    } else {
      return Promise.resolve();
    }
  }
  clear() {
    notifyManager.batch(() => {
      this.#mutations.forEach((mutation) => {
        this.notify({ type: "removed", mutation });
      });
      this.#mutations.clear();
      this.#scopes.clear();
    });
  }
  getAll() {
    return Array.from(this.#mutations);
  }
  find(filters) {
    const defaultedFilters = { exact: true, ...filters };
    return this.getAll().find(
      (mutation) => matchMutation(defaultedFilters, mutation)
    );
  }
  findAll(filters = {}) {
    return this.getAll().filter((mutation) => matchMutation(filters, mutation));
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  resumePausedMutations() {
    const pausedMutations = this.getAll().filter((x2) => x2.state.isPaused);
    return notifyManager.batch(
      () => Promise.all(
        pausedMutations.map((mutation) => mutation.continue().catch(noop5))
      )
    );
  }
};
function scopeFor(mutation) {
  return mutation.options.scope?.id;
}

// ../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js
var MutationObserver = class extends Subscribable {
  #client;
  #currentResult = void 0;
  #currentMutation;
  #mutateOptions;
  constructor(client, options) {
    super();
    this.#client = client;
    this.setOptions(options);
    this.bindMethods();
    this.#updateResult();
  }
  bindMethods() {
    this.mutate = this.mutate.bind(this);
    this.reset = this.reset.bind(this);
  }
  setOptions(options) {
    const prevOptions = this.options;
    this.options = this.#client.defaultMutationOptions(options);
    if (!shallowEqualObjects(this.options, prevOptions)) {
      this.#client.getMutationCache().notify({
        type: "observerOptionsUpdated",
        mutation: this.#currentMutation,
        observer: this
      });
    }
    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {
      this.reset();
    } else if (this.#currentMutation?.state.status === "pending") {
      this.#currentMutation.setOptions(this.options);
    }
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      this.#currentMutation?.removeObserver(this);
    }
  }
  onMutationUpdate(action) {
    this.#updateResult();
    this.#notify(action);
  }
  getCurrentResult() {
    return this.#currentResult;
  }
  reset() {
    this.#currentMutation?.removeObserver(this);
    this.#currentMutation = void 0;
    this.#updateResult();
    this.#notify();
  }
  mutate(variables, options) {
    this.#mutateOptions = options;
    this.#currentMutation?.removeObserver(this);
    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);
    this.#currentMutation.addObserver(this);
    return this.#currentMutation.execute(variables);
  }
  #updateResult() {
    const state = this.#currentMutation?.state ?? getDefaultState2();
    this.#currentResult = {
      ...state,
      isPending: state.status === "pending",
      isSuccess: state.status === "success",
      isError: state.status === "error",
      isIdle: state.status === "idle",
      mutate: this.mutate,
      reset: this.reset
    };
  }
  #notify(action) {
    notifyManager.batch(() => {
      if (this.#mutateOptions && this.hasListeners()) {
        const variables = this.#currentResult.variables;
        const onMutateResult = this.#currentResult.context;
        const context = {
          client: this.#client,
          meta: this.options.meta,
          mutationKey: this.options.mutationKey
        };
        if (action?.type === "success") {
          this.#mutateOptions.onSuccess?.(
            action.data,
            variables,
            onMutateResult,
            context
          );
          this.#mutateOptions.onSettled?.(
            action.data,
            null,
            variables,
            onMutateResult,
            context
          );
        } else if (action?.type === "error") {
          this.#mutateOptions.onError?.(
            action.error,
            variables,
            onMutateResult,
            context
          );
          this.#mutateOptions.onSettled?.(
            void 0,
            action.error,
            variables,
            onMutateResult,
            context
          );
        }
      }
      this.listeners.forEach((listener) => {
        listener(this.#currentResult);
      });
    });
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/queryCache.js
var QueryCache = class extends Subscribable {
  constructor(config = {}) {
    super();
    this.config = config;
    this.#queries = /* @__PURE__ */ new Map();
  }
  #queries;
  build(client, options, state) {
    const queryKey = options.queryKey;
    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);
    let query = this.get(queryHash);
    if (!query) {
      query = new Query({
        client,
        queryKey,
        queryHash,
        options: client.defaultQueryOptions(options),
        state,
        defaultOptions: client.getQueryDefaults(queryKey)
      });
      this.add(query);
    }
    return query;
  }
  add(query) {
    if (!this.#queries.has(query.queryHash)) {
      this.#queries.set(query.queryHash, query);
      this.notify({
        type: "added",
        query
      });
    }
  }
  remove(query) {
    const queryInMap = this.#queries.get(query.queryHash);
    if (queryInMap) {
      query.destroy();
      if (queryInMap === query) {
        this.#queries.delete(query.queryHash);
      }
      this.notify({ type: "removed", query });
    }
  }
  clear() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        this.remove(query);
      });
    });
  }
  get(queryHash) {
    return this.#queries.get(queryHash);
  }
  getAll() {
    return [...this.#queries.values()];
  }
  find(filters) {
    const defaultedFilters = { exact: true, ...filters };
    return this.getAll().find(
      (query) => matchQuery(defaultedFilters, query)
    );
  }
  findAll(filters = {}) {
    const queries = this.getAll();
    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  onFocus() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onFocus();
      });
    });
  }
  onOnline() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onOnline();
      });
    });
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/queryClient.js
var QueryClient = class {
  #queryCache;
  #mutationCache;
  #defaultOptions;
  #queryDefaults;
  #mutationDefaults;
  #mountCount;
  #unsubscribeFocus;
  #unsubscribeOnline;
  constructor(config = {}) {
    this.#queryCache = config.queryCache || new QueryCache();
    this.#mutationCache = config.mutationCache || new MutationCache();
    this.#defaultOptions = config.defaultOptions || {};
    this.#queryDefaults = /* @__PURE__ */ new Map();
    this.#mutationDefaults = /* @__PURE__ */ new Map();
    this.#mountCount = 0;
  }
  mount() {
    this.#mountCount++;
    if (this.#mountCount !== 1) return;
    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {
      if (focused) {
        await this.resumePausedMutations();
        this.#queryCache.onFocus();
      }
    });
    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {
      if (online) {
        await this.resumePausedMutations();
        this.#queryCache.onOnline();
      }
    });
  }
  unmount() {
    this.#mountCount--;
    if (this.#mountCount !== 0) return;
    this.#unsubscribeFocus?.();
    this.#unsubscribeFocus = void 0;
    this.#unsubscribeOnline?.();
    this.#unsubscribeOnline = void 0;
  }
  isFetching(filters) {
    return this.#queryCache.findAll({ ...filters, fetchStatus: "fetching" }).length;
  }
  isMutating(filters) {
    return this.#mutationCache.findAll({ ...filters, status: "pending" }).length;
  }
  /**
   * Imperative (non-reactive) way to retrieve data for a QueryKey.
   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.
   *
   * Hint: Do not use this function inside a component, because it won't receive updates.
   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.
   */
  getQueryData(queryKey) {
    const options = this.defaultQueryOptions({ queryKey });
    return this.#queryCache.get(options.queryHash)?.state.data;
  }
  ensureQueryData(options) {
    const defaultedOptions = this.defaultQueryOptions(options);
    const query = this.#queryCache.build(this, defaultedOptions);
    const cachedData = query.state.data;
    if (cachedData === void 0) {
      return this.fetchQuery(options);
    }
    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {
      void this.prefetchQuery(defaultedOptions);
    }
    return Promise.resolve(cachedData);
  }
  getQueriesData(filters) {
    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {
      const data = state.data;
      return [queryKey, data];
    });
  }
  setQueryData(queryKey, updater, options) {
    const defaultedOptions = this.defaultQueryOptions({ queryKey });
    const query = this.#queryCache.get(
      defaultedOptions.queryHash
    );
    const prevData = query?.state.data;
    const data = functionalUpdate(updater, prevData);
    if (data === void 0) {
      return void 0;
    }
    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });
  }
  setQueriesData(filters, updater, options) {
    return notifyManager.batch(
      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [
        queryKey,
        this.setQueryData(queryKey, updater, options)
      ])
    );
  }
  getQueryState(queryKey) {
    const options = this.defaultQueryOptions({ queryKey });
    return this.#queryCache.get(
      options.queryHash
    )?.state;
  }
  removeQueries(filters) {
    const queryCache = this.#queryCache;
    notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        queryCache.remove(query);
      });
    });
  }
  resetQueries(filters, options) {
    const queryCache = this.#queryCache;
    return notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        query.reset();
      });
      return this.refetchQueries(
        {
          type: "active",
          ...filters
        },
        options
      );
    });
  }
  cancelQueries(filters, cancelOptions = {}) {
    const defaultedCancelOptions = { revert: true, ...cancelOptions };
    const promises = notifyManager.batch(
      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))
    );
    return Promise.all(promises).then(noop5).catch(noop5);
  }
  invalidateQueries(filters, options = {}) {
    return notifyManager.batch(() => {
      this.#queryCache.findAll(filters).forEach((query) => {
        query.invalidate();
      });
      if (filters?.refetchType === "none") {
        return Promise.resolve();
      }
      return this.refetchQueries(
        {
          ...filters,
          type: filters?.refetchType ?? filters?.type ?? "active"
        },
        options
      );
    });
  }
  refetchQueries(filters, options = {}) {
    const fetchOptions = {
      ...options,
      cancelRefetch: options.cancelRefetch ?? true
    };
    const promises = notifyManager.batch(
      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {
        let promise = query.fetch(void 0, fetchOptions);
        if (!fetchOptions.throwOnError) {
          promise = promise.catch(noop5);
        }
        return query.state.fetchStatus === "paused" ? Promise.resolve() : promise;
      })
    );
    return Promise.all(promises).then(noop5);
  }
  fetchQuery(options) {
    const defaultedOptions = this.defaultQueryOptions(options);
    if (defaultedOptions.retry === void 0) {
      defaultedOptions.retry = false;
    }
    const query = this.#queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(
      resolveStaleTime(defaultedOptions.staleTime, query)
    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
  }
  prefetchQuery(options) {
    return this.fetchQuery(options).then(noop5).catch(noop5);
  }
  fetchInfiniteQuery(options) {
    options.behavior = infiniteQueryBehavior(options.pages);
    return this.fetchQuery(options);
  }
  prefetchInfiniteQuery(options) {
    return this.fetchInfiniteQuery(options).then(noop5).catch(noop5);
  }
  ensureInfiniteQueryData(options) {
    options.behavior = infiniteQueryBehavior(options.pages);
    return this.ensureQueryData(options);
  }
  resumePausedMutations() {
    if (onlineManager.isOnline()) {
      return this.#mutationCache.resumePausedMutations();
    }
    return Promise.resolve();
  }
  getQueryCache() {
    return this.#queryCache;
  }
  getMutationCache() {
    return this.#mutationCache;
  }
  getDefaultOptions() {
    return this.#defaultOptions;
  }
  setDefaultOptions(options) {
    this.#defaultOptions = options;
  }
  setQueryDefaults(queryKey, options) {
    this.#queryDefaults.set(hashKey(queryKey), {
      queryKey,
      defaultOptions: options
    });
  }
  getQueryDefaults(queryKey) {
    const defaults3 = [...this.#queryDefaults.values()];
    const result2 = {};
    defaults3.forEach((queryDefault) => {
      if (partialMatchKey(queryKey, queryDefault.queryKey)) {
        Object.assign(result2, queryDefault.defaultOptions);
      }
    });
    return result2;
  }
  setMutationDefaults(mutationKey, options) {
    this.#mutationDefaults.set(hashKey(mutationKey), {
      mutationKey,
      defaultOptions: options
    });
  }
  getMutationDefaults(mutationKey) {
    const defaults3 = [...this.#mutationDefaults.values()];
    const result2 = {};
    defaults3.forEach((queryDefault) => {
      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {
        Object.assign(result2, queryDefault.defaultOptions);
      }
    });
    return result2;
  }
  defaultQueryOptions(options) {
    if (options._defaulted) {
      return options;
    }
    const defaultedOptions = {
      ...this.#defaultOptions.queries,
      ...this.getQueryDefaults(options.queryKey),
      ...options,
      _defaulted: true
    };
    if (!defaultedOptions.queryHash) {
      defaultedOptions.queryHash = hashQueryKeyByOptions(
        defaultedOptions.queryKey,
        defaultedOptions
      );
    }
    if (defaultedOptions.refetchOnReconnect === void 0) {
      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always";
    }
    if (defaultedOptions.throwOnError === void 0) {
      defaultedOptions.throwOnError = !!defaultedOptions.suspense;
    }
    if (!defaultedOptions.networkMode && defaultedOptions.persister) {
      defaultedOptions.networkMode = "offlineFirst";
    }
    if (defaultedOptions.queryFn === skipToken) {
      defaultedOptions.enabled = false;
    }
    return defaultedOptions;
  }
  defaultMutationOptions(options) {
    if (options?._defaulted) {
      return options;
    }
    return {
      ...this.#defaultOptions.mutations,
      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),
      ...options,
      _defaulted: true
    };
  }
  clear() {
    this.#queryCache.clear();
    this.#mutationCache.clear();
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/types.js
var dataTagSymbol = Symbol("dataTagSymbol");
var dataTagErrorSymbol = Symbol("dataTagErrorSymbol");
var unsetMarker = Symbol("unsetMarker");

// ../../node_modules/@tanstack/react-query/build/modern/useQueries.js
var React50 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js
var React46 = __toESM(require_react(), 1);
var import_jsx_runtime28 = __toESM(require_jsx_runtime(), 1);
var QueryClientContext = React46.createContext(
  void 0
);
var useQueryClient = (queryClient2) => {
  const client = React46.useContext(QueryClientContext);
  if (queryClient2) {
    return queryClient2;
  }
  if (!client) {
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  }
  return client;
};
var QueryClientProvider = ({
  client,
  children
}) => {
  React46.useEffect(() => {
    client.mount();
    return () => {
      client.unmount();
    };
  }, [client]);
  return (0, import_jsx_runtime28.jsx)(QueryClientContext.Provider, { value: client, children });
};

// ../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js
var React47 = __toESM(require_react(), 1);
var IsRestoringContext = React47.createContext(false);
var useIsRestoring = () => React47.useContext(IsRestoringContext);
var IsRestoringProvider = IsRestoringContext.Provider;

// ../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js
var React48 = __toESM(require_react(), 1);
var import_jsx_runtime29 = __toESM(require_jsx_runtime(), 1);
function createValue() {
  let isReset = false;
  return {
    clearReset: () => {
      isReset = false;
    },
    reset: () => {
      isReset = true;
    },
    isReset: () => {
      return isReset;
    }
  };
}
var QueryErrorResetBoundaryContext = React48.createContext(createValue());
var useQueryErrorResetBoundary = () => React48.useContext(QueryErrorResetBoundaryContext);

// ../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js
var React49 = __toESM(require_react(), 1);
var ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {
  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {
    if (!errorResetBoundary.isReset()) {
      options.retryOnMount = false;
    }
  }
};
var useClearResetErrorBoundary = (errorResetBoundary) => {
  React49.useEffect(() => {
    errorResetBoundary.clearReset();
  }, [errorResetBoundary]);
};
var getHasError = ({
  result: result2,
  errorResetBoundary,
  throwOnError,
  query,
  suspense
}) => {
  return result2.isError && !errorResetBoundary.isReset() && !result2.isFetching && query && (suspense && result2.data === void 0 || shouldThrowError(throwOnError, [result2.error, query]));
};

// ../../node_modules/@tanstack/react-query/build/modern/suspense.js
var ensureSuspenseTimers = (defaultedOptions) => {
  if (defaultedOptions.suspense) {
    const MIN_SUSPENSE_TIME_MS = 1e3;
    const clamp2 = (value) => value === "static" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);
    const originalStaleTime = defaultedOptions.staleTime;
    defaultedOptions.staleTime = typeof originalStaleTime === "function" ? (...args) => clamp2(originalStaleTime(...args)) : clamp2(originalStaleTime);
    if (typeof defaultedOptions.gcTime === "number") {
      defaultedOptions.gcTime = Math.max(
        defaultedOptions.gcTime,
        MIN_SUSPENSE_TIME_MS
      );
    }
  }
};
var willFetch = (result2, isRestoring) => result2.isLoading && result2.isFetching && !isRestoring;
var shouldSuspend = (defaultedOptions, result2) => defaultedOptions?.suspense && result2.isPending;
var fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {
  errorResetBoundary.clearReset();
});

// ../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js
var React51 = __toESM(require_react(), 1);
function useBaseQuery(options, Observer, queryClient2) {
  if (true) {
    if (typeof options !== "object" || Array.isArray(options)) {
      throw new Error(
        'Bad argument type. Starting with v5, only the "Object" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'
      );
    }
  }
  const isRestoring = useIsRestoring();
  const errorResetBoundary = useQueryErrorResetBoundary();
  const client = useQueryClient(queryClient2);
  const defaultedOptions = client.defaultQueryOptions(options);
  client.getDefaultOptions().queries?._experimental_beforeQuery?.(
    defaultedOptions
  );
  if (true) {
    if (!defaultedOptions.queryFn) {
      console.error(
        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`
      );
    }
  }
  defaultedOptions._optimisticResults = isRestoring ? "isRestoring" : "optimistic";
  ensureSuspenseTimers(defaultedOptions);
  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);
  useClearResetErrorBoundary(errorResetBoundary);
  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);
  const [observer] = React51.useState(
    () => new Observer(
      client,
      defaultedOptions
    )
  );
  const result2 = observer.getOptimisticResult(defaultedOptions);
  const shouldSubscribe = !isRestoring && options.subscribed !== false;
  React51.useSyncExternalStore(
    React51.useCallback(
      (onStoreChange) => {
        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop5;
        observer.updateResult();
        return unsubscribe;
      },
      [observer, shouldSubscribe]
    ),
    () => observer.getCurrentResult(),
    () => observer.getCurrentResult()
  );
  React51.useEffect(() => {
    observer.setOptions(defaultedOptions);
  }, [defaultedOptions, observer]);
  if (shouldSuspend(defaultedOptions, result2)) {
    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);
  }
  if (getHasError({
    result: result2,
    errorResetBoundary,
    throwOnError: defaultedOptions.throwOnError,
    query: client.getQueryCache().get(defaultedOptions.queryHash),
    suspense: defaultedOptions.suspense
  })) {
    throw result2.error;
  }
  ;
  client.getDefaultOptions().queries?._experimental_afterQuery?.(
    defaultedOptions,
    result2
  );
  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result2, isRestoring)) {
    const promise = isNewCacheEntry ? (
      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted
      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)
    ) : (
      // subscribe to the "cache promise" so that we can finalize the currentThenable once data comes in
      client.getQueryCache().get(defaultedOptions.queryHash)?.promise
    );
    promise?.catch(noop5).finally(() => {
      observer.updateResult();
    });
  }
  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result2) : result2;
}

// ../../node_modules/@tanstack/react-query/build/modern/useQuery.js
function useQuery(options, queryClient2) {
  return useBaseQuery(options, QueryObserver, queryClient2);
}

// ../../node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js
var React52 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/react-query/build/modern/useIsFetching.js
var React53 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/react-query/build/modern/useMutationState.js
var React54 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/react-query/build/modern/useMutation.js
var React55 = __toESM(require_react(), 1);
function useMutation(options, queryClient2) {
  const client = useQueryClient(queryClient2);
  const [observer] = React55.useState(
    () => new MutationObserver(
      client,
      options
    )
  );
  React55.useEffect(() => {
    observer.setOptions(options);
  }, [observer, options]);
  const result2 = React55.useSyncExternalStore(
    React55.useCallback(
      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),
      [observer]
    ),
    () => observer.getCurrentResult(),
    () => observer.getCurrentResult()
  );
  const mutate = React55.useCallback(
    (variables, mutateOptions) => {
      observer.mutate(variables, mutateOptions).catch(noop5);
    },
    [observer]
  );
  if (result2.error && shouldThrowError(observer.options.throwOnError, [result2.error])) {
    throw result2.error;
  }
  return { ...result2, mutate, mutateAsync: result2.mutate };
}

// ../../packages/aitable/src/types/core/field-types.ts
var FIELD_TYPES = {
  // 文本类型
  SingleLineText: "singleLineText",
  LongText: "longText",
  // 数字类型
  Number: "number",
  // 选择类型
  SingleSelect: "singleSelect",
  MultipleSelect: "multipleSelect",
  // 日期时间
  Date: "date",
  CreatedTime: "createdTime",
  LastModifiedTime: "lastModifiedTime",
  // 关系类型
  Link: "link",
  User: "user",
  CreatedBy: "createdBy",
  LastModifiedBy: "lastModifiedBy",
  // 特殊类型
  Checkbox: "checkbox",
  Rating: "rating",
  Attachment: "attachment",
  Button: "button",
  // 计算类型
  Formula: "formula",
  Rollup: "rollup",
  Count: "count",
  AutoNumber: "autoNumber",
  // 联系方式
  Email: "email",
  Phone: "phone",
  URL: "url"
};
var FIELD_TYPE_CATEGORIES = {
  // 文本类
  Text: [
    FIELD_TYPES.SingleLineText,
    FIELD_TYPES.LongText,
    FIELD_TYPES.Email,
    FIELD_TYPES.Phone,
    FIELD_TYPES.URL
  ],
  // 数字类
  Numeric: [
    FIELD_TYPES.Number,
    FIELD_TYPES.Rating,
    FIELD_TYPES.AutoNumber,
    FIELD_TYPES.Count
  ],
  // 选择类
  Select: [FIELD_TYPES.SingleSelect, FIELD_TYPES.MultipleSelect],
  // 日期类
  DateTime: [
    FIELD_TYPES.Date,
    FIELD_TYPES.CreatedTime,
    FIELD_TYPES.LastModifiedTime
  ],
  // 关系类
  Relation: [
    FIELD_TYPES.Link,
    FIELD_TYPES.User,
    FIELD_TYPES.CreatedBy,
    FIELD_TYPES.LastModifiedBy
  ],
  // 计算类
  Computed: [FIELD_TYPES.Formula, FIELD_TYPES.Rollup],
  // 只读类
  ReadOnly: [
    FIELD_TYPES.CreatedTime,
    FIELD_TYPES.LastModifiedTime,
    FIELD_TYPES.CreatedBy,
    FIELD_TYPES.LastModifiedBy,
    FIELD_TYPES.AutoNumber
  ]
};

// ../../packages/aitable/src/types/core/cell-values.ts
var CellValueGuards = {
  /**
   * Check if value is a valid text cell value
   */
  isTextValue(value) {
    return typeof value === "string" || value === null;
  },
  /**
   * Check if value is a valid number cell value
   */
  isNumberValue(value) {
    return typeof value === "number" || value === null;
  },
  /**
   * Check if value is a valid boolean cell value
   */
  isBooleanValue(value) {
    return typeof value === "boolean" || value === null;
  },
  /**
   * Check if value is a valid string array cell value
   */
  isStringArrayValue(value) {
    return Array.isArray(value) && value.every((item) => typeof item === "string") || value === null;
  },
  /**
   * Check if value is a valid user reference
   */
  isUserReference(value) {
    return typeof value === "object" && value !== null && "id" in value && "name" in value && typeof value.id === "string" && typeof value.name === "string";
  },
  /**
   * Check if value is a valid user reference array
   */
  isUserReferenceArray(value) {
    return Array.isArray(value) && value.every(CellValueGuards.isUserReference) || value === null;
  },
  /**
   * Check if value is a valid attachment
   */
  isAttachment(value) {
    return typeof value === "object" && value !== null && "id" in value && "name" in value && "url" in value && "size" in value && "type" in value && typeof value.id === "string" && typeof value.name === "string" && typeof value.url === "string" && typeof value.size === "number" && typeof value.type === "string";
  },
  /**
   * Check if value is a valid attachment array
   */
  isAttachmentArray(value) {
    return Array.isArray(value) && value.every(CellValueGuards.isAttachment) || value === null;
  },
  /**
   * Check if value is a valid link record
   */
  isLinkRecord(value) {
    return typeof value === "object" && value !== null && "id" in value && typeof value.id === "string";
  },
  /**
   * Check if value is a valid link record array
   */
  isLinkRecordArray(value) {
    return Array.isArray(value) && value.every(CellValueGuards.isLinkRecord) || value === null;
  }
};
var CellValueValidators = {
  /**
   * Validate cell value for a specific field type
   */
  validateForFieldType(value, fieldType) {
    switch (fieldType) {
      case FIELD_TYPES.SingleLineText:
      case FIELD_TYPES.LongText:
      case FIELD_TYPES.Email:
      case FIELD_TYPES.Phone:
      case FIELD_TYPES.URL:
      case FIELD_TYPES.Date:
      case FIELD_TYPES.CreatedTime:
      case FIELD_TYPES.LastModifiedTime:
        return CellValueGuards.isTextValue(value);
      case FIELD_TYPES.Number:
      case FIELD_TYPES.Rating:
      case FIELD_TYPES.AutoNumber:
      case FIELD_TYPES.Count:
      case FIELD_TYPES.Rollup:
        return CellValueGuards.isNumberValue(value);
      case FIELD_TYPES.Checkbox:
        return CellValueGuards.isBooleanValue(value);
      case FIELD_TYPES.SingleSelect:
        return CellValueGuards.isTextValue(value);
      case FIELD_TYPES.MultipleSelect:
        return CellValueGuards.isStringArrayValue(value);
      case FIELD_TYPES.User:
        return CellValueGuards.isUserReferenceArray(value);
      case FIELD_TYPES.CreatedBy:
      case FIELD_TYPES.LastModifiedBy:
        return CellValueGuards.isUserReference(value) || value === null;
      case FIELD_TYPES.Attachment:
        return CellValueGuards.isAttachmentArray(value);
      case FIELD_TYPES.Link:
        return CellValueGuards.isLinkRecordArray(value);
      case FIELD_TYPES.Formula:
        return CellValueGuards.isTextValue(value) || CellValueGuards.isNumberValue(value) || CellValueGuards.isBooleanValue(value);
      case FIELD_TYPES.Button:
        return value === null;
      default:
        return false;
    }
  }
};

// ../../packages/aitable/src/utils/type-guards.ts
function isString3(value) {
  return typeof value === "string";
}
function isNumber3(value) {
  return typeof value === "number" && !isNaN(value);
}
function isBoolean3(value) {
  return typeof value === "boolean";
}
function isArray3(value) {
  return Array.isArray(value);
}
function isNullish(value) {
  return value === null || value === void 0;
}
function safeString(value, defaultValue = "") {
  return isString3(value) ? value : defaultValue;
}
function safeNumber(value, defaultValue = 0) {
  return isNumber3(value) ? value : defaultValue;
}

// ../../packages/aitable/src/model/validation/field-validator.ts
var FieldValidator = class {
  /**
   * Validate a field value against its type and options
   */
  static validateValue(value, fieldType, options, rules) {
    const errors = [];
    if (rules?.required && isNullish(value)) {
      errors.push({
        code: "REQUIRED",
        message: "This field is required",
        value
      });
      return { isValid: false, errors };
    }
    if (isNullish(value)) {
      return { isValid: true, value: null, errors: [] };
    }
    const typeValidation = this.validateByType(value, fieldType, options);
    if (!typeValidation.isValid) {
      errors.push(...typeValidation.errors);
    }
    if (rules?.custom) {
      const customError = rules.custom(value);
      if (customError) {
        errors.push(customError);
      }
    }
    return {
      isValid: errors.length === 0,
      value: typeValidation.value,
      errors
    };
  }
  /**
   * Validate value by field type
   */
  static validateByType(value, fieldType, options) {
    switch (fieldType) {
      case FIELD_TYPES.SingleLineText:
      case FIELD_TYPES.LongText:
        return this.validateTextValue(
          value,
          options
        );
      case FIELD_TYPES.Number:
        return this.validateNumberValue(
          value,
          options
        );
      case FIELD_TYPES.SingleSelect:
        return this.validateSingleSelectValue(
          value,
          options
        );
      case FIELD_TYPES.MultipleSelect:
        return this.validateMultipleSelectValue(
          value,
          options
        );
      case FIELD_TYPES.Date:
        return this.validateDateValue(
          value,
          options
        );
      case FIELD_TYPES.Checkbox:
        return this.validateCheckboxValue(value);
      case FIELD_TYPES.Rating:
        return this.validateRatingValue(
          value,
          options
        );
      case FIELD_TYPES.Email:
        return this.validateEmailValue(value);
      case FIELD_TYPES.Phone:
        return this.validatePhoneValue(value);
      case FIELD_TYPES.URL:
        return this.validateURLValue(value);
      default:
        if (CellValueValidators.validateForFieldType(value, fieldType)) {
          return { isValid: true, value, errors: [] };
        }
        return {
          isValid: false,
          value: void 0,
          errors: [
            {
              code: "INVALID_TYPE",
              message: `Invalid value for field type ${fieldType}`,
              value
            }
          ]
        };
    }
  }
  /**
   * Validate text field value
   */
  static validateTextValue(value, options) {
    const stringValue = safeString(value);
    const errors = [];
    if (options.maxLength && stringValue.length > options.maxLength) {
      errors.push({
        code: "MAX_LENGTH_EXCEEDED",
        message: `Text exceeds maximum length of ${options.maxLength} characters`,
        value
      });
    }
    return {
      isValid: errors.length === 0,
      value: stringValue || null,
      errors
    };
  }
  /**
   * Validate number field value
   */
  static validateNumberValue(value, options) {
    const numberValue = safeNumber(value);
    const errors = [];
    if (numberValue === 0 && value !== 0 && value !== "0") {
      errors.push({
        code: "INVALID_NUMBER",
        message: "Value must be a valid number",
        value
      });
      return { isValid: false, value: null, errors };
    }
    if (options.min !== void 0 && numberValue < options.min) {
      errors.push({
        code: "MIN_VALUE_VIOLATION",
        message: `Value must be at least ${options.min}`,
        value
      });
    }
    if (options.max !== void 0 && numberValue > options.max) {
      errors.push({
        code: "MAX_VALUE_VIOLATION",
        message: `Value must be at most ${options.max}`,
        value
      });
    }
    const precision = options.precision ?? 0;
    const roundedValue = parseFloat(numberValue.toFixed(precision));
    return {
      isValid: errors.length === 0,
      value: roundedValue,
      errors
    };
  }
  /**
   * Validate single select field value
   */
  static validateSingleSelectValue(value, options) {
    if (!isString3(value)) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_SELECT_VALUE",
            message: "Select value must be a string",
            value
          }
        ]
      };
    }
    const validOption = options.options.find((opt) => opt.id === value);
    if (!validOption) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_SELECT_OPTION",
            message: "Selected value is not a valid option",
            value
          }
        ]
      };
    }
    return { isValid: true, value, errors: [] };
  }
  /**
   * Validate multiple select field value
   */
  static validateMultipleSelectValue(value, options) {
    if (!isArray3(value) || !value.every(isString3)) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_MULTI_SELECT_VALUE",
            message: "Multi-select value must be an array of strings",
            value
          }
        ]
      };
    }
    const validOptionIds = new Set(options.options.map((opt) => opt.id));
    const invalidValues = value.filter((id) => !validOptionIds.has(id));
    if (invalidValues.length > 0) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_MULTI_SELECT_OPTIONS",
            message: `Invalid options: ${invalidValues.join(", ")}`,
            value
          }
        ]
      };
    }
    return { isValid: true, value, errors: [] };
  }
  /**
   * Validate date field value
   */
  static validateDateValue(value, _options) {
    let dateValue = null;
    if (value instanceof Date) {
      dateValue = value;
    } else if (typeof value === "string" || typeof value === "number") {
      const parsed = new Date(value);
      if (!isNaN(parsed.getTime())) {
        dateValue = parsed;
      }
    }
    if (dateValue === null) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_DATE",
            message: "Value must be a valid date",
            value
          }
        ]
      };
    }
    return { isValid: true, value: dateValue.toISOString(), errors: [] };
  }
  /**
   * Validate checkbox field value
   */
  static validateCheckboxValue(value) {
    if (!isBoolean3(value)) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_BOOLEAN",
            message: "Checkbox value must be a boolean",
            value
          }
        ]
      };
    }
    return { isValid: true, value, errors: [] };
  }
  /**
   * Validate rating field value
   */
  static validateRatingValue(value, options) {
    const numberValue = safeNumber(value);
    if (numberValue === 0 && value !== 0 && value !== "0") {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_RATING",
            message: "Rating value must be a number",
            value
          }
        ]
      };
    }
    const max3 = options.max ?? 5;
    if (numberValue < 0 || numberValue > max3) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "RATING_OUT_OF_RANGE",
            message: `Rating must be between 0 and ${max3}`,
            value
          }
        ]
      };
    }
    return { isValid: true, value: Math.round(numberValue), errors: [] };
  }
  /**
   * Validate email field value
   */
  static validateEmailValue(value) {
    const stringValue = safeString(value);
    if (!stringValue) {
      return { isValid: true, value: null, errors: [] };
    }
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(stringValue)) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_EMAIL",
            message: "Value must be a valid email address",
            value
          }
        ]
      };
    }
    return { isValid: true, value: stringValue, errors: [] };
  }
  /**
   * Validate phone field value
   */
  static validatePhoneValue(value) {
    const stringValue = safeString(value);
    if (!stringValue) {
      return { isValid: true, value: null, errors: [] };
    }
    const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
    const cleanPhone = stringValue.replace(/[\s\-\(\)]/g, "");
    if (!phoneRegex.test(cleanPhone)) {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_PHONE",
            message: "Value must be a valid phone number",
            value
          }
        ]
      };
    }
    return { isValid: true, value: stringValue, errors: [] };
  }
  /**
   * Validate URL field value
   */
  static validateURLValue(value) {
    const stringValue = safeString(value);
    if (!stringValue) {
      return { isValid: true, value: null, errors: [] };
    }
    try {
      new URL(stringValue);
      return { isValid: true, value: stringValue, errors: [] };
    } catch {
      return {
        isValid: false,
        value: null,
        errors: [
          {
            code: "INVALID_URL",
            message: "Value must be a valid URL",
            value
          }
        ]
      };
    }
  }
};

// ../../packages/aitable/src/model/field/Field.ts
var Field = class {
  id;
  name;
  type;
  tableId;
  options;
  description;
  isComputed;
  isPrimary;
  createdTime;
  lastModifiedTime;
  validationRules;
  constructor(config) {
    this.id = config.id;
    this.name = config.name;
    this.type = config.type;
    this.tableId = config.tableId;
    this.options = config.options;
    this.description = config.description;
    this.isComputed = config.isComputed;
    this.isPrimary = config.isPrimary;
    this.createdTime = config.createdTime;
    this.lastModifiedTime = config.lastModifiedTime;
    this.validationRules = config.validationRules;
  }
  /**
   * Check if a value is empty
   */
  isEmpty(value) {
    return value === null || value === void 0 || value === "";
  }
  /**
   * Validate a value for this field (basic validation)
   * Subclasses can override for custom validation logic
   */
  validate(value) {
    return true;
  }
  /**
   * Validate with detailed result (advanced validation)
   */
  validateDetailed(value) {
    return FieldValidator.validateValue(
      value,
      this.type,
      this.options,
      this.validationRules
    );
  }
  /**
   * Get field configuration
   */
  toConfig() {
    return {
      id: this.id,
      name: this.name,
      type: this.type,
      tableId: this.tableId,
      options: this.options,
      description: this.description,
      isComputed: this.isComputed,
      isPrimary: this.isPrimary,
      createdTime: this.createdTime,
      lastModifiedTime: this.lastModifiedTime
    };
  }
  /**
   * Clone this field
   */
  clone() {
    return Object.create(Object.getPrototypeOf(this), {
      ...Object.getOwnPropertyDescriptors(this)
    });
  }
};

// ../../packages/aitable/src/model/field/TextField.ts
var TextField = class extends Field {
  /**
   * Constructor
   */
  constructor(config) {
    super(config);
  }
  /**
   * Get text field specific options
   */
  get textOptions() {
    return this.options;
  }
  /**
   * Validate text value
   *
   * @param value - Value to validate
   * @returns true if valid, false otherwise
   */
  validate(value) {
    if (this.isEmpty(value)) {
      if (this.validationRules?.required) {
        return false;
      }
      return true;
    }
    if (typeof value !== "string") {
      return false;
    }
    if (this.textOptions.maxLength !== void 0) {
      if (value.length > this.textOptions.maxLength) {
        return false;
      }
    }
    return true;
  }
  /**
   * Format text value for display
   *
   * @param value - Cell value
   * @returns Formatted string for display
   */
  format(value) {
    if (value === null || value === void 0 || value === "") {
      return "";
    }
    return String(value);
  }
  /**
   * Convert input value to cell value format
   *
   * @param value - Input value
   * @returns Typed cell value
   */
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    if (typeof value !== "string") {
      return String(value);
    }
    let result2 = value;
    if (this.type === FIELD_TYPES.SingleLineText) {
      result2 = value.replace(/[\r\n]+/g, " ");
    }
    if (this.textOptions.maxLength !== void 0) {
      result2 = result2.slice(0, this.textOptions.maxLength);
    }
    return result2 || null;
  }
  /**
   * Convert cell value to editable format
   *
   * @param cellValue - Stored cell value
   * @returns Editable value
   */
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return this.textOptions.defaultValue ?? "";
    }
    return String(cellValue);
  }
  /**
   * Get default empty value
   *
   * @returns Empty string
   */
  getDefaultValue() {
    return this.textOptions.defaultValue ?? "";
  }
  /**
   * Check if value is empty
   *
   * @param value - Value to check
   * @returns true if empty
   */
  isEmpty(value) {
    return value === null || value === void 0 || value === "";
  }
};

// ../../packages/aitable/src/model/field/NumberField.ts
var NumberField = class extends Field {
  /**
   * Constructor
   */
  constructor(config) {
    super(config);
  }
  /**
   * Get number field specific options
   */
  get numberOptions() {
    return this.options;
  }
  /**
   * Validate number value
   *
   * @param value - Value to validate
   * @returns true if valid, false otherwise
   */
  validate(value) {
    if (this.isEmpty(value)) {
      if (this.validationRules?.required) {
        return false;
      }
      return true;
    }
    if (typeof value !== "number") {
      return false;
    }
    if (isNaN(value) || !isFinite(value)) {
      return false;
    }
    if (this.numberOptions.min !== void 0) {
      if (value < this.numberOptions.min) {
        return false;
      }
    }
    if (this.numberOptions.max !== void 0) {
      if (value > this.numberOptions.max) {
        return false;
      }
    }
    return true;
  }
  /**
   * Format number value for display
   *
   * @param value - Cell value
   * @returns Formatted string for display
   */
  format(value) {
    if (value === null || value === void 0) {
      return "";
    }
    const num = value;
    const precision = this.numberOptions.precision ?? 0;
    const formatting = this.numberOptions.formatting || {};
    let formatted = num.toFixed(precision);
    if (formatting.showThousandsSeparator) {
      const parts = formatted.split(".");
      parts[0] = (parts[0] ?? "").replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      formatted = parts.join(".");
    }
    switch (formatting.type) {
      case "currency":
        return `${formatting.symbol || "$"}${formatted}`;
      case "percent":
        return `${formatted}%`;
      default:
        return formatted;
    }
  }
  /**
   * Convert input value to cell value format
   *
   * @param value - Input value
   * @returns Typed cell value
   */
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    let num;
    if (typeof value === "number") {
      num = value;
    } else if (typeof value === "string") {
      const cleaned = value.replace(/,/g, "").replace(/[^0-9.-]/g, "");
      num = parseFloat(cleaned);
    } else {
      return null;
    }
    if (isNaN(num) || !isFinite(num)) {
      return null;
    }
    const precision = this.numberOptions.precision ?? 0;
    num = parseFloat(num.toFixed(precision));
    if (this.numberOptions.min !== void 0) {
      num = Math.max(num, this.numberOptions.min);
    }
    if (this.numberOptions.max !== void 0) {
      num = Math.min(num, this.numberOptions.max);
    }
    return num;
  }
  /**
   * Convert cell value to editable format
   *
   * @param cellValue - Stored cell value
   * @returns Editable value
   */
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return this.numberOptions.defaultValue ?? null;
    }
    return cellValue;
  }
  /**
   * Get default value
   *
   * @returns Default number value
   */
  getDefaultValue() {
    return this.numberOptions.defaultValue ?? null;
  }
  /**
   * Check if value is empty
   *
   * @param value - Value to check
   * @returns true if empty
   */
  isEmpty(value) {
    return value === null || value === void 0 || value === "";
  }
  /**
   * Parse a formatted number string back to number
   * Useful for handling user input with formatting
   *
   * @param formatted - Formatted string
   * @returns Parsed number or null
   */
  parseFormatted(formatted) {
    if (!formatted || formatted.trim() === "") {
      return null;
    }
    const cleaned = formatted.replace(/,/g, "").replace(/[$%€£¥]/g, "").replace(/\s/g, "").trim();
    const num = parseFloat(cleaned);
    if (isNaN(num) || !isFinite(num)) {
      return null;
    }
    return num;
  }
};

// ../../packages/aitable/src/model/field/BooleanField.ts
var BooleanField = class extends Field {
  constructor(config) {
    super(config);
  }
  get checkboxOptions() {
    return this.options;
  }
  validate(value) {
    if (this.isEmpty(value)) {
      if (this.validationRules?.required) {
        return false;
      }
      return true;
    }
    return typeof value === "boolean";
  }
  format(value) {
    if (value === null || value === void 0) {
      return "";
    }
    return value ? "✓" : "";
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return this.checkboxOptions.defaultValue ?? null;
    }
    if (typeof value === "boolean") {
      return value;
    }
    if (typeof value === "string") {
      const lower = value.toLowerCase();
      if (lower === "true" || lower === "yes" || lower === "1") {
        return true;
      }
      if (lower === "false" || lower === "no" || lower === "0" || lower === "") {
        return false;
      }
    }
    if (typeof value === "number") {
      return value !== 0;
    }
    return Boolean(value);
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return this.checkboxOptions.defaultValue ?? false;
    }
    return Boolean(cellValue);
  }
  getDefaultValue() {
    return this.checkboxOptions.defaultValue ?? false;
  }
  isEmpty(value) {
    return value === null || value === void 0;
  }
};

// ../../packages/aitable/src/model/field/SelectField.ts
var SelectField = class extends Field {
  validate(value) {
    if (this.isEmpty(value)) {
      return true;
    }
    if (typeof value === "string") {
      return this.options.options?.some((opt) => opt.id === value) ?? false;
    }
    if (Array.isArray(value)) {
      return value.every(
        (id) => this.options.options?.some((opt) => opt.id === id) ?? false
      );
    }
    return false;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    if (typeof value === "string") {
      const option = this.options.options?.find(
        (opt) => opt.id === value
      );
      return option?.name ?? "";
    }
    if (Array.isArray(value)) {
      const names = value.map((id) => {
        const option = this.options.options?.find(
          (opt) => opt.id === id
        );
        return option?.name;
      }).filter(Boolean);
      return names.join(", ");
    }
    return "";
  }
  getEmptyValue() {
    return null;
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    if (typeof value === "string") {
      return value;
    }
    if (Array.isArray(value)) {
      return value.filter((id) => typeof id === "string");
    }
    return null;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return null;
    }
    if (typeof cellValue === "string") {
      return cellValue;
    }
    if (Array.isArray(cellValue)) {
      return cellValue;
    }
    return null;
  }
  /**
   * Get option by ID
   */
  getOption(id) {
    return this.options.options?.find((opt) => opt.id === id);
  }
  /**
   * Get options by IDs
   */
  getOptions(ids) {
    return ids.map((id) => this.getOption(id)).filter((opt) => opt !== void 0);
  }
};

// ../../packages/aitable/src/model/field/DateField.ts
var DateField = class extends Field {
  constructor(config) {
    super(config);
  }
  get dateOptions() {
    return this.options;
  }
  validate(value) {
    if (this.isEmpty(value)) {
      if (this.validationRules?.required) {
        return false;
      }
      return true;
    }
    if (typeof value === "string") {
      const date = new Date(value);
      return isValid(date);
    }
    if (value instanceof Date) {
      return isValid(value);
    }
    return false;
  }
  format(value) {
    if (value === null || value === void 0) {
      return "";
    }
    try {
      const date = parseISO(value);
      if (!isValid(date)) {
        return "";
      }
      const dateFormat = this.dateOptions.dateFormat ?? "YYYY-MM-DD";
      const timeFormat = this.dateOptions.timeFormat === "12" ? "hh:mm a" : "HH:mm";
      if (this.dateOptions.includeTime) {
        return format(date, `${dateFormat} ${timeFormat}`);
      }
      return format(date, dateFormat);
    } catch (error) {
      return "";
    }
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    try {
      let date;
      if (typeof value === "string") {
        date = new Date(value);
      } else if (value instanceof Date) {
        date = value;
      } else {
        return null;
      }
      if (!isValid(date)) {
        return null;
      }
      return date.toISOString();
    } catch (error) {
      return null;
    }
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return this.dateOptions.defaultValue ? new Date(this.dateOptions.defaultValue) : null;
    }
    try {
      const date = parseISO(cellValue);
      return isValid(date) ? date : null;
    } catch (error) {
      return null;
    }
  }
  getDefaultValue() {
    return this.dateOptions.defaultValue ?? null;
  }
  isEmpty(value) {
    return value === null || value === void 0 || value === "";
  }
};

// ../../packages/aitable/src/model/field/RatingField.ts
var RatingField = class extends Field {
  constructor(config) {
    super(config);
  }
  get ratingOptions() {
    return this.options;
  }
  validate(value) {
    if (this.isEmpty(value)) {
      if (this.validationRules?.required) {
        return false;
      }
      return true;
    }
    if (typeof value !== "number") {
      return false;
    }
    const max3 = this.ratingOptions.max ?? 5;
    return value >= 0 && value <= max3 && Number.isInteger(value);
  }
  format(value) {
    if (value === null || value === void 0) {
      return "";
    }
    const max3 = this.ratingOptions.max ?? 5;
    const icon = this.getIcon();
    const filled = icon.repeat(value);
    const empty = "☆".repeat(Math.max(0, max3 - value));
    return filled + empty;
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    let rating;
    if (typeof value === "number") {
      rating = value;
    } else if (typeof value === "string") {
      rating = parseInt(value, 10);
    } else {
      return null;
    }
    if (isNaN(rating)) {
      return null;
    }
    const max3 = this.ratingOptions.max ?? 5;
    return Math.max(0, Math.min(max3, Math.floor(rating)));
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return this.ratingOptions.defaultValue ?? 0;
    }
    return cellValue;
  }
  getDefaultValue() {
    return this.ratingOptions.defaultValue ?? 0;
  }
  isEmpty(value) {
    return value === null || value === void 0;
  }
  /**
   * Get icon character based on icon type
   */
  getIcon() {
    const iconMap = {
      star: "★",
      heart: "♥",
      thumbs: "👍",
      fire: "🔥",
      smile: "😊"
    };
    return iconMap[this.ratingOptions.icon ?? "star"] ?? "★";
  }
};

// ../../packages/aitable/src/model/field/LinkField.ts
var LinkField = class extends Field {
  validate(value) {
    if (this.isEmpty(value)) {
      return true;
    }
    if (typeof value === "string") {
      return true;
    }
    if (Array.isArray(value)) {
      return value.every((item) => {
        if (typeof item === "string") {
          return true;
        }
        if (item && typeof item === "object" && "id" in item) {
          return true;
        }
        return false;
      });
    }
    if (value && typeof value === "object" && "id" in value) {
      return true;
    }
    return false;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    if (typeof value === "string") {
      return value;
    }
    if (value && typeof value === "object" && "id" in value) {
      const record = value;
      return record.title ?? record.id;
    }
    if (Array.isArray(value)) {
      return value.map((item) => {
        if (typeof item === "string") {
          return item;
        }
        if (item && typeof item === "object" && "id" in item) {
          return item.title ?? item.id;
        }
        return "";
      }).filter(Boolean).join(", ");
    }
    return "";
  }
  getEmptyValue() {
    return null;
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    if (typeof value === "string" || Array.isArray(value) || value && typeof value === "object") {
      return value;
    }
    return null;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return null;
    }
    return cellValue;
  }
  /**
   * Check if this is a many relationship
   */
  isManyRelationship() {
    return this.options.relationship === "manyMany" || this.options.relationship === "manyOne";
  }
  /**
   * Extract linked record IDs
   */
  getLinkedIds(value) {
    if (this.isEmpty(value)) {
      return [];
    }
    if (typeof value === "string") {
      return [value];
    }
    if (value && typeof value === "object" && "id" in value) {
      return [value.id];
    }
    if (Array.isArray(value)) {
      return value.map((item) => {
        if (typeof item === "string") {
          return item;
        }
        if (item && typeof item === "object" && "id" in item) {
          return item.id;
        }
        return "";
      }).filter(Boolean);
    }
    return [];
  }
};

// ../../packages/aitable/src/model/field/UserField.ts
var UserField = class extends Field {
  validate(value) {
    if (this.isEmpty(value)) {
      return true;
    }
    if (typeof value === "string") {
      return true;
    }
    if (value && typeof value === "object" && "id" in value) {
      return true;
    }
    if (Array.isArray(value)) {
      return value.every((item) => {
        if (typeof item === "string") {
          return true;
        }
        if (item && typeof item === "object" && "id" in item) {
          return true;
        }
        return false;
      });
    }
    return false;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    if (typeof value === "string") {
      return value;
    }
    if (value && typeof value === "object" && "id" in value) {
      const user = value;
      return user.name ?? user.email ?? user.id;
    }
    if (Array.isArray(value)) {
      return value.map((item) => {
        if (typeof item === "string") {
          return item;
        }
        if (item && typeof item === "object" && "id" in item) {
          const user = item;
          return user.name ?? user.email ?? user.id;
        }
        return "";
      }).filter(Boolean).join(", ");
    }
    return "";
  }
  getEmptyValue() {
    return null;
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    return value;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return null;
    }
    return cellValue;
  }
  /**
   * Extract user IDs from value
   */
  getUserIds(value) {
    if (this.isEmpty(value)) {
      return [];
    }
    if (typeof value === "string") {
      return [value];
    }
    if (value && typeof value === "object" && "id" in value) {
      return [value.id];
    }
    if (Array.isArray(value)) {
      return value.map((item) => {
        if (typeof item === "string") {
          return item;
        }
        if (item && typeof item === "object" && "id" in item) {
          return item.id;
        }
        return "";
      }).filter(Boolean);
    }
    return [];
  }
  /**
   * Check if multiple users are allowed
   */
  isMultiple() {
    return this.options.isMultiple ?? false;
  }
};

// ../../packages/aitable/src/model/field/AttachmentField.ts
var AttachmentField = class extends Field {
  validate(value) {
    if (this.isEmpty(value)) {
      return true;
    }
    if (Array.isArray(value)) {
      return value.every(
        (item) => item && typeof item === "object" && "id" in item && "name" in item && "size" in item && "type" in item
      );
    }
    return false;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    if (Array.isArray(value)) {
      const attachments = value;
      return attachments.map((att) => att.name).join(", ");
    }
    return "";
  }
  getEmptyValue() {
    return [];
  }
  toCellValue(value) {
    if (this.isEmpty(value)) {
      return null;
    }
    if (Array.isArray(value)) {
      return value;
    }
    return null;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return [];
    }
    if (Array.isArray(cellValue)) {
      return cellValue;
    }
    return [];
  }
  /**
   * Get total size of all attachments in bytes
   */
  getTotalSize(value) {
    const attachments = this.fromCellValue(value);
    return attachments.reduce((total, att) => total + (att.size || 0), 0);
  }
  /**
   * Get attachment count
   */
  getCount(value) {
    const attachments = this.fromCellValue(value);
    return attachments.length;
  }
  /**
   * Check if attachments include images
   */
  hasImages(value) {
    const attachments = this.fromCellValue(value);
    return attachments.some((att) => att.type.startsWith("image/"));
  }
  /**
   * Get image attachments only
   */
  getImages(value) {
    const attachments = this.fromCellValue(value);
    return attachments.filter((att) => att.type.startsWith("image/"));
  }
};

// ../../packages/aitable/src/model/field/FormulaField.ts
var FormulaField = class extends Field {
  constructor(config) {
    super(config);
    this.isComputed = true;
  }
  validate(value) {
    return true;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    const formatting = this.options.formatting;
    switch (formatting?.type) {
      case "number":
        if (typeof value === "number") {
          const precision = formatting.precision ?? 0;
          return value.toFixed(precision);
        }
        return String(value);
      case "date":
        if (value instanceof Date || typeof value === "string") {
          return String(value);
        }
        return String(value);
      case "boolean":
        return value ? "true" : "false";
      case "text":
      default:
        return String(value);
    }
  }
  getEmptyValue() {
    return null;
  }
  toCellValue(value) {
    return value;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return null;
    }
    return cellValue;
  }
  /**
   * Get formula expression
   */
  getExpression() {
    return this.options.expression ?? "";
  }
  /**
   * Check if formula is valid
   */
  hasValidExpression() {
    return Boolean(
      this.options.expression && this.options.expression.trim().length > 0
    );
  }
};

// ../../packages/aitable/src/model/field/RollupField.ts
var RollupField = class extends Field {
  constructor(config) {
    super(config);
    this.isComputed = true;
  }
  validate(value) {
    return true;
  }
  format(value) {
    if (this.isEmpty(value)) {
      return "";
    }
    const formatting = this.options.formatting;
    switch (formatting?.type) {
      case "number":
        if (typeof value === "number") {
          const precision = formatting.precision ?? 0;
          return value.toFixed(precision);
        }
        return String(value);
      case "date":
        if (value instanceof Date || typeof value === "string") {
          return String(value);
        }
        return String(value);
      case "text":
      default:
        if (Array.isArray(value)) {
          return value.join(", ");
        }
        return String(value);
    }
  }
  getEmptyValue() {
    return null;
  }
  toCellValue(value) {
    return value;
  }
  fromCellValue(cellValue) {
    if (cellValue === null || cellValue === void 0) {
      return null;
    }
    return cellValue;
  }
  /**
   * Get rollup configuration
   */
  getRollupConfig() {
    return {
      linkFieldId: this.options.expression?.linkFieldId,
      foreignFieldId: this.options.expression?.foreignFieldId,
      func: this.options.expression?.func
    };
  }
  /**
   * Check if rollup is properly configured
   */
  hasValidConfig() {
    const config = this.getRollupConfig();
    return Boolean(config.linkFieldId && config.foreignFieldId && config.func);
  }
  /**
   * Get rollup function
   */
  getRollupFunc() {
    return this.options.expression?.func;
  }
};

// ../../packages/aitable/src/model/field/factory.ts
function createFieldInstance(field) {
  const config = {
    id: field.id,
    name: field.name,
    type: field.type,
    tableId: field.tableId,
    options: field.options,
    description: field.description,
    isComputed: field.isComputed,
    isPrimary: field.isPrimary,
    createdTime: field.createdTime,
    lastModifiedTime: field.lastModifiedTime
  };
  switch (field.type) {
    case "singleLineText":
    case "longText":
      return new TextField(config);
    case "number":
      return new NumberField(config);
    case "checkbox":
      return new BooleanField(config);
    case "singleSelect":
    case "multipleSelect":
      return new SelectField(config);
    case "date":
      return new DateField(config);
    case "rating":
      return new RatingField(config);
    case "link":
      return new LinkField(config);
    case "user":
      return new UserField(config);
    case "attachment":
      return new AttachmentField(config);
    case "formula":
      return new FormulaField(config);
    case "rollup":
    case "count":
      return new RollupField(config);
    // Auto number and system fields - treat as text
    case "autoNumber":
    case "createdTime":
    case "lastModifiedTime":
    case "createdBy":
    case "lastModifiedBy":
      return new TextField(config);
    case "button":
      return new TextField(config);
    default:
      console.warn(`Unknown field type: ${field.type}, using TextField`);
      return new TextField(config);
  }
}
function createFieldInstances(fields) {
  return fields.map(createFieldInstance);
}

// ../../packages/aitable/src/context/field/FieldContext.tsx
var import_jsx_runtime30 = __toESM(require_jsx_runtime(), 1);
var FieldContext = (0, import_react186.createContext)(null);
function FieldProvider({
  tableId,
  apiClient,
  children
}) {
  const queryClient2 = useQueryClient();
  const { data: rawFields = [], isLoading } = useQuery({
    queryKey: ["fields", tableId],
    queryFn: () => apiClient.getFields(tableId),
    enabled: !!tableId
  });
  const fields = (0, import_react186.useMemo)(
    () => rawFields.map((field) => createFieldInstance(field)),
    [rawFields]
  );
  const getField = (id) => fields.find((f) => f.id === id);
  const createMutation = useMutation({
    mutationFn: (data) => apiClient.createField(tableId, data),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["fields", tableId] });
    }
  });
  const updateMutation = useMutation({
    mutationFn: ({ id, data }) => apiClient.updateField(tableId, id, data),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["fields", tableId] });
    }
  });
  const deleteMutation = useMutation({
    mutationFn: (id) => apiClient.deleteField(tableId, id),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["fields", tableId] });
    }
  });
  const convertMutation = useMutation({
    mutationFn: ({ id, newType }) => apiClient.convertField(tableId, id, newType),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["fields", tableId] });
    }
  });
  return (0, import_jsx_runtime30.jsx)(
    FieldContext.Provider,
    {
      value: {
        fields,
        getField,
        isLoading,
        createField: async (data) => {
          const result2 = await createMutation.mutateAsync(data);
          return createFieldInstance(result2);
        },
        updateField: async (id, data) => {
          const result2 = await updateMutation.mutateAsync({ id, data });
          return createFieldInstance(result2);
        },
        deleteField: deleteMutation.mutateAsync,
        convertField: async (id, newType) => {
          const result2 = await convertMutation.mutateAsync({ id, newType });
          return createFieldInstance(result2);
        }
      },
      children
    }
  );
}
function useField() {
  const context = (0, import_react186.useContext)(FieldContext);
  if (!context) {
    throw new Error("useField must be used within FieldProvider");
  }
  return context;
}

// ../../packages/aitable/src/components/field-config/EnhancedEditFieldDialog.tsx
var import_jsx_runtime31 = __toESM(require_jsx_runtime(), 1);
function EnhancedEditFieldDialog({
  isOpen,
  field,
  onClose,
  onSuccess,
  onError
}) {
  const { updateField } = useField();
  const [formData, setFormData] = (0, import_react187.useState)({});
  const [activeTab, setActiveTab] = (0, import_react187.useState)("basic");
  const [isSaving, setIsSaving] = (0, import_react187.useState)(false);
  const [saveError, setSaveError] = (0, import_react187.useState)(null);
  const [validationErrors, setValidationErrors] = (0, import_react187.useState)({});
  (0, import_react187.useEffect)(() => {
    if (field) {
      setFormData({
        name: field.name,
        description: field.description,
        required: field.required,
        visible: field.visible,
        options: field.options || [],
        defaultValue: field.defaultValue,
        validation: field.validation || {}
      });
      setSaveError(null);
      setValidationErrors({});
    }
  }, [field]);
  const validateForm2 = (0, import_react187.useCallback)(() => {
    const errors = {};
    if (!formData.name?.trim()) {
      errors.name = "字段名称不能为空";
    } else if (formData.name.trim().length > 50) {
      errors.name = "字段名称不能超过50个字符";
    }
    if (formData.description && formData.description.length > 200) {
      errors.description = "字段描述不能超过200个字符";
    }
    if (formData.options) {
      const emptyOptions = formData.options.filter((option) => !option.trim());
      if (emptyOptions.length > 0) {
        errors.options = "选项不能为空";
      }
    }
    if (formData.validation?.min !== void 0 && formData.validation?.max !== void 0) {
      if (formData.validation.min >= formData.validation.max) {
        errors.validation = "最小值必须小于最大值";
      }
    }
    setValidationErrors(errors);
    return Object.keys(errors).length === 0;
  }, [formData]);
  const handleSave = (0, import_react187.useCallback)(async () => {
    if (!field || !formData.name?.trim()) return;
    if (!validateForm2()) {
      setSaveError("请检查表单中的错误");
      return;
    }
    setIsSaving(true);
    setSaveError(null);
    try {
      await updateField(field.id, {
        name: formData.name.trim(),
        description: formData.description?.trim() || "",
        options: formData.options || [],
        validation: formData.validation || {}
      });
      onSuccess?.(field);
      onClose();
    } catch (error) {
      console.error("❌ 字段保存失败:", error);
      const errorMessage = error.message || "保存失败，请重试";
      setSaveError(errorMessage);
      onError?.(error);
    } finally {
      setIsSaving(false);
    }
  }, [field, formData, validateForm2, updateField, onSuccess, onClose, onError]);
  const handleKeyPress = (0, import_react187.useCallback)(
    (e2) => {
      if (e2.key === "Enter" && e2.ctrlKey) {
        e2.preventDefault();
        handleSave();
      } else if (e2.key === "Escape") {
        e2.preventDefault();
        onClose();
      }
    },
    [handleSave, onClose]
  );
  const updateFormData = (0, import_react187.useCallback)((updates) => {
    setFormData((prev) => ({ ...prev, ...updates }));
    if (updates.name) setValidationErrors((prev) => ({ ...prev, name: "" }));
    if (updates.description)
      setValidationErrors((prev) => ({ ...prev, description: "" }));
    if (updates.options)
      setValidationErrors((prev) => ({ ...prev, options: "" }));
    if (updates.validation)
      setValidationErrors((prev) => ({ ...prev, validation: "" }));
  }, []);
  const addOption = (0, import_react187.useCallback)(() => {
    const newOptions = [...formData.options || [], ""];
    updateFormData({ options: newOptions });
  }, [formData.options, updateFormData]);
  const updateOption = (0, import_react187.useCallback)(
    (index3, value) => {
      const newOptions = [...formData.options || []];
      newOptions[index3] = value;
      updateFormData({ options: newOptions });
    },
    [formData.options, updateFormData]
  );
  const removeOption = (0, import_react187.useCallback)(
    (index3) => {
      const newOptions = (formData.options || []).filter((_2, i) => i !== index3);
      updateFormData({ options: newOptions });
    },
    [formData.options, updateFormData]
  );
  if (!isOpen || !field) return null;
  const tabs = [
    { id: "basic", label: "基础设置", icon: Settings },
    { id: "options", label: "选项配置", icon: Palette },
    { id: "validation", label: "验证规则", icon: SquareCheckBig }
  ];
  return (0, import_jsx_runtime31.jsxs)(import_jsx_runtime31.Fragment, { children: [
    (0, import_jsx_runtime31.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: "rgba(0, 0, 0, 0.5)",
          zIndex: 9998,
          display: "flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: onClose,
        children: (0, import_jsx_runtime31.jsxs)(
          "div",
          {
            style: {
              backgroundColor: "white",
              borderRadius: "12px",
              boxShadow: elevation.large,
              width: "600px",
              maxWidth: "90vw",
              maxHeight: "80vh",
              display: "flex",
              flexDirection: "column",
              overflow: "hidden"
            },
            onClick: (e2) => e2.stopPropagation(),
            onKeyDown: handleKeyPress,
            tabIndex: -1,
            children: [
              (0, import_jsx_runtime31.jsxs)(
                "div",
                {
                  style: {
                    padding: "20px 24px 16px",
                    borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "space-between"
                  },
                  children: [
                    (0, import_jsx_runtime31.jsx)(
                      "h2",
                      {
                        style: {
                          fontSize: "18px",
                          fontWeight: 600,
                          color: tokens.colors.text.primary,
                          margin: 0
                        },
                        children: "编辑字段"
                      }
                    ),
                    (0, import_jsx_runtime31.jsx)(
                      "button",
                      {
                        onClick: onClose,
                        style: {
                          background: "none",
                          border: "none",
                          cursor: "pointer",
                          padding: "4px",
                          borderRadius: "4px",
                          color: tokens.colors.text.secondary,
                          transition: transitions.presets.all
                        },
                        onMouseEnter: (e2) => {
                          e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                        },
                        onMouseLeave: (e2) => {
                          e2.currentTarget.style.backgroundColor = "transparent";
                        },
                        children: (0, import_jsx_runtime31.jsx)(X2, { size: 20 })
                      }
                    )
                  ]
                }
              ),
              (0, import_jsx_runtime31.jsx)(
                "div",
                {
                  style: {
                    display: "flex",
                    borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                    backgroundColor: tokens.colors.surface.base
                  },
                  children: tabs.map((tab) => {
                    const IconComponent = tab.icon;
                    const isActive = activeTab === tab.id;
                    return (0, import_jsx_runtime31.jsxs)(
                      "button",
                      {
                        onClick: () => setActiveTab(tab.id),
                        style: {
                          flex: 1,
                          padding: "12px 16px",
                          border: "none",
                          background: "transparent",
                          cursor: "pointer",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          gap: "8px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: isActive ? tokens.colors.primary[600] : tokens.colors.text.secondary,
                          borderBottom: isActive ? `2px solid ${tokens.colors.primary[600]}` : "2px solid transparent",
                          transition: transitions.presets.all
                        },
                        onMouseEnter: (e2) => {
                          if (!isActive) {
                            e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                          }
                        },
                        onMouseLeave: (e2) => {
                          if (!isActive) {
                            e2.currentTarget.style.backgroundColor = "transparent";
                          }
                        },
                        children: [
                          (0, import_jsx_runtime31.jsx)(IconComponent, { size: 16 }),
                          tab.label
                        ]
                      },
                      tab.id
                    );
                  })
                }
              ),
              (0, import_jsx_runtime31.jsxs)(
                "div",
                {
                  style: {
                    flex: 1,
                    padding: "24px",
                    overflow: "auto"
                  },
                  children: [
                    activeTab === "basic" && (0, import_jsx_runtime31.jsxs)("div", { children: [
                      (0, import_jsx_runtime31.jsxs)("div", { style: { marginBottom: "20px" }, children: [
                        (0, import_jsx_runtime31.jsx)(
                          "label",
                          {
                            style: {
                              display: "block",
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "8px"
                            },
                            children: "字段名称 *"
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "input",
                          {
                            type: "text",
                            value: formData.name || "",
                            onChange: (e2) => updateFormData({ name: e2.target.value }),
                            placeholder: "请输入字段名称",
                            style: {
                              width: "100%",
                              padding: "10px 12px",
                              border: `1px solid ${validationErrors.name ? tokens.colors.border.destructive : tokens.colors.border.subtle}`,
                              borderRadius: "6px",
                              fontSize: "14px",
                              transition: transitions.presets.all
                            },
                            onFocus: (e2) => {
                              e2.target.style.borderColor = tokens.colors.primary[500];
                            },
                            onBlur: (e2) => {
                              e2.target.style.borderColor = validationErrors.name ? tokens.colors.border.destructive : tokens.colors.border.subtle;
                            }
                          }
                        ),
                        validationErrors.name && (0, import_jsx_runtime31.jsxs)(
                          "div",
                          {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              gap: "4px",
                              marginTop: "4px",
                              color: tokens.colors.text.destructive,
                              fontSize: "12px"
                            },
                            children: [
                              (0, import_jsx_runtime31.jsx)(CircleAlert, { size: 12 }),
                              validationErrors.name
                            ]
                          }
                        )
                      ] }),
                      (0, import_jsx_runtime31.jsxs)("div", { style: { marginBottom: "20px" }, children: [
                        (0, import_jsx_runtime31.jsx)(
                          "label",
                          {
                            style: {
                              display: "block",
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "8px"
                            },
                            children: "字段描述"
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "textarea",
                          {
                            value: formData.description || "",
                            onChange: (e2) => updateFormData({ description: e2.target.value }),
                            placeholder: "请输入字段描述（可选）",
                            rows: 3,
                            style: {
                              width: "100%",
                              padding: "10px 12px",
                              border: `1px solid ${validationErrors.description ? tokens.colors.border.destructive : tokens.colors.border.subtle}`,
                              borderRadius: "6px",
                              fontSize: "14px",
                              resize: "vertical",
                              transition: transitions.presets.all
                            },
                            onFocus: (e2) => {
                              e2.target.style.borderColor = tokens.colors.primary[500];
                            },
                            onBlur: (e2) => {
                              e2.target.style.borderColor = validationErrors.description ? tokens.colors.border.destructive : tokens.colors.border.subtle;
                            }
                          }
                        ),
                        validationErrors.description && (0, import_jsx_runtime31.jsxs)(
                          "div",
                          {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              gap: "4px",
                              marginTop: "4px",
                              color: tokens.colors.text.destructive,
                              fontSize: "12px"
                            },
                            children: [
                              (0, import_jsx_runtime31.jsx)(CircleAlert, { size: 12 }),
                              validationErrors.description
                            ]
                          }
                        )
                      ] }),
                      (0, import_jsx_runtime31.jsxs)(
                        "div",
                        {
                          style: {
                            display: "flex",
                            flexDirection: "column",
                            gap: "12px"
                          },
                          children: [
                            (0, import_jsx_runtime31.jsx)(
                              "div",
                              {
                                style: {
                                  display: "flex",
                                  alignItems: "center",
                                  gap: "12px"
                                },
                                children: (0, import_jsx_runtime31.jsxs)(
                                  "label",
                                  {
                                    style: {
                                      display: "flex",
                                      alignItems: "center",
                                      gap: "8px",
                                      fontSize: "14px",
                                      color: tokens.colors.text.primary,
                                      cursor: "pointer"
                                    },
                                    children: [
                                      (0, import_jsx_runtime31.jsx)(
                                        "input",
                                        {
                                          type: "checkbox",
                                          checked: formData.required || false,
                                          onChange: (e2) => updateFormData({ required: e2.target.checked }),
                                          style: {
                                            width: "16px",
                                            height: "16px",
                                            accentColor: tokens.colors.primary[600]
                                          }
                                        }
                                      ),
                                      (0, import_jsx_runtime31.jsx)("span", { children: "必填字段" })
                                    ]
                                  }
                                )
                              }
                            ),
                            (0, import_jsx_runtime31.jsx)(
                              "div",
                              {
                                style: {
                                  display: "flex",
                                  alignItems: "center",
                                  gap: "12px"
                                },
                                children: (0, import_jsx_runtime31.jsxs)(
                                  "label",
                                  {
                                    style: {
                                      display: "flex",
                                      alignItems: "center",
                                      gap: "8px",
                                      fontSize: "14px",
                                      color: tokens.colors.text.primary,
                                      cursor: "pointer"
                                    },
                                    children: [
                                      (0, import_jsx_runtime31.jsx)(
                                        "input",
                                        {
                                          type: "checkbox",
                                          checked: formData.visible !== false,
                                          onChange: (e2) => updateFormData({ visible: e2.target.checked }),
                                          style: {
                                            width: "16px",
                                            height: "16px",
                                            accentColor: tokens.colors.primary[600]
                                          }
                                        }
                                      ),
                                      (0, import_jsx_runtime31.jsx)("span", { children: "显示字段" })
                                    ]
                                  }
                                )
                              }
                            )
                          ]
                        }
                      )
                    ] }),
                    activeTab === "options" && (0, import_jsx_runtime31.jsxs)("div", { children: [
                      field.type === "select" && (0, import_jsx_runtime31.jsx)(import_jsx_runtime31.Fragment, { children: (0, import_jsx_runtime31.jsxs)("div", { style: { marginBottom: "16px" }, children: [
                        (0, import_jsx_runtime31.jsx)(
                          "label",
                          {
                            style: {
                              display: "block",
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "8px"
                            },
                            children: "选项列表"
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "div",
                          {
                            style: {
                              display: "flex",
                              flexDirection: "column",
                              gap: "8px"
                            },
                            children: (formData.options || []).map((option, index3) => (0, import_jsx_runtime31.jsxs)(
                              "div",
                              {
                                style: {
                                  display: "flex",
                                  gap: "8px",
                                  alignItems: "center"
                                },
                                children: [
                                  (0, import_jsx_runtime31.jsx)(
                                    "input",
                                    {
                                      type: "text",
                                      value: option,
                                      onChange: (e2) => updateOption(index3, e2.target.value),
                                      placeholder: `选项 ${index3 + 1}`,
                                      style: {
                                        flex: 1,
                                        padding: "8px 12px",
                                        border: `1px solid ${tokens.colors.border.subtle}`,
                                        borderRadius: "4px",
                                        fontSize: "14px"
                                      }
                                    }
                                  ),
                                  (0, import_jsx_runtime31.jsx)(
                                    "button",
                                    {
                                      onClick: () => removeOption(index3),
                                      style: {
                                        padding: "8px",
                                        border: "none",
                                        background: tokens.colors.surface.destructive,
                                        color: tokens.colors.text.inverse,
                                        borderRadius: "4px",
                                        cursor: "pointer",
                                        fontSize: "12px"
                                      },
                                      children: "删除"
                                    }
                                  )
                                ]
                              },
                              index3
                            ))
                          }
                        ),
                        validationErrors.options && (0, import_jsx_runtime31.jsxs)(
                          "div",
                          {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              gap: "4px",
                              marginTop: "4px",
                              color: tokens.colors.text.destructive,
                              fontSize: "12px"
                            },
                            children: [
                              (0, import_jsx_runtime31.jsx)(CircleAlert, { size: 12 }),
                              validationErrors.options
                            ]
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "button",
                          {
                            onClick: addOption,
                            style: {
                              marginTop: "12px",
                              padding: "8px 16px",
                              border: `1px solid ${tokens.colors.border.subtle}`,
                              background: "transparent",
                              color: tokens.colors.text.primary,
                              borderRadius: "4px",
                              cursor: "pointer",
                              fontSize: "14px"
                            },
                            children: "+ 添加选项"
                          }
                        )
                      ] }) }),
                      (0, import_jsx_runtime31.jsxs)("div", { children: [
                        (0, import_jsx_runtime31.jsx)(
                          "label",
                          {
                            style: {
                              display: "block",
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "8px"
                            },
                            children: "默认值"
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "input",
                          {
                            type: "text",
                            value: formData.defaultValue || "",
                            onChange: (e2) => updateFormData({ defaultValue: e2.target.value }),
                            placeholder: "请输入默认值（可选）",
                            style: {
                              width: "100%",
                              padding: "10px 12px",
                              border: `1px solid ${tokens.colors.border.subtle}`,
                              borderRadius: "6px",
                              fontSize: "14px"
                            }
                          }
                        )
                      ] })
                    ] }),
                    activeTab === "validation" && (0, import_jsx_runtime31.jsxs)("div", { children: [
                      field.type === "number" && (0, import_jsx_runtime31.jsxs)(import_jsx_runtime31.Fragment, { children: [
                        (0, import_jsx_runtime31.jsxs)("div", { style: { marginBottom: "20px" }, children: [
                          (0, import_jsx_runtime31.jsx)(
                            "label",
                            {
                              style: {
                                display: "block",
                                fontSize: "14px",
                                fontWeight: 500,
                                color: tokens.colors.text.primary,
                                marginBottom: "8px"
                              },
                              children: "最小值"
                            }
                          ),
                          (0, import_jsx_runtime31.jsx)(
                            "input",
                            {
                              type: "number",
                              value: formData.validation?.min || "",
                              onChange: (e2) => updateFormData({
                                validation: {
                                  ...formData.validation,
                                  min: e2.target.value ? Number(e2.target.value) : void 0
                                }
                              }),
                              placeholder: "最小值",
                              style: {
                                width: "100%",
                                padding: "10px 12px",
                                border: `1px solid ${tokens.colors.border.subtle}`,
                                borderRadius: "6px",
                                fontSize: "14px"
                              }
                            }
                          )
                        ] }),
                        (0, import_jsx_runtime31.jsxs)("div", { style: { marginBottom: "20px" }, children: [
                          (0, import_jsx_runtime31.jsx)(
                            "label",
                            {
                              style: {
                                display: "block",
                                fontSize: "14px",
                                fontWeight: 500,
                                color: tokens.colors.text.primary,
                                marginBottom: "8px"
                              },
                              children: "最大值"
                            }
                          ),
                          (0, import_jsx_runtime31.jsx)(
                            "input",
                            {
                              type: "number",
                              value: formData.validation?.max || "",
                              onChange: (e2) => updateFormData({
                                validation: {
                                  ...formData.validation,
                                  max: e2.target.value ? Number(e2.target.value) : void 0
                                }
                              }),
                              placeholder: "最大值",
                              style: {
                                width: "100%",
                                padding: "10px 12px",
                                border: `1px solid ${tokens.colors.border.subtle}`,
                                borderRadius: "6px",
                                fontSize: "14px"
                              }
                            }
                          )
                        ] })
                      ] }),
                      field.type === "text" && (0, import_jsx_runtime31.jsxs)("div", { children: [
                        (0, import_jsx_runtime31.jsx)(
                          "label",
                          {
                            style: {
                              display: "block",
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "8px"
                            },
                            children: "正则表达式验证"
                          }
                        ),
                        (0, import_jsx_runtime31.jsx)(
                          "input",
                          {
                            type: "text",
                            value: formData.validation?.pattern || "",
                            onChange: (e2) => updateFormData({
                              validation: {
                                ...formData.validation,
                                pattern: e2.target.value
                              }
                            }),
                            placeholder: "例如：^[a-zA-Z0-9]+$",
                            style: {
                              width: "100%",
                              padding: "10px 12px",
                              border: `1px solid ${tokens.colors.border.subtle}`,
                              borderRadius: "6px",
                              fontSize: "14px"
                            }
                          }
                        )
                      ] }),
                      validationErrors.validation && (0, import_jsx_runtime31.jsxs)(
                        "div",
                        {
                          style: {
                            display: "flex",
                            alignItems: "center",
                            gap: "4px",
                            marginTop: "8px",
                            color: tokens.colors.text.destructive,
                            fontSize: "12px"
                          },
                          children: [
                            (0, import_jsx_runtime31.jsx)(CircleAlert, { size: 12 }),
                            validationErrors.validation
                          ]
                        }
                      )
                    ] })
                  ]
                }
              ),
              saveError && (0, import_jsx_runtime31.jsx)(
                "div",
                {
                  style: {
                    padding: "12px 24px",
                    backgroundColor: "#fef2f2",
                    borderTop: "1px solid #fecaca",
                    borderBottom: "1px solid #fecaca"
                  },
                  children: (0, import_jsx_runtime31.jsxs)(
                    "div",
                    {
                      style: {
                        display: "flex",
                        alignItems: "center",
                        gap: "8px",
                        color: "#dc2626",
                        fontSize: "14px"
                      },
                      children: [
                        (0, import_jsx_runtime31.jsx)(CircleAlert, { size: 16 }),
                        (0, import_jsx_runtime31.jsx)("span", { children: saveError })
                      ]
                    }
                  )
                }
              ),
              (0, import_jsx_runtime31.jsxs)(
                "div",
                {
                  style: {
                    padding: "16px 24px",
                    borderTop: `1px solid ${tokens.colors.border.subtle}`,
                    display: "flex",
                    justifyContent: "flex-end",
                    gap: "12px"
                  },
                  children: [
                    (0, import_jsx_runtime31.jsx)(
                      "button",
                      {
                        onClick: onClose,
                        disabled: isSaving,
                        style: {
                          padding: "8px 16px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: tokens.colors.text.secondary,
                          backgroundColor: "transparent",
                          border: `1px solid ${tokens.colors.border.subtle}`,
                          borderRadius: "6px",
                          cursor: isSaving ? "not-allowed" : "pointer",
                          transition: transitions.presets.all,
                          opacity: isSaving ? 0.5 : 1
                        },
                        children: "取消"
                      }
                    ),
                    (0, import_jsx_runtime31.jsx)(
                      "button",
                      {
                        onClick: handleSave,
                        disabled: !formData.name?.trim() || isSaving,
                        style: {
                          padding: "8px 16px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: formData.name?.trim() && !isSaving ? tokens.colors.text.inverse : tokens.colors.text.tertiary,
                          backgroundColor: formData.name?.trim() && !isSaving ? tokens.colors.primary[600] : tokens.colors.surface.disabled,
                          border: "none",
                          borderRadius: "6px",
                          cursor: formData.name?.trim() && !isSaving ? "pointer" : "not-allowed",
                          transition: transitions.presets.all,
                          display: "flex",
                          alignItems: "center",
                          gap: "6px",
                          opacity: isSaving ? 0.7 : 1
                        },
                        children: isSaving ? (0, import_jsx_runtime31.jsxs)(import_jsx_runtime31.Fragment, { children: [
                          (0, import_jsx_runtime31.jsx)(
                            "div",
                            {
                              style: {
                                width: "16px",
                                height: "16px",
                                border: "2px solid transparent",
                                borderTop: "2px solid currentColor",
                                borderRadius: "50%",
                                animation: "spin 1s linear infinite"
                              }
                            }
                          ),
                          "保存中..."
                        ] }) : (0, import_jsx_runtime31.jsxs)(import_jsx_runtime31.Fragment, { children: [
                          (0, import_jsx_runtime31.jsx)(Save, { size: 16 }),
                          "保存更改"
                        ] })
                      }
                    )
                  ]
                }
              )
            ]
          }
        )
      }
    ),
    (0, import_jsx_runtime31.jsx)("style", { children: `
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      ` })
  ] });
}

// ../../packages/aitable/src/components/field-config/EnhancedDeleteConfirmDialog.tsx
var import_react188 = __toESM(require_react(), 1);
var import_jsx_runtime32 = __toESM(require_jsx_runtime(), 1);
function EnhancedDeleteConfirmDialog({
  isOpen,
  fieldId,
  fieldName,
  onClose,
  onConfirm,
  onError
}) {
  const { fields } = useField();
  const [isDeleting, setIsDeleting] = (0, import_react188.useState)(false);
  const [deleteError, setDeleteError] = (0, import_react188.useState)(null);
  const [confirmText, setConfirmText] = (0, import_react188.useState)("");
  const [canDelete, setCanDelete] = (0, import_react188.useState)(false);
  (0, import_react188.useEffect)(() => {
    if (isOpen) {
      setDeleteError(null);
      setConfirmText("");
      setCanDelete(false);
    }
  }, [isOpen]);
  (0, import_react188.useEffect)(() => {
    if (fieldName && confirmText === fieldName) {
      setCanDelete(true);
    } else {
      setCanDelete(false);
    }
  }, [fieldName, confirmText]);
  const handleDelete = (0, import_react188.useCallback)(async () => {
    if (!fieldId || !canDelete) return;
    setIsDeleting(true);
    setDeleteError(null);
    try {
      await onConfirm(fieldId);
      onClose();
    } catch (error) {
      console.error("❌ 字段删除失败:", error);
      const errorMessage = error.message || "删除失败，请重试";
      setDeleteError(errorMessage);
      onError?.(error);
    } finally {
      setIsDeleting(false);
    }
  }, [fieldId, canDelete, onConfirm, onClose, onError]);
  const handleKeyDown = (0, import_react188.useCallback)(
    (e2) => {
      if (e2.key === "Escape") {
        e2.preventDefault();
        onClose();
      } else if (e2.key === "Enter" && canDelete && !isDeleting) {
        e2.preventDefault();
        handleDelete();
      }
    },
    [onClose, canDelete, isDeleting, handleDelete]
  );
  if (!isOpen || !fieldId || !fieldName) return null;
  const field = fields.find((f) => f.id === fieldId);
  const fieldType = field?.type || "unknown";
  const getFieldTypeName = (type) => {
    const typeMap = {
      singleLineText: "单行文本",
      longText: "长文本",
      number: "数字",
      checkbox: "复选框",
      singleSelect: "单选",
      multipleSelect: "多选",
      date: "日期",
      rating: "评分",
      link: "链接",
      user: "用户",
      attachment: "附件",
      formula: "公式",
      rollup: "汇总",
      count: "计数",
      autoNumber: "自动编号",
      createdTime: "创建时间",
      lastModifiedTime: "最后修改时间",
      createdBy: "创建者",
      lastModifiedBy: "最后修改者"
    };
    return typeMap[type] || type;
  };
  return (0, import_jsx_runtime32.jsxs)(import_jsx_runtime32.Fragment, { children: [
    (0, import_jsx_runtime32.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: "rgba(0, 0, 0, 0.5)",
          zIndex: 9998,
          display: "flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: onClose,
        children: (0, import_jsx_runtime32.jsxs)(
          "div",
          {
            style: {
              backgroundColor: "white",
              borderRadius: "12px",
              boxShadow: elevation.large,
              width: "480px",
              maxWidth: "90vw",
              display: "flex",
              flexDirection: "column",
              overflow: "hidden"
            },
            onClick: (e2) => e2.stopPropagation(),
            onKeyDown: handleKeyDown,
            tabIndex: -1,
            children: [
              (0, import_jsx_runtime32.jsxs)(
                "div",
                {
                  style: {
                    padding: "20px 24px 16px",
                    borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "space-between"
                  },
                  children: [
                    (0, import_jsx_runtime32.jsxs)("div", { style: { display: "flex", alignItems: "center", gap: "12px" }, children: [
                      (0, import_jsx_runtime32.jsx)(
                        "div",
                        {
                          style: {
                            width: "40px",
                            height: "40px",
                            borderRadius: "50%",
                            backgroundColor: "#fef2f2",
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center"
                          },
                          children: (0, import_jsx_runtime32.jsx)(TriangleAlert, { size: 20, color: "#dc2626" })
                        }
                      ),
                      (0, import_jsx_runtime32.jsxs)("div", { children: [
                        (0, import_jsx_runtime32.jsx)(
                          "h2",
                          {
                            style: {
                              fontSize: "18px",
                              fontWeight: 600,
                              color: tokens.colors.text.primary,
                              margin: 0
                            },
                            children: "删除字段"
                          }
                        ),
                        (0, import_jsx_runtime32.jsx)(
                          "p",
                          {
                            style: {
                              fontSize: "14px",
                              color: tokens.colors.text.secondary,
                              margin: "4px 0 0"
                            },
                            children: "此操作无法撤销"
                          }
                        )
                      ] })
                    ] }),
                    (0, import_jsx_runtime32.jsx)(
                      "button",
                      {
                        onClick: onClose,
                        disabled: isDeleting,
                        style: {
                          background: "none",
                          border: "none",
                          cursor: isDeleting ? "not-allowed" : "pointer",
                          padding: "4px",
                          borderRadius: "4px",
                          color: tokens.colors.text.secondary,
                          transition: transitions.presets.all,
                          opacity: isDeleting ? 0.5 : 1
                        },
                        children: (0, import_jsx_runtime32.jsx)(X2, { size: 20 })
                      }
                    )
                  ]
                }
              ),
              (0, import_jsx_runtime32.jsxs)("div", { style: { padding: "24px" }, children: [
                (0, import_jsx_runtime32.jsx)(
                  "div",
                  {
                    style: {
                      padding: "16px",
                      backgroundColor: "#f8fafc",
                      borderRadius: "8px",
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      marginBottom: "20px"
                    },
                    children: (0, import_jsx_runtime32.jsxs)(
                      "div",
                      {
                        style: {
                          display: "flex",
                          alignItems: "center",
                          gap: "12px",
                          marginBottom: "8px"
                        },
                        children: [
                          (0, import_jsx_runtime32.jsx)(
                            "div",
                            {
                              style: {
                                width: "32px",
                                height: "32px",
                                borderRadius: "6px",
                                backgroundColor: tokens.colors.primary[100],
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "center",
                                fontSize: "14px",
                                fontWeight: 600,
                                color: tokens.colors.primary[700]
                              },
                              children: getFieldTypeName(fieldType).charAt(0)
                            }
                          ),
                          (0, import_jsx_runtime32.jsxs)("div", { children: [
                            (0, import_jsx_runtime32.jsx)(
                              "div",
                              {
                                style: {
                                  fontSize: "16px",
                                  fontWeight: 600,
                                  color: tokens.colors.text.primary
                                },
                                children: fieldName
                              }
                            ),
                            (0, import_jsx_runtime32.jsx)(
                              "div",
                              {
                                style: {
                                  fontSize: "14px",
                                  color: tokens.colors.text.secondary
                                },
                                children: getFieldTypeName(fieldType)
                              }
                            )
                          ] })
                        ]
                      }
                    )
                  }
                ),
                (0, import_jsx_runtime32.jsx)(
                  "div",
                  {
                    style: {
                      padding: "16px",
                      backgroundColor: "#fef3c7",
                      borderRadius: "8px",
                      border: "1px solid #f59e0b",
                      marginBottom: "20px"
                    },
                    children: (0, import_jsx_runtime32.jsxs)(
                      "div",
                      {
                        style: {
                          display: "flex",
                          alignItems: "flex-start",
                          gap: "12px"
                        },
                        children: [
                          (0, import_jsx_runtime32.jsx)(
                            CircleAlert,
                            {
                              size: 20,
                              color: "#d97706",
                              style: { marginTop: "2px" }
                            }
                          ),
                          (0, import_jsx_runtime32.jsxs)("div", { children: [
                            (0, import_jsx_runtime32.jsx)(
                              "div",
                              {
                                style: {
                                  fontSize: "14px",
                                  fontWeight: 600,
                                  color: "#92400e",
                                  marginBottom: "8px"
                                },
                                children: "删除此字段将会："
                              }
                            ),
                            (0, import_jsx_runtime32.jsxs)(
                              "ul",
                              {
                                style: {
                                  margin: 0,
                                  paddingLeft: "16px",
                                  fontSize: "14px",
                                  color: "#92400e",
                                  lineHeight: "1.6"
                                },
                                children: [
                                  (0, import_jsx_runtime32.jsx)("li", { children: "永久删除此字段及其所有数据" }),
                                  (0, import_jsx_runtime32.jsx)("li", { children: "删除所有依赖此字段的公式和关联" }),
                                  (0, import_jsx_runtime32.jsx)("li", { children: "影响使用此字段的视图和筛选器" }),
                                  (0, import_jsx_runtime32.jsx)("li", { children: "可能导致相关记录的数据丢失" })
                                ]
                              }
                            )
                          ] })
                        ]
                      }
                    )
                  }
                ),
                (0, import_jsx_runtime32.jsxs)("div", { style: { marginBottom: "20px" }, children: [
                  (0, import_jsx_runtime32.jsxs)(
                    "label",
                    {
                      style: {
                        display: "block",
                        fontSize: "14px",
                        fontWeight: 500,
                        color: tokens.colors.text.primary,
                        marginBottom: "8px"
                      },
                      children: [
                        "请输入字段名称",
                        " ",
                        (0, import_jsx_runtime32.jsx)("span", { style: { color: tokens.colors.text.destructive }, children: "*" })
                      ]
                    }
                  ),
                  (0, import_jsx_runtime32.jsx)(
                    "input",
                    {
                      type: "text",
                      value: confirmText,
                      onChange: (e2) => setConfirmText(e2.target.value),
                      placeholder: `请输入 "${fieldName}" 来确认删除`,
                      disabled: isDeleting,
                      style: {
                        width: "100%",
                        padding: "12px 16px",
                        border: `1px solid ${canDelete ? tokens.colors.border.subtle : tokens.colors.border.destructive}`,
                        borderRadius: "8px",
                        fontSize: "14px",
                        transition: transitions.presets.all,
                        backgroundColor: isDeleting ? tokens.colors.surface.disabled : "white"
                      },
                      onFocus: (e2) => {
                        if (!isDeleting) {
                          e2.target.style.borderColor = tokens.colors.primary[500];
                        }
                      },
                      onBlur: (e2) => {
                        e2.target.style.borderColor = canDelete ? tokens.colors.border.subtle : tokens.colors.border.destructive;
                      }
                    }
                  ),
                  confirmText && !canDelete && (0, import_jsx_runtime32.jsxs)(
                    "div",
                    {
                      style: {
                        display: "flex",
                        alignItems: "center",
                        gap: "4px",
                        marginTop: "8px",
                        color: tokens.colors.text.destructive,
                        fontSize: "12px"
                      },
                      children: [
                        (0, import_jsx_runtime32.jsx)(CircleAlert, { size: 12 }),
                        "字段名称不匹配"
                      ]
                    }
                  )
                ] }),
                deleteError && (0, import_jsx_runtime32.jsx)(
                  "div",
                  {
                    style: {
                      padding: "12px 16px",
                      backgroundColor: "#fef2f2",
                      borderRadius: "8px",
                      border: "1px solid #fecaca",
                      marginBottom: "20px"
                    },
                    children: (0, import_jsx_runtime32.jsxs)(
                      "div",
                      {
                        style: {
                          display: "flex",
                          alignItems: "center",
                          gap: "8px",
                          color: "#dc2626",
                          fontSize: "14px"
                        },
                        children: [
                          (0, import_jsx_runtime32.jsx)(CircleAlert, { size: 16 }),
                          (0, import_jsx_runtime32.jsx)("span", { children: deleteError })
                        ]
                      }
                    )
                  }
                )
              ] }),
              (0, import_jsx_runtime32.jsxs)(
                "div",
                {
                  style: {
                    padding: "16px 24px",
                    borderTop: `1px solid ${tokens.colors.border.subtle}`,
                    display: "flex",
                    justifyContent: "flex-end",
                    gap: "12px"
                  },
                  children: [
                    (0, import_jsx_runtime32.jsx)(
                      "button",
                      {
                        onClick: onClose,
                        disabled: isDeleting,
                        style: {
                          padding: "10px 20px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: tokens.colors.text.secondary,
                          backgroundColor: "transparent",
                          border: `1px solid ${tokens.colors.border.subtle}`,
                          borderRadius: "8px",
                          cursor: isDeleting ? "not-allowed" : "pointer",
                          transition: transitions.presets.all,
                          opacity: isDeleting ? 0.5 : 1
                        },
                        children: "取消"
                      }
                    ),
                    (0, import_jsx_runtime32.jsx)(
                      "button",
                      {
                        onClick: handleDelete,
                        disabled: !canDelete || isDeleting,
                        style: {
                          padding: "10px 20px",
                          fontSize: "14px",
                          fontWeight: 500,
                          color: canDelete && !isDeleting ? "white" : tokens.colors.text.tertiary,
                          backgroundColor: canDelete && !isDeleting ? "#dc2626" : tokens.colors.surface.disabled,
                          border: "none",
                          borderRadius: "8px",
                          cursor: canDelete && !isDeleting ? "pointer" : "not-allowed",
                          transition: transitions.presets.all,
                          display: "flex",
                          alignItems: "center",
                          gap: "8px"
                        },
                        onMouseEnter: (e2) => {
                          if (canDelete && !isDeleting) {
                            e2.currentTarget.style.backgroundColor = "#b91c1c";
                          }
                        },
                        onMouseLeave: (e2) => {
                          if (canDelete && !isDeleting) {
                            e2.currentTarget.style.backgroundColor = "#dc2626";
                          }
                        },
                        children: isDeleting ? (0, import_jsx_runtime32.jsxs)(import_jsx_runtime32.Fragment, { children: [
                          (0, import_jsx_runtime32.jsx)(
                            "div",
                            {
                              style: {
                                width: "16px",
                                height: "16px",
                                border: "2px solid transparent",
                                borderTop: "2px solid currentColor",
                                borderRadius: "50%",
                                animation: "spin 1s linear infinite"
                              }
                            }
                          ),
                          "删除中..."
                        ] }) : (0, import_jsx_runtime32.jsxs)(import_jsx_runtime32.Fragment, { children: [
                          (0, import_jsx_runtime32.jsx)(Trash2, { size: 16 }),
                          "确认删除"
                        ] })
                      }
                    )
                  ]
                }
              )
            ]
          }
        )
      }
    ),
    (0, import_jsx_runtime32.jsx)("style", { children: `
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      ` })
  ] });
}

// ../../packages/aitable/src/components/field-config/FieldManagementProvider.tsx
var import_jsx_runtime33 = __toESM(require_jsx_runtime(), 1);
var FieldManagementContext = (0, import_react189.createContext)(
  null
);
function useFieldManagement() {
  const context = (0, import_react189.useContext)(FieldManagementContext);
  if (!context) {
    throw new Error(
      "useFieldManagement must be used within FieldManagementProvider"
    );
  }
  return context;
}
function FieldManagementProvider({
  children,
  onFieldUpdated,
  onFieldDeleted,
  onError
}) {
  const { deleteField } = useField();
  const [editDialog, setEditDialog] = (0, import_react189.useState)({
    isOpen: false,
    field: null
  });
  const [deleteDialog, setDeleteDialog] = (0, import_react189.useState)({
    isOpen: false,
    fieldId: null,
    fieldName: null
  });
  const openEditDialog = (0, import_react189.useCallback)((field) => {
    setEditDialog({
      isOpen: true,
      field
    });
  }, []);
  const openDeleteDialog = (0, import_react189.useCallback)((fieldId, fieldName) => {
    setDeleteDialog({
      isOpen: true,
      fieldId,
      fieldName
    });
  }, []);
  const closeDialogs = (0, import_react189.useCallback)(() => {
    setEditDialog({ isOpen: false, field: null });
    setDeleteDialog({ isOpen: false, fieldId: null, fieldName: null });
  }, []);
  const handleEditSuccess = (0, import_react189.useCallback)(
    (field) => {
      onFieldUpdated?.(field);
      closeDialogs();
    },
    [onFieldUpdated, closeDialogs]
  );
  const handleEditError = (0, import_react189.useCallback)(
    (error) => {
      onError?.(error, "edit");
    },
    [onError]
  );
  const handleDeleteConfirm = (0, import_react189.useCallback)(
    async (fieldId) => {
      try {
        await deleteField(fieldId);
        onFieldDeleted?.(fieldId);
        closeDialogs();
      } catch (error) {
        throw error;
      }
    },
    [deleteField, onFieldDeleted, closeDialogs]
  );
  const handleDeleteError = (0, import_react189.useCallback)(
    (error) => {
      onError?.(error, "delete");
    },
    [onError]
  );
  const contextValue = {
    openEditDialog,
    openDeleteDialog,
    closeDialogs
  };
  return (0, import_jsx_runtime33.jsxs)(FieldManagementContext.Provider, { value: contextValue, children: [
    children,
    (0, import_jsx_runtime33.jsx)(
      EnhancedEditFieldDialog,
      {
        isOpen: editDialog.isOpen,
        field: editDialog.field,
        onClose: closeDialogs,
        onSuccess: handleEditSuccess,
        onError: handleEditError
      }
    ),
    (0, import_jsx_runtime33.jsx)(
      EnhancedDeleteConfirmDialog,
      {
        isOpen: deleteDialog.isOpen,
        fieldId: deleteDialog.fieldId,
        fieldName: deleteDialog.fieldName,
        onClose: closeDialogs,
        onConfirm: handleDeleteConfirm,
        onError: handleDeleteError
      }
    )
  ] });
}

// ../../packages/aitable/src/grid/components/column-management/ColumnManagement.tsx
var import_jsx_runtime34 = __toESM(require_jsx_runtime(), 1);
var ColumnManagementBase = (props, ref) => {
  const {
    columns,
    onColumnsChange,
    onAddColumn,
    onEditColumn,
    onDuplicateColumn,
    onDeleteColumn,
    onInsertColumnLeft,
    onInsertColumnRight,
    onStartEditColumn
  } = props;
  const { openEditDialog, openDeleteDialog } = useFieldManagement();
  const fieldTypeSelectorRef = (0, import_react190.useRef)(null);
  const columnContextMenuRef = (0, import_react190.useRef)(null);
  const fieldPropertyEditorRef = (0, import_react190.useRef)(null);
  const fieldTypeSelectModalRef = (0, import_react190.useRef)(null);
  const deleteConfirmDialogRef = (0, import_react190.useRef)(null);
  const [pendingColumnIndex, setPendingColumnIndex] = (0, import_react190.useState)(-1);
  (0, import_react190.useImperativeHandle)(ref, () => ({
    showFieldTypeSelector: (position) => {
      setPendingColumnIndex(-1);
      fieldTypeSelectorRef.current?.show(position);
    },
    showColumnContextMenu: (position, columnIndex) => {
      columnContextMenuRef.current?.show(position, columnIndex);
    },
    showFieldPropertyEditor: (column, columnIndex, position) => {
      fieldPropertyEditorRef.current?.show(column, columnIndex, position);
    },
    showFieldTypeSelectModal: (position = { x: 100, y: 100 }, mode = "create", initialData) => {
      fieldTypeSelectModalRef.current?.show(position, mode, initialData);
    },
    hideAll: () => {
      fieldTypeSelectorRef.current?.hide();
      columnContextMenuRef.current?.hide();
      fieldPropertyEditorRef.current?.hide();
      fieldTypeSelectModalRef.current?.hide();
      deleteConfirmDialogRef.current?.hide();
    }
  }));
  const handleFieldTypeSelect = (fieldType) => {
    if (pendingColumnIndex >= 0) {
      onInsertColumnLeft?.(pendingColumnIndex, fieldType);
      onInsertColumnRight?.(pendingColumnIndex, fieldType);
    } else {
      onAddColumn?.(fieldType);
    }
    setPendingColumnIndex(-1);
  };
  const handleFieldTypeCancel = () => {
    setPendingColumnIndex(-1);
  };
  const handleFieldTypeSelectModalConfirm = (data) => {
    const fieldType = data.type;
    if (pendingColumnIndex >= 0) {
      onInsertColumnLeft?.(
        pendingColumnIndex,
        fieldType,
        data.name,
        data.options
      );
      onInsertColumnRight?.(
        pendingColumnIndex,
        fieldType,
        data.name,
        data.options
      );
    } else {
      onAddColumn?.(fieldType, void 0, data.name, data.options);
    }
    setPendingColumnIndex(-1);
  };
  const handleFieldTypeSelectModalCancel = () => {
    setPendingColumnIndex(-1);
  };
  const handleEditField = (columnIndex) => {
    const column = columns[columnIndex];
    if (column) {
      if (onStartEditColumn) {
        onStartEditColumn(columnIndex, column);
        return;
      }
      const fieldConfig = {
        id: column.id || `column-${columnIndex}`,
        name: column.name,
        type: column.type || "singleLineText",
        description: column.description || "",
        required: column.required || false,
        visible: column.visible !== false,
        options: column.options || [],
        defaultValue: column.defaultValue || "",
        validation: column.validation || {}
      };
      openEditDialog(fieldConfig);
    }
  };
  const handleDuplicateField = (columnIndex) => {
    onDuplicateColumn?.(columnIndex);
  };
  const handleInsertFieldLeft = (columnIndex) => {
    setPendingColumnIndex(columnIndex);
    fieldTypeSelectModalRef.current?.show({ x: 100, y: 100 }, "create");
  };
  const handleInsertFieldRight = (columnIndex) => {
    setPendingColumnIndex(columnIndex + 1);
    fieldTypeSelectModalRef.current?.show({ x: 100, y: 100 }, "create");
  };
  const handleFilterByField = (columnIndex) => {
  };
  const handleSortByField = (columnIndex) => {
  };
  const handleGroupByField = (columnIndex) => {
  };
  const handleFreezeToField = (columnIndex) => {
  };
  const handleHideField = (columnIndex) => {
  };
  const handleDeleteField = (columnIndex) => {
    console.log("🗑️ handleDeleteField 被调用:", {
      columnIndex,
      column: columns[columnIndex]
    });
    const column = columns[columnIndex];
    if (column) {
      console.log("🗑️ 准备显示增强删除确认对话框:", {
        columnIndex,
        columnName: column.name
      });
      openDeleteDialog(column.id || `column-${columnIndex}`, column.name);
    } else {
      console.error("🗑️ 无法找到要删除的列:", columnIndex);
    }
  };
  const handleDeleteConfirm = (type, itemIndex) => {
    if (type === "column") {
      onDeleteColumn?.(itemIndex);
    }
  };
  const handleFieldPropertySave = (columnIndex, updatedColumn) => {
    if (columnIndex >= columns.length) {
      const type = updatedColumn.type;
      const fieldType = {
        type,
        name: updatedColumn.name || "新字段",
        description: updatedColumn.description || "",
        icon: updatedColumn.icon || "A"
      };
      onAddColumn?.(fieldType);
      return;
    }
    onEditColumn?.(columnIndex, updatedColumn);
  };
  const handleFieldPropertyCancel = () => {
  };
  return (0, import_jsx_runtime34.jsxs)(import_jsx_runtime34.Fragment, { children: [
    (0, import_jsx_runtime34.jsx)(
      FieldTypeSelector,
      {
        ref: fieldTypeSelectorRef,
        onSelect: handleFieldTypeSelect,
        onCancel: handleFieldTypeCancel
      }
    ),
    (0, import_jsx_runtime34.jsx)(
      ColumnContextMenu,
      {
        ref: columnContextMenuRef,
        onEditField: handleEditField,
        onDuplicateField: handleDuplicateField,
        onInsertFieldLeft: handleInsertFieldLeft,
        onInsertFieldRight: handleInsertFieldRight,
        onFilterByField: handleFilterByField,
        onSortByField: handleSortByField,
        onGroupByField: handleGroupByField,
        onFreezeToField: handleFreezeToField,
        onHideField: handleHideField,
        onDeleteField: handleDeleteField
      }
    ),
    (0, import_jsx_runtime34.jsx)(
      FieldPropertyEditor,
      {
        ref: fieldPropertyEditorRef,
        onSave: handleFieldPropertySave,
        onCancel: handleFieldPropertyCancel
      }
    ),
    (0, import_jsx_runtime34.jsx)(
      FieldTypeSelectModal,
      {
        ref: fieldTypeSelectModalRef,
        onConfirm: handleFieldTypeSelectModalConfirm,
        onCancel: handleFieldTypeSelectModalCancel
      }
    ),
    (0, import_jsx_runtime34.jsx)(
      DeleteConfirmDialog,
      {
        ref: deleteConfirmDialogRef,
        onConfirm: handleDeleteConfirm
      }
    )
  ] });
};
var ColumnManagement = (0, import_react191.forwardRef)(ColumnManagementBase);

// ../../packages/aitable/src/grid/components/field-modal/FieldCreateOrSelectModal.tsx
var import_react193 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/components/field-modal/ui-shim.tsx
var import_react192 = __toESM(require_react(), 1);
var import_jsx_runtime35 = __toESM(require_jsx_runtime(), 1);
var cn3 = (...classes) => classes.filter(Boolean).join(" ");
var Button3 = (0, import_react192.forwardRef)(function Button4({ className, children, variant, ...rest2 }, ref) {
  return (0, import_jsx_runtime35.jsx)(
    "button",
    {
      ref,
      className: cn3("ld-btn", variant && `ld-btn-${variant}`, className),
      ...rest2,
      children
    }
  );
});
var Input2 = (0, import_react192.forwardRef)(function Input3({ className, ...rest2 }, ref) {
  return (0, import_jsx_runtime35.jsx)("input", { ref, className: cn3("ld-input", className), ...rest2 });
});
var Textarea = (0, import_react192.forwardRef)(function Textarea2({ className, ...rest2 }, ref) {
  return (0, import_jsx_runtime35.jsx)("textarea", { ref, className: cn3("ld-textarea", className), ...rest2 });
});
var Dialog = ({ children }) => (0, import_jsx_runtime35.jsx)(import_jsx_runtime35.Fragment, { children });
var DialogContent = ({
  className,
  children,
  ...rest2
}) => (0, import_jsx_runtime35.jsx)("div", { className: cn3("ld-dialog", className), ...rest2, children });
var DialogHeader = ({ children }) => (0, import_jsx_runtime35.jsx)("div", { className: "ld-dialog-header", children });
var DialogTitle = ({ children }) => (0, import_jsx_runtime35.jsx)("div", { className: "ld-dialog-title", children });
var DialogFooter = ({ children }) => (0, import_jsx_runtime35.jsx)("div", { className: "ld-dialog-footer", children });
var Sheet2 = ({ children }) => (0, import_jsx_runtime35.jsx)(import_jsx_runtime35.Fragment, { children });
var SheetContent = ({
  className,
  children,
  side,
  ...rest2
}) => (0, import_jsx_runtime35.jsx)("div", { className: cn3("ld-sheet", `ld-sheet-${side}`, className), ...rest2, children });
var ScrollArea = ({ children }) => (0, import_jsx_runtime35.jsx)("div", { className: "ld-scroll-area", children });

// ../../packages/aitable/src/grid/components/field-modal/FieldCreateOrSelectModal.tsx
var import_jsx_runtime36 = __toESM(require_jsx_runtime(), 1);
var FieldCreateOrSelectModal = (0, import_react193.forwardRef)((props, ref) => {
  const {
    title = "添加字段",
    description: description2,
    content,
    selectedFieldId: _selectedFieldId,
    children,
    onConfirm
  } = props;
  const [open, setOpen] = (0, import_react193.useState)(false);
  const [selectedFieldId, setSelectedFieldId] = (0, import_react193.useState)(
    _selectedFieldId
  );
  (0, import_react193.useImperativeHandle)(ref, () => ({
    onOpen: () => setOpen(true),
    onClose: () => setOpen(false)
  }));
  (0, import_react193.useEffect)(() => {
    setSelectedFieldId(_selectedFieldId);
  }, [_selectedFieldId]);
  const onConfirmInner = () => {
    onConfirm?.(selectedFieldId);
    setOpen(false);
  };
  const header = (0, import_react193.useMemo)(
    () => (0, import_jsx_runtime36.jsx)(DialogHeader, { children: (0, import_jsx_runtime36.jsx)(DialogTitle, { children: title }) }),
    [title]
  );
  return (0, import_jsx_runtime36.jsx)(Dialog, { open, onOpenChange: setOpen, children: (0, import_jsx_runtime36.jsxs)(DialogContent, { className: "w-[640px] max-w-full", children: [
    header,
    (0, import_jsx_runtime36.jsxs)(ScrollArea, { children: [
      content,
      description2 && (0, import_jsx_runtime36.jsx)("div", { className: "text-sm text-muted-foreground", children: description2 })
    ] }),
    (0, import_jsx_runtime36.jsxs)(DialogFooter, { children: [
      (0, import_jsx_runtime36.jsx)(Button3, { onClick: () => setOpen(false), children: "取消" }),
      (0, import_jsx_runtime36.jsx)(Button3, { onClick: onConfirmInner, children: "确认" })
    ] })
  ] }) });
});

// ../../packages/aitable/src/grid/components/field-modal/FieldSetting.tsx
var import_react194 = __toESM(require_react(), 1);
var import_jsx_runtime37 = __toESM(require_jsx_runtime(), 1);
var FieldSetting = (props) => {
  const { visible, operator, field, onConfirm, onCancel } = props;
  const [saving, setSaving] = (0, import_react194.useState)(false);
  const title = (0, import_react194.useMemo)(() => {
    if (operator === "edit") {
      return "编辑字段";
    }
    return "添加字段";
  }, [operator]);
  const onSave = (0, import_react194.useCallback)(async () => {
    setSaving(true);
    try {
      onConfirm?.(field);
    } finally {
      setSaving(false);
    }
  }, [field, onConfirm]);
  return (0, import_jsx_runtime37.jsx)(Sheet2, { open: visible, onOpenChange: (o) => !o && onCancel?.(), children: (0, import_jsx_runtime37.jsx)(
    SheetContent,
    {
      className: "w-screen p-0 sm:w-[400px] sm:max-w-[400px]",
      side: "right",
      children: (0, import_jsx_runtime37.jsxs)("div", { className: "flex h-full flex-col", children: [
        (0, import_jsx_runtime37.jsx)("div", { className: "text-md w-full border-b px-4 py-3 font-semibold", children: title }),
        (0, import_jsx_runtime37.jsx)("div", { className: "flex-1 overflow-auto p-4" }),
        (0, import_jsx_runtime37.jsxs)("div", { className: "flex w-full shrink-0 justify-end gap-2 p-4", children: [
          (0, import_jsx_runtime37.jsx)(Button3, { variant: "secondary", onClick: onCancel, children: "取消" }),
          (0, import_jsx_runtime37.jsx)(Button3, { onClick: onSave, disabled: saving, children: saving ? "保存中..." : "保存" })
        ] })
      ] })
    }
  ) });
};

// ../../packages/aitable/src/grid/components/field-modal/formula/FormulaEditor.tsx
var import_react195 = __toESM(require_react(), 1);
var import_jsx_runtime38 = __toESM(require_jsx_runtime(), 1);
var FormulaEditor = ({
  expression = "",
  onConfirm
}) => {
  const [value, setValue] = (0, import_react195.useState)(expression);
  return (0, import_jsx_runtime38.jsxs)("div", { className: "w-[700px]", children: [
    (0, import_jsx_runtime38.jsx)("div", { className: "flex h-12 items-center justify-between border-b px-4", children: (0, import_jsx_runtime38.jsx)("h1", { className: "text-base", children: "公式编辑器" }) }),
    (0, import_jsx_runtime38.jsx)("div", { className: "p-3", children: (0, import_jsx_runtime38.jsx)(
      "textarea",
      {
        className: "w-full h-40 border rounded p-2",
        value,
        onChange: (e2) => setValue(e2.target.value),
        placeholder: "输入公式，例如 {标题} + ' - ' + {状态}"
      }
    ) }),
    (0, import_jsx_runtime38.jsx)("div", { className: "flex justify-end gap-2 border-t px-3 py-2", children: (0, import_jsx_runtime38.jsx)(Button3, { onClick: () => onConfirm?.(value), children: "确认" }) })
  ] });
};

// ../../packages/aitable/src/grid/components/ui/LoadingIndicator.tsx
var import_jsx_runtime39 = __toESM(require_jsx_runtime(), 1);
var LoadingIndicator = (props) => {
  const { cellLoadings, columnLoadings, coordInstance, scrollState } = props;
  if (!cellLoadings.length && !columnLoadings.length) {
    return null;
  }
  const { scrollLeft, scrollTop } = scrollState;
  const {
    rowInitSize,
    freezeColumnCount,
    freezeRegionWidth,
    containerWidth,
    containerHeight
  } = coordInstance;
  return (0, import_jsx_runtime39.jsxs)("div", { className: "pointer-events-none absolute left-0 top-0 z-10", children: [
    columnLoadings.map(({ index: index3, progress, onCancel }) => {
      const columnWidth = coordInstance.getColumnWidth(index3);
      const columnOffset = coordInstance.getColumnRelativeOffset(
        index3,
        scrollLeft
      );
      const isFreeze = index3 < freezeColumnCount;
      const isColumnVisible = isFreeze || columnOffset + columnWidth - 24 >= freezeRegionWidth && columnOffset <= containerWidth;
      if (!isColumnVisible) {
        return null;
      }
      return (0, import_jsx_runtime39.jsx)(
        "div",
        {
          className: "absolute rounded-sm",
          style: {
            left: columnOffset,
            top: 0,
            width: columnWidth,
            height: 24
          },
          children: (0, import_jsx_runtime39.jsx)(
            "div",
            {
              className: "pointer-events-auto absolute right-1 top-1 cursor-pointer rounded-full bg-background",
              onClick: onCancel,
              children: (0, import_jsx_runtime39.jsxs)(
                "div",
                {
                  className: "absolute right-0 top-0 flex size-6 items-center justify-center rounded-full",
                  style: {
                    background: `conic-gradient(currentColor ${progress * 360}deg, rgba(0,0,0,0.1) 0deg)`
                  },
                  children: [
                    (0, import_jsx_runtime39.jsx)("div", { className: "absolute inset-1 animate-ping rounded-full bg-foreground/15" }),
                    (0, import_jsx_runtime39.jsx)("div", { className: "flex size-5 items-center justify-center rounded-full bg-background", children: (0, import_jsx_runtime39.jsx)(Square, { className: "size-3" }) })
                  ]
                }
              )
            }
          )
        },
        `loading-${index3}`
      );
    }),
    cellLoadings.map(([columnIndex, rowIndex]) => {
      const rowHeight = coordInstance.getRowHeight(rowIndex);
      const rowOffset = coordInstance.getRowOffset(rowIndex);
      const columnWidth = coordInstance.getColumnWidth(columnIndex);
      const columnOffset = coordInstance.getColumnRelativeOffset(
        columnIndex,
        scrollLeft
      );
      const y = rowOffset - scrollTop;
      const isFreeze = columnIndex < freezeColumnCount;
      const isColumnVisible = isFreeze || columnOffset + columnWidth - 24 >= freezeRegionWidth && columnOffset <= containerWidth;
      const isRowVisible = y >= rowInitSize - 4 && y <= containerHeight - rowInitSize + 4;
      if (!isColumnVisible || !isRowVisible) {
        return null;
      }
      return (0, import_jsx_runtime39.jsx)(
        "div",
        {
          className: "absolute rounded-sm",
          style: {
            left: columnOffset,
            top: rowOffset - scrollTop,
            width: columnWidth,
            height: rowHeight
          },
          children: (0, import_jsx_runtime39.jsxs)("div", { className: "absolute right-1 top-1 rounded-full bg-background", children: [
            (0, import_jsx_runtime39.jsx)("div", { className: "absolute inset-1 animate-ping rounded-full bg-amber-500/30" }),
            (0, import_jsx_runtime39.jsx)("div", { className: "absolute inset-0 animate-[spin_1.2s_linear_infinite] rounded-full border-2 border-dotted border-transparent border-t-amber-500" }),
            (0, import_jsx_runtime39.jsx)("div", { className: "size-6 p-1", children: (0, import_jsx_runtime39.jsx)(MagicAi, { className: "size-4 text-amber-500" }) })
          ] })
        },
        `loading-${columnIndex}-${rowIndex}`
      );
    })
  ] });
};

// ../../packages/aitable/src/grid/components/ui/RowCounter.tsx
var import_jsx_runtime40 = __toESM(require_jsx_runtime(), 1);
var RowCounter = ({
  totalCount,
  selectedCount = 0,
  filteredCount,
  className,
  style,
  showSelected = true,
  showFiltered = true
}) => {
  const hasSelection = selectedCount > 0;
  const hasFilter = filteredCount !== void 0 && filteredCount !== totalCount;
  return (0, import_jsx_runtime40.jsxs)(
    "div",
    {
      className,
      style: {
        display: "flex",
        alignItems: "center",
        gap: "16px",
        padding: "8px 16px",
        backgroundColor: "#f9fafb",
        borderTop: "1px solid #e5e7eb",
        fontSize: "13px",
        color: "#6b7280",
        userSelect: "none",
        ...style
      },
      children: [
        (0, import_jsx_runtime40.jsxs)("div", { style: { display: "flex", alignItems: "center", gap: "4px" }, children: [
          (0, import_jsx_runtime40.jsx)("span", { style: { fontWeight: 500 }, children: "Total:" }),
          (0, import_jsx_runtime40.jsx)("span", { children: totalCount.toLocaleString() }),
          (0, import_jsx_runtime40.jsx)("span", { children: "rows" })
        ] }),
        showSelected && hasSelection && (0, import_jsx_runtime40.jsxs)(import_jsx_runtime40.Fragment, { children: [
          (0, import_jsx_runtime40.jsx)(
            "div",
            {
              style: { width: "1px", height: "16px", backgroundColor: "#d1d5db" }
            }
          ),
          (0, import_jsx_runtime40.jsxs)(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center",
                gap: "4px",
                color: "#3b82f6"
              },
              children: [
                (0, import_jsx_runtime40.jsx)("span", { style: { fontWeight: 500 }, children: "Selected:" }),
                (0, import_jsx_runtime40.jsx)("span", { children: selectedCount.toLocaleString() }),
                (0, import_jsx_runtime40.jsx)("span", { children: "rows" })
              ]
            }
          )
        ] }),
        showFiltered && hasFilter && (0, import_jsx_runtime40.jsxs)(import_jsx_runtime40.Fragment, { children: [
          (0, import_jsx_runtime40.jsx)(
            "div",
            {
              style: { width: "1px", height: "16px", backgroundColor: "#d1d5db" }
            }
          ),
          (0, import_jsx_runtime40.jsxs)(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center",
                gap: "4px",
                color: "#10b981"
              },
              children: [
                (0, import_jsx_runtime40.jsx)("span", { style: { fontWeight: 500 }, children: "Filtered:" }),
                (0, import_jsx_runtime40.jsx)("span", { children: filteredCount.toLocaleString() }),
                (0, import_jsx_runtime40.jsxs)("span", { children: [
                  "of ",
                  totalCount.toLocaleString()
                ] }),
                (0, import_jsx_runtime40.jsx)("span", { children: "rows" })
              ]
            }
          )
        ] })
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/ui/Tooltip.tsx
var import_react196 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);

// ../../packages/aitable/src/grid/components/ui/tooltip-store.ts
var useGridTooltipStore = create3((set2) => ({
  tooltipInfo: null,
  setTooltipInfo: (info) => set2({ tooltipInfo: info }),
  clearTooltip: () => set2({ tooltipInfo: null })
}));
var showGridTooltip = (info) => {
  useGridTooltipStore.getState().setTooltipInfo(info);
};
var hideGridTooltip = () => {
  useGridTooltipStore.getState().clearTooltip();
};

// ../../packages/aitable/src/grid/components/ui/Tooltip.tsx
var import_jsx_runtime41 = __toESM(require_jsx_runtime(), 1);
function calculatePosition(triggerRect, position, offset = 8) {
  const scrollX = window.pageXOffset || document.documentElement.scrollLeft;
  const scrollY = window.pageYOffset || document.documentElement.scrollTop;
  let x2 = triggerRect.left + scrollX;
  let y = triggerRect.top + scrollY;
  switch (position) {
    case "top":
      x2 += triggerRect.width / 2;
      y -= offset;
      break;
    case "bottom":
      x2 += triggerRect.width / 2;
      y += triggerRect.height + offset;
      break;
    case "left":
      x2 -= offset;
      y += triggerRect.height / 2;
      break;
    case "right":
      x2 += triggerRect.width + offset;
      y += triggerRect.height / 2;
      break;
  }
  return { x: x2, y };
}
function getArrowClasses(position) {
  switch (position) {
    case "top":
      return "top-full left-1/2 transform -translate-x-1/2 border-t-gray-900";
    case "bottom":
      return "bottom-full left-1/2 transform -translate-x-1/2 border-b-gray-900";
    case "left":
      return "left-full top-1/2 transform -translate-y-1/2 border-l-gray-900";
    case "right":
      return "right-full top-1/2 transform -translate-y-1/2 border-r-gray-900";
  }
}
var Tooltip = ({
  content,
  children,
  delay: delay2 = 500,
  position = "bottom",
  disabled = false,
  className
}) => {
  const [show, setShow] = (0, import_react196.useState)(false);
  const [coords, setCoords] = (0, import_react196.useState)({ x: 0, y: 0 });
  const [triggerRect, setTriggerRect] = (0, import_react196.useState)(null);
  const handleMouseEnter = (e2) => {
    if (disabled) return;
    const rect = e2.currentTarget.getBoundingClientRect();
    setTriggerRect(rect);
    const { x: x2, y } = calculatePosition(rect, position);
    setCoords({ x: x2, y });
    const timer = setTimeout(() => setShow(true), delay2);
    return () => clearTimeout(timer);
  };
  const handleMouseLeave = () => {
    setShow(false);
    setTriggerRect(null);
  };
  if (!children || !import_react196.default.isValidElement(children)) {
    return null;
  }
  return (0, import_jsx_runtime41.jsxs)(import_jsx_runtime41.Fragment, { children: [
    import_react196.default.cloneElement(children, {
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave
    }),
    show && (0, import_react_dom2.createPortal)(
      (0, import_jsx_runtime41.jsxs)(
        "div",
        {
          className: cn2(
            "fixed z-50 px-3 py-2 text-sm rounded-md shadow-lg",
            "max-w-xs whitespace-pre-line break-words",
            "pointer-events-none",
            "animate-in fade-in-0 zoom-in-95 duration-200",
            className
          ),
          style: {
            left: coords.x,
            top: coords.y,
            backgroundColor: tokens.colors.text.primary,
            color: tokens.colors.text.inverse,
            boxShadow: elevation.lg,
            transform: position === "top" || position === "bottom" ? "translateX(-50%)" : position === "left" || position === "right" ? "translateY(-50%)" : "none"
          },
          children: [
            content,
            (0, import_jsx_runtime41.jsx)(
              "div",
              {
                className: cn2(
                  "absolute w-0 h-0 border-4 border-transparent",
                  getArrowClasses(position)
                )
              }
            )
          ]
        }
      ),
      document.body
    )
  ] });
};

// ../../packages/aitable/src/grid/components/toolbar/GridToolbar.tsx
var import_react197 = __toESM(require_react(), 1);
var import_jsx_runtime42 = __toESM(require_jsx_runtime(), 1);
var GridToolbar = ({
  onUndo,
  onRedo,
  onAddNew,
  onFieldConfig,
  onFilter,
  onSort,
  onGroup,
  onSearch,
  onFullscreen,
  onShare,
  onAPI,
  onCollaboration,
  onToggleToolbar,
  onToggleStatistics,
  canUndo = false,
  canRedo = false,
  isFullscreen = false,
  isMobile = false,
  className
}) => {
  const toolbarGroups = [
    {
      id: "history",
      label: "历史操作",
      buttons: [
        {
          id: "undo",
          label: "撤销",
          icon: Undo2,
          onClick: onUndo,
          disabled: !canUndo,
          variant: "ghost",
          tooltip: "撤销 (Ctrl+Z)"
        },
        {
          id: "redo",
          label: "重做",
          icon: Redo2,
          onClick: onRedo,
          disabled: !canRedo,
          variant: "ghost",
          tooltip: "重做 (Ctrl+Y)"
        }
      ]
    },
    {
      id: "data",
      label: "数据操作",
      buttons: [
        {
          id: "add",
          label: "添加记录",
          icon: Plus2,
          onClick: onAddNew,
          variant: "primary",
          tooltip: "添加新记录"
        },
        {
          id: "field-config",
          label: "字段配置",
          icon: Settings,
          onClick: onFieldConfig,
          variant: "secondary",
          tooltip: "配置字段显示和属性"
        }
      ],
      separator: true
    },
    {
      id: "view",
      label: "视图操作",
      buttons: [
        {
          id: "filter",
          label: "筛选",
          icon: Funnel,
          onClick: onFilter,
          variant: "secondary",
          tooltip: "筛选数据"
        },
        {
          id: "sort",
          label: "排序",
          icon: ArrowUpDown,
          onClick: onSort,
          variant: "secondary",
          tooltip: "排序数据"
        },
        {
          id: "group",
          label: "分组",
          icon: Group,
          onClick: onGroup,
          variant: "secondary",
          tooltip: "分组数据"
        }
      ],
      separator: true
    },
    {
      id: "tools",
      label: "工具",
      buttons: [
        {
          id: "search",
          label: "搜索",
          icon: Search,
          onClick: onSearch,
          variant: "ghost",
          tooltip: "搜索数据"
        },
        {
          id: "fullscreen",
          label: isFullscreen ? "退出全屏" : "全屏",
          icon: Maximize22,
          onClick: onFullscreen,
          variant: "ghost",
          tooltip: isFullscreen ? "退出全屏" : "进入全屏"
        },
        {
          id: "share",
          label: "分享",
          icon: Share2,
          onClick: onShare,
          variant: "ghost",
          tooltip: "分享表格"
        },
        {
          id: "api",
          label: "API",
          icon: Code,
          onClick: onAPI,
          variant: "ghost",
          tooltip: "API 文档"
        },
        {
          id: "collaboration",
          label: "协作",
          icon: Users,
          onClick: onCollaboration,
          variant: "ghost",
          tooltip: "协作设置"
        }
      ],
      separator: true
    },
    {
      id: "controls",
      label: "控制",
      buttons: [
        {
          id: "toggle-toolbar",
          label: "隐藏工具栏",
          icon: ChevronUp,
          onClick: onToggleToolbar,
          variant: "ghost",
          tooltip: "隐藏工具栏"
        }
      ]
    }
  ];
  return (0, import_jsx_runtime42.jsxs)(
    "div",
    {
      className: cn2(
        // 基础布局
        "flex items-center justify-between",
        "px-4 py-2 border-b",
        // 尺寸
        isMobile ? "h-12" : "h-14",
        // 背景和边框
        "bg-white",
        // 自定义类名
        className
      ),
      style: {
        borderColor: tokens.colors.border.subtle,
        backgroundColor: tokens.colors.surface.base
      },
      role: "toolbar",
      "aria-label": "网格工具栏",
      children: [
        (0, import_jsx_runtime42.jsx)("div", { className: "flex items-center gap-1", children: toolbarGroups.slice(0, 2).map((group, groupIndex) => (0, import_jsx_runtime42.jsxs)(import_react197.default.Fragment, { children: [
          (0, import_jsx_runtime42.jsx)("div", { className: "flex items-center gap-1", children: group.buttons.map((button) => {
            const IconComponent = button.icon;
            return (0, import_jsx_runtime42.jsx)(
              IconButton,
              {
                icon: IconComponent,
                size: isMobile ? "sm" : "md",
                variant: button.variant || "ghost",
                onClick: button.onClick,
                disabled: button.disabled,
                className: cn2(
                  "transition-all duration-200",
                  button.disabled && "opacity-50 cursor-not-allowed"
                ),
                "aria-label": button.tooltip || button.label,
                title: button.tooltip || button.label
              },
              button.id
            );
          }) }),
          group.separator && (0, import_jsx_runtime42.jsx)(
            "div",
            {
              className: "w-px h-6 mx-2",
              style: { backgroundColor: tokens.colors.border.subtle },
              "aria-hidden": "true"
            }
          )
        ] }, group.id)) }),
        !isMobile && (0, import_jsx_runtime42.jsx)("div", { className: "flex items-center gap-1", children: toolbarGroups[2].buttons.map((button) => {
          const IconComponent = button.icon;
          return (0, import_jsx_runtime42.jsx)(
            Button,
            {
              icon: IconComponent,
              size: "sm",
              variant: button.variant || "secondary",
              onClick: button.onClick,
              className: "transition-all duration-200",
              "aria-label": button.tooltip || button.label,
              title: button.tooltip || button.label,
              children: button.label
            },
            button.id
          );
        }) }),
        (0, import_jsx_runtime42.jsxs)("div", { className: "flex items-center gap-1", children: [
          (0, import_jsx_runtime42.jsx)("div", { className: "flex items-center gap-1", children: toolbarGroups[3].buttons.map((button) => {
            const IconComponent = button.icon;
            return (0, import_jsx_runtime42.jsx)(
              IconButton,
              {
                icon: IconComponent,
                size: isMobile ? "sm" : "md",
                variant: button.variant || "ghost",
                onClick: button.onClick,
                className: "transition-all duration-200",
                "aria-label": button.tooltip || button.label,
                title: button.tooltip || button.label
              },
              button.id
            );
          }) }),
          (0, import_jsx_runtime42.jsx)(
            "div",
            {
              className: "w-px h-6 mx-2",
              style: { backgroundColor: tokens.colors.border.subtle },
              "aria-hidden": "true"
            }
          ),
          (0, import_jsx_runtime42.jsx)("div", { className: "flex items-center gap-1", children: toolbarGroups[4].buttons.map((button) => {
            const IconComponent = button.icon;
            return (0, import_jsx_runtime42.jsx)(
              IconButton,
              {
                icon: IconComponent,
                size: isMobile ? "sm" : "md",
                variant: button.variant || "ghost",
                onClick: button.onClick,
                className: "transition-all duration-200",
                "aria-label": button.tooltip || button.label,
                title: button.tooltip || button.label
              },
              button.id
            );
          }) })
        ] })
      ]
    }
  );
};

// ../../packages/aitable/src/grid/components/toolbar/StatisticsRow.tsx
var import_jsx_runtime43 = __toESM(require_jsx_runtime(), 1);
var StatisticsRow = (props) => {
  const {
    statistics = [],
    totalRecords = 0,
    selectedRecords = 0,
    onStatisticClick,
    onToggleStatistics,
    width = 800
  } = props;
  return (0, import_jsx_runtime43.jsxs)(
    "div",
    {
      style: {
        display: "flex",
        alignItems: "center",
        borderTop: "1px solid #e5e7eb",
        backgroundColor: "#f9fafb",
        minHeight: "32px",
        width: "100%"
      },
      children: [
        (0, import_jsx_runtime43.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              alignItems: "center",
              padding: "6px 12px",
              backgroundColor: "#8b5cf6",
              color: "#ffffff",
              fontSize: "13px",
              fontWeight: "500",
              minWidth: "120px"
            },
            children: [
              totalRecords,
              "条记录",
              selectedRecords > 0 && ` (已选${selectedRecords}条)`
            ]
          }
        ),
        (0, import_jsx_runtime43.jsx)(
          "div",
          {
            style: {
              flex: 1,
              display: "flex",
              alignItems: "center",
              padding: "6px 12px",
              fontSize: "13px",
              color: "#6b7280",
              cursor: "pointer"
            },
            onClick: () => onStatisticClick?.(0),
            children: statistics.length > 0 ? (0, import_jsx_runtime43.jsx)("div", { style: { display: "flex", gap: "16px", flexWrap: "wrap" }, children: statistics.map((stat, index3) => (0, import_jsx_runtime43.jsxs)(
              "div",
              {
                style: {
                  display: "flex",
                  alignItems: "center",
                  gap: "4px"
                },
                children: [
                  (0, import_jsx_runtime43.jsxs)("span", { style: { fontWeight: "500" }, children: [
                    stat.label || getStatLabel(stat.type),
                    ":"
                  ] }),
                  (0, import_jsx_runtime43.jsx)("span", { children: formatStatValue(stat.value, stat.type) })
                ]
              },
              index3
            )) }) : "点击此行进行统计"
          }
        ),
        (0, import_jsx_runtime43.jsx)(
          "button",
          {
            onClick: onToggleStatistics,
            style: {
              padding: "4px 8px",
              margin: "0 8px",
              border: "1px solid #d1d5db",
              borderRadius: "4px",
              backgroundColor: "#ffffff",
              cursor: "pointer",
              fontSize: "12px"
            },
            title: "隐藏统计行",
            children: "▼"
          }
        )
      ]
    }
  );
};
function getStatLabel(type) {
  const labels = {
    sum: "总和",
    average: "平均值",
    count: "计数",
    min: "最小值",
    max: "最大值",
    empty: "空值",
    filled: "填充",
    unique: "唯一值"
  };
  return labels[type] || type;
}
function formatStatValue(value, type) {
  if (typeof value === "number") {
    if (type === "average") {
      return value.toFixed(2);
    }
    return value.toLocaleString();
  }
  return String(value);
}

// ../../packages/aitable/src/components/field-config/AddFieldMenu.tsx
var import_react198 = __toESM(require_react(), 1);
var import_jsx_runtime44 = __toESM(require_jsx_runtime(), 1);
var categoryConfig = {
  basic: {
    name: "基础字段",
    icon: FileText,
    color: "#3b82f6"
  },
  select: {
    name: "选择字段",
    icon: List,
    color: "#8b5cf6"
  },
  datetime: {
    name: "日期时间",
    icon: Calendar,
    color: "#06b6d4"
  },
  link: {
    name: "链接字段",
    icon: Link,
    color: "#10b981"
  },
  advanced: {
    name: "高级字段",
    icon: Sparkles,
    color: "#f59e0b"
  },
  collab: {
    name: "协作字段",
    icon: User,
    color: "#ec4899"
  }
};
var fieldTypes = [
  // 基础类型
  {
    id: "text",
    name: "单行文本",
    icon: TextAlignStart,
    description: "简短的文本内容",
    category: "basic",
    color: "#3b82f6",
    popular: true,
    keywords: ["文本", "text", "单行"]
  },
  {
    id: "longText",
    name: "长文本",
    icon: FileText,
    description: "多行文本，支持换行",
    category: "basic",
    color: "#10b981",
    popular: true,
    keywords: ["长文本", "textarea", "多行"]
  },
  {
    id: "number",
    name: "数字",
    icon: Hash2,
    description: "数值和计算",
    category: "basic",
    color: "#f59e0b",
    popular: true,
    keywords: ["数字", "number", "数值"]
  },
  // 选择类型
  {
    id: "singleSelect",
    name: "单选",
    icon: SquareCheckBig,
    description: "从多个选项中选择一个",
    category: "select",
    color: "#8b5cf6",
    popular: true,
    keywords: ["单选", "select", "选项"]
  },
  {
    id: "multipleSelect",
    name: "多选",
    icon: List,
    description: "可以选择多个选项",
    category: "select",
    color: "#ec4899",
    popular: true,
    keywords: ["多选", "multi", "标签"]
  },
  {
    id: "checkbox",
    name: "复选框",
    icon: Check2,
    description: "是/否 二选一",
    category: "select",
    color: "#84cc16",
    keywords: ["复选框", "checkbox", "是否"]
  },
  // 日期时间
  {
    id: "date",
    name: "日期",
    icon: Calendar,
    description: "日期和时间",
    category: "datetime",
    color: "#06b6d4",
    popular: true,
    keywords: ["日期", "date", "时间"]
  },
  // 链接类型
  {
    id: "link",
    name: "链接",
    icon: Link,
    description: "网址链接",
    category: "link",
    color: "#6366f1",
    keywords: ["链接", "url", "网址"]
  },
  {
    id: "email",
    name: "邮箱",
    icon: Mail,
    description: "电子邮件地址",
    category: "link",
    color: "#14b8a6",
    keywords: ["邮箱", "email", "邮件"]
  },
  {
    id: "phone",
    name: "电话",
    icon: Phone,
    description: "电话号码",
    category: "link",
    color: "#ef4444",
    keywords: ["电话", "phone", "手机"]
  },
  // 高级类型
  {
    id: "rating",
    name: "评分",
    icon: Star,
    description: "星级评分",
    category: "advanced",
    color: "#eab308",
    keywords: ["评分", "rating", "星级"]
  },
  {
    id: "formula",
    name: "公式",
    icon: Sparkles,
    description: "基于其他字段计算得出",
    category: "advanced",
    color: "#8b5cf6",
    popular: true,
    keywords: ["公式", "formula", "计算", "函数"]
  },
  // 协作类型
  {
    id: "user",
    name: "成员",
    icon: User,
    description: "选择用户或成员",
    category: "collab",
    color: "#64748b",
    keywords: ["用户", "user", "成员", "人员"]
  },
  {
    id: "attachment",
    name: "附件",
    icon: Image2,
    description: "上传文件和图片",
    category: "collab",
    color: "#f97316",
    keywords: ["附件", "attachment", "文件", "图片"]
  }
];
function AddFieldMenu({
  isOpen,
  onClose,
  onConfirm,
  onSelect,
  triggerRef
}) {
  const [searchQuery, setSearchQuery] = (0, import_react198.useState)("");
  const [selectedCategory, setSelectedCategory] = (0, import_react198.useState)("all");
  const [step, setStep] = (0, import_react198.useState)("select");
  const [selectedType, setSelectedType] = (0, import_react198.useState)(null);
  const [fieldName, setFieldName] = (0, import_react198.useState)("");
  const [fieldOptions, setFieldOptions] = (0, import_react198.useState)({});
  const [fieldDescription, setFieldDescription] = (0, import_react198.useState)("");
  const menuRef = (0, import_react198.useRef)(null);
  const [position, setPosition] = (0, import_react198.useState)({ top: 0, left: 0, maxHeight: 400 });
  const filteredFieldTypes = (0, import_react198.useMemo)(() => {
    let result2 = fieldTypes;
    if (selectedCategory === "popular") {
      result2 = result2.filter((type) => type.popular);
    } else if (selectedCategory !== "all") {
      result2 = result2.filter((type) => type.category === selectedCategory);
    }
    if (searchQuery.trim()) {
      const query = searchQuery.toLowerCase();
      result2 = result2.filter(
        (type) => type.name.toLowerCase().includes(query) || type.description.toLowerCase().includes(query) || type.keywords?.some(
          (keyword) => keyword.toLowerCase().includes(query)
        )
      );
    }
    return result2;
  }, [selectedCategory, searchQuery]);
  (0, import_react198.useEffect)(() => {
    if (!isOpen || !triggerRef?.current) return;
    const trigger = triggerRef.current;
    const rect = trigger.getBoundingClientRect();
    const viewport = { width: window.innerWidth, height: window.innerHeight };
    let top = rect.bottom + 4;
    let left = rect.left;
    let maxHeight = 400;
    const menuWidth = step === "select" ? 320 : 420;
    const margin = 8;
    left = Math.min(
      Math.max(left, margin),
      viewport.width - menuWidth - margin
    );
    const availableBelow = viewport.height - top - margin;
    if (availableBelow < 220) {
      top = rect.top - 4;
      maxHeight = Math.min(400, rect.top - margin);
    } else {
      maxHeight = Math.min(400, availableBelow);
    }
    setPosition({ top, left, maxHeight });
  }, [isOpen, triggerRef, step]);
  (0, import_react198.useEffect)(() => {
    if (isOpen) {
      setStep("select");
      setSelectedType(null);
      setFieldName("");
      setFieldOptions({});
      setFieldDescription("");
    }
  }, [isOpen]);
  const handleFieldSelect = (fieldType) => {
    const type = fieldTypes.find((t) => t.id === fieldType) || null;
    setSelectedType(type);
    if (onConfirm) {
      if (fieldType === "singleSelect" || fieldType === "multipleSelect") {
        setFieldOptions({ options: [] });
      } else {
        setFieldOptions({});
      }
      setStep("configure");
    } else {
      onSelect?.(fieldType);
      onClose();
    }
  };
  const handleKeyDown = (e2) => {
    if (e2.key === "Escape") {
      onClose();
    }
  };
  (0, import_react198.useEffect)(() => {
    if (!isOpen) return;
    const handleClickOutside = (e2) => {
      if (menuRef.current && !menuRef.current.contains(e2.target) && triggerRef?.current && typeof triggerRef.current.contains === "function" && !triggerRef.current.contains(e2.target)) {
        onClose();
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [isOpen, onClose, triggerRef]);
  if (!isOpen) return null;
  return (0, import_jsx_runtime44.jsxs)(import_jsx_runtime44.Fragment, { children: [
    (0, import_jsx_runtime44.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          zIndex: 50
        },
        onClick: onClose
      }
    ),
    (0, import_jsx_runtime44.jsx)(
      "div",
      {
        ref: menuRef,
        style: {
          position: "fixed",
          top: position.top,
          left: position.left,
          width: step === "select" ? "320px" : "420px",
          maxHeight: position.maxHeight,
          backgroundColor: tokens.colors.surface.base,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "8px",
          boxShadow: "0 8px 32px rgba(0, 0, 0, 0.12), 0 2px 8px rgba(0, 0, 0, 0.08)",
          zIndex: 51,
          display: "flex",
          flexDirection: "column",
          overflow: "hidden",
          animation: "slideDown 200ms cubic-bezier(0.16, 1, 0.3, 1)"
        },
        onKeyDown: handleKeyDown,
        tabIndex: -1,
        children: step === "select" ? (0, import_jsx_runtime44.jsxs)(import_jsx_runtime44.Fragment, { children: [
          (0, import_jsx_runtime44.jsx)(
            "div",
            {
              style: {
                padding: "12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`
              },
              children: (0, import_jsx_runtime44.jsxs)("div", { style: { position: "relative" }, children: [
                (0, import_jsx_runtime44.jsx)(
                  Search,
                  {
                    size: 16,
                    style: {
                      position: "absolute",
                      left: "10px",
                      top: "50%",
                      transform: "translateY(-50%)",
                      color: tokens.colors.text.tertiary,
                      pointerEvents: "none"
                    }
                  }
                ),
                (0, import_jsx_runtime44.jsx)(
                  "input",
                  {
                    type: "text",
                    value: searchQuery,
                    onChange: (e2) => setSearchQuery(e2.target.value),
                    placeholder: "搜索字段类型...",
                    autoFocus: true,
                    style: {
                      width: "100%",
                      padding: "8px 10px 8px 32px",
                      fontSize: "13px",
                      color: tokens.colors.text.primary,
                      backgroundColor: tokens.colors.surface.base,
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      outline: "none",
                      transition: transitions.presets.all,
                      boxSizing: "border-box"
                    },
                    onFocus: (e2) => {
                      e2.target.style.borderColor = tokens.colors.border.focus;
                      e2.target.style.boxShadow = `0 0 0 2px ${tokens.colors.border.focus}20`;
                    },
                    onBlur: (e2) => {
                      e2.target.style.borderColor = tokens.colors.border.subtle;
                      e2.target.style.boxShadow = "none";
                    }
                  }
                )
              ] })
            }
          ),
          (0, import_jsx_runtime44.jsx)(
            "div",
            {
              style: {
                padding: "8px 12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                gap: "4px",
                flexWrap: "wrap",
                backgroundColor: tokens.colors.surface.hover
              },
              children: [
                { id: "all", name: "全部" },
                { id: "popular", name: "常用" },
                ...Object.entries(categoryConfig).map(([id, config]) => ({
                  id,
                  name: config.name
                }))
              ].map((category) => {
                const isSelected = selectedCategory === category.id;
                return (0, import_jsx_runtime44.jsx)(
                  "button",
                  {
                    onClick: () => setSelectedCategory(category.id),
                    style: {
                      padding: "4px 8px",
                      fontSize: "11px",
                      fontWeight: isSelected ? 500 : 400,
                      color: isSelected ? tokens.colors.text.primary : tokens.colors.text.secondary,
                      backgroundColor: isSelected ? tokens.colors.surface.base : "transparent",
                      border: `1px solid ${isSelected ? tokens.colors.border.default : "transparent"}`,
                      borderRadius: "4px",
                      cursor: "pointer",
                      transition: transitions.presets.all,
                      whiteSpace: "nowrap"
                    },
                    onMouseEnter: (e2) => {
                      if (!isSelected) {
                        e2.currentTarget.style.backgroundColor = tokens.colors.surface.base;
                      }
                    },
                    onMouseLeave: (e2) => {
                      if (!isSelected) {
                        e2.currentTarget.style.backgroundColor = "transparent";
                      }
                    },
                    children: category.name
                  },
                  category.id
                );
              })
            }
          ),
          (0, import_jsx_runtime44.jsx)(
            "div",
            {
              style: {
                flex: 1,
                overflowY: "auto",
                padding: "4px"
              },
              children: filteredFieldTypes.length === 0 ? (0, import_jsx_runtime44.jsxs)(
                "div",
                {
                  style: {
                    padding: "24px 16px",
                    textAlign: "center",
                    color: tokens.colors.text.secondary,
                    fontSize: "13px"
                  },
                  children: [
                    (0, import_jsx_runtime44.jsx)(
                      Search,
                      {
                        size: 24,
                        style: {
                          color: tokens.colors.text.tertiary,
                          marginBottom: "8px"
                        }
                      }
                    ),
                    (0, import_jsx_runtime44.jsx)("div", { children: "没有找到匹配的字段类型" })
                  ]
                }
              ) : (0, import_jsx_runtime44.jsx)(
                "div",
                {
                  style: {
                    display: "flex",
                    flexDirection: "column",
                    gap: "2px"
                  },
                  children: filteredFieldTypes.map((type) => {
                    const IconComponent = type.icon;
                    return (0, import_jsx_runtime44.jsxs)(
                      "button",
                      {
                        onClick: () => handleFieldSelect(type.id),
                        style: {
                          padding: "8px 12px",
                          backgroundColor: "transparent",
                          border: "none",
                          borderRadius: "6px",
                          cursor: "pointer",
                          textAlign: "left",
                          transition: "all 150ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                          display: "flex",
                          alignItems: "center",
                          gap: "10px",
                          position: "relative"
                        },
                        onMouseEnter: (e2) => {
                          e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                        },
                        onMouseLeave: (e2) => {
                          e2.currentTarget.style.backgroundColor = "transparent";
                        },
                        children: [
                          (0, import_jsx_runtime44.jsx)(
                            "div",
                            {
                              style: {
                                width: "24px",
                                height: "24px",
                                borderRadius: "4px",
                                backgroundColor: `${type.color}15`,
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "center",
                                flexShrink: 0
                              },
                              children: (0, import_jsx_runtime44.jsx)(
                                IconComponent,
                                {
                                  size: 14,
                                  style: { color: type.color }
                                }
                              )
                            }
                          ),
                          (0, import_jsx_runtime44.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                            (0, import_jsx_runtime44.jsxs)(
                              "div",
                              {
                                style: {
                                  fontSize: "13px",
                                  fontWeight: 500,
                                  color: tokens.colors.text.primary,
                                  marginBottom: "2px",
                                  display: "flex",
                                  alignItems: "center",
                                  gap: "4px"
                                },
                                children: [
                                  type.name,
                                  type.popular && (0, import_jsx_runtime44.jsx)(
                                    Star,
                                    {
                                      size: 10,
                                      style: {
                                        color: tokens.colors.text.warning,
                                        fill: tokens.colors.text.warning
                                      }
                                    }
                                  )
                                ]
                              }
                            ),
                            (0, import_jsx_runtime44.jsx)(
                              "div",
                              {
                                style: {
                                  fontSize: "11px",
                                  color: tokens.colors.text.secondary,
                                  lineHeight: "1.3"
                                },
                                children: type.description
                              }
                            )
                          ] })
                        ]
                      },
                      type.id
                    );
                  })
                }
              )
            }
          )
        ] }) : (0, import_jsx_runtime44.jsxs)(import_jsx_runtime44.Fragment, { children: [
          (0, import_jsx_runtime44.jsxs)(
            "div",
            {
              style: {
                padding: "12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                flexDirection: "column",
                gap: "8px"
              },
              children: [
                (0, import_jsx_runtime44.jsx)(
                  "input",
                  {
                    type: "text",
                    value: fieldName,
                    onChange: (e2) => setFieldName(e2.target.value),
                    placeholder: "字段名称（可选）",
                    autoFocus: true,
                    style: {
                      width: "100%",
                      padding: "8px 10px",
                      fontSize: "14px",
                      color: tokens.colors.text.primary,
                      backgroundColor: tokens.colors.surface.base,
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      outline: "none"
                    }
                  }
                ),
                (0, import_jsx_runtime44.jsxs)(
                  "div",
                  {
                    style: {
                      fontSize: "12px",
                      color: tokens.colors.text.secondary,
                      display: "flex",
                      alignItems: "center",
                      gap: "6px"
                    },
                    children: [
                      (0, import_jsx_runtime44.jsx)(
                        "span",
                        {
                          style: {
                            padding: "4px 8px",
                            border: `1px solid ${tokens.colors.border.subtle}`,
                            borderRadius: "4px",
                            backgroundColor: tokens.colors.surface.hover
                          },
                          children: selectedType?.name
                        }
                      ),
                      (0, import_jsx_runtime44.jsx)(
                        "button",
                        {
                          onClick: () => setStep("select"),
                          style: {
                            marginLeft: "auto",
                            background: "transparent",
                            border: "none",
                            color: tokens.colors.text.link,
                            cursor: "pointer",
                            fontSize: "12px"
                          },
                          children: "更改类型"
                        }
                      )
                    ]
                  }
                )
              ]
            }
          ),
          (0, import_jsx_runtime44.jsx)(
            "div",
            {
              style: {
                padding: "12px",
                overflowY: "auto",
                maxHeight: position.maxHeight - 120
              },
              children: selectedType?.id === "singleSelect" || selectedType?.id === "multipleSelect" ? (0, import_jsx_runtime44.jsx)(
                SelectOptionsEditor,
                {
                  value: fieldOptions,
                  onChange: setFieldOptions
                }
              ) : selectedType?.id === "formula" ? (0, import_jsx_runtime44.jsx)(
                FormulaEditor2,
                {
                  value: fieldOptions,
                  onChange: setFieldOptions
                }
              ) : (0, import_jsx_runtime44.jsx)(
                "div",
                {
                  style: {
                    fontSize: "12px",
                    color: tokens.colors.text.secondary
                  },
                  children: "该字段暂无额外配置"
                }
              )
            }
          ),
          (0, import_jsx_runtime44.jsxs)(
            "div",
            {
              style: {
                padding: "12px",
                borderTop: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                gap: "8px",
                justifyContent: "flex-end",
                backgroundColor: tokens.colors.surface.base,
                position: "sticky",
                bottom: 0
              },
              children: [
                (0, import_jsx_runtime44.jsx)(
                  "button",
                  {
                    onClick: onClose,
                    style: {
                      padding: "8px 12px",
                      fontSize: "13px",
                      background: "transparent",
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      cursor: "pointer",
                      color: tokens.colors.text.primary
                    },
                    children: "取消"
                  }
                ),
                (0, import_jsx_runtime44.jsx)(
                  "button",
                  {
                    onClick: (e2) => {
                      console.log("🔥 创建字段按钮被点击");
                      console.log("selectedType:", selectedType);
                      console.log("fieldName:", fieldName);
                      console.log("fieldOptions:", fieldOptions);
                      console.log("onConfirm:", onConfirm);
                      e2.stopPropagation();
                      if (!selectedType) {
                        console.error("❌ selectedType 为 null");
                        return;
                      }
                      const payload = {
                        type: selectedType.id,
                        name: fieldName,
                        options: { ...fieldOptions, description: fieldDescription }
                      };
                      console.log("准备调用 onConfirm，参数:", payload);
                      onConfirm?.(payload);
                      onClose();
                    },
                    style: {
                      padding: "8px 12px",
                      fontSize: "13px",
                      background: tokens.colors.primary[600],
                      color: "#fff",
                      border: "none",
                      borderRadius: "6px",
                      cursor: "pointer",
                      pointerEvents: "auto"
                    },
                    children: "创建字段"
                  }
                )
              ]
            }
          )
        ] })
      }
    ),
    (0, import_jsx_runtime44.jsx)("style", { children: `
        @keyframes slideDown {
          from {
            opacity: 0;
            transform: translateY(-8px) scale(0.95);
          }
          to {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
        }
      ` })
  ] });
}
function FormulaEditor2({
  value,
  onChange
}) {
  const [formula, setFormula] = (0, import_react198.useState)(value?.formula || "");
  const [description2, setDescription] = (0, import_react198.useState)(value?.description || "");
  const handleFormulaChange = (newFormula) => {
    setFormula(newFormula);
    onChange({ ...value, formula: newFormula });
  };
  const handleDescriptionChange = (newDescription) => {
    setDescription(newDescription);
    onChange({ ...value, description: newDescription });
  };
  const handleAIGenerate = () => {
    const aiFormula = "SUM({数字字段1}, {数字字段2})";
    handleFormulaChange(aiFormula);
  };
  return (0, import_jsx_runtime44.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "12px" }, children: [
    (0, import_jsx_runtime44.jsx)(
      "div",
      {
        style: {
          fontSize: "13px",
          fontWeight: 600,
          color: tokens.colors.text.primary,
          marginBottom: "4px"
        },
        children: "公式"
      }
    ),
    (0, import_jsx_runtime44.jsx)("div", { style: { position: "relative" }, children: (0, import_jsx_runtime44.jsx)(
      "textarea",
      {
        value: formula,
        onChange: (e2) => handleFormulaChange(e2.target.value),
        placeholder: "输入公式，例如：SUM({字段1}, {字段2})",
        style: {
          width: "100%",
          minHeight: "80px",
          padding: "8px 10px",
          fontSize: "13px",
          color: tokens.colors.text.primary,
          backgroundColor: tokens.colors.surface.base,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "6px",
          outline: "none",
          resize: "vertical",
          fontFamily: 'Monaco, Menlo, "Ubuntu Mono", monospace',
          lineHeight: "1.4"
        },
        onFocus: (e2) => {
          e2.target.style.borderColor = tokens.colors.border.focus;
          e2.target.style.boxShadow = `0 0 0 2px ${tokens.colors.border.focus}20`;
        },
        onBlur: (e2) => {
          e2.target.style.borderColor = tokens.colors.border.subtle;
          e2.target.style.boxShadow = "none";
        }
      }
    ) }),
    (0, import_jsx_runtime44.jsxs)(
      "button",
      {
        onClick: handleAIGenerate,
        style: {
          padding: "6px 12px",
          fontSize: "12px",
          background: tokens.colors.surface.hover,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "6px",
          cursor: "pointer",
          color: tokens.colors.text.primary,
          alignSelf: "flex-start",
          display: "flex",
          alignItems: "center",
          gap: "6px"
        },
        children: [
          (0, import_jsx_runtime44.jsx)(Sparkles, { size: 12 }),
          "使用 AI 生成公式"
        ]
      }
    ),
    (0, import_jsx_runtime44.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "4px" }, children: [
      (0, import_jsx_runtime44.jsx)(
        "label",
        {
          style: {
            fontSize: "12px",
            fontWeight: 500,
            color: tokens.colors.text.primary
          },
          children: "描述"
        }
      ),
      (0, import_jsx_runtime44.jsx)(
        "input",
        {
          type: "text",
          value: description2,
          onChange: (e2) => handleDescriptionChange(e2.target.value),
          placeholder: "描述此字段的用途（可选）",
          style: {
            width: "100%",
            padding: "6px 8px",
            fontSize: "12px",
            color: tokens.colors.text.primary,
            backgroundColor: tokens.colors.surface.base,
            border: `1px solid ${tokens.colors.border.subtle}`,
            borderRadius: "6px",
            outline: "none"
          }
        }
      )
    ] })
  ] });
}
function SelectOptionsEditor({
  value,
  onChange
}) {
  const options = value?.options ?? [];
  const addOption = () => {
    const next = [
      ...options,
      { id: `${Date.now()}`, name: `选项${options.length + 1}` }
    ];
    onChange({ ...value, options: next });
  };
  const updateName = (index3, name) => {
    const next = options.slice();
    next[index3] = { ...next[index3], name };
    onChange({ ...value, options: next });
  };
  const remove2 = (index3) => {
    const next = options.filter((_2, i) => i !== index3);
    onChange({ ...value, options: next });
  };
  return (0, import_jsx_runtime44.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "8px" }, children: [
    (0, import_jsx_runtime44.jsx)(
      "div",
      {
        style: {
          fontSize: "13px",
          fontWeight: 600,
          color: tokens.colors.text.primary,
          marginBottom: "4px"
        },
        children: "选项"
      }
    ),
    options.length === 0 && (0, import_jsx_runtime44.jsx)("div", { style: { fontSize: "12px", color: tokens.colors.text.secondary }, children: "暂无选项" }),
    options.map((opt, idx) => (0, import_jsx_runtime44.jsxs)(
      "div",
      {
        style: { display: "flex", gap: "8px", alignItems: "center" },
        children: [
          (0, import_jsx_runtime44.jsx)(
            "input",
            {
              value: opt.name,
              onChange: (e2) => updateName(idx, e2.target.value),
              style: {
                flex: 1,
                padding: "6px 8px",
                fontSize: "13px",
                border: `1px solid ${tokens.colors.border.subtle}`,
                borderRadius: "6px"
              }
            }
          ),
          (0, import_jsx_runtime44.jsx)(
            "button",
            {
              onClick: () => remove2(idx),
              style: {
                padding: "6px 8px",
                fontSize: "12px",
                background: "transparent",
                border: `1px solid ${tokens.colors.border.subtle}`,
                borderRadius: "6px",
                cursor: "pointer"
              },
              children: "删除"
            }
          )
        ]
      },
      opt.id
    )),
    (0, import_jsx_runtime44.jsx)(
      "button",
      {
        onClick: addOption,
        style: {
          padding: "8px 12px",
          fontSize: "13px",
          background: tokens.colors.surface.hover,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "6px",
          cursor: "pointer",
          alignSelf: "flex-start"
        },
        children: "+ 添加选项"
      }
    )
  ] });
}

// ../../packages/aitable/src/components/field-config/EditFieldMenu.tsx
var import_react200 = __toESM(require_react(), 1);

// ../../packages/aitable/src/components/field-config/field-configurations/index.tsx
var import_react199 = __toESM(require_react(), 1);
var import_jsx_runtime45 = __toESM(require_jsx_runtime(), 1);
function SelectFieldConfiguration({
  config,
  onChange,
  isMultiple = false
}) {
  const [newOption, setNewOption] = (0, import_react199.useState)("");
  const predefinedColors = [
    "#ef4444",
    "#f97316",
    "#f59e0b",
    "#84cc16",
    "#22c55e",
    "#10b981",
    "#14b8a6",
    "#06b6d4",
    "#3b82f6",
    "#6366f1",
    "#8b5cf6",
    "#a855f7",
    "#ec4899",
    "#f43f5e",
    "#64748b"
  ];
  const addOption = () => {
    if (newOption.trim()) {
      const randomColor = predefinedColors[Math.floor(Math.random() * predefinedColors.length)];
      onChange({
        ...config,
        options: [
          ...config.options,
          {
            id: `option-${Date.now()}`,
            label: newOption.trim(),
            color: randomColor
          }
        ]
      });
      setNewOption("");
    }
  };
  const updateOption = (id, updates) => {
    onChange({
      ...config,
      options: config.options.map(
        (opt) => opt.id === id ? { ...opt, ...updates } : opt
      )
    });
  };
  const removeOption = (id) => {
    onChange({
      ...config,
      options: config.options.filter((opt) => opt.id !== id)
    });
  };
  const reorderOption = (fromIndex, toIndex) => {
    const newOptions = [...config.options];
    const [removed] = newOptions.splice(fromIndex, 1);
    newOptions.splice(toIndex, 0, removed);
    onChange({ ...config, options: newOptions });
  };
  return (0, import_jsx_runtime45.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "16px" }, children: [
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: isMultiple ? "选项列表（可多选）" : "选项列表（单选）"
        }
      ),
      (0, import_jsx_runtime45.jsx)(
        "p",
        {
          style: {
            fontSize: "12px",
            color: tokens.colors.text.secondary,
            marginBottom: "12px"
          },
          children: "添加选项，用户可以从中选择。拖动可以调整顺序。"
        }
      ),
      (0, import_jsx_runtime45.jsx)(
        "div",
        {
          style: {
            display: "flex",
            flexDirection: "column",
            gap: "8px",
            marginBottom: "12px"
          },
          children: config.options.map((option, index3) => (0, import_jsx_runtime45.jsxs)(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center",
                gap: "8px",
                padding: "8px 12px",
                backgroundColor: tokens.colors.surface.base,
                border: `1px solid ${tokens.colors.border.subtle}`,
                borderRadius: "6px",
                transition: transitions.presets.all
              },
              children: [
                (0, import_jsx_runtime45.jsx)(
                  GripVertical,
                  {
                    size: 16,
                    style: {
                      color: tokens.colors.text.tertiary,
                      cursor: "grab"
                    }
                  }
                ),
                (0, import_jsx_runtime45.jsx)(
                  "input",
                  {
                    type: "color",
                    value: option.color,
                    onChange: (e2) => updateOption(option.id, { color: e2.target.value }),
                    style: {
                      width: "28px",
                      height: "28px",
                      border: "none",
                      borderRadius: "4px",
                      cursor: "pointer"
                    }
                  }
                ),
                (0, import_jsx_runtime45.jsx)(
                  "input",
                  {
                    type: "text",
                    value: option.label,
                    onChange: (e2) => updateOption(option.id, { label: e2.target.value }),
                    placeholder: "选项名称",
                    style: {
                      flex: 1,
                      padding: "6px 10px",
                      fontSize: "13px",
                      color: tokens.colors.text.primary,
                      backgroundColor: "transparent",
                      border: "none",
                      outline: "none"
                    }
                  }
                ),
                (0, import_jsx_runtime45.jsx)(
                  "button",
                  {
                    onClick: () => removeOption(option.id),
                    style: {
                      padding: "4px",
                      backgroundColor: "transparent",
                      border: "none",
                      borderRadius: "4px",
                      cursor: "pointer",
                      transition: transitions.presets.all,
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center"
                    },
                    onMouseEnter: (e2) => {
                      e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = "transparent";
                    },
                    children: (0, import_jsx_runtime45.jsx)(X2, { size: 14, style: { color: tokens.colors.text.secondary } })
                  }
                )
              ]
            },
            option.id
          ))
        }
      ),
      (0, import_jsx_runtime45.jsxs)("div", { style: { display: "flex", gap: "8px" }, children: [
        (0, import_jsx_runtime45.jsx)(
          "input",
          {
            type: "text",
            value: newOption,
            onChange: (e2) => setNewOption(e2.target.value),
            onKeyDown: (e2) => {
              if (e2.key === "Enter") {
                e2.preventDefault();
                addOption();
              }
            },
            placeholder: "输入新选项名称...",
            style: {
              flex: 1,
              padding: "8px 12px",
              fontSize: "13px",
              color: tokens.colors.text.primary,
              backgroundColor: tokens.colors.surface.base,
              border: `1px solid ${tokens.colors.border.subtle}`,
              borderRadius: "6px",
              outline: "none",
              transition: transitions.presets.all
            },
            onFocus: (e2) => {
              e2.target.style.borderColor = tokens.colors.border.focus;
            },
            onBlur: (e2) => {
              e2.target.style.borderColor = tokens.colors.border.subtle;
            }
          }
        ),
        (0, import_jsx_runtime45.jsxs)(
          "button",
          {
            onClick: addOption,
            disabled: !newOption.trim(),
            style: {
              padding: "8px 16px",
              fontSize: "13px",
              fontWeight: 500,
              color: newOption.trim() ? tokens.colors.text.inverse : tokens.colors.text.tertiary,
              backgroundColor: newOption.trim() ? tokens.colors.primary[500] : tokens.colors.surface.disabled,
              border: "none",
              borderRadius: "6px",
              cursor: newOption.trim() ? "pointer" : "not-allowed",
              transition: transitions.presets.all,
              display: "flex",
              alignItems: "center",
              gap: "6px"
            },
            children: [
              (0, import_jsx_runtime45.jsx)(Plus2, { size: 14 }),
              "添加"
            ]
          }
        )
      ] })
    ] }),
    isMultiple && (0, import_jsx_runtime45.jsx)("div", { children: (0, import_jsx_runtime45.jsxs)(
      "label",
      {
        style: {
          display: "flex",
          alignItems: "center",
          gap: "8px",
          fontSize: "13px",
          color: tokens.colors.text.primary,
          cursor: "pointer"
        },
        children: [
          (0, import_jsx_runtime45.jsx)(
            "input",
            {
              type: "checkbox",
              checked: config.allowOther || false,
              onChange: (e2) => onChange({ ...config, allowOther: e2.target.checked }),
              style: { cursor: "pointer" }
            }
          ),
          "允许用户添加自定义选项"
        ]
      }
    ) })
  ] });
}
function NumberFieldConfiguration({
  config,
  onChange
}) {
  return (0, import_jsx_runtime45.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "16px" }, children: [
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "数字格式"
        }
      ),
      (0, import_jsx_runtime45.jsx)("div", { style: { display: "flex", gap: "8px" }, children: [
        { value: "number", label: "数字" },
        { value: "currency", label: "货币" },
        { value: "percent", label: "百分比" }
      ].map((format3) => (0, import_jsx_runtime45.jsx)(
        "button",
        {
          onClick: () => onChange({ ...config, format: format3.value }),
          style: {
            flex: 1,
            padding: "8px 12px",
            fontSize: "13px",
            fontWeight: 500,
            color: config.format === format3.value ? tokens.colors.text.primary : tokens.colors.text.secondary,
            backgroundColor: config.format === format3.value ? tokens.colors.surface.selected : tokens.colors.surface.base,
            border: `1px solid ${config.format === format3.value ? tokens.colors.border.focus : tokens.colors.border.subtle}`,
            borderRadius: "6px",
            cursor: "pointer",
            transition: transitions.presets.all
          },
          children: format3.label
        },
        format3.value
      )) })
    ] }),
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "小数位数"
        }
      ),
      (0, import_jsx_runtime45.jsx)(
        "input",
        {
          type: "number",
          value: config.precision ?? 0,
          onChange: (e2) => onChange({ ...config, precision: parseInt(e2.target.value) || 0 }),
          min: 0,
          max: 10,
          style: {
            width: "100%",
            padding: "8px 12px",
            fontSize: "13px",
            color: tokens.colors.text.primary,
            backgroundColor: tokens.colors.surface.base,
            border: `1px solid ${tokens.colors.border.subtle}`,
            borderRadius: "6px",
            outline: "none"
          }
        }
      )
    ] }),
    (0, import_jsx_runtime45.jsxs)(
      "div",
      {
        style: { display: "grid", gridTemplateColumns: "1fr 1fr", gap: "12px" },
        children: [
          (0, import_jsx_runtime45.jsxs)("div", { children: [
            (0, import_jsx_runtime45.jsx)(
              "label",
              {
                style: {
                  display: "block",
                  fontSize: "13px",
                  fontWeight: 500,
                  color: tokens.colors.text.primary,
                  marginBottom: "8px"
                },
                children: "最小值（可选）"
              }
            ),
            (0, import_jsx_runtime45.jsx)(
              "input",
              {
                type: "number",
                value: config.min ?? "",
                onChange: (e2) => onChange({
                  ...config,
                  min: e2.target.value ? parseFloat(e2.target.value) : void 0
                }),
                placeholder: "无限制",
                style: {
                  width: "100%",
                  padding: "8px 12px",
                  fontSize: "13px",
                  color: tokens.colors.text.primary,
                  backgroundColor: tokens.colors.surface.base,
                  border: `1px solid ${tokens.colors.border.subtle}`,
                  borderRadius: "6px",
                  outline: "none"
                }
              }
            )
          ] }),
          (0, import_jsx_runtime45.jsxs)("div", { children: [
            (0, import_jsx_runtime45.jsx)(
              "label",
              {
                style: {
                  display: "block",
                  fontSize: "13px",
                  fontWeight: 500,
                  color: tokens.colors.text.primary,
                  marginBottom: "8px"
                },
                children: "最大值（可选）"
              }
            ),
            (0, import_jsx_runtime45.jsx)(
              "input",
              {
                type: "number",
                value: config.max ?? "",
                onChange: (e2) => onChange({
                  ...config,
                  max: e2.target.value ? parseFloat(e2.target.value) : void 0
                }),
                placeholder: "无限制",
                style: {
                  width: "100%",
                  padding: "8px 12px",
                  fontSize: "13px",
                  color: tokens.colors.text.primary,
                  backgroundColor: tokens.colors.surface.base,
                  border: `1px solid ${tokens.colors.border.subtle}`,
                  borderRadius: "6px",
                  outline: "none"
                }
              }
            )
          ] })
        ]
      }
    )
  ] });
}
function DateFieldConfiguration({
  config,
  onChange
}) {
  return (0, import_jsx_runtime45.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "16px" }, children: [
    (0, import_jsx_runtime45.jsx)("div", { children: (0, import_jsx_runtime45.jsxs)(
      "label",
      {
        style: {
          display: "flex",
          alignItems: "center",
          gap: "8px",
          fontSize: "13px",
          color: tokens.colors.text.primary,
          cursor: "pointer"
        },
        children: [
          (0, import_jsx_runtime45.jsx)(
            "input",
            {
              type: "checkbox",
              checked: config.includeTime || false,
              onChange: (e2) => onChange({ ...config, includeTime: e2.target.checked }),
              style: { cursor: "pointer" }
            }
          ),
          "包含时间"
        ]
      }
    ) }),
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "日期格式"
        }
      ),
      (0, import_jsx_runtime45.jsxs)(
        "select",
        {
          value: config.dateFormat || "YYYY-MM-DD",
          onChange: (e2) => onChange({ ...config, dateFormat: e2.target.value }),
          style: {
            width: "100%",
            padding: "8px 12px",
            fontSize: "13px",
            color: tokens.colors.text.primary,
            backgroundColor: tokens.colors.surface.base,
            border: `1px solid ${tokens.colors.border.subtle}`,
            borderRadius: "6px",
            outline: "none",
            cursor: "pointer"
          },
          children: [
            (0, import_jsx_runtime45.jsx)("option", { value: "YYYY-MM-DD", children: "2024-10-16" }),
            (0, import_jsx_runtime45.jsx)("option", { value: "MM/DD/YYYY", children: "10/16/2024" }),
            (0, import_jsx_runtime45.jsx)("option", { value: "DD/MM/YYYY", children: "16/10/2024" })
          ]
        }
      )
    ] }),
    config.includeTime && (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "时间格式"
        }
      ),
      (0, import_jsx_runtime45.jsx)("div", { style: { display: "flex", gap: "8px" }, children: [
        { value: "24h", label: "24小时制" },
        { value: "12h", label: "12小时制" }
      ].map((format3) => (0, import_jsx_runtime45.jsx)(
        "button",
        {
          onClick: () => onChange({ ...config, timeFormat: format3.value }),
          style: {
            flex: 1,
            padding: "8px 12px",
            fontSize: "13px",
            fontWeight: 500,
            color: config.timeFormat === format3.value ? tokens.colors.text.primary : tokens.colors.text.secondary,
            backgroundColor: config.timeFormat === format3.value ? tokens.colors.surface.selected : tokens.colors.surface.base,
            border: `1px solid ${config.timeFormat === format3.value ? tokens.colors.border.focus : tokens.colors.border.subtle}`,
            borderRadius: "6px",
            cursor: "pointer",
            transition: transitions.presets.all
          },
          children: format3.label
        },
        format3.value
      )) })
    ] })
  ] });
}
function RatingFieldConfiguration({
  config,
  onChange
}) {
  return (0, import_jsx_runtime45.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "16px" }, children: [
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "最大评分"
        }
      ),
      (0, import_jsx_runtime45.jsx)(
        "input",
        {
          type: "number",
          value: config.maxRating ?? 5,
          onChange: (e2) => onChange({ ...config, maxRating: parseInt(e2.target.value) || 5 }),
          min: 1,
          max: 10,
          style: {
            width: "100%",
            padding: "8px 12px",
            fontSize: "13px",
            color: tokens.colors.text.primary,
            backgroundColor: tokens.colors.surface.base,
            border: `1px solid ${tokens.colors.border.subtle}`,
            borderRadius: "6px",
            outline: "none"
          }
        }
      )
    ] }),
    (0, import_jsx_runtime45.jsxs)("div", { children: [
      (0, import_jsx_runtime45.jsx)(
        "label",
        {
          style: {
            display: "block",
            fontSize: "13px",
            fontWeight: 500,
            color: tokens.colors.text.primary,
            marginBottom: "8px"
          },
          children: "评分图标"
        }
      ),
      (0, import_jsx_runtime45.jsx)("div", { style: { display: "flex", gap: "8px" }, children: [
        { value: "star", label: "⭐ 星星" },
        { value: "heart", label: "❤️ 爱心" },
        { value: "thumbsup", label: "👍 点赞" }
      ].map((icon) => (0, import_jsx_runtime45.jsx)(
        "button",
        {
          onClick: () => onChange({ ...config, icon: icon.value }),
          style: {
            flex: 1,
            padding: "8px 12px",
            fontSize: "13px",
            fontWeight: 500,
            color: config.icon === icon.value ? tokens.colors.text.primary : tokens.colors.text.secondary,
            backgroundColor: config.icon === icon.value ? tokens.colors.surface.selected : tokens.colors.surface.base,
            border: `1px solid ${config.icon === icon.value ? tokens.colors.border.focus : tokens.colors.border.subtle}`,
            borderRadius: "6px",
            cursor: "pointer",
            transition: transitions.presets.all
          },
          children: icon.label
        },
        icon.value
      )) })
    ] })
  ] });
}

// ../../packages/aitable/src/components/field-config/EditFieldMenu.tsx
var import_jsx_runtime46 = __toESM(require_jsx_runtime(), 1);
var categoryConfig2 = {
  basic: {
    name: "基础字段",
    icon: FileText,
    color: "#3b82f6"
  },
  select: {
    name: "选择字段",
    icon: List,
    color: "#8b5cf6"
  },
  datetime: {
    name: "日期时间",
    icon: Calendar,
    color: "#06b6d4"
  },
  link: {
    name: "链接字段",
    icon: Link,
    color: "#10b981"
  },
  advanced: {
    name: "高级字段",
    icon: Sparkles,
    color: "#f59e0b"
  },
  collab: {
    name: "协作字段",
    icon: User,
    color: "#ec4899"
  }
};
var fieldTypes2 = [
  // 基础类型
  {
    id: "text",
    name: "单行文本",
    icon: TextAlignStart,
    description: "简短的文本内容",
    category: "basic",
    color: "#3b82f6",
    popular: true,
    keywords: ["文本", "text", "单行"]
  },
  {
    id: "longText",
    name: "长文本",
    icon: FileText,
    description: "多行文本，支持换行",
    category: "basic",
    color: "#10b981",
    popular: true,
    keywords: ["长文本", "textarea", "多行"]
  },
  {
    id: "number",
    name: "数字",
    icon: Hash2,
    description: "数值和计算",
    category: "basic",
    color: "#f59e0b",
    popular: true,
    keywords: ["数字", "number", "数值"]
  },
  // 选择类型
  {
    id: "singleSelect",
    name: "单选",
    icon: SquareCheckBig,
    description: "从多个选项中选择一个",
    category: "select",
    color: "#8b5cf6",
    popular: true,
    keywords: ["单选", "select", "选项"]
  },
  {
    id: "multipleSelect",
    name: "多选",
    icon: List,
    description: "可以选择多个选项",
    category: "select",
    color: "#ec4899",
    popular: true,
    keywords: ["多选", "multi", "标签"]
  },
  {
    id: "checkbox",
    name: "复选框",
    icon: Check2,
    description: "是/否 二选一",
    category: "select",
    color: "#84cc16",
    keywords: ["复选框", "checkbox", "是否"]
  },
  // 日期时间
  {
    id: "date",
    name: "日期",
    icon: Calendar,
    description: "日期和时间",
    category: "datetime",
    color: "#06b6d4",
    popular: true,
    keywords: ["日期", "date", "时间"]
  },
  // 链接类型
  {
    id: "link",
    name: "链接",
    icon: Link,
    description: "网址链接",
    category: "link",
    color: "#6366f1",
    keywords: ["链接", "url", "网址"]
  },
  {
    id: "email",
    name: "邮箱",
    icon: Mail,
    description: "电子邮件地址",
    category: "link",
    color: "#14b8a6",
    keywords: ["邮箱", "email", "邮件"]
  },
  {
    id: "phone",
    name: "电话",
    icon: Phone,
    description: "电话号码",
    category: "link",
    color: "#ef4444",
    keywords: ["电话", "phone", "手机"]
  },
  // 高级类型
  {
    id: "rating",
    name: "评分",
    icon: Star,
    description: "星级评分",
    category: "advanced",
    color: "#eab308",
    keywords: ["评分", "rating", "星级"]
  },
  {
    id: "formula",
    name: "公式",
    icon: Sparkles,
    description: "基于其他字段计算得出",
    category: "advanced",
    color: "#8b5cf6",
    popular: true,
    keywords: ["公式", "formula", "计算", "函数"]
  },
  // 协作类型
  {
    id: "user",
    name: "成员",
    icon: User,
    description: "选择用户或成员",
    category: "collab",
    color: "#64748b",
    keywords: ["用户", "user", "成员", "人员"]
  },
  {
    id: "attachment",
    name: "附件",
    icon: Image2,
    description: "上传文件和图片",
    category: "collab",
    color: "#f97316",
    keywords: ["附件", "attachment", "文件", "图片"]
  }
];
var mapAPITypeToMenuType = (apiType) => {
  const typeMapping = {
    // 文本类型
    text: "text",
    singleLineText: "text",
    longText: "longText",
    // 数字类型
    number: "number",
    // 选择类型
    select: "singleSelect",
    // API 的 select 对应前端的 singleSelect
    singleSelect: "singleSelect",
    multipleSelect: "multipleSelect",
    // API 的 multipleSelect 对应前端的 multipleSelect
    // 日期时间
    date: "date",
    // 其他类型
    checkbox: "checkbox",
    attachment: "attachment",
    link: "link",
    user: "user",
    rating: "rating",
    formula: "formula",
    email: "email",
    phone: "phone"
  };
  return typeMapping[apiType] || "text";
};
var processFieldOptions = (fieldType, options) => {
  if (!options) {
    switch (fieldType) {
      case "singleSelect":
      case "multipleSelect":
        return { options: [] };
      case "formula":
        return { formula: "", description: "" };
      case "number":
        return { format: "number", precision: 0 };
      case "date":
        return { includeTime: false, dateFormat: "YYYY-MM-DD" };
      case "rating":
        return { maxRating: 5, icon: "star", color: "#f59e0b" };
      default:
        return {};
    }
  }
  switch (fieldType) {
    case "singleSelect":
    case "multipleSelect":
      if (options.choices && Array.isArray(options.choices)) {
        return {
          options: options.choices.map((choice, index3) => ({
            id: choice.id || `option_${index3}`,
            label: choice.name || choice.text || `选项${index3 + 1}`,
            color: choice.color || "#3b82f6"
          })),
          allowOther: options.allowOther || false
        };
      }
      return { options: [], allowOther: false };
    case "formula":
      return {
        formula: options.expression || "",
        description: options.description || ""
      };
    case "number":
      return {
        format: options.format || "number",
        precision: options.precision ?? 0,
        min: options.min,
        max: options.max,
        prefix: options.prefix,
        suffix: options.suffix
      };
    case "date":
      return {
        includeTime: options.includeTime || false,
        dateFormat: options.dateFormat || "YYYY-MM-DD",
        timeFormat: options.timeFormat || "24h"
      };
    case "rating":
      return {
        maxRating: options.maxRating ?? 5,
        icon: options.icon || "star",
        color: options.color || "#f59e0b"
      };
    default:
      return options;
  }
};
function EditFieldMenu({
  isOpen,
  onClose,
  onConfirm,
  triggerRef,
  initialData
}) {
  const [searchQuery, setSearchQuery] = (0, import_react200.useState)("");
  const [selectedCategory, setSelectedCategory] = (0, import_react200.useState)("all");
  const [step, setStep] = (0, import_react200.useState)("configure");
  const [selectedType, setSelectedType] = (0, import_react200.useState)(null);
  const [fieldName, setFieldName] = (0, import_react200.useState)("");
  const [fieldOptions, setFieldOptions] = (0, import_react200.useState)({});
  const [fieldDescription, setFieldDescription] = (0, import_react200.useState)("");
  const menuRef = (0, import_react200.useRef)(null);
  const [position, setPosition] = (0, import_react200.useState)({ top: 0, left: 0, maxHeight: 400 });
  const filteredFieldTypes = (0, import_react200.useMemo)(() => {
    let result2 = fieldTypes2;
    if (selectedCategory === "popular") {
      result2 = result2.filter((type) => type.popular);
    } else if (selectedCategory !== "all") {
      result2 = result2.filter((type) => type.category === selectedCategory);
    }
    if (searchQuery.trim()) {
      const query = searchQuery.toLowerCase();
      result2 = result2.filter(
        (type) => type.name.toLowerCase().includes(query) || type.description.toLowerCase().includes(query) || type.keywords?.some(
          (keyword) => keyword.toLowerCase().includes(query)
        )
      );
    }
    return result2;
  }, [selectedCategory, searchQuery]);
  (0, import_react200.useEffect)(() => {
    if (!isOpen || !triggerRef?.current) return;
    const trigger = triggerRef.current;
    const rect = trigger.getBoundingClientRect();
    const viewport = { width: window.innerWidth, height: window.innerHeight };
    let top = rect.bottom + 4;
    let left = rect.left;
    let maxHeight = 400;
    const menuWidth = step === "select" ? 320 : 420;
    const margin = 8;
    left = Math.min(
      Math.max(left, margin),
      viewport.width - menuWidth - margin
    );
    const availableBelow = viewport.height - top - margin;
    if (availableBelow < 220) {
      top = rect.top - 4;
      maxHeight = Math.min(400, rect.top - margin);
    } else {
      maxHeight = Math.min(400, availableBelow);
    }
    setPosition({ top, left, maxHeight });
  }, [isOpen, triggerRef, step]);
  (0, import_react200.useEffect)(() => {
    if (isOpen && initialData) {
      setStep("configure");
      setFieldName(initialData.name || "");
      setFieldDescription(initialData.description || "");
      const menuType = mapAPITypeToMenuType(initialData.type);
      console.log("🔍 字段类型映射:", { apiType: initialData.type, menuType });
      const type = fieldTypes2.find((t) => t.id === menuType);
      setSelectedType(type || null);
      const processedOptions = processFieldOptions(
        menuType,
        initialData.options
      );
      console.log("🔍 处理后的选项数据:", processedOptions);
      setFieldOptions(processedOptions);
    } else if (isOpen) {
      setStep("select");
      setSelectedType(null);
      setFieldName("");
      setFieldOptions({});
      setFieldDescription("");
    }
  }, [isOpen, initialData]);
  const handleFieldSelect = (fieldType) => {
    const type = fieldTypes2.find((t) => t.id === fieldType) || null;
    setSelectedType(type);
    if (fieldType === "singleSelect" || fieldType === "multipleSelect") {
      setFieldOptions({ options: [] });
    } else if (fieldType === "formula") {
      setFieldOptions({ formula: "", description: "" });
    } else {
      setFieldOptions({});
    }
    setStep("configure");
  };
  const handleKeyDown = (e2) => {
    if (e2.key === "Escape") {
      onClose();
    }
  };
  (0, import_react200.useEffect)(() => {
    if (!isOpen) return;
    const handleClickOutside = (e2) => {
      if (menuRef.current && !menuRef.current.contains(e2.target) && triggerRef?.current && typeof triggerRef.current.contains === "function" && !triggerRef.current.contains(e2.target)) {
        onClose();
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [isOpen, onClose, triggerRef]);
  if (!isOpen) return null;
  return (0, import_jsx_runtime46.jsxs)(import_jsx_runtime46.Fragment, { children: [
    (0, import_jsx_runtime46.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          zIndex: 50
        },
        onClick: onClose
      }
    ),
    (0, import_jsx_runtime46.jsx)(
      "div",
      {
        ref: menuRef,
        style: {
          position: "fixed",
          top: position.top,
          left: position.left,
          width: step === "select" ? "320px" : "420px",
          maxHeight: position.maxHeight,
          backgroundColor: tokens.colors.surface.base,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "8px",
          boxShadow: "0 8px 32px rgba(0, 0, 0, 0.12), 0 2px 8px rgba(0, 0, 0, 0.08)",
          zIndex: 51,
          display: "flex",
          flexDirection: "column",
          overflow: "hidden",
          animation: "slideDown 200ms cubic-bezier(0.16, 1, 0.3, 1)"
        },
        onKeyDown: handleKeyDown,
        tabIndex: -1,
        children: step === "select" ? (0, import_jsx_runtime46.jsxs)(import_jsx_runtime46.Fragment, { children: [
          (0, import_jsx_runtime46.jsx)(
            "div",
            {
              style: {
                padding: "12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`
              },
              children: (0, import_jsx_runtime46.jsxs)("div", { style: { position: "relative" }, children: [
                (0, import_jsx_runtime46.jsx)(
                  Search,
                  {
                    size: 16,
                    style: {
                      position: "absolute",
                      left: "10px",
                      top: "50%",
                      transform: "translateY(-50%)",
                      color: tokens.colors.text.tertiary,
                      pointerEvents: "none"
                    }
                  }
                ),
                (0, import_jsx_runtime46.jsx)(
                  "input",
                  {
                    type: "text",
                    value: searchQuery,
                    onChange: (e2) => setSearchQuery(e2.target.value),
                    placeholder: "搜索字段类型...",
                    autoFocus: true,
                    style: {
                      width: "100%",
                      padding: "8px 10px 8px 32px",
                      fontSize: "13px",
                      color: tokens.colors.text.primary,
                      backgroundColor: tokens.colors.surface.base,
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      outline: "none",
                      transition: transitions.presets.all,
                      boxSizing: "border-box"
                    }
                  }
                )
              ] })
            }
          ),
          (0, import_jsx_runtime46.jsx)(
            "div",
            {
              style: {
                padding: "8px 12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                gap: "4px",
                flexWrap: "wrap",
                backgroundColor: tokens.colors.surface.hover
              },
              children: [
                { id: "all", name: "全部" },
                { id: "popular", name: "常用" },
                ...Object.entries(categoryConfig2).map(([id, config]) => ({
                  id,
                  name: config.name
                }))
              ].map((category) => {
                const isSelected = selectedCategory === category.id;
                return (0, import_jsx_runtime46.jsx)(
                  "button",
                  {
                    onClick: () => setSelectedCategory(category.id),
                    style: {
                      padding: "4px 8px",
                      fontSize: "11px",
                      fontWeight: isSelected ? 500 : 400,
                      color: isSelected ? tokens.colors.text.primary : tokens.colors.text.secondary,
                      backgroundColor: isSelected ? tokens.colors.surface.base : "transparent",
                      border: `1px solid ${isSelected ? tokens.colors.border.default : "transparent"}`,
                      borderRadius: "4px",
                      cursor: "pointer",
                      transition: transitions.presets.all,
                      whiteSpace: "nowrap"
                    },
                    children: category.name
                  },
                  category.id
                );
              })
            }
          ),
          (0, import_jsx_runtime46.jsx)("div", { style: { flex: 1, overflowY: "auto", padding: "4px" }, children: filteredFieldTypes.length === 0 ? (0, import_jsx_runtime46.jsxs)(
            "div",
            {
              style: {
                padding: "24px 16px",
                textAlign: "center",
                color: tokens.colors.text.secondary,
                fontSize: "13px"
              },
              children: [
                (0, import_jsx_runtime46.jsx)(
                  Search,
                  {
                    size: 24,
                    style: {
                      color: tokens.colors.text.tertiary,
                      marginBottom: "8px"
                    }
                  }
                ),
                (0, import_jsx_runtime46.jsx)("div", { children: "没有找到匹配的字段类型" })
              ]
            }
          ) : (0, import_jsx_runtime46.jsx)(
            "div",
            {
              style: {
                display: "flex",
                flexDirection: "column",
                gap: "2px"
              },
              children: filteredFieldTypes.map((type) => {
                const IconComponent = type.icon;
                return (0, import_jsx_runtime46.jsxs)(
                  "button",
                  {
                    onClick: () => handleFieldSelect(type.id),
                    style: {
                      padding: "8px 12px",
                      backgroundColor: "transparent",
                      border: "none",
                      borderRadius: "6px",
                      cursor: "pointer",
                      textAlign: "left",
                      transition: "all 150ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                      display: "flex",
                      alignItems: "center",
                      gap: "10px"
                    },
                    children: [
                      (0, import_jsx_runtime46.jsx)(
                        "div",
                        {
                          style: {
                            width: "24px",
                            height: "24px",
                            borderRadius: "4px",
                            backgroundColor: `${type.color}15`,
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            flexShrink: 0
                          },
                          children: (0, import_jsx_runtime46.jsx)(
                            IconComponent,
                            {
                              size: 14,
                              style: { color: type.color }
                            }
                          )
                        }
                      ),
                      (0, import_jsx_runtime46.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                        (0, import_jsx_runtime46.jsxs)(
                          "div",
                          {
                            style: {
                              fontSize: "13px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "2px",
                              display: "flex",
                              alignItems: "center",
                              gap: "4px"
                            },
                            children: [
                              type.name,
                              type.popular && (0, import_jsx_runtime46.jsx)(
                                Star,
                                {
                                  size: 10,
                                  style: {
                                    color: tokens.colors.text.warning,
                                    fill: tokens.colors.text.warning
                                  }
                                }
                              )
                            ]
                          }
                        ),
                        (0, import_jsx_runtime46.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "11px",
                              color: tokens.colors.text.secondary,
                              lineHeight: "1.3"
                            },
                            children: type.description
                          }
                        )
                      ] })
                    ]
                  },
                  type.id
                );
              })
            }
          ) })
        ] }) : (0, import_jsx_runtime46.jsxs)(import_jsx_runtime46.Fragment, { children: [
          (0, import_jsx_runtime46.jsxs)(
            "div",
            {
              style: {
                padding: "12px",
                borderBottom: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                flexDirection: "column",
                gap: "8px"
              },
              children: [
                (0, import_jsx_runtime46.jsx)(
                  "input",
                  {
                    type: "text",
                    value: fieldName,
                    onChange: (e2) => setFieldName(e2.target.value),
                    placeholder: "字段名称（可选）",
                    autoFocus: true,
                    style: {
                      width: "100%",
                      padding: "8px 10px",
                      fontSize: "14px",
                      color: tokens.colors.text.primary,
                      backgroundColor: tokens.colors.surface.base,
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      outline: "none"
                    }
                  }
                ),
                (0, import_jsx_runtime46.jsxs)(
                  "div",
                  {
                    style: {
                      fontSize: "12px",
                      color: tokens.colors.text.secondary,
                      display: "flex",
                      alignItems: "center",
                      gap: "6px"
                    },
                    children: [
                      (0, import_jsx_runtime46.jsx)(
                        "span",
                        {
                          style: {
                            padding: "4px 8px",
                            border: `1px solid ${tokens.colors.border.subtle}`,
                            borderRadius: "4px",
                            backgroundColor: tokens.colors.surface.hover
                          },
                          children: selectedType?.name
                        }
                      ),
                      (0, import_jsx_runtime46.jsx)(
                        "button",
                        {
                          onClick: () => setStep("select"),
                          style: {
                            marginLeft: "auto",
                            background: "transparent",
                            border: "none",
                            color: tokens.colors.text.link,
                            cursor: "pointer",
                            fontSize: "12px"
                          },
                          children: "更改类型"
                        }
                      )
                    ]
                  }
                )
              ]
            }
          ),
          (0, import_jsx_runtime46.jsx)(
            "div",
            {
              style: {
                padding: "12px",
                overflowY: "auto",
                maxHeight: position.maxHeight - 120
              },
              children: renderFieldConfiguration(
                selectedType?.id,
                fieldOptions,
                setFieldOptions
              )
            }
          ),
          (0, import_jsx_runtime46.jsxs)(
            "div",
            {
              style: {
                padding: "12px",
                borderTop: `1px solid ${tokens.colors.border.subtle}`,
                display: "flex",
                gap: "8px",
                justifyContent: "flex-end",
                backgroundColor: tokens.colors.surface.base,
                position: "sticky",
                bottom: 0
              },
              children: [
                (0, import_jsx_runtime46.jsx)(
                  "button",
                  {
                    onClick: onClose,
                    style: {
                      padding: "8px 12px",
                      fontSize: "13px",
                      background: "transparent",
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "6px",
                      cursor: "pointer",
                      color: tokens.colors.text.primary
                    },
                    children: "取消"
                  }
                ),
                (0, import_jsx_runtime46.jsx)(
                  "button",
                  {
                    onClick: (e2) => {
                      e2.stopPropagation();
                      if (!selectedType) {
                        console.error("❌ selectedType 为 null");
                        return;
                      }
                      const payload = {
                        type: selectedType.id,
                        name: fieldName,
                        options: { ...fieldOptions, description: fieldDescription }
                      };
                      onConfirm(payload);
                      onClose();
                    },
                    style: {
                      padding: "8px 12px",
                      fontSize: "13px",
                      background: tokens.colors.primary[600],
                      color: "#fff",
                      border: "none",
                      borderRadius: "6px",
                      cursor: "pointer",
                      pointerEvents: "auto"
                    },
                    children: "保存"
                  }
                )
              ]
            }
          )
        ] })
      }
    ),
    (0, import_jsx_runtime46.jsx)("style", { children: `
        @keyframes slideDown {
          from {
            opacity: 0;
            transform: translateY(-8px) scale(0.95);
          }
          to {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
        }
      ` })
  ] });
}
function renderFieldConfiguration(fieldType, fieldOptions, setFieldOptions) {
  if (!fieldType) {
    return (0, import_jsx_runtime46.jsx)("div", { style: { fontSize: "12px", color: tokens.colors.text.secondary }, children: "请选择字段类型" });
  }
  switch (fieldType) {
    case "singleSelect":
      return (0, import_jsx_runtime46.jsx)(
        SelectFieldConfiguration,
        {
          config: fieldOptions,
          onChange: setFieldOptions,
          isMultiple: false
        }
      );
    case "multipleSelect":
      return (0, import_jsx_runtime46.jsx)(
        SelectFieldConfiguration,
        {
          config: fieldOptions,
          onChange: setFieldOptions,
          isMultiple: true
        }
      );
    case "formula":
      return (0, import_jsx_runtime46.jsx)(FormulaEditor3, { value: fieldOptions, onChange: setFieldOptions });
    case "number":
      return (0, import_jsx_runtime46.jsx)(
        NumberFieldConfiguration,
        {
          config: fieldOptions,
          onChange: setFieldOptions
        }
      );
    case "date":
      return (0, import_jsx_runtime46.jsx)(
        DateFieldConfiguration,
        {
          config: fieldOptions,
          onChange: setFieldOptions
        }
      );
    case "rating":
      return (0, import_jsx_runtime46.jsx)(
        RatingFieldConfiguration,
        {
          config: fieldOptions,
          onChange: setFieldOptions
        }
      );
    case "text":
    case "longText":
    case "checkbox":
    case "link":
    case "email":
    case "phone":
    case "user":
    case "attachment":
    default:
      return (0, import_jsx_runtime46.jsx)(
        "div",
        {
          style: {
            fontSize: "12px",
            color: tokens.colors.text.secondary,
            textAlign: "center",
            padding: "20px",
            backgroundColor: tokens.colors.surface.hover,
            borderRadius: "6px",
            border: `1px solid ${tokens.colors.border.subtle}`
          },
          children: "该字段类型暂无额外配置选项"
        }
      );
  }
}
function FormulaEditor3({
  value,
  onChange
}) {
  const [formula, setFormula] = (0, import_react200.useState)(value?.formula || "");
  const [description2, setDescription] = (0, import_react200.useState)(value?.description || "");
  const handleFormulaChange = (newFormula) => {
    setFormula(newFormula);
    onChange({ ...value, formula: newFormula });
  };
  const handleDescriptionChange = (newDescription) => {
    setDescription(newDescription);
    onChange({ ...value, description: newDescription });
  };
  const handleAIGenerate = () => {
    const aiFormula = "SUM({数字字段1}, {数字字段2})";
    handleFormulaChange(aiFormula);
  };
  return (0, import_jsx_runtime46.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "12px" }, children: [
    (0, import_jsx_runtime46.jsx)(
      "div",
      {
        style: {
          fontSize: "13px",
          fontWeight: 600,
          color: tokens.colors.text.primary,
          marginBottom: "4px"
        },
        children: "公式"
      }
    ),
    (0, import_jsx_runtime46.jsx)("div", { style: { position: "relative" }, children: (0, import_jsx_runtime46.jsx)(
      "textarea",
      {
        value: formula,
        onChange: (e2) => handleFormulaChange(e2.target.value),
        placeholder: "输入公式，例如：SUM({字段1}, {字段2})",
        style: {
          width: "100%",
          minHeight: "80px",
          padding: "8px 10px",
          fontSize: "13px",
          color: tokens.colors.text.primary,
          backgroundColor: tokens.colors.surface.base,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "6px",
          outline: "none",
          resize: "vertical",
          fontFamily: 'Monaco, Menlo, "Ubuntu Mono", monospace',
          lineHeight: "1.4"
        },
        onFocus: (e2) => {
          e2.target.style.borderColor = tokens.colors.border.focus;
          e2.target.style.boxShadow = `0 0 0 2px ${tokens.colors.border.focus}20`;
        },
        onBlur: (e2) => {
          e2.target.style.borderColor = tokens.colors.border.subtle;
          e2.target.style.boxShadow = "none";
        }
      }
    ) }),
    (0, import_jsx_runtime46.jsxs)(
      "button",
      {
        onClick: handleAIGenerate,
        style: {
          padding: "6px 12px",
          fontSize: "12px",
          background: tokens.colors.surface.hover,
          border: `1px solid ${tokens.colors.border.subtle}`,
          borderRadius: "6px",
          cursor: "pointer",
          color: tokens.colors.text.primary,
          alignSelf: "flex-start",
          display: "flex",
          alignItems: "center",
          gap: "6px"
        },
        children: [
          (0, import_jsx_runtime46.jsx)(Sparkles, { size: 12 }),
          "使用 AI 生成公式"
        ]
      }
    ),
    (0, import_jsx_runtime46.jsxs)("div", { style: { display: "flex", flexDirection: "column", gap: "4px" }, children: [
      (0, import_jsx_runtime46.jsx)(
        "label",
        {
          style: {
            fontSize: "12px",
            fontWeight: 500,
            color: tokens.colors.text.primary
          },
          children: "描述"
        }
      ),
      (0, import_jsx_runtime46.jsx)(
        "input",
        {
          type: "text",
          value: description2,
          onChange: (e2) => handleDescriptionChange(e2.target.value),
          placeholder: "描述此字段的用途（可选）",
          style: {
            width: "100%",
            padding: "6px 8px",
            fontSize: "12px",
            color: tokens.colors.text.primary,
            backgroundColor: tokens.colors.surface.base,
            border: `1px solid ${tokens.colors.border.subtle}`,
            borderRadius: "6px",
            outline: "none"
          }
        }
      )
    ] })
  ] });
}

// ../../packages/aitable/src/grid/core/InfiniteScroller.tsx
var import_react201 = __toESM(require_react(), 1);
var import_jsx_runtime47 = __toESM(require_jsx_runtime(), 1);
var Scroller = class {
  constructor(options) {
    this.options = options;
  }
  setDimensions(width, height) {
    this.width = width;
    this.height = height;
  }
  setContentDimensions(width, height) {
    this.contentWidth = width;
    this.contentHeight = height;
  }
  setSnapSize(width, height) {
    this.snapWidth = width;
    this.snapHeight = height;
  }
  setScrollPosition(left, top) {
    this.left = left;
    this.top = top;
  }
  getScrollPosition() {
    return { left: this.left || 0, top: this.top || 0 };
  }
  getDimensions() {
    return { width: this.width || 0, height: this.height || 0 };
  }
  getContentDimensions() {
    return { width: this.contentWidth || 0, height: this.contentHeight || 0 };
  }
  getSnapSize() {
    return { width: this.snapWidth || 0, height: this.snapHeight || 0 };
  }
  on(callback) {
  }
  off(callback) {
  }
  destroy() {
  }
};
var InfiniteScrollerBase = (props, ref) => {
  const {
    coordInstance,
    containerWidth,
    containerHeight,
    scrollWidth,
    scrollHeight,
    left = 0,
    top = 0,
    containerRef,
    smoothScrollX,
    smoothScrollY,
    scrollBarVisible,
    scrollEnable = true,
    scrollState,
    getLinearRow,
    setScrollState,
    onScrollChanged,
    onVisibleRegionChanged
  } = props;
  (0, import_react201.useImperativeHandle)(ref, () => ({
    scrollTo: (sl, st) => {
      if (horizontalScrollRef.current && sl != null) {
        horizontalScrollRef.current.scrollLeft = sl;
      }
      if (verticalScrollRef.current && st != null) {
        const el = verticalScrollRef.current;
        const scrollableHeight = el.scrollHeight - el.clientHeight;
        let virtaulOffsetY = 0;
        if (scrollableHeight > 0 && scrollHeight > el.scrollHeight + 5) {
          const prog = st / (scrollHeight - el.clientHeight);
          const actualScrollTop = scrollableHeight * prog;
          virtaulOffsetY = actualScrollTop - st;
        }
        verticalScrollRef.current.scrollTop = st + virtaulOffsetY;
      }
    },
    scrollBy: (deltaX, deltaY) => {
      horizontalScrollRef.current?.scrollBy(deltaX, 0);
      verticalScrollRef.current?.scrollBy(0, deltaY);
    }
  }));
  const isTouchDevice2 = useIsTouchDevice();
  const scrollerRef = (0, import_react201.useRef)(null);
  const horizontalScrollRef = (0, import_react201.useRef)(null);
  const verticalScrollRef = (0, import_react201.useRef)(null);
  const resetScrollingTimeoutID = (0, import_react201.useRef)(null);
  const offsetY = (0, import_react201.useRef)(0);
  const lastScrollTop = (0, import_react201.useRef)(0);
  const onScroll = (e2, direction) => {
    if (!verticalScrollRef.current || !horizontalScrollRef.current) {
      return;
    }
    const el = e2.target;
    const { scrollTop: newScrollTop, scrollLeft } = el;
    const { rowInitSize, columnInitSize } = coordInstance;
    let scrollProps = {};
    if (direction === "vertical") {
      const delta = lastScrollTop.current - newScrollTop;
      const scrollableHeight = el.scrollHeight - el.clientHeight;
      lastScrollTop.current = newScrollTop;
      if (scrollableHeight > 0 && (Math.abs(delta) > 2e3 || newScrollTop === 0 || newScrollTop === scrollableHeight) && scrollHeight > el.scrollHeight + 5) {
        const prog = newScrollTop / scrollableHeight;
        const recomputed = (scrollHeight - el.clientHeight) * prog;
        offsetY.current = recomputed - newScrollTop;
      }
      const scrollTop = newScrollTop + offsetY.current;
      const rowIndex = coordInstance.getRowStartIndex(scrollTop);
      const rowOffset = coordInstance.getRowOffset(rowIndex);
      scrollProps = {
        scrollTop: !smoothScrollY ? rowOffset - rowInitSize : scrollTop
      };
    }
    if (direction === "horizontal") {
      const colIndex = coordInstance.getColumnStartIndex(scrollLeft);
      const colOffset = coordInstance.getColumnOffset(colIndex);
      scrollProps = {
        scrollLeft: !smoothScrollX ? colOffset - columnInitSize : scrollLeft
      };
    }
    const { startRowIndex, stopRowIndex } = getVerticalRangeInfo(
      coordInstance,
      scrollProps.scrollTop ?? scrollState.scrollTop
    );
    const { startColumnIndex, stopColumnIndex } = getHorizontalRangeInfo(
      coordInstance,
      scrollProps.scrollLeft ?? scrollState.scrollLeft
    );
    const realStartRowIndex = getLinearRow(startRowIndex).realIndex;
    const realStopRowIndex = getLinearRow(stopRowIndex).realIndex;
    onVisibleRegionChanged?.({
      x: startColumnIndex,
      y: realStartRowIndex,
      width: stopColumnIndex - startColumnIndex,
      height: realStopRowIndex - realStartRowIndex
    });
    onScrollChanged?.(
      scrollProps.scrollLeft ?? scrollState.scrollLeft,
      scrollProps.scrollTop ?? scrollState.scrollTop
    );
    setScrollState((prev) => {
      return {
        ...prev,
        ...scrollProps,
        isScrolling: true
      };
    });
    resetScrollingDebounced();
  };
  const resetScrolling = (0, import_react201.useCallback)(() => {
    setScrollState((prev) => ({ ...prev, isScrolling: false }));
    resetScrollingTimeoutID.current = null;
  }, [setScrollState]);
  const resetScrollingDebounced = (0, import_react201.useCallback)(() => {
    if (resetScrollingTimeoutID.current !== null) {
      cancelTimeout(resetScrollingTimeoutID.current);
    }
    resetScrollingTimeoutID.current = requestTimeout(resetScrolling, 200);
  }, [resetScrolling]);
  const scrollHandler = (0, import_react201.useCallback)((deltaX, deltaY) => {
    if (horizontalScrollRef.current) {
      horizontalScrollRef.current.scrollLeft = horizontalScrollRef.current.scrollLeft + deltaX;
    }
    if (verticalScrollRef.current) {
      const realDeltaY = deltaY;
      verticalScrollRef.current.scrollTop = verticalScrollRef.current.scrollTop + realDeltaY;
    }
  }, []);
  const mobileScrollHandler = (0, import_react201.useCallback)(
    (scrollLeft, scrollTop) => {
      if (horizontalScrollRef.current) {
        horizontalScrollRef.current.scrollLeft = scrollLeft;
      }
      if (verticalScrollRef.current) {
        verticalScrollRef.current.scrollTop = scrollTop;
      }
    },
    []
  );
  const onWheel = (0, import_react201.useCallback)(
    (event) => {
      if (!scrollEnable) {
        return;
      }
      event.preventDefault();
      event.stopPropagation();
      const [fixedDeltaX, fixedDeltaY] = getWheelDelta({
        event,
        pageHeight: coordInstance.containerHeight - coordInstance.rowInitSize - 1,
        lineHeight: coordInstance.rowHeight
      });
      scrollHandler(fixedDeltaX, fixedDeltaY);
    },
    [scrollEnable, scrollHandler, coordInstance]
  );
  const onTouchStart = (0, import_react201.useCallback)((e2) => {
    if (scrollerRef.current) {
      scrollerRef.current.doTouchStart(e2.changedTouches, e2.timeStamp);
    }
  }, []);
  const onTouchMove = (0, import_react201.useCallback)((e2) => {
    e2.preventDefault();
    if (scrollerRef.current) {
      scrollerRef.current.doTouchMove(e2.changedTouches, e2.timeStamp);
    }
  }, []);
  const onTouchEnd = (0, import_react201.useCallback)((e2) => {
    if (scrollerRef.current) {
      if (horizontalScrollRef.current && verticalScrollRef.current) {
        scrollerRef.current?.scrollTo(
          horizontalScrollRef.current.scrollLeft,
          verticalScrollRef.current.scrollTop
        );
      }
      scrollerRef.current.doTouchEnd(e2.timeStamp);
    }
  }, []);
  (0, import_react201.useEffect)(() => {
    if (!isTouchDevice2) {
      return;
    }
    const options = {
      scrollingX: true,
      scrollingY: true,
      animationDuration: 200
    };
    scrollerRef.current = new Scroller(mobileScrollHandler, options);
  }, [mobileScrollHandler, isTouchDevice2]);
  (0, import_react201.useEffect)(() => {
    if (scrollerRef.current) {
      scrollTo({});
      scrollerRef.current.setDimensions(
        containerWidth,
        containerHeight,
        scrollWidth,
        scrollHeight
      );
    }
  }, [containerHeight, containerWidth, scrollWidth, scrollHeight]);
  const placeholderElements = (0, import_react201.useMemo)(() => {
    let h = 0;
    let key = 0;
    const res = [];
    while (h < scrollHeight) {
      const curH = Math.min(5e6, scrollHeight - h);
      res.push((0, import_jsx_runtime47.jsx)("div", { style: { width: 0, height: curH } }, key++));
      h += curH;
    }
    return res;
  }, [scrollHeight]);
  useEventListener("wheel", onWheel, containerRef.current, false);
  useEventListener("touchstart", onTouchStart, containerRef.current, false);
  useEventListener("touchmove", onTouchMove, containerRef.current, false);
  useEventListener("touchend", onTouchEnd, containerRef.current, false);
  return (0, import_jsx_runtime47.jsxs)(import_jsx_runtime47.Fragment, { children: [
    (0, import_jsx_runtime47.jsx)(
      "div",
      {
        ref: horizontalScrollRef,
        className: cn(
          "scrollbar scrollbar-thumb-foreground/40 scrollbar-thumb-rounded-md scrollbar-h-[10px] cursor-pointer will-change-transform",
          !scrollBarVisible && "opacity-0 pointer-events-none"
        ),
        style: {
          position: "absolute",
          bottom: 2,
          left,
          width: containerWidth - left,
          height: 16,
          overflowX: "scroll",
          overflowY: "hidden"
        },
        onScroll: (e2) => onScroll(e2, "horizontal"),
        children: (0, import_jsx_runtime47.jsx)(
          "div",
          {
            style: {
              position: "absolute",
              width: scrollWidth,
              height: 1
            }
          }
        )
      }
    ),
    (0, import_jsx_runtime47.jsx)(
      "div",
      {
        ref: verticalScrollRef,
        className: cn(
          "scrollbar scrollbar-thumb-foreground/40 scrollbar-thumb-rounded-md scrollbar-w-[10px] scrollbar-min-thumb cursor-pointer will-change-transform",
          !scrollBarVisible && "opacity-0 pointer-events-none"
        ),
        style: {
          position: "absolute",
          right: 2,
          top,
          width: 16,
          height: containerHeight - top,
          overflowX: "hidden",
          overflowY: "scroll"
        },
        onScroll: (e2) => onScroll(e2, "vertical"),
        children: (0, import_jsx_runtime47.jsx)("div", { className: "flex w-px shrink-0 flex-col", children: placeholderElements })
      }
    )
  ] });
};
var InfiniteScroller = (0, import_react201.forwardRef)(InfiniteScrollerBase);

// ../../packages/aitable/src/grid/core/InteractionLayer.tsx
var import_react204 = __toESM(require_react(), 1);

// ../../packages/aitable/src/grid/core/CellScroller.tsx
var import_react202 = __toESM(require_react(), 1);
var import_jsx_runtime48 = __toESM(require_jsx_runtime(), 1);
var { cellScrollBarPaddingY: cellScrollBarPaddingY3 } = GRID_DEFAULT;
var CellScrollerBase = (props, ref) => {
  const {
    containerRef,
    style,
    scrollEnable,
    activeCellBound,
    setCellScrollTop
  } = props;
  const { height: containerHeight, totalHeight: scrollHeight } = activeCellBound;
  const verticalScrollRef = (0, import_react202.useRef)(null);
  const offsetY = (0, import_react202.useRef)(0);
  const lastScrollTop = (0, import_react202.useRef)(0);
  (0, import_react202.useImperativeHandle)(ref, () => ({
    reset: () => {
      if (verticalScrollRef.current) {
        verticalScrollRef.current.scrollTop = 0;
        setCellScrollTop(0);
      }
    }
  }));
  const onScroll = (e2) => {
    if (!verticalScrollRef.current) {
      return;
    }
    const el = e2.target;
    const { scrollTop: newScrollTop } = el;
    const delta = lastScrollTop.current - newScrollTop;
    const scrollableHeight = el.scrollHeight - el.clientHeight;
    lastScrollTop.current = newScrollTop;
    if (scrollableHeight > 0 && (Math.abs(delta) > 2e3 || newScrollTop === 0 || newScrollTop === scrollableHeight) && scrollHeight > el.scrollHeight + 5) {
      const prog = newScrollTop / scrollableHeight;
      const recomputed = (scrollHeight - el.clientHeight) * prog;
      offsetY.current = recomputed - newScrollTop;
    }
    const scrollTop = newScrollTop + offsetY.current;
    setCellScrollTop(scrollTop);
  };
  const scrollHandler = (0, import_react202.useCallback)((deltaY) => {
    if (verticalScrollRef.current) {
      const realDeltaY = deltaY;
      verticalScrollRef.current.scrollTop = verticalScrollRef.current.scrollTop + realDeltaY;
    }
  }, []);
  const onWheel = (0, import_react202.useCallback)(
    (event) => {
      if (!scrollEnable) {
        return;
      }
      event.preventDefault();
      const [, fixedDeltaY] = getWheelDelta({
        event
      });
      scrollHandler(fixedDeltaY);
    },
    [scrollEnable, scrollHandler]
  );
  const placeholderElements = (0, import_react202.useMemo)(() => {
    let h = 0;
    let key = 0;
    const res = [];
    while (h < scrollHeight) {
      const curH = Math.min(5e6, scrollHeight - h);
      res.push((0, import_jsx_runtime48.jsx)("div", { style: { width: 0, height: curH } }, key++));
      h += curH;
    }
    return res;
  }, [scrollHeight]);
  useEventListener("wheel", onWheel, containerRef.current, false);
  return (0, import_jsx_runtime48.jsx)(
    "div",
    {
      ref: verticalScrollRef,
      className: "scrollbar scrollbar-thumb-rounded-sm scrollbar-w-2 absolute w-[10px] cursor-pointer overflow-x-hidden overflow-y-scroll opacity-0 will-change-transform",
      style: {
        ...style,
        height: containerHeight - cellScrollBarPaddingY3 * 2
      },
      onScroll,
      children: (0, import_jsx_runtime48.jsx)("div", { className: "flex shrink-0 flex-col", children: placeholderElements })
    }
  );
};
var CellScroller = (0, import_react202.forwardRef)(CellScrollerBase);

// ../../packages/aitable/src/grid/core/RenderLayer.tsx
var import_react203 = __toESM(require_react(), 1);
var import_jsx_runtime49 = __toESM(require_jsx_runtime(), 1);
var RenderLayer = (props) => {
  const {
    theme,
    width,
    height,
    columns,
    commentCountMap,
    isEditing,
    rowControls,
    visibleRegion,
    imageManager,
    spriteManager,
    activeCell,
    activeCellBound,
    collaborators,
    searchCursor,
    searchHitIndex,
    dragState,
    scrollState,
    columnFreezeState,
    hoverCellPosition,
    mouseState: originMouseState,
    selection,
    isSelecting,
    isInteracting: _isInteracting,
    coordInstance,
    forceRenderFlag,
    groupCollection,
    rowIndexVisible,
    columnStatistics,
    columnResizeState,
    columnHeaderHeight,
    hoveredColumnResizeIndex,
    isColumnFreezable,
    isRowAppendEnable,
    isColumnResizable,
    isColumnAppendEnable,
    isMultiSelectionEnable,
    isColumnHeaderMenuVisible,
    getCellContent,
    real2RowIndex,
    getLinearRow
  } = props;
  const { containerWidth } = coordInstance;
  const { x: x2, y, columnIndex, rowIndex, type, isOutOfBounds } = originMouseState;
  const isInteracting = _isInteracting || type === "ColumnFreezeHandler" /* ColumnFreezeHandler */;
  const mainCanvasRef = (0, import_react203.useRef)(null);
  const lastPropsRef = (0, import_react203.useRef)();
  const cacheCanvas = (0, import_react203.useMemo)(() => {
    const canvas = document.createElement("canvas");
    canvas.style.opacity = "0";
    canvas.style.position = "fixed";
    return canvas;
  }, []);
  const mouseState = (0, import_react203.useMemo)(() => {
    return {
      type,
      rowIndex,
      columnIndex,
      isOutOfBounds,
      x: 0,
      y: 0
    };
  }, [columnIndex, rowIndex, type, isOutOfBounds]);
  const mousePosition = (0, import_react203.useMemo)(() => {
    if (!isInteracting) {
      return null;
    }
    return { x: x2, y };
  }, [x2, y, isInteracting]);
  (0, import_react203.useEffect)(() => {
    const mainCanvas = mainCanvasRef.current;
    if (mainCanvas == null) {
      return;
    }
    const lastProps = lastPropsRef.current;
    const props2 = {
      theme,
      width,
      height,
      columns,
      commentCountMap,
      isEditing,
      rowControls,
      visibleRegion,
      imageManager,
      spriteManager,
      activeCell,
      activeCellBound,
      collaborators,
      searchCursor,
      searchHitIndex,
      dragState,
      scrollState,
      columnFreezeState,
      hoverCellPosition,
      mouseState: mousePosition ? { ...mouseState, ...mousePosition } : mouseState,
      selection,
      isSelecting,
      isInteracting,
      coordInstance,
      forceRenderFlag,
      groupCollection,
      rowIndexVisible,
      columnStatistics,
      columnResizeState,
      columnHeaderHeight,
      hoveredColumnResizeIndex,
      isColumnFreezable,
      isRowAppendEnable,
      isColumnResizable,
      isColumnAppendEnable,
      isColumnHeaderMenuVisible,
      isMultiSelectionEnable,
      getCellContent,
      real2RowIndex,
      getLinearRow,
      devicePixelRatio: window.devicePixelRatio || 1
    };
    lastPropsRef.current = props2;
    drawGrid(mainCanvas, cacheCanvas, props2, lastProps);
  }, [
    theme,
    width,
    height,
    columns,
    commentCountMap,
    isEditing,
    rowControls,
    visibleRegion,
    imageManager,
    spriteManager,
    activeCell,
    activeCellBound,
    collaborators,
    searchCursor,
    searchHitIndex,
    dragState,
    mouseState,
    scrollState,
    columnFreezeState,
    mousePosition,
    selection,
    isSelecting,
    isInteracting,
    coordInstance,
    forceRenderFlag,
    groupCollection,
    rowIndexVisible,
    columnStatistics,
    columnResizeState,
    columnHeaderHeight,
    hoverCellPosition,
    hoveredColumnResizeIndex,
    isColumnFreezable,
    isRowAppendEnable,
    isColumnResizable,
    isColumnAppendEnable,
    isColumnHeaderMenuVisible,
    isMultiSelectionEnable,
    cacheCanvas,
    getCellContent,
    real2RowIndex,
    getLinearRow
  ]);
  return (0, import_jsx_runtime49.jsx)(
    "canvas",
    {
      ref: mainCanvasRef,
      style: {
        backgroundColor: theme.cellBg,
        pointerEvents: "none"
      }
    }
  );
};

// ../../packages/aitable/src/grid/core/InteractionLayer.tsx
var import_jsx_runtime50 = __toESM(require_jsx_runtime(), 1);
var { columnAppendBtnWidth: columnAppendBtnWidth2, columnHeadHeight: columnHeadHeight2 } = GRID_DEFAULT;
var InteractionLayerBase = (props, ref) => {
  const {
    theme,
    width,
    height,
    columns,
    commentCountMap,
    draggable,
    selectable,
    rowControls,
    mouseState,
    scrollState,
    imageManager,
    spriteManager,
    coordInstance,
    columnStatistics,
    forceRenderFlag,
    rowIndexVisible,
    groupCollection,
    isMultiSelectionEnable,
    activeCellBound: _activeCellBound,
    columnHeaderHeight,
    collapsedGroupIds,
    collaborators,
    searchCursor,
    searchHitIndex,
    activeCell,
    getLinearRow,
    real2RowIndex,
    setActiveCell,
    setMouseState,
    scrollToItem,
    scrollBy,
    getCellContent,
    onUndo,
    onRedo,
    onCopy,
    onPaste,
    onDelete,
    onRowAppend,
    onRowExpand,
    onRowOrdered,
    onCellEdited,
    onCellDblClick,
    onSelectionChanged,
    onColumnFreeze,
    onColumnAppend,
    onColumnResize,
    onColumnOrdered,
    onContextMenu,
    onGroupHeaderContextMenu,
    onItemHovered,
    onItemClick,
    onColumnHeaderClick,
    onColumnHeaderDblClick,
    onColumnHeaderMenuClick,
    onRowHeaderMenuClick,
    onCellContextMenu,
    onColumnStatisticClick,
    onCollapsedGroupChanged,
    onDragStart: _onDragStart
  } = props;
  (0, import_react204.useImperativeHandle)(ref, () => ({
    isEditing: () => isEditing,
    resetState,
    setSelection: (selection2) => {
      const { type, ranges } = selection2;
      switch (type) {
        case "Cells" /* Cells */: {
          const activeCell2 = ranges[0];
          setActiveCell(activeCell2);
          scrollToItem(activeCell2);
          break;
        }
        case "Columns" /* Columns */: {
          const activeCell2 = [ranges[0][0], 0];
          setActiveCell(activeCell2);
          scrollToItem(activeCell2);
          break;
        }
        default: {
          setActiveCell(null);
          break;
        }
      }
      setSelection(selection2);
    }
  }));
  const stageRef = (0, import_react204.useRef)(null);
  const containerRef = (0, import_react204.useRef)(null);
  const editorContainerRef = (0, import_react204.useRef)(null);
  const cellScrollerRef = (0, import_react204.useRef)(null);
  const prevActiveCellRef = (0, import_react204.useRef)(null);
  const hoveredRegionRef = (0, import_react204.useRef)(BLANK_REGION_DATA);
  const previousHoveredRegionRef = (0, import_react204.useRef)(BLANK_REGION_DATA);
  const mousePosition = useMouse_default(stageRef);
  const [cellScrollTop, setCellScrollTop] = (0, import_react204.useState)(0);
  const [hoverCellPosition, setHoverCellPosition] = (0, import_react204.useState)(null);
  const [cursor, setCursor] = (0, import_react204.useState)("default");
  const [isEditing, setEditing] = (0, import_react204.useState)(false);
  const { containerHeight, freezeColumnCount } = coordInstance;
  const { scrollTop, scrollLeft, isScrolling } = scrollState;
  const { type: regionType } = mouseState;
  const isRowAppendEnable = onRowAppend != null;
  const isColumnFreezable = onColumnFreeze != null;
  const isColumnResizable = onColumnResize != null;
  const isColumnAppendEnable = onColumnAppend != null;
  const isColumnHeaderMenuVisible = onColumnHeaderMenuClick != null;
  const visibleRegion = useVisibleRegion(
    coordInstance,
    scrollState,
    forceRenderFlag
  );
  const {
    columnResizeState,
    hoveredColumnResizeIndex,
    setHoveredColumnResizeIndex,
    setColumnResizeState,
    onColumnResizeStart,
    onColumnResizeChange,
    onColumnResizeEnd
  } = useColumnResize(coordInstance, scrollState);
  const {
    selection,
    isSelecting,
    setSelection,
    onSelectionStart,
    onSelectionChange,
    onSelectionEnd,
    onSelectionClick,
    onSelectionContextMenu
  } = useSelection({
    selectable,
    coordInstance,
    isMultiSelectionEnable,
    getLinearRow,
    setActiveCell,
    onSelectionChanged
  });
  const { dragState, setDragState, onDragStart, onDragChange, onDragEnd } = useDrag(coordInstance, scrollState, selection, draggable);
  const {
    columnFreezeState,
    onColumnFreezeStart,
    onColumnFreezeMove,
    onColumnFreezeEnd
  } = useColumnFreeze(coordInstance, scrollState);
  const { isDragging, type: dragType } = dragState;
  const { isFreezing } = columnFreezeState;
  const isResizing = columnResizeState.columnIndex > -1;
  const { isCellSelection, ranges: selectionRanges } = selection;
  const isInteracting = isSelecting || isDragging || isResizing || isFreezing;
  const [activeColumnIndex, activeRowIndex] = activeCell ?? [];
  const getPosition = () => {
    const x2 = mousePosition.elX;
    const y = mousePosition.elY;
    const {
      freezeRegionWidth,
      totalWidth,
      rowInitSize,
      columnInitSize,
      columnCount
    } = coordInstance;
    const rowIndex = y < 0 ? -Infinity : y <= rowInitSize ? -1 : coordInstance.getRowStartIndex(scrollTop + y);
    const columnIndex = x2 < 0 ? -Infinity : scrollLeft + x2 > totalWidth && scrollLeft + x2 < totalWidth + columnAppendBtnWidth2 ? -2 : x2 <= freezeRegionWidth ? x2 <= columnInitSize ? -1 : coordInstance.getColumnStartIndex(x2) : coordInstance.getColumnStartIndex(scrollLeft + x2);
    return {
      x: x2,
      y,
      rowIndex,
      columnIndex: Math.min(columnIndex, columnCount - 1)
    };
  };
  const getHoverCellPosition = (mouseState2) => {
    const { rowIndex, columnIndex, x: x2, y } = mouseState2;
    const { realIndex, type } = getLinearRow(rowIndex);
    const isCellRange = columnIndex > -1 && type === "ROW" /* Row */;
    if (isCellRange) {
      const cell = getCellContent([columnIndex, realIndex]);
      const cellRenderer = getCellRenderer(cell.type);
      if (cellRenderer?.needsHoverPosition || cellRenderer?.needsHoverPositionWhenActive && activeCell && isEqual_default(activeCell, [columnIndex, realIndex])) {
        const offsetX = coordInstance.getColumnOffset(columnIndex);
        return {
          x: columnIndex < freezeColumnCount ? x2 - offsetX : x2 - offsetX + scrollLeft,
          y: y - coordInstance.getRowOffset(rowIndex) + scrollTop
        };
      }
    }
    return null;
  };
  const { onAutoScroll, onAutoScrollStop } = useAutoScroll({
    coordInstance,
    scrollBy
  });
  const activeCellBound = (0, import_react204.useMemo)(() => {
    if (_activeCellBound == null) {
      return null;
    }
    return {
      ..._activeCellBound,
      scrollTop: _activeCellBound.scrollEnable ? cellScrollTop : 0
    };
  }, [_activeCellBound, cellScrollTop]);
  const getMouseState = () => {
    const position = getPosition();
    const { x: x2, y } = position;
    const { totalHeight, totalWidth } = coordInstance;
    const isOutOfBounds = scrollLeft + x2 > totalWidth + columnAppendBtnWidth2 || scrollTop + y > totalHeight && !inRange2(y, containerHeight, height);
    const regionData = getRegionData({
      position,
      dragState,
      selection,
      isSelecting,
      columnResizeState,
      columnStatistics,
      coordInstance,
      scrollState,
      rowControls,
      isFreezing,
      isOutOfBounds,
      isColumnResizable,
      isColumnAppendEnable,
      isMultiSelectionEnable,
      isColumnHeaderMenuVisible,
      isColumnFreezable,
      activeCellBound,
      activeCell,
      columns,
      height,
      theme,
      getLinearRow,
      real2RowIndex
    });
    hoveredRegionRef.current = regionData;
    const { x: _x, y: _y, width: _w, height: _h, ...rest2 } = regionData;
    return {
      ...position,
      isOutOfBounds,
      ...rest2
    };
  };
  const setCursorStyle = (regionType2) => {
    if (isScrolling) {
      return;
    }
    if (isFreezing) {
      return setCursor("grab");
    }
    if (isDragging) {
      return setCursor("grabbing");
    }
    switch (regionType2) {
      case "AppendRow" /* AppendRow */: {
        if (activeCell != null) {
          return;
        }
        return setCursor("pointer");
      }
      case "AppendColumn" /* AppendColumn */:
      case "GroupStatistic" /* GroupStatistic */:
      case "ColumnStatistic" /* ColumnStatistic */:
      case "ColumnHeaderMenu" /* ColumnHeaderMenu */:
      case "ColumnDescription" /* ColumnDescription */:
      case "ColumnPrimaryIcon" /* ColumnPrimaryIcon */:
      case "RowGroupControl" /* RowGroupControl */:
      case "RowHeaderExpandHandler" /* RowHeaderExpandHandler */:
        return setCursor("pointer");
      case "ColumnFreezeHandler" /* ColumnFreezeHandler */:
        return setCursor("grab");
      case "AllCheckbox" /* AllCheckbox */:
      case "RowHeaderCheckbox" /* RowHeaderCheckbox */: {
        if ([
          "none" /* None */,
          "column" /* Column */,
          "cell" /* Cell */
        ].includes(selectable)) {
          return setCursor("not-allowed");
        }
        return setCursor("pointer");
      }
      case "RowHeaderDragHandler" /* RowHeaderDragHandler */: {
        if (draggable === "column" /* Column */ || draggable === "none" /* None */) {
          return setCursor("not-allowed");
        }
        return setCursor("grabbing");
      }
      case "ColumnResizeHandler" /* ColumnResizeHandler */:
        return setCursor("ew-resize");
      case "FillHandler" /* FillHandler */:
        return setCursor("crosshair");
      default:
        setCursor("default");
    }
  };
  const onClick = (event) => {
    const mouseState2 = getMouseState();
    onSelectionClick(event, mouseState2);
    const { type, rowIndex: hoverRowIndex, columnIndex } = mouseState2;
    if (regionType !== type) {
      return;
    }
    const { realIndex: rowIndex } = getLinearRow(hoverRowIndex);
    switch (type) {
      case "AppendRow" /* AppendRow */: {
        if (activeCell != null) {
          setSelection(selection.reset());
          return setActiveCell(null);
        }
        const linearRow = getLinearRow(hoverRowIndex - 1);
        onRowAppend?.(linearRow.realIndex);
        return;
      }
      case "AppendColumn" /* AppendColumn */:
        return onColumnAppend?.();
      case "RowHeaderExpandHandler" /* RowHeaderExpandHandler */:
        return onRowExpand?.(rowIndex);
      case "ColumnHeader" /* ColumnHeader */:
        return onColumnHeaderClick?.(columnIndex, {
          x: coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft),
          y: 0,
          width: coordInstance.getColumnWidth(columnIndex),
          height: columnHeadHeight2
        });
      case "ColumnHeaderMenu" /* ColumnHeaderMenu */:
        return onColumnHeaderMenuClick?.(columnIndex, {
          x: coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft),
          y: 0,
          width: coordInstance.getColumnWidth(columnIndex),
          height: columnHeadHeight2
        });
      case "GroupStatistic" /* GroupStatistic */:
      case "ColumnStatistic" /* ColumnStatistic */: {
        const { x: x2, y, width: width2, height: height2 } = hoveredRegionRef.current;
        return onColumnStatisticClick?.(columnIndex, {
          x: x2,
          y,
          width: width2,
          height: height2
        });
      }
      case "Cell" /* Cell */:
      case "ActiveCell" /* ActiveCell */: {
        const cell = getCellContent([columnIndex, rowIndex]);
        const cellRenderer = getCellRenderer(cell.type);
        const onCellClick = cellRenderer?.onClick;
        const isActive = isEqual_default(prevActiveCellRef.current, activeCell) && isEqual_default(activeCell, [columnIndex, rowIndex]);
        if (onCellClick && hoverCellPosition) {
          onCellClick(
            cell,
            {
              position: { x: mouseState2.x, y: mouseState2.y },
              cell,
              rowIndex,
              columnIndex,
              width: coordInstance.getColumnWidth(columnIndex),
              height: coordInstance.getRowHeight(hoverRowIndex),
              theme,
              hoverCellPosition,
              activeCellBound,
              isActive
            },
            ((cellRegion) => {
              const { type: type2, data } = cellRegion;
              if (type2 === "update" /* Update */) {
                return onCellEdited?.([columnIndex, rowIndex], {
                  ...cell,
                  data
                });
              }
              if (type2 === "toggleEditing" /* ToggleEditing */) {
                return setEditing(true);
              }
            })
          );
        }
        return;
      }
      case "RowGroupControl" /* RowGroupControl */: {
        const { rowIndex: rowIndex2 } = mouseState2;
        const linearRow = getLinearRow(rowIndex2);
        if (linearRow.type !== "GROUP" /* Group */) {
          return;
        }
        const { id } = linearRow;
        if (collapsedGroupIds == null) {
          return onCollapsedGroupChanged?.(/* @__PURE__ */ new Set([id]));
        }
        if (collapsedGroupIds.has(id)) {
          const newCollapsedGroupIds = new Set(collapsedGroupIds);
          newCollapsedGroupIds.delete(id);
          return onCollapsedGroupChanged?.(newCollapsedGroupIds);
        }
        return onCollapsedGroupChanged?.(/* @__PURE__ */ new Set([...collapsedGroupIds, id]));
      }
    }
    const { type: clickRegionType, ...rest2 } = hoveredRegionRef.current;
    onItemClick?.(clickRegionType, rest2, [columnIndex, rowIndex]);
  };
  const onDblClick = () => {
    const mouseState2 = getMouseState();
    const { type, rowIndex, columnIndex } = mouseState2;
    const { realIndex } = getLinearRow(rowIndex);
    if (["Cell" /* Cell */, "ActiveCell" /* ActiveCell */].includes(type) && isEqual_default(selectionRanges[0], [columnIndex, realIndex])) {
      const cell = getCellContent([columnIndex, realIndex]);
      if (cell.readonly) {
        return onCellDblClick?.([columnIndex, realIndex]);
      }
      editorContainerRef.current?.focus?.();
      return setEditing(true);
    }
    if (type === "ColumnHeader" /* ColumnHeader */ && isEqual_default(selectionRanges[0], [columnIndex, columnIndex])) {
      return onColumnHeaderDblClick?.(columnIndex, {
        x: coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft),
        y: 0,
        width: coordInstance.getColumnWidth(columnIndex),
        height: columnHeadHeight2
      });
    }
  };
  const onSmartClick = (event) => {
    const eventDetail = event.detail;
    if (eventDetail === 1) {
      onClick(event);
    }
    if (eventDetail === 2) {
      onDblClick();
    }
  };
  const onMouseDown = (event) => {
    event.preventDefault();
    if (event.button === 2 /* Right */) {
      return;
    }
    const mouseState2 = getMouseState();
    setMouseState(mouseState2);
    const { rowIndex: hoverRowIndex, columnIndex, type } = mouseState2;
    const { realIndex: rowIndex } = getLinearRow(hoverRowIndex);
    if (!(isCellSelection && isEqual_default(selectionRanges[0], [columnIndex, rowIndex]) && type === "Cell" /* Cell */)) {
      setEditing(false);
      editorContainerRef.current?.saveValue?.();
    }
    onDragStart(mouseState2, (type2, ranges) => {
      if (type2 === "Columns" /* Columns */) {
        _onDragStart?.(type2, flatRanges(ranges));
      }
      if (type2 === "Rows" /* Rows */) {
        const originRealIndexs = flatRanges(ranges).map(
          (index3) => getLinearRow(index3).realIndex
        );
        _onDragStart?.(type2, originRealIndexs);
      }
    });
    onColumnFreezeStart(mouseState2);
    prevActiveCellRef.current = activeCell;
    onSelectionStart(event, mouseState2);
    isColumnResizable && onColumnResizeStart(mouseState2);
  };
  const onCellPosition = (mouseState2) => {
    const { columnIndex, rowIndex, type } = mouseState2;
    const { realIndex } = getLinearRow(rowIndex);
    const cell = getCellContent([columnIndex, realIndex]);
    const cellRenderer = getCellRenderer(cell.type);
    const needsHover = cellRenderer?.needsHover;
    const needsHoverPosition = cellRenderer?.needsHoverPosition;
    const needsHoverWhenActive = cellRenderer?.needsHoverWhenActive;
    const needsHoverPositionWhenActive = cellRenderer?.needsHoverPositionWhenActive;
    const isActive = type === "ActiveCell" /* ActiveCell */;
    if ((needsHoverPosition || needsHoverPositionWhenActive && isActive) && hoverCellPosition) {
      const region = cellRenderer?.checkRegion?.(cell, {
        position: hoverCellPosition,
        cell,
        rowIndex,
        columnIndex,
        width: coordInstance.getColumnWidth(columnIndex),
        height: coordInstance.getRowHeight(rowIndex),
        theme,
        isActive,
        activeCellBound,
        hoverCellPosition
      }) ?? { type: "blank" /* Blank */ };
      const { type: type2 } = region;
      if (type2 === "hover" /* Hover */) {
        const { x: x2, y, width: width2, height: height2 } = region.data;
        const offsetX = coordInstance.getColumnOffset(columnIndex);
        const offsetY = coordInstance.getRowOffset(rowIndex);
        onItemHovered?.(
          "CellValue" /* CellValue */,
          {
            x: columnIndex < coordInstance.freezeColumnCount ? x2 + offsetX : x2 + offsetX - scrollLeft,
            y: y + offsetY - scrollTop,
            width: width2,
            height: height2
          },
          [columnIndex, realIndex]
        );
      }
      return type2 !== "blank" /* Blank */ ? setCursor("pointer") : void 0;
    }
    if (needsHover || needsHoverWhenActive && isActive) {
      setCursor("pointer");
    }
  };
  const onMouseMove = () => {
    const mouseState2 = getMouseState();
    const hoverCellPosition2 = getHoverCellPosition(mouseState2);
    setHoverCellPosition(hoverCellPosition2);
    setMouseState(mouseState2);
    setCursorStyle(mouseState2.type);
    onCellPosition(mouseState2);
    if (isSelecting) {
      onAutoScroll(mouseState2);
    }
    if (isDragging) {
      onAutoScroll(mouseState2, dragType);
    }
    onSelectionChange(mouseState2);
    onColumnResizeChange(mouseState2, (newWidth, columnIndex) => {
      onColumnResize?.(columns[columnIndex], newWidth, columnIndex);
    });
    onDragChange(mouseState2);
    onColumnFreezeMove(mouseState2);
    if (!isInteracting && !isEqual_default(hoveredRegionRef.current, previousHoveredRegionRef.current)) {
      const { type, ...rest2 } = hoveredRegionRef.current;
      const { columnIndex, rowIndex } = mouseState2;
      onItemHovered?.(type, rest2, [
        columnIndex,
        getLinearRow(rowIndex).realIndex
      ]);
    }
    previousHoveredRegionRef.current = { ...hoveredRegionRef.current };
  };
  const onMouseUp = () => {
    const mouseState2 = getMouseState();
    setMouseState(mouseState2);
    onAutoScrollStop();
    onDragEnd(mouseState2, (ranges, dropIndex) => {
      if (dragType === "Columns" /* Columns */) {
        onColumnOrdered?.(flatRanges(ranges), dropIndex);
      }
      if (dragType === "Rows" /* Rows */) {
        const { type: prevType } = getLinearRow(dropIndex - 1);
        const { type, realIndex } = getLinearRow(dropIndex);
        const originRealIndexs = flatRanges(ranges).map(
          (index3) => getLinearRow(index3).realIndex
        );
        if (prevType === "ROW" /* Row */ && type === "APPEND" /* Append */ || prevType === "GROUP" /* Group */ && type === "ROW" /* Row */ && realIndex !== 0) {
          return onRowOrdered?.(originRealIndexs, realIndex + 1);
        }
        onRowOrdered?.(originRealIndexs, realIndex);
      }
      setActiveCell(null);
      setSelection(selection.reset());
      setCursor("default");
    });
    onColumnFreezeEnd((columnCount) => {
      onColumnFreeze?.(columnCount);
      setMouseState(DEFAULT_MOUSE_STATE);
    });
    onSelectionEnd();
    onColumnResizeEnd();
  };
  const onMouseLeave = () => {
    if (isInteracting) {
      return;
    }
    const { type, ...rest2 } = BLANK_REGION_DATA;
    onItemHovered?.(type, rest2, [-Infinity, -Infinity]);
    setMouseState(DEFAULT_MOUSE_STATE);
    setHoveredColumnResizeIndex(-1);
  };
  const onContextMenuInner = (event) => {
    if (event.cancelable) {
      event.preventDefault();
    }
    const mouseState2 = getMouseState();
    const { type, x: x2, y, rowIndex, columnIndex } = mouseState2;
    if (type === "RowGroupHeader" /* RowGroupHeader */ || type === "RowGroupControl" /* RowGroupControl */) {
      const linearRow = getLinearRow(rowIndex);
      if (linearRow.type !== "GROUP" /* Group */) {
        return;
      }
      const { id: groupId } = linearRow;
      return onGroupHeaderContextMenu?.(groupId, { x: x2, y });
    }
    if (type === "ColumnHeader" /* ColumnHeader */ && columnIndex !== void 0) {
      return onColumnHeaderMenuClick?.(columnIndex, {
        x: event.clientX,
        // 使用鼠标实际位置
        y: event.clientY,
        width: coordInstance.getColumnWidth(columnIndex),
        height: columnHeadHeight2
      });
    }
    if (type === "RowHeader" /* RowHeader */ && rowIndex !== void 0) {
      return onRowHeaderMenuClick?.(rowIndex, {
        x: event.clientX,
        y: event.clientY
      });
    }
    if ((type === "Cell" /* Cell */ || type === "ActiveCell" /* ActiveCell */) && rowIndex !== void 0 && columnIndex !== void 0) {
      return onCellContextMenu?.(rowIndex, columnIndex, {
        x: event.clientX,
        y: event.clientY
      });
    }
    if (onContextMenu) {
      onSelectionContextMenu(
        mouseState2,
        (selection2, position) => (
          // position是相对Canvas的坐标，需要使用event的viewport坐标
          onContextMenu(selection2, { x: event.clientX, y: event.clientY })
        )
      );
    }
  };
  const resetState = () => {
    setActiveCell(null);
    setDragState(DEFAULT_DRAG_STATE);
    setMouseState(DEFAULT_MOUSE_STATE);
    setSelection(selection.reset());
    setHoveredColumnResizeIndex(-1);
    setColumnResizeState(DEFAULT_COLUMN_RESIZE_STATE);
  };
  useEventListener(
    "mousemove",
    onMouseMove,
    isInteracting ? window : stageRef.current,
    true
  );
  useEventListener(
    "mouseup",
    onMouseUp,
    isInteracting ? window : stageRef.current,
    true
  );
  useClickAway_default(containerRef, () => {
    setEditing(false);
    editorContainerRef.current?.saveValue?.();
  });
  (0, import_react204.useLayoutEffect)(() => {
    if (activeColumnIndex == null || activeRowIndex == null) {
      return;
    }
    cellScrollerRef.current?.reset();
  }, [activeColumnIndex, activeRowIndex]);
  return (0, import_jsx_runtime50.jsx)(
    "div",
    {
      ref: containerRef,
      style: {
        width,
        height,
        cursor,
        position: "absolute",
        inset: 0
      },
      children: (0, import_jsx_runtime50.jsxs)("div", { style: { position: "relative", width: "100%", height: "100%" }, children: [
        (0, import_jsx_runtime50.jsx)(
          "div",
          {
            ref: stageRef,
            "data-t-grid-stage": true,
            style: { width: "100%", height: "100%" },
            onClick: onSmartClick,
            onMouseDown,
            onMouseLeave,
            onContextMenu: onContextMenuInner,
            children: (0, import_jsx_runtime50.jsx)(
              RenderLayer,
              {
                theme,
                width,
                height,
                columns,
                commentCountMap,
                columnStatistics,
                coordInstance,
                rowControls,
                imageManager,
                spriteManager,
                visibleRegion,
                collaborators,
                searchCursor,
                searchHitIndex,
                activeCellBound,
                activeCell,
                mouseState,
                scrollState,
                dragState,
                selection,
                groupCollection,
                forceRenderFlag,
                rowIndexVisible,
                columnResizeState,
                columnFreezeState,
                columnHeaderHeight,
                hoverCellPosition,
                hoveredColumnResizeIndex,
                isRowAppendEnable,
                isColumnFreezable,
                isColumnResizable,
                isColumnAppendEnable,
                isColumnHeaderMenuVisible,
                isEditing,
                isSelecting,
                isInteracting,
                isMultiSelectionEnable,
                getCellContent,
                real2RowIndex,
                getLinearRow
              }
            )
          }
        ),
        activeCellBound?.scrollEnable && (0, import_jsx_runtime50.jsx)(
          CellScroller,
          {
            ref: cellScrollerRef,
            style: {
              top: coordInstance.getRowOffset(activeCellBound.rowIndex) + 4,
              left: coordInstance.getColumnRelativeOffset(
                activeCellBound.columnIndex + 1,
                scrollLeft
              ) - 10
            },
            containerRef,
            activeCellBound,
            setCellScrollTop,
            scrollEnable: regionType === "ActiveCell" /* ActiveCell */
          }
        ),
        (0, import_jsx_runtime50.jsx)(
          EditorContainer,
          {
            ref: editorContainerRef,
            theme,
            isEditing,
            selection,
            activeCell,
            scrollState,
            coordInstance,
            activeCellBound,
            onCopy,
            onPaste,
            onUndo,
            onRedo,
            onDelete,
            onChange: onCellEdited,
            onRowExpand,
            setEditing,
            setSelection,
            setActiveCell,
            getCellContent,
            real2RowIndex,
            scrollToItem,
            scrollBy
          }
        )
      ] })
    }
  );
};
var InteractionLayer = (0, import_react204.forwardRef)(InteractionLayerBase);

// ../../packages/aitable/src/grid/core/TouchLayer.tsx
var import_react205 = __toESM(require_react(), 1);
var import_jsx_runtime51 = __toESM(require_jsx_runtime(), 1);
var { columnAppendBtnWidth: columnAppendBtnWidth3, columnHeadHeight: columnHeadHeight3 } = GRID_DEFAULT;
var TouchLayer = (props) => {
  const {
    width,
    height,
    theme,
    columns,
    columnStatistics,
    coordInstance,
    scrollState,
    collaborators,
    searchCursor,
    mouseState,
    rowControls,
    imageManager,
    spriteManager,
    forceRenderFlag,
    rowIndexVisible,
    groupCollection,
    collapsedGroupIds,
    columnHeaderHeight,
    getCellContent,
    getLinearRow,
    real2RowIndex,
    setActiveCell,
    setMouseState,
    onRowAppend,
    onRowExpand,
    onColumnAppend,
    onColumnHeaderClick,
    onSelectionChanged,
    onColumnStatisticClick,
    onCollapsedGroupChanged
  } = props;
  const hasAppendRow = onRowAppend != null;
  const hasAppendColumn = onColumnAppend != null;
  const { scrollTop, scrollLeft } = scrollState;
  const {
    totalHeight,
    containerHeight,
    freezeRegionWidth,
    totalWidth,
    columnInitSize,
    rowCount,
    rowInitSize
  } = coordInstance;
  const containerRef = (0, import_react205.useRef)(null);
  const visibleRegion = useVisibleRegion(
    coordInstance,
    scrollState,
    forceRenderFlag
  );
  const { selection, setSelection } = useSelection({
    coordInstance,
    getLinearRow,
    setActiveCell,
    onSelectionChanged
  });
  const getRangeByPosition = (x2, y) => {
    const rowIndex = y < 0 ? -Infinity : y <= rowInitSize ? -1 : coordInstance.getRowStartIndex(scrollTop + y);
    const columnIndex = x2 < 0 ? -Infinity : scrollLeft + x2 > totalWidth && scrollLeft + x2 < totalWidth + columnAppendBtnWidth3 ? -2 : x2 <= freezeRegionWidth ? x2 <= columnInitSize ? -1 : coordInstance.getColumnStartIndex(x2) : coordInstance.getColumnStartIndex(scrollLeft + x2);
    return [columnIndex, rowIndex];
  };
  const onTapStyleEffect = (mouseState2) => {
    setMouseState(mouseState2);
    setTimeout(() => setMouseState(DEFAULT_MOUSE_STATE), 500);
  };
  const onTap = (e2) => {
    const pointerEvent = e2.changedPointers[0];
    const x2 = pointerEvent?.offsetX ?? pointerEvent?.layerX;
    const y = pointerEvent?.offsetY ?? pointerEvent?.layerY;
    const [columnIndex, rowIndex] = getRangeByPosition(x2, y);
    const posInfo = { x: x2, y, rowIndex, columnIndex, isOutOfBounds: false };
    const statisticBoundData = getColumnStatisticData({
      columnStatistics,
      scrollState,
      coordInstance,
      getLinearRow,
      position: { x: x2, y, rowIndex, columnIndex },
      height
    });
    if (statisticBoundData != null && columnIndex !== void 0) {
      const { type, ...rest2 } = statisticBoundData;
      return onColumnStatisticClick?.(columnIndex, { ...rest2 });
    }
    if (rowIndex === -1 && columnIndex !== void 0 && columnIndex > -1) {
      onTapStyleEffect({ ...posInfo, type: "ColumnHeader" /* ColumnHeader */ });
      return onColumnHeaderClick?.(columnIndex, {
        x: coordInstance.getColumnRelativeOffset(columnIndex, scrollLeft) ?? 0,
        y: 0,
        width: coordInstance.getColumnWidth(columnIndex) ?? 0,
        height: columnHeadHeight3 ?? 0
      });
    }
    if (hasAppendColumn && rowIndex !== void 0 && rowIndex >= -1 && columnIndex === -2) {
      onTapStyleEffect({ ...posInfo, type: "AppendColumn" /* AppendColumn */ });
      return onColumnAppend?.();
    }
    if (hasAppendRow && rowIndex === rowCount - 1 && columnIndex !== void 0 && columnIndex >= -1) {
      onTapStyleEffect({ ...posInfo, type: "AppendRow" /* AppendRow */ });
      return onRowAppend?.();
    }
    if (rowIndex !== void 0 && rowIndex >= 0) {
      const linearRow = getLinearRow(rowIndex);
      if (linearRow.type === "GROUP" /* Group */ && x2 < rowInitSize) {
        const { id } = linearRow;
        if (collapsedGroupIds == null) {
          return onCollapsedGroupChanged?.(/* @__PURE__ */ new Set([id]));
        }
        if (collapsedGroupIds.has(id)) {
          const newCollapsedGroupIds = new Set(collapsedGroupIds);
          newCollapsedGroupIds.delete(id);
          return onCollapsedGroupChanged?.(newCollapsedGroupIds);
        }
        return onCollapsedGroupChanged?.(/* @__PURE__ */ new Set([...collapsedGroupIds, id]));
      }
      if (scrollTop + y > totalHeight && !inRange2(y, containerHeight, height)) {
        return;
      }
      if (columnIndex !== void 0 && columnIndex >= 0) {
        const cell = getCellContent([columnIndex, rowIndex]);
        const cellRenderer = getCellRenderer(cell.type);
        const onCellClick = cellRenderer?.onClick;
        if (onCellClick) {
          const offsetX = coordInstance.getColumnOffset(columnIndex) ?? 0;
          onCellClick(
            cell,
            {
              position: { x: x2, y },
              cell,
              rowIndex,
              columnIndex,
              width: coordInstance.getColumnWidth(columnIndex) ?? 0,
              height: coordInstance.getRowHeight(rowIndex) ?? 0,
              theme,
              hoverCellPosition: {
                x: columnIndex < coordInstance.freezeColumnCount ? x2 - offsetX : x2 - offsetX + scrollLeft,
                y: y - (coordInstance.getRowOffset(rowIndex) ?? 0) + scrollTop
              },
              activeCellBound: void 0,
              isActive: false
            },
            (props2) => {
            }
          );
        }
      }
      const range2 = [0, rowIndex];
      setActiveCell(range2);
      setSelection(
        selection.set("Cells" /* Cells */, [range2, range2])
      );
      onTapStyleEffect({ ...posInfo, type: "Cell" /* Cell */ });
      onRowExpand?.(linearRow.realIndex);
    }
  };
  return (0, import_jsx_runtime51.jsx)(
    "div",
    {
      ref: containerRef,
      style: { width, height },
      onTouchEnd: (e2) => {
        const touch = e2.changedTouches[0];
        if (touch) {
          const rect = e2.currentTarget.getBoundingClientRect();
          const x2 = touch.clientX - rect.left;
          const y = touch.clientY - rect.top;
          const mockEvent = {
            changedPointers: [{ offsetX: x2, layerX: x2, offsetY: y, layerY: y }]
          };
          onTap(mockEvent);
        }
      },
      onClick: (e2) => {
        const rect = e2.currentTarget.getBoundingClientRect();
        const x2 = e2.clientX - rect.left;
        const y = e2.clientY - rect.top;
        const mockEvent = {
          changedPointers: [{ offsetX: x2, layerX: x2, offsetY: y, layerY: y }]
        };
        onTap(mockEvent);
      },
      children: (0, import_jsx_runtime51.jsx)(
        RenderLayer,
        {
          theme,
          width,
          height,
          columns,
          columnStatistics,
          collaborators,
          searchCursor,
          coordInstance,
          rowControls,
          imageManager,
          spriteManager,
          visibleRegion,
          rowIndexVisible,
          groupCollection,
          activeCell: null,
          activeCellBound: null,
          mouseState,
          scrollState,
          dragState: DEFAULT_DRAG_STATE,
          selection: emptySelection,
          isSelecting: false,
          forceRenderFlag,
          columnHeaderHeight,
          columnFreezeState: DEFAULT_FREEZE_COLUMN_STATE,
          columnResizeState: DEFAULT_COLUMN_RESIZE_STATE,
          hoverCellPosition: null,
          hoveredColumnResizeIndex: -1,
          isRowAppendEnable: hasAppendRow,
          isColumnAppendEnable: hasAppendColumn,
          getCellContent,
          real2RowIndex,
          getLinearRow
        }
      )
    }
  );
};

// ../../packages/aitable/src/grid/core/Grid.tsx
var import_jsx_runtime52 = __toESM(require_jsx_runtime(), 1);
var mapAPITypeToMenuType2 = (apiType) => {
  const typeMapping = {
    // 文本类型
    text: "text",
    singleLineText: "text",
    longText: "longText",
    // 数字类型
    number: "number",
    // 选择类型
    select: "singleSelect",
    // API 的 select 对应前端的 singleSelect
    singleSelect: "singleSelect",
    multipleSelect: "multipleSelect",
    // API 的 multipleSelect 对应前端的 multipleSelect
    // 日期时间
    date: "date",
    // 其他类型
    checkbox: "checkbox",
    attachment: "attachment",
    link: "link",
    user: "user",
    rating: "rating",
    formula: "formula",
    email: "email",
    phone: "phone"
  };
  return typeMapping[apiType] || "text";
};
var {
  scrollBuffer,
  appendRowHeight,
  groupHeaderHeight: groupHeaderHeight2,
  cellScrollBuffer,
  columnAppendBtnWidth: columnAppendBtnWidth4,
  columnStatisticHeight: columnStatisticHeight3,
  rowHeight: defaultRowHeight2,
  columnWidth: defaultColumnWidth,
  columnHeadHeight: defaultColumnHeaderHeight
} = GRID_DEFAULT;
var GridBase = (props, forwardRef30) => {
  const {
    columns,
    commentCountMap,
    groupCollection,
    collapsedGroupIds,
    draggable = "all" /* All */,
    selectable = "all" /* All */,
    columnStatistics,
    freezeColumnCount: _freezeColumnCount = 1,
    rowCount: originRowCount,
    rowHeight = defaultRowHeight2,
    rowControls = [{ type: "Checkbox" /* Checkbox */ }],
    theme: customTheme,
    isTouchDevice: isTouchDevice2,
    smoothScrollX = true,
    smoothScrollY = true,
    scrollBufferX = scrollBuffer,
    scrollBufferY = scrollBuffer,
    scrollBarVisible = true,
    rowIndexVisible = true,
    isMultiSelectionEnable = true,
    style,
    customIcons,
    collaborators,
    searchCursor,
    searchHitIndex,
    groupPoints,
    columnHeaderHeight = defaultColumnHeaderHeight,
    getCellContent,
    onUndo,
    onRedo,
    onCopy,
    onPaste,
    onDelete,
    onRowAppend,
    onRowExpand,
    onRowOrdered,
    onCellEdited,
    onCellDblClick,
    onColumnAppend,
    onColumnResize,
    onColumnOrdered,
    onDragStart,
    // onContextMenu, // 未使用
    onSelectionChanged,
    onVisibleRegionChanged,
    onColumnFreeze,
    onColumnHeaderClick,
    onColumnHeaderDblClick,
    // onColumnHeaderMenuClick, // 未使用
    // onRowHeaderMenuClick, // 未使用
    // onCellContextMenu, // 未使用
    onColumnStatisticClick,
    onCollapsedGroupChanged,
    onGroupHeaderContextMenu,
    onItemHovered,
    onItemClick,
    onScrollChanged,
    onAddColumn,
    onEditColumn,
    onDuplicateColumn,
    onDeleteColumn,
    onStartEditColumn
  } = props;
  (0, import_react206.useImperativeHandle)(forwardRef30, () => ({
    resetState: () => interactionLayerRef.current?.resetState(),
    forceUpdate: () => setForceRenderFlag(uniqueId_default("grid_")),
    getActiveCell: () => activeCell,
    setSelection: (selection) => {
      interactionLayerRef.current?.setSelection(selection);
    },
    getRowOffset: (rowIndex) => {
      const { scrollTop } = scrollState;
      const realRowIndex = real2RowIndex(rowIndex);
      return (coordInstance.getRowOffset(realRowIndex) ?? 0) - scrollTop;
    },
    scrollBy,
    scrollTo: scrollTo2,
    scrollToItem,
    setActiveCell,
    getScrollState: () => scrollState,
    getCellIndicesAtPosition: (x2, y) => {
      const { scrollLeft, scrollTop } = scrollState;
      const rowIndex = coordInstance.getRowStartIndex(scrollTop + y);
      const columnIndex = coordInstance.getColumnStartIndex(scrollLeft + x2);
      const { type, realIndex } = getLinearRow(rowIndex);
      if (type !== "ROW" /* Row */) {
        return null;
      }
      return [columnIndex, realIndex];
    },
    getContainer: () => containerRef.current,
    setCellLoading: (cells) => {
      setCellLoadings(cells);
    },
    setColumnLoadings: (columnLoadings2) => {
      setColumnLoadings(columnLoadings2);
    },
    getCellBounds: (cell) => {
      const [columnIndex, _rowIndex] = cell;
      const rowIndex = real2RowIndex(_rowIndex);
      const { scrollLeft, scrollTop } = scrollState;
      const columnOffsetX = coordInstance.getColumnRelativeOffset(
        columnIndex,
        scrollLeft
      );
      const columnWidth = coordInstance.getColumnWidth(columnIndex);
      if (columnOffsetX == null || columnWidth == null) {
        return null;
      }
      const rowOffsetY = coordInstance.getRowOffset(rowIndex) ?? 0;
      const rowHeight2 = coordInstance.getRowHeight(rowIndex) ?? 0;
      return {
        x: columnOffsetX,
        y: rowOffsetY - scrollTop,
        width: columnWidth,
        height: rowHeight2
      };
    },
    isEditing: () => {
      return interactionLayerRef.current?.isEditing();
    }
  }));
  const hasAppendRow = onRowAppend != null;
  const hasAppendColumn = onColumnAppend != null;
  const rowControlCount = rowControls.length;
  const totalWidth = columns.reduce(
    (prev, column) => prev + (column.width || defaultColumnWidth),
    hasAppendColumn ? scrollBufferX + columnAppendBtnWidth4 : scrollBufferX
  );
  const [forceRenderFlag, setForceRenderFlag] = (0, import_react206.useState)(uniqueId_default("grid_"));
  const [mouseState, setMouseState] = (0, import_react206.useState)(DEFAULT_MOUSE_STATE);
  const [scrollState, setScrollState] = (0, import_react206.useState)(DEFAULT_SCROLL_STATE);
  const [activeCell, setActiveCell] = useRafState_default(null);
  const [cellLoadings, setCellLoadings] = (0, import_react206.useState)([]);
  const [columnLoadings, setColumnLoadings] = (0, import_react206.useState)([]);
  const [isAddFieldMenuOpen, setIsAddFieldMenuOpen] = (0, import_react206.useState)(false);
  const [isEditFieldMenuOpen, setIsEditFieldMenuOpen] = (0, import_react206.useState)(false);
  const [editingColumnIndex, setEditingColumnIndex] = (0, import_react206.useState)(-1);
  const scrollerRef = (0, import_react206.useRef)(null);
  const containerRef = (0, import_react206.useRef)(null);
  const interactionLayerRef = (0, import_react206.useRef)(null);
  const columnManagementRef = (0, import_react206.useRef)(null);
  const rowContextMenuRef = (0, import_react206.useRef)(null);
  const deleteConfirmDialogRef = (0, import_react206.useRef)(null);
  const addFieldMenuTriggerRef = (0, import_react206.useRef)(null);
  const editFieldMenuTriggerRef = (0, import_react206.useRef)(null);
  const { ref, width, height } = useResizeObserver();
  const [activeColumnIndex, activeRowIndex] = activeCell ?? [];
  const hoverRegionType = mouseState.type;
  const hasColumnStatistics = columnStatistics != null;
  const containerHeight = hasColumnStatistics ? height - columnStatisticHeight3 : height;
  const columnCount = columns.length;
  const freezeColumnCount = Math.min(_freezeColumnCount, columnCount);
  const theme = (0, import_react206.useMemo)(
    () => ({ ...gridTheme, ...customTheme }),
    [customTheme]
  );
  const { iconSizeMD } = theme;
  const columnInitSize = (0, import_react206.useMemo)(() => {
    return !rowIndexVisible && !rowControlCount ? 0 : Math.max(rowControlCount, 2) * iconSizeMD;
  }, [rowControlCount, rowIndexVisible, iconSizeMD]);
  const defaultRowsInfo = (0, import_react206.useMemo)(() => {
    return {
      linearRows: [],
      real2LinearRowMap: null,
      pureRowCount: originRowCount,
      rowCount: hasAppendRow ? originRowCount + 1 : originRowCount,
      rowHeightMap: hasAppendRow ? { [originRowCount]: appendRowHeight } : void 0
    };
  }, [hasAppendRow, originRowCount]);
  const groupRowsInfo = (0, import_react206.useMemo)(() => {
    if (!groupPoints?.length) {
      return null;
    }
    let rowIndex = 0;
    let totalIndex = 0;
    let currentValue = null;
    let collapsedDepth = Number.MAX_VALUE;
    const linearRows2 = [];
    const rowHeightMap2 = {};
    const real2LinearRowMap2 = {};
    groupPoints.forEach((point) => {
      const { type } = point;
      if (type === "GROUP" /* Group */) {
        const { id, value, depth, isCollapsed } = point;
        const isSubGroup = depth > collapsedDepth;
        if (isCollapsed) {
          collapsedDepth = Math.min(collapsedDepth, depth);
          if (isSubGroup) {
            return;
          }
        } else if (!isSubGroup) {
          collapsedDepth = Number.MAX_VALUE;
        } else {
          return;
        }
        rowHeightMap2[totalIndex] = groupHeaderHeight2;
        linearRows2.push({
          id,
          type: "GROUP" /* Group */,
          depth,
          value,
          realIndex: rowIndex,
          isCollapsed: Boolean(isCollapsed)
        });
        currentValue = value;
        totalIndex++;
      }
      if (type === "ROW" /* Row */) {
        const count = point.count;
        for (let i = 0; i < count; i++) {
          real2LinearRowMap2[rowIndex + i] = totalIndex + i;
          linearRows2.push({
            type: "ROW" /* Row */,
            displayIndex: i + 1,
            realIndex: rowIndex + i
          });
        }
        rowIndex += count;
        totalIndex += count;
        if (hasAppendRow) {
          rowHeightMap2[totalIndex] = appendRowHeight;
          linearRows2.push({
            type: "APPEND" /* Append */,
            value: currentValue,
            realIndex: rowIndex - 1
          });
          totalIndex++;
        }
      }
    });
    return {
      linearRows: linearRows2,
      real2LinearRowMap: real2LinearRowMap2,
      pureRowCount: rowIndex,
      rowCount: totalIndex,
      rowHeightMap: rowHeightMap2
    };
  }, [groupPoints, hasAppendRow]);
  const {
    rowCount,
    pureRowCount,
    rowHeightMap,
    linearRows,
    real2LinearRowMap
  } = (0, import_react206.useMemo)(() => {
    return { ...defaultRowsInfo, ...groupRowsInfo };
  }, [defaultRowsInfo, groupRowsInfo]);
  const getLinearRow = (0, import_react206.useCallback)(
    (index3) => {
      if (!linearRows.length) {
        return index3 >= pureRowCount ? {
          type: "APPEND" /* Append */,
          realIndex: index3 - 1,
          value: null
        } : {
          type: "ROW" /* Row */,
          displayIndex: index3 + 1,
          realIndex: index3
        };
      }
      return linearRows[index3] ?? { type: "ROW" /* Row */, realIndex: -2 };
    },
    [linearRows, pureRowCount]
  );
  const real2RowIndex = (0, import_react206.useCallback)(
    (index3) => {
      if (real2LinearRowMap == null) {
        return index3;
      }
      return real2LinearRowMap[index3] ?? index3;
    },
    [real2LinearRowMap]
  );
  const columnWidthMap = (0, import_react206.useMemo)(() => {
    return columns.reduce(
      (acc, column, index3) => ({
        ...acc,
        [index3]: column.width || defaultColumnWidth
      }),
      {}
    );
  }, [columns]);
  const coordInstance = (0, import_react206.useMemo)(() => {
    return new CoordinateManager({
      rowHeight,
      columnWidth: defaultColumnWidth,
      pureRowCount,
      rowCount,
      columnCount,
      freezeColumnCount,
      containerWidth: width,
      containerHeight,
      rowInitSize: columnHeaderHeight,
      columnInitSize,
      rowHeightMap,
      columnWidthMap
    });
  }, [rowHeight, pureRowCount, rowCount, rowHeightMap, columnHeaderHeight]);
  const totalHeight = coordInstance.totalHeight + scrollBufferY;
  (0, import_react206.useMemo)(() => {
    coordInstance.refreshColumnDimensions({
      columnInitSize,
      columnCount,
      columnWidthMap
    });
    setForceRenderFlag(uniqueId_default("grid_"));
  }, [coordInstance, columnInitSize, columnCount, columnWidthMap]);
  (0, import_react206.useMemo)(() => {
    coordInstance.containerWidth = width;
    coordInstance.containerHeight = containerHeight;
    coordInstance.freezeColumnCount = freezeColumnCount;
    setForceRenderFlag(uniqueId_default("grid_"));
  }, [coordInstance, width, containerHeight, freezeColumnCount]);
  const activeCellBound = (0, import_react206.useMemo)(() => {
    if (activeColumnIndex == null || activeRowIndex == null) {
      return null;
    }
    const cell = getCellContent([activeColumnIndex, activeRowIndex]);
    const cellRenderer = getCellRenderer(cell.type);
    const originWidth = coordInstance.getColumnWidth(activeColumnIndex) ?? 0;
    const originHeight = coordInstance.getRowHeight(real2RowIndex(activeRowIndex)) ?? 0;
    if (cellRenderer?.measure && measuredCanvas?.ctx != null) {
      const measureResult = cellRenderer.measure(cell, {
        theme,
        ctx: measuredCanvas.ctx,
        width: originWidth,
        height: originHeight
      });
      const { width: width2, height: height2, totalHeight: totalHeight2 = height2 } = measureResult;
      return {
        x: coordInstance.getColumnOffset(activeColumnIndex) ?? 0,
        y: coordInstance.getRowOffset(real2RowIndex(activeRowIndex)) ?? 0,
        rowIndex: activeRowIndex,
        columnIndex: activeColumnIndex,
        width: width2,
        height: height2,
        totalHeight: totalHeight2,
        scrollTop: 0,
        scrollEnable: totalHeight2 > height2
      };
    }
    return {
      x: coordInstance.getColumnOffset(activeColumnIndex) ?? 0,
      y: coordInstance.getRowOffset(real2RowIndex(activeRowIndex)) ?? 0,
      rowIndex: activeRowIndex,
      columnIndex: activeColumnIndex,
      width: originWidth,
      height: originHeight,
      totalHeight: originHeight,
      scrollTop: 0,
      scrollEnable: false
    };
  }, [
    activeColumnIndex,
    activeRowIndex,
    coordInstance,
    theme,
    getCellContent,
    real2RowIndex
  ]);
  const scrollEnable = hoverRegionType !== "None" /* None */ && !(hoverRegionType === "ActiveCell" /* ActiveCell */ && activeCellBound?.scrollEnable);
  const spriteManager = (0, import_react206.useMemo)(
    () => new SpriteManager(
      customIcons,
      () => setForceRenderFlag(uniqueId_default("grid_"))
    ),
    [customIcons]
  );
  const imageManager = (0, import_react206.useMemo)(() => {
    const imgManager = new ImageManager();
    imgManager.setCallback(() => setForceRenderFlag(uniqueId_default("grid_")));
    return imgManager;
  }, []);
  const scrollTo2 = (0, import_react206.useCallback)((sl, st) => {
    scrollerRef.current?.scrollTo(sl, st);
  }, []);
  const scrollBy = (0, import_react206.useCallback)((deltaX, deltaY) => {
    scrollerRef.current?.scrollBy(deltaX, deltaY);
  }, []);
  const handleAppendColumnClick = (0, import_react206.useCallback)(() => {
    const containerEl = containerRef.current;
    if (containerEl) {
      const rect = containerEl.getBoundingClientRect();
      const { totalWidth: totalWidth2 } = coordInstance;
      const { scrollLeft } = scrollState;
      const triggerElement = {
        getBoundingClientRect: () => ({
          left: rect.left + totalWidth2 - scrollLeft,
          top: rect.top,
          right: rect.left + totalWidth2 - scrollLeft + 40,
          // 按钮宽度
          bottom: rect.top + columnHeaderHeight,
          width: 40,
          height: columnHeaderHeight
        })
      };
      addFieldMenuTriggerRef.current = triggerElement;
    }
    setIsAddFieldMenuOpen(true);
  }, [coordInstance, scrollState.scrollLeft, columnHeaderHeight]);
  const handleAddFieldConfirm = (0, import_react206.useCallback)(
    (payload) => {
      onAddColumn?.(
        payload.type,
        columns.length,
        payload.name,
        payload.options
      );
      setIsAddFieldMenuOpen(false);
    },
    [onAddColumn, columns.length]
  );
  const handleCloseAddFieldMenu = (0, import_react206.useCallback)(() => {
    setIsAddFieldMenuOpen(false);
  }, []);
  const handleEditField = (0, import_react206.useCallback)(
    (columnIndex) => {
      const column = columns[columnIndex];
      if (!column) return;
      const containerEl = containerRef.current;
      if (containerEl) {
        const rect = containerEl.getBoundingClientRect();
        const columnX = coordInstance.getColumnRelativeOffset(
          columnIndex,
          scrollState.scrollLeft
        );
        const triggerElement = {
          getBoundingClientRect: () => ({
            left: rect.left + columnX,
            top: rect.top,
            right: rect.left + columnX + (column.width || defaultColumnWidth),
            bottom: rect.top + columnHeaderHeight,
            width: column.width || defaultColumnWidth,
            height: columnHeaderHeight
          })
        };
        editFieldMenuTriggerRef.current = triggerElement;
      }
      setEditingColumnIndex(columnIndex);
      setIsEditFieldMenuOpen(true);
    },
    [columns, coordInstance, scrollState.scrollLeft, columnHeaderHeight]
  );
  const handleEditFieldConfirm = (0, import_react206.useCallback)(
    (payload) => {
      if (editingColumnIndex >= 0) {
        const updatedColumn = {
          ...columns[editingColumnIndex],
          name: payload.name,
          type: payload.type,
          options: payload.options
        };
        onEditColumn?.(editingColumnIndex, updatedColumn);
      }
      setIsEditFieldMenuOpen(false);
      setEditingColumnIndex(-1);
    },
    [editingColumnIndex, columns, onEditColumn]
  );
  const handleCloseEditFieldMenu = (0, import_react206.useCallback)(() => {
    setIsEditFieldMenuOpen(false);
    setEditingColumnIndex(-1);
  }, []);
  const handleColumnHeaderMenuClick = (0, import_react206.useCallback)(
    (colIndex, bounds) => {
      columnManagementRef.current?.showColumnContextMenu(
        { x: bounds.x, y: bounds.y },
        colIndex
      );
    },
    []
  );
  const handleRowHeaderMenuClick = (0, import_react206.useCallback)(
    (rowIndex, position) => {
      rowContextMenuRef.current?.show(position, rowIndex);
    },
    []
  );
  const handleCellContextMenu = (0, import_react206.useCallback)(
    (rowIndex, _colIndex, position) => {
      rowContextMenuRef.current?.show(position, rowIndex);
    },
    []
  );
  const openEditFieldAtColumn = (0, import_react206.useCallback)(
    (colIndex) => {
      const containerEl = containerRef.current;
      const rect = containerEl?.getBoundingClientRect();
      const pageLeft = (rect?.left ?? 0) + window.scrollX;
      const pageTop = (rect?.top ?? 0) + window.scrollY;
      const x2 = pageLeft + coordInstance.getColumnRelativeOffset(
        colIndex + 1,
        scrollState.scrollLeft
      );
      const y = pageTop + columnHeaderHeight;
      const column = columns[colIndex];
      if (!column) {
        return;
      }
      columnManagementRef.current?.showFieldPropertyEditor(column, colIndex, {
        x: x2,
        y,
        width: 520
      });
    },
    [columns, coordInstance, scrollState.scrollLeft, columnHeaderHeight]
  );
  const scrollToItem = (0, import_react206.useCallback)(
    (position) => {
      try {
        const {
          containerHeight: containerHeight2,
          containerWidth,
          freezeRegionWidth,
          freezeColumnCount: freezeColumnCount2,
          rowInitSize: rowInitSize2
        } = coordInstance;
        const { scrollTop, scrollLeft } = scrollState;
        const [columnIndex, _rowIndex] = position;
        const rowIndex = real2RowIndex(_rowIndex);
        const isFreezeColumn = columnIndex < freezeColumnCount2;
        if (!isFreezeColumn) {
          const offsetX = coordInstance.getColumnOffset(columnIndex) ?? 0;
          const columnWidth = coordInstance.getColumnWidth(columnIndex) ?? 0;
          const deltaLeft = Math.min(
            offsetX - scrollLeft - freezeRegionWidth,
            0
          );
          const deltaRight = Math.max(
            offsetX + columnWidth - scrollLeft - containerWidth,
            0
          );
          const sl = scrollLeft + deltaLeft + deltaRight;
          if (sl !== scrollLeft) {
            const scrollBuffer2 = deltaLeft < 0 ? -cellScrollBuffer : deltaRight > 0 ? cellScrollBuffer : 0;
            scrollTo2(sl + scrollBuffer2, void 0);
          }
        }
        const rowHeight2 = coordInstance.getRowHeight(rowIndex) ?? 0;
        const offsetY = coordInstance.getRowOffset(rowIndex) ?? 0;
        const deltaTop = Math.min(offsetY - scrollTop - rowInitSize2, 0);
        const deltaBottom = Math.max(
          offsetY + rowHeight2 - scrollTop - containerHeight2,
          0
        );
        const st = scrollTop + deltaTop + deltaBottom;
        if (st !== scrollTop) {
          scrollTo2(void 0, st);
        }
      } catch (error) {
        console.error("scrollToItem error", error);
      }
    },
    [coordInstance, scrollState, scrollTo2, real2RowIndex]
  );
  const onMouseDown = () => {
    containerRef.current?.focus();
  };
  const handleContextMenu = (0, import_react206.useCallback)(
    (selection, position) => {
      const [_colIndex, rowIndex] = selection.ranges[0] ?? [];
      if (rowIndex == null || rowIndex < 0) {
        return;
      }
      const containerEl = containerRef.current;
      const rect = containerEl?.getBoundingClientRect();
      const pageLeft = (rect?.left ?? 0) + window.scrollX;
      const pageTop = (rect?.top ?? 0) + window.scrollY;
      rowContextMenuRef.current?.show(
        { x: pageLeft + position.x, y: pageTop + position.y },
        rowIndex
      );
    },
    []
  );
  const { rowInitSize } = coordInstance;
  (0, import_react206.useEffect)(() => {
    if (containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect();
      if (rect.width === 0 || rect.height === 0) {
        console.warn(
          "[Grid] 警告：Grid容器尺寸为0，表格可能无法正常显示。",
          `尺寸: ${rect.width}x${rect.height}`,
          "\n建议：确保Grid的父容器有明确的宽高设置。",
          '\n示例：<div style={{ width: "100%", height: "600px" }}><Grid ... /></div>'
        );
      }
    }
  }, []);
  const handleHeaderDblClick = (0, import_react206.useCallback)(
    (colIndex, bounds) => {
      if (onColumnHeaderDblClick) {
        onColumnHeaderDblClick(colIndex, bounds);
        return;
      }
      openEditFieldAtColumn(colIndex);
    },
    [onColumnHeaderDblClick, openEditFieldAtColumn]
  );
  return (0, import_jsx_runtime52.jsxs)(
    "div",
    {
      ref,
      style: {
        width: "100%",
        height: "100%",
        ...style
      },
      children: [
        (0, import_jsx_runtime52.jsx)(
          "div",
          {
            "data-t-grid-container": true,
            ref: containerRef,
            tabIndex: 0,
            style: {
              width: "100%",
              height: "100%",
              position: "relative",
              outline: "none",
              // 防御性设计：设置最小尺寸，确保即使父容器配置错误，Grid也有基本显示
              minWidth: "200px",
              minHeight: "150px"
            },
            onMouseDown,
            children: isTouchDevice2 ? (0, import_jsx_runtime52.jsx)(
              TouchLayer,
              {
                width,
                height,
                theme,
                columns,
                commentCountMap,
                mouseState,
                scrollState,
                rowControls,
                collaborators,
                searchCursor,
                searchHitIndex,
                imageManager,
                spriteManager,
                coordInstance,
                columnStatistics,
                collapsedGroupIds,
                columnHeaderHeight,
                forceRenderFlag,
                rowIndexVisible,
                groupCollection,
                getLinearRow,
                real2RowIndex,
                getCellContent,
                setMouseState,
                setActiveCell,
                onDelete,
                onRowAppend,
                onRowExpand,
                onCellEdited,
                onContextMenu: handleContextMenu,
                onColumnAppend: handleAppendColumnClick,
                onColumnHeaderClick,
                onColumnStatisticClick,
                onCollapsedGroupChanged,
                onSelectionChanged
              }
            ) : (0, import_jsx_runtime52.jsx)(
              InteractionLayer,
              {
                ref: interactionLayerRef,
                width,
                height,
                theme,
                columns,
                commentCountMap,
                draggable,
                selectable,
                collaborators,
                searchCursor,
                searchHitIndex,
                rowControls,
                imageManager,
                spriteManager,
                coordInstance,
                columnStatistics,
                collapsedGroupIds,
                columnHeaderHeight,
                isMultiSelectionEnable,
                activeCell,
                mouseState,
                scrollState,
                activeCellBound,
                forceRenderFlag,
                rowIndexVisible,
                groupCollection,
                getLinearRow,
                real2RowIndex,
                getCellContent,
                setMouseState,
                setActiveCell,
                scrollToItem,
                scrollBy,
                onUndo,
                onRedo,
                onCopy,
                onPaste,
                onDelete,
                onDragStart,
                onRowAppend,
                onRowExpand,
                onRowOrdered,
                onCellEdited,
                onCellDblClick,
                onContextMenu: handleContextMenu,
                onColumnAppend: handleAppendColumnClick,
                onColumnResize,
                onColumnOrdered,
                onColumnHeaderClick,
                onColumnStatisticClick,
                onColumnHeaderDblClick: handleHeaderDblClick,
                onColumnHeaderMenuClick: handleColumnHeaderMenuClick,
                onRowHeaderMenuClick: handleRowHeaderMenuClick,
                onCellContextMenu: handleCellContextMenu,
                onCollapsedGroupChanged,
                onGroupHeaderContextMenu,
                onSelectionChanged,
                onColumnFreeze,
                onItemHovered,
                onItemClick
              }
            )
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          InfiniteScroller,
          {
            ref: scrollerRef,
            coordInstance,
            top: rowInitSize,
            left: columnInitSize,
            containerWidth: width,
            containerHeight,
            scrollWidth: totalWidth,
            scrollHeight: totalHeight,
            smoothScrollX,
            smoothScrollY,
            scrollBarVisible,
            containerRef,
            scrollState,
            scrollEnable,
            getLinearRow,
            setScrollState,
            onScrollChanged,
            onVisibleRegionChanged
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          LoadingIndicator,
          {
            cellLoadings,
            columnLoadings,
            coordInstance,
            scrollState
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          ColumnManagement,
          {
            ref: columnManagementRef,
            columns,
            onAddColumn,
            onEditColumn,
            onDuplicateColumn,
            onDeleteColumn,
            onStartEditColumn: handleEditField
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          AddFieldMenu,
          {
            isOpen: isAddFieldMenuOpen,
            onClose: handleCloseAddFieldMenu,
            onConfirm: handleAddFieldConfirm,
            triggerRef: addFieldMenuTriggerRef
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          EditFieldMenu,
          {
            isOpen: isEditFieldMenuOpen,
            onClose: handleCloseEditFieldMenu,
            onConfirm: handleEditFieldConfirm,
            triggerRef: editFieldMenuTriggerRef,
            initialData: editingColumnIndex >= 0 ? {
              type: mapAPITypeToMenuType2(
                columns[editingColumnIndex]?.type || "text"
              ),
              name: columns[editingColumnIndex]?.name || "",
              options: columns[editingColumnIndex]?.options || {},
              description: columns[editingColumnIndex]?.description || ""
            } : void 0
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          RowContextMenu,
          {
            ref: rowContextMenuRef,
            onDeleteRow: (rowIndex) => {
              const recordId = `record-${rowIndex}`;
              deleteConfirmDialogRef.current?.show("row", recordId, rowIndex);
            },
            onDuplicateRow: (_rowIndex) => {
            },
            onInsertRowAbove: (rowIndex) => {
              onRowAppend?.(rowIndex);
            },
            onInsertRowBelow: (rowIndex) => {
              onRowAppend?.(rowIndex + 1);
            },
            onExpandRow: (rowIndex) => onRowExpand?.(rowIndex)
          }
        ),
        (0, import_jsx_runtime52.jsx)(
          DeleteConfirmDialog,
          {
            ref: deleteConfirmDialogRef,
            onConfirm: (type, itemIndex) => {
              if (type === "row") {
                onDelete?.({ type: "row" /* Row */ });
              }
            }
          }
        )
      ]
    }
  );
};
var Grid = (0, import_react206.forwardRef)(GridBase);

// ../../packages/aitable/src/context/app/AppContext.tsx
var import_react207 = __toESM(require_react(), 1);
var import_jsx_runtime53 = __toESM(require_jsx_runtime(), 1);
var AppContext = (0, import_react207.createContext)(null);
function AppProvider({ children }) {
  const [theme, setThemeState] = (0, import_react207.useState)(() => {
    if (typeof window !== "undefined") {
      return localStorage.getItem("app_theme") || "light";
    }
    return "light";
  });
  const [language, setLanguageState] = (0, import_react207.useState)(() => {
    if (typeof window !== "undefined") {
      return localStorage.getItem("app_language") || "zh-CN";
    }
    return "zh-CN";
  });
  const [isLoading, setIsLoading] = (0, import_react207.useState)(false);
  const setTheme = (newTheme) => {
    setThemeState(newTheme);
    localStorage.setItem("app_theme", newTheme);
  };
  const setLanguage = (newLanguage) => {
    setLanguageState(newLanguage);
    localStorage.setItem("app_language", newLanguage);
  };
  (0, import_react207.useEffect)(() => {
    if (typeof document !== "undefined") {
      const effectiveTheme = theme === "auto" ? window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light" : theme;
      document.documentElement.setAttribute("data-theme", effectiveTheme);
      document.documentElement.classList.toggle(
        "dark",
        effectiveTheme === "dark"
      );
    }
  }, [theme]);
  return (0, import_jsx_runtime53.jsx)(
    AppContext.Provider,
    {
      value: {
        theme,
        language,
        setTheme,
        setLanguage,
        isLoading,
        setIsLoading
      },
      children
    }
  );
}

// ../../packages/aitable/src/context/base/BaseContext.tsx
var import_react208 = __toESM(require_react(), 1);
var import_jsx_runtime54 = __toESM(require_jsx_runtime(), 1);
var BaseContext = (0, import_react208.createContext)(null);
function BaseProvider({
  baseId,
  apiClient,
  children
}) {
  const queryClient2 = useQueryClient();
  const [currentBaseId, setCurrentBaseId] = (0, import_react208.useState)(baseId);
  const { data: bases = [], isLoading } = useQuery({
    queryKey: ["bases"],
    queryFn: () => apiClient.getBases()
  });
  const { data: currentBase } = useQuery({
    queryKey: ["base", currentBaseId],
    queryFn: () => currentBaseId ? apiClient.getBase(currentBaseId) : null,
    enabled: !!currentBaseId
  });
  const createMutation = useMutation({
    mutationFn: (data) => apiClient.createBase(data),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["bases"] });
    }
  });
  const updateMutation = useMutation({
    mutationFn: ({ id, data }) => apiClient.updateBase(id, data),
    onSuccess: (_2, { id }) => {
      queryClient2.invalidateQueries({ queryKey: ["base", id] });
      queryClient2.invalidateQueries({ queryKey: ["bases"] });
    }
  });
  const deleteMutation = useMutation({
    mutationFn: (id) => apiClient.deleteBase(id),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["bases"] });
    }
  });
  const switchBase = (0, import_react208.useCallback)((id) => {
    setCurrentBaseId(id);
  }, []);
  return (0, import_jsx_runtime54.jsx)(
    BaseContext.Provider,
    {
      value: {
        bases,
        currentBase: currentBase || null,
        isLoading,
        switchBase,
        createBase: createMutation.mutateAsync,
        updateBase: (id, data) => updateMutation.mutateAsync({ id, data }),
        deleteBase: deleteMutation.mutateAsync
      },
      children
    }
  );
}

// ../../packages/aitable/src/context/permission/PermissionContext.tsx
var import_react209 = __toESM(require_react(), 1);
var import_jsx_runtime55 = __toESM(require_jsx_runtime(), 1);
var PermissionContext = (0, import_react209.createContext)(null);
function PermissionProvider({
  baseId,
  tableId,
  apiClient,
  children
}) {
  const contextValue = (0, import_react209.useMemo)(
    () => ({
      permissions: null,
      isLoading: false,
      hasPermission: () => true,
      canCreateField: () => true,
      canEditField: () => true,
      canDeleteField: () => true,
      canCreateRecord: () => true,
      canEditRecord: () => true,
      canDeleteRecord: () => true,
      canEditCell: () => true,
      canCreateView: () => true,
      canEditView: () => true,
      canDeleteView: () => true,
      canComment: () => true,
      getCurrentUserRole: () => "owner"
    }),
    [baseId, tableId]
  );
  return (0, import_jsx_runtime55.jsx)(PermissionContext.Provider, { value: contextValue, children });
}

// ../../packages/aitable/src/context/session/SessionContext.tsx
var import_react210 = __toESM(require_react(), 1);
var import_jsx_runtime56 = __toESM(require_jsx_runtime(), 1);
var SessionContext = (0, import_react210.createContext)(null);
function SessionProvider({
  children,
  apiClient
}) {
  const [user, setUser] = (0, import_react210.useState)(null);
  const [token, setToken] = (0, import_react210.useState)(() => {
    if (typeof window !== "undefined") {
      return localStorage.getItem("auth_token");
    }
    return null;
  });
  const signIn = (0, import_react210.useCallback)(
    async (credentials) => {
      try {
        if (apiClient) {
        }
        const mockUser = {
          id: "1",
          name: "Test User",
          email: credentials.email
        };
        const mockToken = "mock-token-" + Date.now();
        setUser(mockUser);
        setToken(mockToken);
        localStorage.setItem("auth_token", mockToken);
        localStorage.setItem("auth_user", JSON.stringify(mockUser));
      } catch (error) {
        console.error("Sign in failed:", error);
        throw error;
      }
    },
    [apiClient]
  );
  const signOut = (0, import_react210.useCallback)(async () => {
    setUser(null);
    setToken(null);
    localStorage.removeItem("auth_token");
    localStorage.removeItem("auth_user");
  }, []);
  const updateUser = (0, import_react210.useCallback)((userData) => {
    setUser((prev) => {
      if (!prev) {
        return null;
      }
      const updated = { ...prev, ...userData };
      localStorage.setItem("auth_user", JSON.stringify(updated));
      return updated;
    });
  }, []);
  (0, import_react210.useEffect)(() => {
    if (token && !user && typeof window !== "undefined") {
      const storedUser = localStorage.getItem("auth_user");
      if (storedUser) {
        try {
          setUser(JSON.parse(storedUser));
        } catch (e2) {
          console.error("Failed to parse stored user:", e2);
        }
      }
    }
  }, [token, user]);
  return (0, import_jsx_runtime56.jsx)(
    SessionContext.Provider,
    {
      value: {
        user,
        token,
        isAuthenticated: !!token,
        signIn,
        signOut,
        updateUser
      },
      children
    }
  );
}

// ../../packages/aitable/src/context/table/TableContext.tsx
var import_react211 = __toESM(require_react(), 1);
var import_jsx_runtime57 = __toESM(require_jsx_runtime(), 1);
var TableContext = (0, import_react211.createContext)(null);
function TableProvider({
  baseId,
  tableId,
  apiClient,
  children
}) {
  const queryClient2 = useQueryClient();
  const [currentTableId, setCurrentTableId] = (0, import_react211.useState)(tableId);
  const { data: tables = [], isLoading } = useQuery({
    queryKey: ["tables", baseId],
    queryFn: () => apiClient.getTables(baseId),
    enabled: !!baseId
  });
  const { data: currentTable } = useQuery({
    queryKey: ["table", currentTableId],
    queryFn: () => currentTableId ? apiClient.getTable(currentTableId) : null,
    enabled: !!currentTableId
  });
  const createMutation = useMutation({
    mutationFn: (data) => apiClient.createTable(baseId, data),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["tables", baseId] });
    }
  });
  const updateMutation = useMutation({
    mutationFn: ({ id, data }) => apiClient.updateTable(id, data),
    onSuccess: (_2, { id }) => {
      queryClient2.invalidateQueries({ queryKey: ["table", id] });
      queryClient2.invalidateQueries({ queryKey: ["tables", baseId] });
    }
  });
  const deleteMutation = useMutation({
    mutationFn: (id) => apiClient.deleteTable(id),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["tables", baseId] });
    }
  });
  const switchTable = (0, import_react211.useCallback)((id) => {
    setCurrentTableId(id);
  }, []);
  return (0, import_jsx_runtime57.jsx)(
    TableContext.Provider,
    {
      value: {
        tables,
        currentTable: currentTable || null,
        isLoading,
        switchTable,
        createTable: createMutation.mutateAsync,
        updateTable: (id, data) => updateMutation.mutateAsync({ id, data }),
        deleteTable: deleteMutation.mutateAsync
      },
      children
    }
  );
}

// ../../packages/aitable/src/context/view/ViewContext.tsx
var import_react212 = __toESM(require_react(), 1);

// ../../packages/aitable/src/model/view/View.ts
var View2 = class _View {
  id;
  name;
  type;
  tableId;
  order;
  filter;
  sort;
  group;
  options;
  columnMeta;
  createdTime;
  lastModifiedTime;
  constructor(config) {
    this.id = config.id;
    this.name = config.name;
    this.type = config.type;
    this.tableId = config.tableId;
    this.order = config.order;
    this.filter = config.filter;
    this.sort = config.sort;
    this.group = config.group;
    this.options = config.options;
    this.columnMeta = config.columnMeta;
    this.createdTime = config.createdTime;
    this.lastModifiedTime = config.lastModifiedTime;
  }
  /**
   * Update filter
   */
  updateFilter(filter3) {
    this.filter = filter3;
    this.lastModifiedTime = (/* @__PURE__ */ new Date()).toISOString();
  }
  /**
   * Update sort
   */
  updateSort(sort) {
    this.sort = sort;
    this.lastModifiedTime = (/* @__PURE__ */ new Date()).toISOString();
  }
  /**
   * Update group
   */
  updateGroup(group) {
    this.group = group;
    this.lastModifiedTime = (/* @__PURE__ */ new Date()).toISOString();
  }
  /**
   * Update column metadata
   */
  updateColumnMeta(columnId, meta) {
    if (!this.columnMeta) {
      this.columnMeta = {};
    }
    this.columnMeta[columnId] = {
      ...this.columnMeta[columnId],
      ...meta
    };
    this.lastModifiedTime = (/* @__PURE__ */ new Date()).toISOString();
  }
  /**
   * Get column metadata
   */
  getColumnMeta(columnId) {
    return this.columnMeta?.[columnId];
  }
  /**
   * Get view as API format
   */
  toApiFormat() {
    return {
      id: this.id,
      name: this.name,
      type: this.type,
      tableId: this.tableId,
      order: this.order,
      filter: this.filter,
      sort: this.sort,
      group: this.group,
      options: this.options,
      columnMeta: this.columnMeta,
      createdTime: this.createdTime || "",
      lastModifiedTime: this.lastModifiedTime || ""
    };
  }
  /**
   * Clone this view
   */
  clone() {
    return new _View({
      ...this.toApiFormat()
    });
  }
};
function createViewInstance(view) {
  return new View2({
    id: view.id,
    name: view.name,
    type: view.type,
    tableId: view.tableId,
    order: view.order,
    filter: view.filter,
    sort: view.sort,
    group: view.group,
    options: view.options,
    columnMeta: view.columnMeta,
    createdTime: view.createdTime,
    lastModifiedTime: view.lastModifiedTime
  });
}
function createViewInstances(views) {
  return views.map(createViewInstance);
}

// ../../packages/aitable/src/context/view/ViewContext.tsx
var import_jsx_runtime58 = __toESM(require_jsx_runtime(), 1);
var ViewContext = (0, import_react212.createContext)(null);
function ViewProvider({
  tableId,
  viewId,
  apiClient,
  children
}) {
  const queryClient2 = useQueryClient();
  const { data: rawViews = [], isLoading } = useQuery({
    queryKey: ["views", tableId],
    queryFn: () => apiClient.getViews(tableId),
    enabled: !!tableId
  });
  const views = (0, import_react212.useMemo)(
    () => rawViews.map((view) => new View2(view)),
    [rawViews]
  );
  const currentView = (0, import_react212.useMemo)(() => {
    if (!viewId) {
      return views[0] || null;
    }
    return views.find((v) => v.id === viewId) || null;
  }, [viewId, views]);
  const getView2 = (id) => views.find((v) => v.id === id);
  const createMutation = useMutation({
    mutationFn: (data) => apiClient.createView(tableId, data),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["views", tableId] });
    }
  });
  const updateMutation = useMutation({
    mutationFn: ({ id, data }) => apiClient.updateView(tableId, id, data),
    onSuccess: (_2, { id }) => {
      queryClient2.invalidateQueries({ queryKey: ["views", tableId] });
      queryClient2.invalidateQueries({ queryKey: ["view", id] });
    }
  });
  const deleteMutation = useMutation({
    mutationFn: (id) => apiClient.deleteView(tableId, id),
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["views", tableId] });
    }
  });
  const duplicateMutation = useMutation({
    mutationFn: async ({ id, name }) => {
      const view = getView2(id);
      if (!view) {
        throw new Error("View not found");
      }
      const newView = await apiClient.createView(tableId, {
        name,
        type: view.type,
        tableId
      });
      if (view.filter || view.sort || view.group || view.columnMeta || view.options) {
        await apiClient.updateView(tableId, newView.id, {
          filter: view.filter,
          sort: view.sort,
          group: view.group,
          columnMeta: view.columnMeta,
          options: view.options
        });
      }
      return newView;
    },
    onSuccess: () => {
      queryClient2.invalidateQueries({ queryKey: ["views", tableId] });
    }
  });
  const switchView = (id) => {
  };
  return (0, import_jsx_runtime58.jsx)(
    ViewContext.Provider,
    {
      value: {
        views,
        currentView,
        isLoading,
        switchView,
        createView: async (data) => {
          const result2 = await createMutation.mutateAsync(data);
          return new View2(result2);
        },
        updateView: async (id, data) => {
          const result2 = await updateMutation.mutateAsync({ id, data });
          return new View2(result2);
        },
        deleteView: deleteMutation.mutateAsync,
        duplicateView: async (id, name) => {
          const result2 = await duplicateMutation.mutateAsync({ id, name });
          return new View2(result2);
        },
        getView: getView2
      },
      children
    }
  );
}

// ../../packages/aitable/src/api/sdk-adapter.ts
var LuckDBAdapter = class {
  constructor(sdk) {
    this.sdk = sdk;
  }
  // ==================== Base APIs ====================
  async getBases() {
    return this.sdk.listBases();
  }
  async getBase(id) {
    return this.sdk.getBase(id);
  }
  // ==================== Table APIs ====================
  async getTables(baseId) {
    return this.sdk.listTables({ baseId });
  }
  async getTable(tableId) {
    return this.sdk.getTable(tableId);
  }
  async createTable(baseId, data) {
    return this.sdk.createTable({
      baseId,
      name: data.name,
      ...data
    });
  }
  async updateTable(tableId, data) {
    return this.sdk.updateTable(tableId, data);
  }
  async deleteTable(tableId) {
    await this.sdk.deleteTable(tableId);
  }
  async getTablePermission(tableId) {
    console.warn("LuckDB SDK does not support getTablePermission yet");
    return {
      "table|read": true,
      "table|update": true,
      "table|delete": true,
      "record|create": true,
      "record|read": true,
      "record|update": true,
      "record|delete": true,
      "field|create": true,
      "field|read": true,
      "field|update": true,
      "field|delete": true,
      "view|create": true,
      "view|read": true,
      "view|update": true,
      "view|delete": true
    };
  }
  // ==================== Field APIs ====================
  async getFields(tableId) {
    return this.sdk.listFields({ tableId });
  }
  async getField(tableId, fieldId) {
    return this.sdk.getField(fieldId);
  }
  async createField(tableId, data) {
    return this.sdk.createField({
      tableId,
      ...data
    });
  }
  async updateField(tableId, fieldId, data) {
    return this.sdk.updateField(fieldId, data);
  }
  async deleteField(tableId, fieldId) {
    await this.sdk.deleteField(fieldId);
  }
  // ==================== Record APIs ====================
  async getRecords(tableId, params) {
    const result2 = await this.sdk.listRecords({
      tableId,
      ...params
    });
    return {
      data: result2.data || [],
      total: result2.total || 0,
      page: params?.page || 1,
      pageSize: params?.pageSize || 50
    };
  }
  async getRecord(tableId, recordId) {
    return this.sdk.getRecord(recordId);
  }
  async createRecord(tableId, data) {
    return this.sdk.createRecord({
      tableId,
      data: data.fields || data
    });
  }
  async updateRecord(tableId, recordId, fieldId, value) {
    return this.sdk.updateRecord(recordId, {
      data: { [fieldId]: value }
    });
  }
  async deleteRecord(tableId, recordId) {
    await this.sdk.deleteRecord(recordId);
  }
  // ==================== View APIs ====================
  async getViews(tableId) {
    return this.sdk.listViews({ tableId });
  }
  async getView(tableId, viewId) {
    return this.sdk.getView(viewId);
  }
  async createView(tableId, data) {
    return this.sdk.createView({
      tableId,
      ...data
    });
  }
  async updateView(tableId, viewId, data) {
    return this.sdk.updateView(viewId, data);
  }
  async deleteView(tableId, viewId) {
    await this.sdk.deleteView(viewId);
  }
};
var ApiClientAdapter = class {
  constructor(client) {
    this.client = client;
  }
  // 直接代理所有方法到 ApiClient
  async getBases() {
    return this.client.getBases();
  }
  async getBase(id) {
    return this.client.getBase(id);
  }
  async getTables(baseId) {
    return this.client.getTables(baseId);
  }
  async getTable(tableId) {
    return this.client.getTable(tableId);
  }
  async createTable(baseId, data) {
    return this.client.createTable(baseId, data);
  }
  async updateTable(tableId, data) {
    return this.client.updateTable(tableId, data);
  }
  async deleteTable(tableId) {
    return this.client.deleteTable(tableId);
  }
  async getTablePermission(tableId) {
    return this.client.getTablePermission(tableId);
  }
  async getFields(tableId) {
    return this.client.getFields(tableId);
  }
  async getField(tableId, fieldId) {
    return this.client.getField(tableId, fieldId);
  }
  async createField(tableId, data) {
    return this.client.createField(tableId, data);
  }
  async updateField(tableId, fieldId, data) {
    return this.client.updateField(tableId, fieldId, data);
  }
  async deleteField(tableId, fieldId) {
    return this.client.deleteField(tableId, fieldId);
  }
  async getRecords(tableId, params) {
    return this.client.getRecords(tableId, params);
  }
  async getRecord(tableId, recordId) {
    return this.client.getRecord(tableId, recordId);
  }
  async createRecord(tableId, data) {
    return this.client.createRecord(tableId, data);
  }
  async updateRecord(tableId, recordId, fieldId, value) {
    return this.client.updateRecord(tableId, recordId, fieldId, value);
  }
  async deleteRecord(tableId, recordId) {
    return this.client.deleteRecord(tableId, recordId);
  }
  async getViews(tableId) {
    return this.client.getViews(tableId);
  }
  async getView(tableId, viewId) {
    return this.client.getView(tableId, viewId);
  }
  async createView(tableId, data) {
    return this.client.createView(tableId, data);
  }
  async updateView(tableId, viewId, data) {
    return this.client.updateView(tableId, viewId, data);
  }
  async deleteView(tableId, viewId) {
    return this.client.deleteView(tableId, viewId);
  }
};
function createAdapter(sdkOrClient) {
  if ("login" in sdkOrClient && "auth" in sdkOrClient) {
    return new LuckDBAdapter(sdkOrClient);
  }
  return new ApiClientAdapter(sdkOrClient);
}
function isLuckDBSDK(sdkOrClient) {
  return "login" in sdkOrClient && "auth" in sdkOrClient;
}
function isApiClient(sdkOrClient) {
  return "setToken" in sdkOrClient && "clearToken" in sdkOrClient;
}

// ../../packages/aitable/src/context/AppProviders.tsx
var import_jsx_runtime59 = __toESM(require_jsx_runtime(), 1);
var queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      staleTime: 1e3 * 60 * 5,
      // 5 分钟
      retry: 3,
      refetchOnWindowFocus: false
    }
  }
});
function AppProviders({
  baseId,
  tableId,
  viewId,
  wsUrl,
  userId,
  apiClient,
  sdk,
  children
}) {
  const adapter2 = sdk ? createAdapter(sdk) : apiClient ? createAdapter(apiClient) : (() => {
    throw new Error("Either apiClient or sdk must be provided");
  })();
  const legacyApiClient = apiClient || adapter2;
  return (0, import_jsx_runtime59.jsx)(QueryClientProvider, { client: queryClient, children: (0, import_jsx_runtime59.jsx)(SessionProvider, { children: (0, import_jsx_runtime59.jsx)(AppProvider, { children: baseId ? (0, import_jsx_runtime59.jsx)(BaseProvider, { baseId, apiClient: legacyApiClient, children: (0, import_jsx_runtime59.jsx)(
    PermissionProvider,
    {
      baseId,
      tableId,
      apiClient: legacyApiClient,
      children: tableId ? (0, import_jsx_runtime59.jsx)(
        TableProvider,
        {
          baseId,
          tableId,
          apiClient: legacyApiClient,
          children: (0, import_jsx_runtime59.jsx)(
            ViewProvider,
            {
              tableId,
              viewId,
              apiClient: legacyApiClient,
              children: (0, import_jsx_runtime59.jsx)(
                FieldProvider,
                {
                  tableId,
                  apiClient: legacyApiClient,
                  children
                }
              )
            }
          )
        }
      ) : children
    }
  ) }) : children }) }) });
}

// ../../node_modules/axios/lib/helpers/bind.js
function bind2(fn, thisArg) {
  return function wrap2() {
    return fn.apply(thisArg, arguments);
  };
}

// ../../node_modules/axios/lib/utils.js
var { toString: toString3 } = Object.prototype;
var { getPrototypeOf } = Object;
var { iterator, toStringTag } = Symbol;
var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
  const str = toString3.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
var kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
var typeOfTest = (type) => (thing) => typeof thing === type;
var { isArray: isArray4 } = Array;
var isUndefined2 = typeOfTest("undefined");
function isBuffer2(val) {
  return val !== null && !isUndefined2(val) && val.constructor !== null && !isUndefined2(val.constructor) && isFunction2(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
var isArrayBuffer2 = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result2;
  if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
    result2 = ArrayBuffer.isView(val);
  } else {
    result2 = val && val.buffer && isArrayBuffer2(val.buffer);
  }
  return result2;
}
var isString4 = typeOfTest("string");
var isFunction2 = typeOfTest("function");
var isNumber4 = typeOfTest("number");
var isObject4 = (thing) => thing !== null && typeof thing === "object";
var isBoolean4 = (thing) => thing === true || thing === false;
var isPlainObject3 = (val) => {
  if (kindOf(val) !== "object") {
    return false;
  }
  const prototype3 = getPrototypeOf(val);
  return (prototype3 === null || prototype3 === Object.prototype || Object.getPrototypeOf(prototype3) === null) && !(toStringTag in val) && !(iterator in val);
};
var isEmptyObject = (val) => {
  if (!isObject4(val) || isBuffer2(val)) {
    return false;
  }
  try {
    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;
  } catch (e2) {
    return false;
  }
};
var isDate3 = kindOfTest("Date");
var isFile = kindOfTest("File");
var isBlob = kindOfTest("Blob");
var isFileList = kindOfTest("FileList");
var isStream = (val) => isObject4(val) && isFunction2(val.pipe);
var isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction2(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction2(thing.toString) && thing.toString() === "[object FormData]"));
};
var isURLSearchParams = kindOfTest("URLSearchParams");
var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
var trim2 = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach2(obj, fn, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === "undefined") {
    return;
  }
  let i;
  let l2;
  if (typeof obj !== "object") {
    obj = [obj];
  }
  if (isArray4(obj)) {
    for (i = 0, l2 = obj.length; i < l2; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    if (isBuffer2(obj)) {
      return;
    }
    const keys2 = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys2.length;
    let key;
    for (i = 0; i < len; i++) {
      key = keys2[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey3(obj, key) {
  if (isBuffer2(obj)) {
    return null;
  }
  key = key.toLowerCase();
  const keys2 = Object.keys(obj);
  let i = keys2.length;
  let _key;
  while (i-- > 0) {
    _key = keys2[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
var _global = (() => {
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
})();
var isContextDefined = (context) => !isUndefined2(context) && context !== _global;
function merge2() {
  const { caseless, skipUndefined } = isContextDefined(this) && this || {};
  const result2 = {};
  const assignValue2 = (val, key) => {
    const targetKey = caseless && findKey3(result2, key) || key;
    if (isPlainObject3(result2[targetKey]) && isPlainObject3(val)) {
      result2[targetKey] = merge2(result2[targetKey], val);
    } else if (isPlainObject3(val)) {
      result2[targetKey] = merge2({}, val);
    } else if (isArray4(val)) {
      result2[targetKey] = val.slice();
    } else if (!skipUndefined || !isUndefined2(val)) {
      result2[targetKey] = val;
    }
  };
  for (let i = 0, l2 = arguments.length; i < l2; i++) {
    arguments[i] && forEach2(arguments[i], assignValue2);
  }
  return result2;
}
var extend = (a, b2, thisArg, { allOwnKeys } = {}) => {
  forEach2(b2, (val, key) => {
    if (thisArg && isFunction2(val)) {
      a[key] = bind2(val, thisArg);
    } else {
      a[key] = val;
    }
  }, { allOwnKeys });
  return a;
};
var stripBOM = (content) => {
  if (content.charCodeAt(0) === 65279) {
    content = content.slice(1);
  }
  return content;
};
var inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};
var toFlatObject = (sourceObj, destObj, filter3, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter3 !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter3 || filter3(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};
var endsWith2 = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
var toArray2 = (thing) => {
  if (!thing) return null;
  if (isArray4(thing)) return thing;
  let i = thing.length;
  if (!isNumber4(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
};
var isTypedArray2 = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
var forEachEntry = (obj, fn) => {
  const generator = obj && obj[iterator];
  const _iterator = generator.call(obj);
  let result2;
  while ((result2 = _iterator.next()) && !result2.done) {
    const pair = result2.value;
    fn.call(obj, pair[0], pair[1]);
  }
};
var matchAll = (regExp, str) => {
  let matches2;
  const arr = [];
  while ((matches2 = regExp.exec(str)) !== null) {
    arr.push(matches2);
  }
  return arr;
};
var isHTMLForm = kindOfTest("HTMLFormElement");
var toCamelCase2 = (str) => {
  return str.toLowerCase().replace(
    /[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};
var hasOwnProperty26 = (({ hasOwnProperty: hasOwnProperty27 }) => (obj, prop) => hasOwnProperty27.call(obj, prop))(Object.prototype);
var isRegExp2 = kindOfTest("RegExp");
var reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach2(descriptors2, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
var freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (isFunction2(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
      return false;
    }
    const value = obj[name];
    if (!isFunction2(value)) return;
    descriptor.enumerable = false;
    if ("writable" in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      };
    }
  });
};
var toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define2 = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray4(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
  return obj;
};
var noop6 = () => {
};
var toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction2(thing.append) && thing[toStringTag] === "FormData" && thing[iterator]);
}
var toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i) => {
    if (isObject4(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (isBuffer2(source)) {
        return source;
      }
      if (!("toJSON" in source)) {
        stack[i] = source;
        const target = isArray4(source) ? [] : {};
        forEach2(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined2(reducedValue) && (target[key] = reducedValue);
        });
        stack[i] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
var isAsyncFn = kindOfTest("AsyncFunction");
var isThenable = (thing) => thing && (isObject4(thing) || isFunction2(thing)) && isFunction2(thing.then) && isFunction2(thing.catch);
var _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? ((token, callbacks) => {
    _global.addEventListener("message", ({ source, data }) => {
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return (cb) => {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    };
  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
})(
  typeof setImmediate === "function",
  isFunction2(_global.postMessage)
);
var asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
var isIterable = (thing) => thing != null && isFunction2(thing[iterator]);
var utils_default = {
  isArray: isArray4,
  isArrayBuffer: isArrayBuffer2,
  isBuffer: isBuffer2,
  isFormData,
  isArrayBufferView,
  isString: isString4,
  isNumber: isNumber4,
  isBoolean: isBoolean4,
  isObject: isObject4,
  isPlainObject: isPlainObject3,
  isEmptyObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined: isUndefined2,
  isDate: isDate3,
  isFile,
  isBlob,
  isRegExp: isRegExp2,
  isFunction: isFunction2,
  isStream,
  isURLSearchParams,
  isTypedArray: isTypedArray2,
  isFileList,
  forEach: forEach2,
  merge: merge2,
  extend,
  trim: trim2,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith: endsWith2,
  toArray: toArray2,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty: hasOwnProperty26,
  hasOwnProp: hasOwnProperty26,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase: toCamelCase2,
  noop: noop6,
  toFiniteNumber,
  findKey: findKey3,
  global: _global,
  isContextDefined,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap,
  isIterable
};

// ../../node_modules/axios/lib/core/AxiosError.js
function AxiosError(message2, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message2;
  this.name = "AxiosError";
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils_default.inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils_default.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
var prototype = AxiosError.prototype;
var descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, "isAxiosError", { value: true });
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype);
  utils_default.toFlatObject(error, axiosError, function filter3(obj) {
    return obj !== Error.prototype;
  }, (prop) => {
    return prop !== "isAxiosError";
  });
  const msg = error && error.message ? error.message : "Error";
  const errCode = code == null && error ? error.code : code;
  AxiosError.call(axiosError, msg, errCode, config, request, response);
  if (error && axiosError.cause == null) {
    Object.defineProperty(axiosError, "cause", { value: error, configurable: true });
  }
  axiosError.name = error && error.name || "Error";
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
var AxiosError_default = AxiosError;

// ../../node_modules/axios/lib/helpers/null.js
var null_default = null;

// ../../node_modules/axios/lib/helpers/toFormData.js
function isVisitable(thing) {
  return utils_default.isPlainObject(thing) || utils_default.isArray(thing);
}
function removeBrackets(key) {
  return utils_default.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    token = removeBrackets(token);
    return !dots && i ? "[" + token + "]" : token;
  }).join(dots ? "." : "");
}
function isFlatArray(arr) {
  return utils_default.isArray(arr) && !arr.some(isVisitable);
}
var predicates = utils_default.toFlatObject(utils_default, {}, null, function filter2(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData(obj, formData, options) {
  if (!utils_default.isObject(obj)) {
    throw new TypeError("target must be an object");
  }
  formData = formData || new (null_default || FormData)();
  options = utils_default.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    return !utils_default.isUndefined(source[option]);
  });
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
  const useBlob = _Blob && utils_default.isSpecCompliantForm(formData);
  if (!utils_default.isFunction(visitor)) {
    throw new TypeError("visitor must be a function");
  }
  function convertValue(value) {
    if (value === null) return "";
    if (utils_default.isDate(value)) {
      return value.toISOString();
    }
    if (utils_default.isBoolean(value)) {
      return value.toString();
    }
    if (!useBlob && utils_default.isBlob(value)) {
      throw new AxiosError_default("Blob is not supported. Use a Buffer instead.");
    }
    if (utils_default.isArrayBuffer(value) || utils_default.isTypedArray(value)) {
      return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value === "object") {
      if (utils_default.endsWith(key, "{}")) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (utils_default.isArray(value) && isFlatArray(value) || (utils_default.isFileList(value) || utils_default.endsWith(key, "[]")) && (arr = utils_default.toArray(value))) {
        key = removeBrackets(key);
        arr.forEach(function each(el, index3) {
          !(utils_default.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index3, dots) : indexes === null ? key : key + "[]",
            convertValue(el)
          );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path) {
    if (utils_default.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error("Circular reference detected in " + path.join("."));
    }
    stack.push(value);
    utils_default.forEach(value, function each(el, key) {
      const result2 = !(utils_default.isUndefined(el) || el === null) && visitor.call(
        formData,
        el,
        utils_default.isString(key) ? key.trim() : key,
        path,
        exposedHelpers
      );
      if (result2 === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils_default.isObject(obj)) {
    throw new TypeError("data must be an object");
  }
  build(obj);
  return formData;
}
var toFormData_default = toFormData;

// ../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js
function encode(str) {
  const charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match2) {
    return charMap[match2];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData_default(params, this, options);
}
var prototype2 = AxiosURLSearchParams.prototype;
prototype2.append = function append(name, value) {
  this._pairs.push([name, value]);
};
prototype2.toString = function toString4(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
var AxiosURLSearchParams_default = AxiosURLSearchParams;

// ../../node_modules/axios/lib/helpers/buildURL.js
function encode2(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+");
}
function buildURL(url, params, options) {
  if (!params) {
    return url;
  }
  const _encode = options && options.encode || encode2;
  if (utils_default.isFunction(options)) {
    options = {
      serialize: options
    };
  }
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils_default.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams_default(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url;
}

// ../../node_modules/axios/lib/core/InterceptorManager.js
var InterceptorManager = class {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils_default.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
};
var InterceptorManager_default = InterceptorManager;

// ../../node_modules/axios/lib/defaults/transitional.js
var transitional_default = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};

// ../../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js
var URLSearchParams_default = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams_default;

// ../../node_modules/axios/lib/platform/browser/classes/FormData.js
var FormData_default = typeof FormData !== "undefined" ? FormData : null;

// ../../node_modules/axios/lib/platform/browser/classes/Blob.js
var Blob_default = typeof Blob !== "undefined" ? Blob : null;

// ../../node_modules/axios/lib/platform/browser/index.js
var browser_default = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams_default,
    FormData: FormData_default,
    Blob: Blob_default
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
};

// ../../node_modules/axios/lib/platform/common/utils.js
var utils_exports = {};
__export(utils_exports, {
  hasBrowserEnv: () => hasBrowserEnv,
  hasStandardBrowserEnv: () => hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv: () => hasStandardBrowserWebWorkerEnv,
  navigator: () => _navigator,
  origin: () => origin
});
var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
var _navigator = typeof navigator === "object" && navigator || void 0;
var hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
var hasStandardBrowserWebWorkerEnv = (() => {
  return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
})();
var origin = hasBrowserEnv && window.location.href || "http://localhost";

// ../../node_modules/axios/lib/platform/index.js
var platform_default = {
  ...utils_exports,
  ...browser_default
};

// ../../node_modules/axios/lib/helpers/toURLEncodedForm.js
function toURLEncodedForm(data, options) {
  return toFormData_default(data, new platform_default.classes.URLSearchParams(), {
    visitor: function(value, key, path, helpers) {
      if (platform_default.isNode && utils_default.isBuffer(value)) {
        this.append(key, value.toString("base64"));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    },
    ...options
  });
}

// ../../node_modules/axios/lib/helpers/formDataToJSON.js
function parsePropPath(name) {
  return utils_default.matchAll(/\w+|\[(\w*)]/g, name).map((match2) => {
    return match2[0] === "[]" ? "" : match2[1] || match2[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys2 = Object.keys(arr);
  let i;
  const len = keys2.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys2[i];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index3) {
    let name = path[index3++];
    if (name === "__proto__") return true;
    const isNumericKey = Number.isFinite(+name);
    const isLast = index3 >= path.length;
    name = !name && utils_default.isArray(target) ? target.length : name;
    if (isLast) {
      if (utils_default.hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }
      return !isNumericKey;
    }
    if (!target[name] || !utils_default.isObject(target[name])) {
      target[name] = [];
    }
    const result2 = buildPath(path, value, target[name], index3);
    if (result2 && utils_default.isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }
    return !isNumericKey;
  }
  if (utils_default.isFormData(formData) && utils_default.isFunction(formData.entries)) {
    const obj = {};
    utils_default.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });
    return obj;
  }
  return null;
}
var formDataToJSON_default = formDataToJSON;

// ../../node_modules/axios/lib/defaults/index.js
function stringifySafely(rawValue, parser, encoder) {
  if (utils_default.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils_default.trim(rawValue);
    } catch (e2) {
      if (e2.name !== "SyntaxError") {
        throw e2;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
var defaults2 = {
  transitional: transitional_default,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || "";
    const hasJSONContentType = contentType.indexOf("application/json") > -1;
    const isObjectPayload = utils_default.isObject(data);
    if (isObjectPayload && utils_default.isHTMLForm(data)) {
      data = new FormData(data);
    }
    const isFormData2 = utils_default.isFormData(data);
    if (isFormData2) {
      return hasJSONContentType ? JSON.stringify(formDataToJSON_default(data)) : data;
    }
    if (utils_default.isArrayBuffer(data) || utils_default.isBuffer(data) || utils_default.isStream(data) || utils_default.isFile(data) || utils_default.isBlob(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (utils_default.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils_default.isURLSearchParams(data)) {
      headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
      return data.toString();
    }
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }
      if ((isFileList2 = utils_default.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        const _FormData = this.env && this.env.FormData;
        return toFormData_default(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType("application/json", false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    const transitional2 = this.transitional || defaults2.transitional;
    const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
    const JSONRequested = this.responseType === "json";
    if (utils_default.isResponse(data) || utils_default.isReadableStream(data)) {
      return data;
    }
    if (data && utils_default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data, this.parseReviver);
      } catch (e2) {
        if (strictJSONParsing) {
          if (e2.name === "SyntaxError") {
            throw AxiosError_default.from(e2, AxiosError_default.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e2;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform_default.classes.FormData,
    Blob: platform_default.classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils_default.forEach(["delete", "get", "head", "post", "put", "patch"], (method2) => {
  defaults2.headers[method2] = {};
});
var defaults_default2 = defaults2;

// ../../node_modules/axios/lib/helpers/parseHeaders.js
var ignoreDuplicateOf = utils_default.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
var parseHeaders_default = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i;
  rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
    i = line.indexOf(":");
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === "set-cookie") {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
    }
  });
  return parsed;
};

// ../../node_modules/axios/lib/core/AxiosHeaders.js
var $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils_default.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens3 = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match2;
  while (match2 = tokensRE.exec(str)) {
    tokens3[match2[1]] = match2[2];
  }
  return tokens3;
}
var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter3, isHeaderNameFilter) {
  if (utils_default.isFunction(filter3)) {
    return filter3.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!utils_default.isString(value)) return;
  if (utils_default.isString(filter3)) {
    return value.indexOf(filter3) !== -1;
  }
  if (utils_default.isRegExp(filter3)) {
    return filter3.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
    return char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  const accessorName = utils_default.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
var AxiosHeaders = class {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error("header name must be a non-empty string");
      }
      const key = utils_default.findKey(self2, lHeader);
      if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) => utils_default.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    if (utils_default.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if (utils_default.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders_default(header), valueOrRewrite);
    } else if (utils_default.isObject(header) && utils_default.isIterable(header)) {
      let obj = {}, dest, key;
      for (const entry of header) {
        if (!utils_default.isArray(entry)) {
          throw TypeError("Object iterator must return a key-value pair");
        }
        obj[key = entry[0]] = (dest = obj[key]) ? utils_default.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]] : entry[1];
      }
      setHeaders(obj, valueOrRewrite);
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }
    return this;
  }
  get(header, parser) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils_default.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils_default.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils_default.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return false;
  }
  delete(header, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils_default.findKey(self2, _header);
        if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils_default.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }
    return deleted;
  }
  clear(matcher) {
    const keys2 = Object.keys(this);
    let i = keys2.length;
    let deleted = false;
    while (i--) {
      const key = keys2[i];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format3) {
    const self2 = this;
    const headers = {};
    utils_default.forEach(this, (value, header) => {
      const key = utils_default.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header];
        return;
      }
      const normalized = format3 ? formatHeader(header) : String(header).trim();
      if (normalized !== header) {
        delete self2[header];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils_default.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils_default.isArray(value) ? value.join(", ") : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
  }
  getSetCookie() {
    return this.get("set-cookie") || [];
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header) {
    const internals = this[$internals] = this[$internals] = {
      accessors: {}
    };
    const accessors = internals.accessors;
    const prototype3 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype3, _header);
        accessors[lHeader] = true;
      }
    }
    utils_default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
    return this;
  }
};
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils_default.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils_default.freezeMethods(AxiosHeaders);
var AxiosHeaders_default = AxiosHeaders;

// ../../node_modules/axios/lib/core/transformData.js
function transformData(fns, response) {
  const config = this || defaults_default2;
  const context = response || config;
  const headers = AxiosHeaders_default.from(context.headers);
  let data = context.data;
  utils_default.forEach(fns, function transform2(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
  });
  headers.normalize();
  return data;
}

// ../../node_modules/axios/lib/cancel/isCancel.js
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

// ../../node_modules/axios/lib/cancel/CanceledError.js
function CanceledError(message2, config, request) {
  AxiosError_default.call(this, message2 == null ? "canceled" : message2, AxiosError_default.ERR_CANCELED, config, request);
  this.name = "CanceledError";
}
utils_default.inherits(CanceledError, AxiosError_default, {
  __CANCEL__: true
});
var CanceledError_default = CanceledError;

// ../../node_modules/axios/lib/core/settle.js
function settle(resolve, reject2, response) {
  const validateStatus2 = response.config.validateStatus;
  if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
    resolve(response);
  } else {
    reject2(new AxiosError_default(
      "Request failed with status code " + response.status,
      [AxiosError_default.ERR_BAD_REQUEST, AxiosError_default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}

// ../../node_modules/axios/lib/helpers/parseProtocol.js
function parseProtocol(url) {
  const match2 = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match2 && match2[1] || "";
}

// ../../node_modules/axios/lib/helpers/speedometer.js
function speedometer(samplesCount, min3) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head2 = 0;
  let tail2 = 0;
  let firstSampleTS;
  min3 = min3 !== void 0 ? min3 : 1e3;
  return function push(chunkLength) {
    const now2 = Date.now();
    const startedAt = timestamps[tail2];
    if (!firstSampleTS) {
      firstSampleTS = now2;
    }
    bytes[head2] = chunkLength;
    timestamps[head2] = now2;
    let i = tail2;
    let bytesCount = 0;
    while (i !== head2) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }
    head2 = (head2 + 1) % samplesCount;
    if (head2 === tail2) {
      tail2 = (tail2 + 1) % samplesCount;
    }
    if (now2 - firstSampleTS < min3) {
      return;
    }
    const passed = startedAt && now2 - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
var speedometer_default = speedometer;

// ../../node_modules/axios/lib/helpers/throttle.js
function throttle3(fn, freq) {
  let timestamp = 0;
  let threshold2 = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke2 = (args, now2 = Date.now()) => {
    timestamp = now2;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn(...args);
  };
  const throttled = (...args) => {
    const now2 = Date.now();
    const passed = now2 - timestamp;
    if (passed >= threshold2) {
      invoke2(args, now2);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke2(lastArgs);
        }, threshold2 - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke2(lastArgs);
  return [throttled, flush];
}
var throttle_default2 = throttle3;

// ../../node_modules/axios/lib/helpers/progressEventReducer.js
var progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer_default(50, 250);
  return throttle_default2((e2) => {
    const loaded = e2.loaded;
    const total = e2.lengthComputable ? e2.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange3 = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange3 ? (total - loaded) / rate : void 0,
      event: e2,
      lengthComputable: total != null,
      [isDownloadStream ? "download" : "upload"]: true
    };
    listener(data);
  }, freq);
};
var progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
};
var asyncDecorator = (fn) => (...args) => utils_default.asap(() => fn(...args));

// ../../node_modules/axios/lib/helpers/isURLSameOrigin.js
var isURLSameOrigin_default = platform_default.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url) => {
  url = new URL(url, platform_default.origin);
  return origin2.protocol === url.protocol && origin2.host === url.host && (isMSIE || origin2.port === url.port);
})(
  new URL(platform_default.origin),
  platform_default.navigator && /(msie|trident)/i.test(platform_default.navigator.userAgent)
) : () => true;

// ../../node_modules/axios/lib/helpers/cookies.js
var cookies_default = platform_default.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + "=" + encodeURIComponent(value)];
      utils_default.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
      utils_default.isString(path) && cookie.push("path=" + path);
      utils_default.isString(domain) && cookie.push("domain=" + domain);
      secure === true && cookie.push("secure");
      document.cookie = cookie.join("; ");
    },
    read(name) {
      const match2 = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match2 ? decodeURIComponent(match2[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);

// ../../node_modules/axios/lib/helpers/isAbsoluteURL.js
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}

// ../../node_modules/axios/lib/helpers/combineURLs.js
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}

// ../../node_modules/axios/lib/core/buildFullPath.js
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
  let isRelativeUrl = !isAbsoluteURL(requestedURL);
  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}

// ../../node_modules/axios/lib/core/mergeConfig.js
var headersToObject = (thing) => thing instanceof AxiosHeaders_default ? { ...thing } : thing;
function mergeConfig(config1, config2) {
  config2 = config2 || {};
  const config = {};
  function getMergedValue(target, source, prop, caseless) {
    if (utils_default.isPlainObject(target) && utils_default.isPlainObject(source)) {
      return utils_default.merge.call({ caseless }, target, source);
    } else if (utils_default.isPlainObject(source)) {
      return utils_default.merge({}, source);
    } else if (utils_default.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a, b2, prop, caseless) {
    if (!utils_default.isUndefined(b2)) {
      return getMergedValue(a, b2, prop, caseless);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a, prop, caseless);
    }
  }
  function valueFromConfig2(a, b2) {
    if (!utils_default.isUndefined(b2)) {
      return getMergedValue(void 0, b2);
    }
  }
  function defaultToConfig2(a, b2) {
    if (!utils_default.isUndefined(b2)) {
      return getMergedValue(void 0, b2);
    } else if (!utils_default.isUndefined(a)) {
      return getMergedValue(void 0, a);
    }
  }
  function mergeDirectKeys(a, b2, prop) {
    if (prop in config2) {
      return getMergedValue(a, b2);
    } else if (prop in config1) {
      return getMergedValue(void 0, a);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b2, prop) => mergeDeepProperties(headersToObject(a), headersToObject(b2), prop, true)
  };
  utils_default.forEach(Object.keys({ ...config1, ...config2 }), function computeConfigValue(prop) {
    const merge3 = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge3(config1[prop], config2[prop], prop);
    utils_default.isUndefined(configValue) && merge3 !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
}

// ../../node_modules/axios/lib/helpers/resolveConfig.js
var resolveConfig_default = (config) => {
  const newConfig = mergeConfig({}, config);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
  newConfig.headers = headers = AxiosHeaders_default.from(headers);
  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);
  if (auth) {
    headers.set(
      "Authorization",
      "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
    );
  }
  if (utils_default.isFormData(data)) {
    if (platform_default.hasStandardBrowserEnv || platform_default.hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(void 0);
    } else if (utils_default.isFunction(data.getHeaders)) {
      const formHeaders = data.getHeaders();
      const allowedHeaders = ["content-type", "content-length"];
      Object.entries(formHeaders).forEach(([key, val]) => {
        if (allowedHeaders.includes(key.toLowerCase())) {
          headers.set(key, val);
        }
      });
    }
  }
  if (platform_default.hasStandardBrowserEnv) {
    withXSRFToken && utils_default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin_default(newConfig.url)) {
      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies_default.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};

// ../../node_modules/axios/lib/adapters/xhr.js
var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
var xhr_default = isXHRAdapterSupported && function(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject2) {
    const _config = resolveConfig_default(config);
    let requestData = _config.data;
    const requestHeaders = AxiosHeaders_default.from(_config.headers).normalize();
    let { responseType, onUploadProgress, onDownloadProgress } = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload();
      flushDownload && flushDownload();
      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener("abort", onCanceled);
    }
    let request = new XMLHttpRequest();
    request.open(_config.method.toUpperCase(), _config.url, true);
    request.timeout = _config.timeout;
    function onloadend() {
      if (!request) {
        return;
      }
      const responseHeaders = AxiosHeaders_default.from(
        "getAllResponseHeaders" in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject2(err);
        done();
      }, response);
      request = null;
    }
    if ("onloadend" in request) {
      request.onloadend = onloadend;
    } else {
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
          return;
        }
        setTimeout(onloadend);
      };
    }
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject2(new AxiosError_default("Request aborted", AxiosError_default.ECONNABORTED, config, request));
      request = null;
    };
    request.onerror = function handleError(event) {
      const msg = event && event.message ? event.message : "Network Error";
      const err = new AxiosError_default(msg, AxiosError_default.ERR_NETWORK, config, request);
      err.event = event || null;
      reject2(err);
      request = null;
    };
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
      const transitional2 = _config.transitional || transitional_default;
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject2(new AxiosError_default(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
        config,
        request
      ));
      request = null;
    };
    requestData === void 0 && requestHeaders.setContentType(null);
    if ("setRequestHeader" in request) {
      utils_default.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }
    if (!utils_default.isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }
    if (responseType && responseType !== "json") {
      request.responseType = _config.responseType;
    }
    if (onDownloadProgress) {
      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
      request.addEventListener("progress", downloadThrottled);
    }
    if (onUploadProgress && request.upload) {
      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
      request.upload.addEventListener("progress", uploadThrottled);
      request.upload.addEventListener("loadend", flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      onCanceled = (cancel) => {
        if (!request) {
          return;
        }
        reject2(!cancel || cancel.type ? new CanceledError_default(null, config, request) : cancel);
        request.abort();
        request = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
      }
    }
    const protocol = parseProtocol(_config.url);
    if (protocol && platform_default.protocols.indexOf(protocol) === -1) {
      reject2(new AxiosError_default("Unsupported protocol " + protocol + ":", AxiosError_default.ERR_BAD_REQUEST, config));
      return;
    }
    request.send(requestData || null);
  });
};

// ../../node_modules/axios/lib/helpers/composeSignals.js
var composeSignals = (signals, timeout) => {
  const { length } = signals = signals ? signals.filter(Boolean) : [];
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof AxiosError_default ? err : new CanceledError_default(err instanceof Error ? err.message : err));
      }
    };
    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new AxiosError_default(`timeout ${timeout} of ms exceeded`, AxiosError_default.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils_default.asap(unsubscribe);
    return signal;
  }
};
var composeSignals_default = composeSignals;

// ../../node_modules/axios/lib/helpers/trackStream.js
var streamChunk = function* (chunk2, chunkSize) {
  let len = chunk2.byteLength;
  if (!chunkSize || len < chunkSize) {
    yield chunk2;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk2.slice(pos, end);
    pos = end;
  }
};
var readBytes = async function* (iterable, chunkSize) {
  for await (const chunk2 of readStream(iterable)) {
    yield* streamChunk(chunk2, chunkSize);
  }
};
var readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }
  const reader = stream.getReader();
  try {
    for (; ; ) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
var trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator2 = readBytes(stream, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e2) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e2);
    }
  };
  return new ReadableStream({
    async pull(controller) {
      try {
        const { done: done2, value } = await iterator2.next();
        if (done2) {
          _onFinish();
          controller.close();
          return;
        }
        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator2.return();
    }
  }, {
    highWaterMark: 2
  });
};

// ../../node_modules/axios/lib/adapters/fetch.js
var DEFAULT_CHUNK_SIZE = 64 * 1024;
var { isFunction: isFunction3 } = utils_default;
var globalFetchAPI = (({ Request, Response }) => ({
  Request,
  Response
}))(utils_default.global);
var {
  ReadableStream: ReadableStream2,
  TextEncoder
} = utils_default.global;
var test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e2) {
    return false;
  }
};
var factory = (env) => {
  env = utils_default.merge.call({
    skipUndefined: true
  }, globalFetchAPI, env);
  const { fetch: envFetch, Request, Response } = env;
  const isFetchSupported = envFetch ? isFunction3(envFetch) : typeof fetch === "function";
  const isRequestSupported = isFunction3(Request);
  const isResponseSupported = isFunction3(Response);
  if (!isFetchSupported) {
    return false;
  }
  const isReadableStreamSupported = isFetchSupported && isFunction3(ReadableStream2);
  const encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Request(str).arrayBuffer()));
  const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {
    let duplexAccessed = false;
    const hasContentType = new Request(platform_default.origin, {
      body: new ReadableStream2(),
      method: "POST",
      get duplex() {
        duplexAccessed = true;
        return "half";
      }
    }).headers.has("Content-Type");
    return duplexAccessed && !hasContentType;
  });
  const supportsResponseStream = isResponseSupported && isReadableStreamSupported && test(() => utils_default.isReadableStream(new Response("").body));
  const resolvers = {
    stream: supportsResponseStream && ((res) => res.body)
  };
  isFetchSupported && (() => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
      !resolvers[type] && (resolvers[type] = (res, config) => {
        let method2 = res && res[type];
        if (method2) {
          return method2.call(res);
        }
        throw new AxiosError_default(`Response type '${type}' is not supported`, AxiosError_default.ERR_NOT_SUPPORT, config);
      });
    });
  })();
  const getBodyLength = async (body) => {
    if (body == null) {
      return 0;
    }
    if (utils_default.isBlob(body)) {
      return body.size;
    }
    if (utils_default.isSpecCompliantForm(body)) {
      const _request = new Request(platform_default.origin, {
        method: "POST",
        body
      });
      return (await _request.arrayBuffer()).byteLength;
    }
    if (utils_default.isArrayBufferView(body) || utils_default.isArrayBuffer(body)) {
      return body.byteLength;
    }
    if (utils_default.isURLSearchParams(body)) {
      body = body + "";
    }
    if (utils_default.isString(body)) {
      return (await encodeText(body)).byteLength;
    }
  };
  const resolveBodyLength = async (headers, body) => {
    const length = utils_default.toFiniteNumber(headers.getContentLength());
    return length == null ? getBodyLength(body) : length;
  };
  return async (config) => {
    let {
      url,
      method: method2,
      data,
      signal,
      cancelToken,
      timeout,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = "same-origin",
      fetchOptions
    } = resolveConfig_default(config);
    let _fetch = envFetch || fetch;
    responseType = responseType ? (responseType + "").toLowerCase() : "text";
    let composedSignal = composeSignals_default([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
    let request = null;
    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
      composedSignal.unsubscribe();
    });
    let requestContentLength;
    try {
      if (onUploadProgress && supportsRequestStream && method2 !== "get" && method2 !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
        let _request = new Request(url, {
          method: "POST",
          body: data,
          duplex: "half"
        });
        let contentTypeHeader;
        if (utils_default.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
          headers.setContentType(contentTypeHeader);
        }
        if (_request.body) {
          const [onProgress, flush] = progressEventDecorator(
            requestContentLength,
            progressEventReducer(asyncDecorator(onUploadProgress))
          );
          data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
        }
      }
      if (!utils_default.isString(withCredentials)) {
        withCredentials = withCredentials ? "include" : "omit";
      }
      const isCredentialsSupported = isRequestSupported && "credentials" in Request.prototype;
      const resolvedOptions = {
        ...fetchOptions,
        signal: composedSignal,
        method: method2.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data,
        duplex: "half",
        credentials: isCredentialsSupported ? withCredentials : void 0
      };
      request = isRequestSupported && new Request(url, resolvedOptions);
      let response = await (isRequestSupported ? _fetch(request, fetchOptions) : _fetch(url, resolvedOptions));
      const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
      if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
        const options = {};
        ["status", "statusText", "headers"].forEach((prop) => {
          options[prop] = response[prop];
        });
        const responseContentLength = utils_default.toFiniteNumber(response.headers.get("content-length"));
        const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
          responseContentLength,
          progressEventReducer(asyncDecorator(onDownloadProgress), true)
        ) || [];
        response = new Response(
          trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
            flush && flush();
            unsubscribe && unsubscribe();
          }),
          options
        );
      }
      responseType = responseType || "text";
      let responseData = await resolvers[utils_default.findKey(resolvers, responseType) || "text"](response, config);
      !isStreamResponse && unsubscribe && unsubscribe();
      return await new Promise((resolve, reject2) => {
        settle(resolve, reject2, {
          data: responseData,
          headers: AxiosHeaders_default.from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request
        });
      });
    } catch (err) {
      unsubscribe && unsubscribe();
      if (err && err.name === "TypeError" && /Load failed|fetch/i.test(err.message)) {
        throw Object.assign(
          new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config, request),
          {
            cause: err.cause || err
          }
        );
      }
      throw AxiosError_default.from(err, err && err.code, config, request);
    }
  };
};
var seedCache = /* @__PURE__ */ new Map();
var getFetch = (config) => {
  let env = config ? config.env : {};
  const { fetch: fetch2, Request, Response } = env;
  const seeds = [
    Request,
    Response,
    fetch2
  ];
  let len = seeds.length, i = len, seed, target, map2 = seedCache;
  while (i--) {
    seed = seeds[i];
    target = map2.get(seed);
    target === void 0 && map2.set(seed, target = i ? /* @__PURE__ */ new Map() : factory(env));
    map2 = target;
  }
  return target;
};
var adapter = getFetch();

// ../../node_modules/axios/lib/adapters/adapters.js
var knownAdapters = {
  http: null_default,
  xhr: xhr_default,
  fetch: {
    get: getFetch
  }
};
utils_default.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, "name", { value });
    } catch (e2) {
    }
    Object.defineProperty(fn, "adapterName", { value });
  }
});
var renderReason = (reason) => `- ${reason}`;
var isResolvedHandle = (adapter2) => utils_default.isFunction(adapter2) || adapter2 === null || adapter2 === false;
var adapters_default = {
  getAdapter: (adapters, config) => {
    adapters = utils_default.isArray(adapters) ? adapters : [adapters];
    const { length } = adapters;
    let nameOrAdapter;
    let adapter2;
    const rejectedReasons = {};
    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;
      adapter2 = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter2 = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
        if (adapter2 === void 0) {
          throw new AxiosError_default(`Unknown adapter '${id}'`);
        }
      }
      if (adapter2 && (utils_default.isFunction(adapter2) || (adapter2 = adapter2.get(config)))) {
        break;
      }
      rejectedReasons[id || "#" + i] = adapter2;
    }
    if (!adapter2) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
      );
      let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError_default(
        `There is no suitable adapter to dispatch the request ` + s,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter2;
  },
  adapters: knownAdapters
};

// ../../node_modules/axios/lib/core/dispatchRequest.js
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new CanceledError_default(null, config);
  }
}
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = AxiosHeaders_default.from(config.headers);
  config.data = transformData.call(
    config,
    config.transformRequest
  );
  if (["post", "put", "patch"].indexOf(config.method) !== -1) {
    config.headers.setContentType("application/x-www-form-urlencoded", false);
  }
  const adapter2 = adapters_default.getAdapter(config.adapter || defaults_default2.adapter, config);
  return adapter2(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );
    response.headers = AxiosHeaders_default.from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders_default.from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}

// ../../node_modules/axios/lib/env/data.js
var VERSION2 = "1.12.2";

// ../../node_modules/axios/lib/helpers/validator.js
var validators = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
  validators[type] = function validator(thing) {
    return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
  };
});
var deprecatedWarnings = {};
validators.transitional = function transitional(validator, version, message2) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION2 + "] Transitional option '" + opt + "'" + desc + (message2 ? ". " + message2 : "");
  }
  return (value, opt, opts) => {
    if (validator === false) {
      throw new AxiosError_default(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError_default.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          " has been deprecated since v" + version + " and will be removed in the near future"
        )
      );
    }
    return validator ? validator(value, opt, opts) : true;
  };
};
validators.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== "object") {
    throw new AxiosError_default("options must be an object", AxiosError_default.ERR_BAD_OPTION_VALUE);
  }
  const keys2 = Object.keys(options);
  let i = keys2.length;
  while (i-- > 0) {
    const opt = keys2[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result2 = value === void 0 || validator(value, opt, options);
      if (result2 !== true) {
        throw new AxiosError_default("option " + opt + " must be " + result2, AxiosError_default.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError_default("Unknown option " + opt, AxiosError_default.ERR_BAD_OPTION);
    }
  }
}
var validator_default = {
  assertOptions,
  validators
};

// ../../node_modules/axios/lib/core/Axios.js
var validators2 = validator_default.validators;
var Axios = class {
  constructor(instanceConfig) {
    this.defaults = instanceConfig || {};
    this.interceptors = {
      request: new InterceptorManager_default(),
      response: new InterceptorManager_default()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};
        Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
            err.stack += "\n" + stack;
          }
        } catch (e2) {
        }
      }
      throw err;
    }
  }
  _request(configOrUrl, config) {
    if (typeof configOrUrl === "string") {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }
    config = mergeConfig(this.defaults, config);
    const { transitional: transitional2, paramsSerializer, headers } = config;
    if (transitional2 !== void 0) {
      validator_default.assertOptions(transitional2, {
        silentJSONParsing: validators2.transitional(validators2.boolean),
        forcedJSONParsing: validators2.transitional(validators2.boolean),
        clarifyTimeoutError: validators2.transitional(validators2.boolean)
      }, false);
    }
    if (paramsSerializer != null) {
      if (utils_default.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator_default.assertOptions(paramsSerializer, {
          encode: validators2.function,
          serialize: validators2.function
        }, true);
      }
    }
    if (config.allowAbsoluteUrls !== void 0) {
    } else if (this.defaults.allowAbsoluteUrls !== void 0) {
      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
    } else {
      config.allowAbsoluteUrls = true;
    }
    validator_default.assertOptions(config, {
      baseUrl: validators2.spelling("baseURL"),
      withXsrfToken: validators2.spelling("withXSRFToken")
    }, true);
    config.method = (config.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils_default.merge(
      headers.common,
      headers[config.method]
    );
    headers && utils_default.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method2) => {
        delete headers[method2];
      }
    );
    config.headers = AxiosHeaders_default.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
        return;
      }
      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise;
    let i = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain2 = [dispatchRequest.bind(this), void 0];
      chain2.unshift(...requestInterceptorChain);
      chain2.push(...responseInterceptorChain);
      len = chain2.length;
      promise = Promise.resolve(config);
      while (i < len) {
        promise = promise.then(chain2[i++], chain2[i++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i = 0;
    len = responseInterceptorChain.length;
    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }
    return promise;
  }
  getUri(config) {
    config = mergeConfig(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
};
utils_default.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method2) {
  Axios.prototype[method2] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method2,
      url,
      data: (config || {}).data
    }));
  };
});
utils_default.forEach(["post", "put", "patch"], function forEachMethodWithData(method2) {
  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig(config || {}, {
        method: method2,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url,
        data
      }));
    };
  }
  Axios.prototype[method2] = generateHTTPMethod();
  Axios.prototype[method2 + "Form"] = generateHTTPMethod(true);
});
var Axios_default = Axios;

// ../../node_modules/axios/lib/cancel/CancelToken.js
var CancelToken = class _CancelToken {
  constructor(executor) {
    if (typeof executor !== "function") {
      throw new TypeError("executor must be a function.");
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token = this;
    this.promise.then((cancel) => {
      if (!token._listeners) return;
      let i = token._listeners.length;
      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject2() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message2, config, request) {
      if (token.reason) {
        return;
      }
      token.reason = new CanceledError_default(message2, config, request);
      resolvePromise(token.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index3 = this._listeners.indexOf(listener);
    if (index3 !== -1) {
      this._listeners.splice(index3, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new _CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
};
var CancelToken_default = CancelToken;

// ../../node_modules/axios/lib/helpers/spread.js
function spread2(callback) {
  return function wrap2(arr) {
    return callback.apply(null, arr);
  };
}

// ../../node_modules/axios/lib/helpers/isAxiosError.js
function isAxiosError(payload) {
  return utils_default.isObject(payload) && payload.isAxiosError === true;
}

// ../../node_modules/axios/lib/helpers/HttpStatusCode.js
var HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});
var HttpStatusCode_default = HttpStatusCode;

// ../../node_modules/axios/lib/axios.js
function createInstance(defaultConfig) {
  const context = new Axios_default(defaultConfig);
  const instance = bind2(Axios_default.prototype.request, context);
  utils_default.extend(instance, Axios_default.prototype, context, { allOwnKeys: true });
  utils_default.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create4(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  };
  return instance;
}
var axios = createInstance(defaults_default2);
axios.Axios = Axios_default;
axios.CanceledError = CanceledError_default;
axios.CancelToken = CancelToken_default;
axios.isCancel = isCancel;
axios.VERSION = VERSION2;
axios.toFormData = toFormData_default;
axios.AxiosError = AxiosError_default;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread2;
axios.isAxiosError = isAxiosError;
axios.mergeConfig = mergeConfig;
axios.AxiosHeaders = AxiosHeaders_default;
axios.formToJSON = (thing) => formDataToJSON_default(utils_default.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters_default.getAdapter;
axios.HttpStatusCode = HttpStatusCode_default;
axios.default = axios;
var axios_default = axios;

// ../../node_modules/axios/index.js
var {
  Axios: Axios2,
  AxiosError: AxiosError2,
  CanceledError: CanceledError2,
  isCancel: isCancel2,
  CancelToken: CancelToken2,
  VERSION: VERSION3,
  all: all2,
  Cancel,
  isAxiosError: isAxiosError2,
  spread: spread3,
  toFormData: toFormData2,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode: HttpStatusCode2,
  formToJSON,
  getAdapter,
  mergeConfig: mergeConfig2
} = axios_default;

// ../../packages/aitable/src/api/client.ts
var ApiClient = class {
  client;
  config;
  constructor(config) {
    this.config = config;
    this.client = axios_default.create({
      baseURL: config.baseURL,
      timeout: config.timeout || 3e4,
      headers: {
        "Content-Type": "application/json",
        ...config.token ? { Authorization: `Bearer ${config.token}` } : {}
      }
    });
    this.setupInterceptors();
  }
  /**
   * Setup axios interceptors
   */
  setupInterceptors() {
    this.client.interceptors.request.use(
      (config) => {
        if (config.params) {
          config.params._t = Date.now();
        } else {
          config.params = { _t: Date.now() };
        }
        return config;
      },
      (error) => Promise.reject(error)
    );
    this.client.interceptors.response.use(
      (response) => response,
      (error) => {
        if (error.response?.status === 401) {
          this.config.onUnauthorized?.();
        }
        this.config.onError?.(error);
        return Promise.reject(error);
      }
    );
  }
  /**
   * Update authorization token
   */
  setToken(token) {
    this.config.token = token;
    this.client.defaults.headers.common["Authorization"] = `Bearer ${token}`;
  }
  /**
   * Clear authorization token
   */
  clearToken() {
    this.config.token = void 0;
    delete this.client.defaults.headers.common["Authorization"];
  }
  // ==================== Base APIs ====================
  /**
   * Get all bases
   */
  async getBases() {
    const response = await this.client.get("/base");
    return response.data;
  }
  /**
   * Get a base by ID
   */
  async getBase(id) {
    const response = await this.client.get(`/base/${id}`);
    return response.data;
  }
  /**
   * Create a new base
   */
  async createBase(data) {
    const response = await this.client.post("/base", data);
    return response.data;
  }
  /**
   * Update a base
   */
  async updateBase(id, data) {
    const response = await this.client.patch(`/base/${id}`, data);
    return response.data;
  }
  /**
   * Delete a base
   */
  async deleteBase(id) {
    await this.client.delete(`/base/${id}`);
  }
  // ==================== Table APIs ====================
  /**
   * Get all tables in a base
   */
  async getTables(baseId) {
    const response = await this.client.get(`/base/${baseId}/table`);
    return response.data;
  }
  /**
   * Get a table by ID
   */
  async getTable(tableId) {
    const response = await this.client.get(`/table/${tableId}`);
    return response.data;
  }
  /**
   * Create a new table
   */
  async createTable(baseId, data) {
    const response = await this.client.post(`/base/${baseId}/table`, data);
    return response.data;
  }
  /**
   * Update a table
   */
  async updateTable(tableId, data) {
    const response = await this.client.patch(`/table/${tableId}`, data);
    return response.data;
  }
  /**
   * Delete a table
   */
  async deleteTable(tableId) {
    await this.client.delete(`/table/${tableId}`);
  }
  /**
   * Get table permissions
   */
  async getTablePermission(tableId) {
    const response = await this.client.get(`/table/${tableId}/permission`);
    return response.data;
  }
  // ==================== Field APIs ====================
  /**
   * Get all fields in a table
   */
  async getFields(tableId) {
    const response = await this.client.get(`/table/${tableId}/field`);
    return response.data;
  }
  /**
   * Get a field by ID
   */
  async getField(tableId, fieldId) {
    const response = await this.client.get(
      `/table/${tableId}/field/${fieldId}`
    );
    return response.data;
  }
  /**
   * Create a new field
   */
  async createField(tableId, data) {
    const response = await this.client.post(`/table/${tableId}/field`, data);
    return response.data;
  }
  /**
   * Update a field
   */
  async updateField(tableId, fieldId, data) {
    const response = await this.client.patch(
      `/table/${tableId}/field/${fieldId}`,
      data
    );
    return response.data;
  }
  /**
   * Delete a field
   */
  async deleteField(tableId, fieldId) {
    await this.client.delete(`/table/${tableId}/field/${fieldId}`);
  }
  /**
   * Convert field type
   */
  async convertField(tableId, fieldId, newType, options) {
    const response = await this.client.patch(
      `/table/${tableId}/field/${fieldId}/convert`,
      { type: newType, options }
    );
    return response.data;
  }
  // ==================== Record APIs ====================
  /**
   * Get records from a table
   */
  async getRecords(tableId, params) {
    const response = await this.client.get(`/table/${tableId}/record`, {
      params
    });
    return response.data;
  }
  /**
   * Get a single record
   */
  async getRecord(tableId, recordId) {
    const response = await this.client.get(
      `/table/${tableId}/record/${recordId}`
    );
    return response.data;
  }
  /**
   * Create a new record
   */
  async createRecord(tableId, data) {
    const response = await this.client.post(`/table/${tableId}/record`, data);
    return response.data;
  }
  /**
   * Update a record
   */
  async updateRecord(tableId, recordId, fieldId, value) {
    const response = await this.client.patch(
      `/table/${tableId}/record/${recordId}`,
      {
        fieldId,
        value
      }
    );
    return response.data;
  }
  /**
   * Batch update records
   */
  async batchUpdateRecords(tableId, updates) {
    const response = await this.client.patch(`/table/${tableId}/record/batch`, {
      records: updates
    });
    return response.data;
  }
  /**
   * Delete a record
   */
  async deleteRecord(tableId, recordId) {
    await this.client.delete(`/table/${tableId}/record/${recordId}`);
  }
  /**
   * Batch delete records
   */
  async batchDeleteRecords(tableId, recordIds) {
    await this.client.delete(`/table/${tableId}/record/batch`, {
      data: { recordIds }
    });
  }
  // ==================== View APIs ====================
  /**
   * Get all views in a table
   */
  async getViews(tableId) {
    const response = await this.client.get(`/table/${tableId}/view`);
    return response.data;
  }
  /**
   * Get a view by ID
   */
  async getView(tableId, viewId) {
    const response = await this.client.get(`/table/${tableId}/view/${viewId}`);
    return response.data;
  }
  /**
   * Create a new view
   */
  async createView(tableId, data) {
    const response = await this.client.post(`/table/${tableId}/view`, data);
    return response.data;
  }
  /**
   * Update a view
   */
  async updateView(tableId, viewId, data) {
    const response = await this.client.patch(
      `/table/${tableId}/view/${viewId}`,
      data
    );
    return response.data;
  }
  /**
   * Delete a view
   */
  async deleteView(tableId, viewId) {
    await this.client.delete(`/table/${tableId}/view/${viewId}`);
  }
  // ==================== Comment APIs ====================
  /**
   * Get comments for a record
   */
  async getComments(tableId, recordId) {
    const response = await this.client.get(
      `/table/${tableId}/record/${recordId}/comment`
    );
    return response.data;
  }
  /**
   * Create a comment
   */
  async createComment(tableId, recordId, data) {
    const response = await this.client.post(
      `/table/${tableId}/record/${recordId}/comment`,
      data
    );
    return response.data;
  }
  /**
   * Update a comment
   */
  async updateComment(tableId, recordId, commentId, data) {
    const response = await this.client.patch(
      `/table/${tableId}/record/${recordId}/comment/${commentId}`,
      data
    );
    return response.data;
  }
  /**
   * Delete a comment
   */
  async deleteComment(tableId, recordId, commentId) {
    await this.client.delete(
      `/table/${tableId}/record/${recordId}/comment/${commentId}`
    );
  }
  // ==================== Utility ====================
  /**
   * Generic GET request
   */
  async get(url, config) {
    const response = await this.client.get(url, config);
    return response.data;
  }
  /**
   * Generic POST request
   */
  async post(url, data, config) {
    const response = await this.client.post(url, data, config);
    return response.data;
  }
  /**
   * Generic PATCH request
   */
  async patch(url, data, config) {
    const response = await this.client.patch(url, data, config);
    return response.data;
  }
  /**
   * Generic DELETE request
   */
  async delete(url, config) {
    const response = await this.client.delete(url, config);
    return response.data;
  }
};

// ../../packages/aitable/src/api/factory.ts
function createApiClient(options) {
  return new ApiClient(options);
}

// ../../packages/aitable/src/model/record/Record.ts
var RecordModel = class _RecordModel {
  id;
  fields;
  createdTime;
  lastModifiedTime;
  createdBy;
  lastModifiedBy;
  constructor(config) {
    this.id = config.id;
    this.fields = config.fields;
    this.createdTime = config.createdTime;
    this.lastModifiedTime = config.lastModifiedTime;
    this.createdBy = config.createdBy;
    this.lastModifiedBy = config.lastModifiedBy;
  }
  /**
   * Get cell value for a field
   */
  getCellValue(fieldId) {
    return this.fields[fieldId];
  }
  /**
   * Set cell value for a field
   */
  setCellValue(fieldId, value) {
    this.fields[fieldId] = value;
  }
  /**
   * Check if a field is locked (computed field)
   */
  isLocked(fieldId) {
    return false;
  }
  /**
   * Update cell value (with validation)
   */
  updateCell(fieldId, value, field) {
    if (field && !field.validate(value)) {
      console.warn(`Invalid value for field ${fieldId}`);
      return false;
    }
    this.setCellValue(fieldId, value);
    this.lastModifiedTime = (/* @__PURE__ */ new Date()).toISOString();
    return true;
  }
  /**
   * Get record as API format
   */
  toApiFormat() {
    return {
      id: this.id,
      fields: this.fields,
      createdTime: this.createdTime,
      lastModifiedTime: this.lastModifiedTime,
      createdBy: this.createdBy,
      lastModifiedBy: this.lastModifiedBy
    };
  }
  /**
   * Clone this record
   */
  clone() {
    return new _RecordModel({
      id: this.id,
      fields: { ...this.fields },
      createdTime: this.createdTime,
      lastModifiedTime: this.lastModifiedTime,
      createdBy: this.createdBy,
      lastModifiedBy: this.lastModifiedBy
    });
  }
};
function createRecordInstance(record) {
  return new RecordModel({
    id: record.id,
    fields: record.fields,
    createdTime: record.createdTime,
    lastModifiedTime: record.lastModifiedTime,
    createdBy: record.createdBy,
    lastModifiedBy: record.lastModifiedBy
  });
}
function createRecordInstances(records) {
  return records.map(createRecordInstance);
}

// ../../packages/aitable/src/model/filter/BaseFilter.ts
var BaseFilter = class {
  field;
  config;
  constructor(field, config) {
    this.field = field;
    this.config = config;
  }
  /**
   * 获取字段值
   */
  getValue(record) {
    return record.getCellValue(this.field.id);
  }
  /**
   * 检查值是否为空
   */
  isEmpty(value) {
    return value === null || value === void 0 || value === "";
  }
  /**
   * 通用 isEmpty 操作符
   */
  matchIsEmpty(record) {
    const value = this.getValue(record);
    return this.isEmpty(value);
  }
  /**
   * 通用 isNotEmpty 操作符
   */
  matchIsNotEmpty(record) {
    return !this.matchIsEmpty(record);
  }
  /**
   * 验证过滤器配置
   */
  validate() {
    const { operator, value } = this.config;
    if (operator === "isEmpty" || operator === "isNotEmpty") {
      return true;
    }
    return value !== void 0 && value !== null;
  }
};

// ../../packages/aitable/src/model/filter/TextFilter.ts
var TextFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "is":
        return this.matchIs(record);
      case "isNot":
        return !this.matchIs(record);
      case "contains":
        return this.matchContains(record);
      case "doesNotContain":
        return !this.matchContains(record);
      case "startsWith":
        return this.matchStartsWith(record);
      case "endsWith":
        return this.matchEndsWith(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "is":
        return `${fieldName} 是 "${value}"`;
      case "isNot":
        return `${fieldName} 不是 "${value}"`;
      case "contains":
        return `${fieldName} 包含 "${value}"`;
      case "doesNotContain":
        return `${fieldName} 不包含 "${value}"`;
      case "startsWith":
        return `${fieldName} 以 "${value}" 开头`;
      case "endsWith":
        return `${fieldName} 以 "${value}" 结尾`;
      default:
        return "";
    }
  }
  matchIs(record) {
    const value = this.getValue(record);
    const filterValue = this.config.value;
    if (this.isEmpty(value)) {
      return false;
    }
    return String(value).toLowerCase() === String(filterValue).toLowerCase();
  }
  matchContains(record) {
    const value = this.getValue(record);
    const filterValue = this.config.value;
    if (this.isEmpty(value)) {
      return false;
    }
    return String(value).toLowerCase().includes(String(filterValue).toLowerCase());
  }
  matchStartsWith(record) {
    const value = this.getValue(record);
    const filterValue = this.config.value;
    if (this.isEmpty(value)) {
      return false;
    }
    return String(value).toLowerCase().startsWith(String(filterValue).toLowerCase());
  }
  matchEndsWith(record) {
    const value = this.getValue(record);
    const filterValue = this.config.value;
    if (this.isEmpty(value)) {
      return false;
    }
    return String(value).toLowerCase().endsWith(String(filterValue).toLowerCase());
  }
};

// ../../packages/aitable/src/model/filter/NumberFilter.ts
var NumberFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "equal":
        return this.matchEqual(record);
      case "notEqual":
        return !this.matchEqual(record);
      case "greaterThan":
        return this.matchGreaterThan(record);
      case "greaterThanOrEqual":
        return this.matchGreaterThanOrEqual(record);
      case "lessThan":
        return this.matchLessThan(record);
      case "lessThanOrEqual":
        return this.matchLessThanOrEqual(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "equal":
        return `${fieldName} = ${value}`;
      case "notEqual":
        return `${fieldName} ≠ ${value}`;
      case "greaterThan":
        return `${fieldName} > ${value}`;
      case "greaterThanOrEqual":
        return `${fieldName} ≥ ${value}`;
      case "lessThan":
        return `${fieldName} < ${value}`;
      case "lessThanOrEqual":
        return `${fieldName} ≤ ${value}`;
      default:
        return "";
    }
  }
  getNumericValue(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return null;
    }
    const num = typeof value === "number" ? value : parseFloat(String(value));
    return isNaN(num) ? null : num;
  }
  matchEqual(record) {
    const value = this.getNumericValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value === filterValue;
  }
  matchGreaterThan(record) {
    const value = this.getNumericValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value > filterValue;
  }
  matchGreaterThanOrEqual(record) {
    const value = this.getNumericValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value >= filterValue;
  }
  matchLessThan(record) {
    const value = this.getNumericValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value < filterValue;
  }
  matchLessThanOrEqual(record) {
    const value = this.getNumericValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value <= filterValue;
  }
};

// ../../packages/aitable/src/model/filter/BooleanFilter.ts
var BooleanFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "is":
        return this.matchIs(record);
      case "isNot":
        return !this.matchIs(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "is":
        return `${fieldName} 是 ${value ? "是" : "否"}`;
      case "isNot":
        return `${fieldName} 不是 ${value ? "是" : "否"}`;
      default:
        return "";
    }
  }
  matchIs(record) {
    const value = this.getValue(record);
    const filterValue = this.config.value;
    const boolValue = Boolean(value);
    const filterBoolValue = Boolean(filterValue);
    return boolValue === filterBoolValue;
  }
};

// ../../packages/aitable/src/model/filter/SelectFilter.ts
var SelectFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "is":
        return this.matchIs(record);
      case "isNot":
        return !this.matchIs(record);
      case "isAnyOf":
        return this.matchIsAnyOf(record);
      case "isNoneOf":
        return this.matchIsNoneOf(record);
      case "hasAnyOf":
        return this.matchHasAnyOf(record);
      case "hasAllOf":
        return this.matchHasAllOf(record);
      case "hasNoneOf":
        return this.matchHasNoneOf(record);
      case "isExactly":
        return this.matchIsExactly(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    const valueArray = Array.isArray(value) ? value : [value];
    const valueText = valueArray.join(", ");
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "is":
        return `${fieldName} 是 "${valueText}"`;
      case "isNot":
        return `${fieldName} 不是 "${valueText}"`;
      case "isAnyOf":
        return `${fieldName} 是以下任一: ${valueText}`;
      case "isNoneOf":
        return `${fieldName} 不是以下任一: ${valueText}`;
      case "hasAnyOf":
        return `${fieldName} 包含任一: ${valueText}`;
      case "hasAllOf":
        return `${fieldName} 包含全部: ${valueText}`;
      case "hasNoneOf":
        return `${fieldName} 不包含任一: ${valueText}`;
      case "isExactly":
        return `${fieldName} 完全匹配: ${valueText}`;
      default:
        return "";
    }
  }
  getValueArray(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return [];
    }
    if (Array.isArray(value)) {
      return value.map((v) => String(v));
    }
    return [String(value)];
  }
  getFilterArray() {
    const { value } = this.config;
    if (Array.isArray(value)) {
      return value.map((v) => String(v));
    }
    return [String(value)];
  }
  matchIs(record) {
    const values2 = this.getValueArray(record);
    const filterValue = String(this.config.value);
    if (values2.length === 0) {
      return false;
    }
    return values2.length === 1 && values2[0] === filterValue;
  }
  matchIsAnyOf(record) {
    const values2 = this.getValueArray(record);
    const filterValues = this.getFilterArray();
    if (values2.length === 0) {
      return false;
    }
    return values2.some((v) => filterValues.includes(v));
  }
  matchIsNoneOf(record) {
    return !this.matchIsAnyOf(record);
  }
  matchHasAnyOf(record) {
    const values2 = this.getValueArray(record);
    const filterValues = this.getFilterArray();
    if (values2.length === 0) {
      return false;
    }
    return values2.some((v) => filterValues.includes(v));
  }
  matchHasAllOf(record) {
    const values2 = this.getValueArray(record);
    const filterValues = this.getFilterArray();
    if (values2.length === 0) {
      return false;
    }
    return filterValues.every((fv) => values2.includes(fv));
  }
  matchHasNoneOf(record) {
    const values2 = this.getValueArray(record);
    const filterValues = this.getFilterArray();
    if (values2.length === 0) {
      return true;
    }
    return !values2.some((v) => filterValues.includes(v));
  }
  matchIsExactly(record) {
    const values2 = this.getValueArray(record);
    const filterValues = this.getFilterArray();
    if (values2.length !== filterValues.length) {
      return false;
    }
    const sortedValues = [...values2].sort();
    const sortedFilterValues = [...filterValues].sort();
    return sortedValues.every((v, i) => v === sortedFilterValues[i]);
  }
};

// ../../packages/aitable/src/model/filter/DateFilter.ts
var DateFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "is":
        return this.matchIs(record);
      case "isNot":
        return !this.matchIs(record);
      case "isBefore":
        return this.matchIsBefore(record);
      case "isAfter":
        return this.matchIsAfter(record);
      case "isOnOrBefore":
        return this.matchIsOnOrBefore(record);
      case "isOnOrAfter":
        return this.matchIsOnOrAfter(record);
      case "isBetween":
        return this.matchIsBetween(record);
      case "isToday":
        return this.matchIsToday(record);
      case "isTomorrow":
        return this.matchIsTomorrow(record);
      case "isYesterday":
        return this.matchIsYesterday(record);
      case "isThisWeek":
        return this.matchIsThisWeek(record);
      case "isLastWeek":
        return this.matchIsLastWeek(record);
      case "isNextWeek":
        return this.matchIsNextWeek(record);
      case "isThisMonth":
        return this.matchIsThisMonth(record);
      case "isLastMonth":
        return this.matchIsLastMonth(record);
      case "isNextMonth":
        return this.matchIsNextMonth(record);
      case "isThisYear":
        return this.matchIsThisYear(record);
      case "isLastYear":
        return this.matchIsLastYear(record);
      case "isNextYear":
        return this.matchIsNextYear(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value, value2 } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "is":
        return `${fieldName} 是 ${this.formatDate(value)}`;
      case "isNot":
        return `${fieldName} 不是 ${this.formatDate(value)}`;
      case "isBefore":
        return `${fieldName} 早于 ${this.formatDate(value)}`;
      case "isAfter":
        return `${fieldName} 晚于 ${this.formatDate(value)}`;
      case "isOnOrBefore":
        return `${fieldName} 不晚于 ${this.formatDate(value)}`;
      case "isOnOrAfter":
        return `${fieldName} 不早于 ${this.formatDate(value)}`;
      case "isBetween":
        return `${fieldName} 在 ${this.formatDate(value)} 和 ${this.formatDate(value2)} 之间`;
      case "isToday":
        return `${fieldName} 是今天`;
      case "isTomorrow":
        return `${fieldName} 是明天`;
      case "isYesterday":
        return `${fieldName} 是昨天`;
      case "isThisWeek":
        return `${fieldName} 是本周`;
      case "isLastWeek":
        return `${fieldName} 是上周`;
      case "isNextWeek":
        return `${fieldName} 是下周`;
      case "isThisMonth":
        return `${fieldName} 是本月`;
      case "isLastMonth":
        return `${fieldName} 是上月`;
      case "isNextMonth":
        return `${fieldName} 是下月`;
      case "isThisYear":
        return `${fieldName} 是今年`;
      case "isLastYear":
        return `${fieldName} 是去年`;
      case "isNextYear":
        return `${fieldName} 是明年`;
      default:
        return "";
    }
  }
  formatDate(value) {
    if (!value) {
      return "";
    }
    const date = new Date(value);
    return date.toLocaleDateString("zh-CN");
  }
  getDateValue(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return null;
    }
    const date = new Date(value);
    return isNaN(date.getTime()) ? null : date;
  }
  getFilterDate() {
    const { value } = this.config;
    if (!value) {
      return null;
    }
    const date = new Date(value);
    return isNaN(date.getTime()) ? null : date;
  }
  isSameDay(date1, date2) {
    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();
  }
  matchIs(record) {
    const value = this.getDateValue(record);
    const filterValue = this.getFilterDate();
    if (!value || !filterValue) {
      return false;
    }
    return this.isSameDay(value, filterValue);
  }
  matchIsBefore(record) {
    const value = this.getDateValue(record);
    const filterValue = this.getFilterDate();
    if (!value || !filterValue) {
      return false;
    }
    return value < filterValue;
  }
  matchIsAfter(record) {
    const value = this.getDateValue(record);
    const filterValue = this.getFilterDate();
    if (!value || !filterValue) {
      return false;
    }
    return value > filterValue;
  }
  matchIsOnOrBefore(record) {
    const value = this.getDateValue(record);
    const filterValue = this.getFilterDate();
    if (!value || !filterValue) {
      return false;
    }
    return value <= filterValue;
  }
  matchIsOnOrAfter(record) {
    const value = this.getDateValue(record);
    const filterValue = this.getFilterDate();
    if (!value || !filterValue) {
      return false;
    }
    return value >= filterValue;
  }
  matchIsBetween(record) {
    const value = this.getDateValue(record);
    const { value: start, value2: end } = this.config;
    if (!value || !start || !end) {
      return false;
    }
    const startDate = new Date(start);
    const endDate = new Date(end);
    return value >= startDate && value <= endDate;
  }
  matchIsToday(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const today = /* @__PURE__ */ new Date();
    return this.isSameDay(value, today);
  }
  matchIsTomorrow(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const tomorrow = /* @__PURE__ */ new Date();
    tomorrow.setDate(tomorrow.getDate() + 1);
    return this.isSameDay(value, tomorrow);
  }
  matchIsYesterday(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const yesterday = /* @__PURE__ */ new Date();
    yesterday.setDate(yesterday.getDate() - 1);
    return this.isSameDay(value, yesterday);
  }
  matchIsThisWeek(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    const startOfWeek2 = new Date(now2);
    startOfWeek2.setDate(now2.getDate() - now2.getDay());
    startOfWeek2.setHours(0, 0, 0, 0);
    const endOfWeek2 = new Date(startOfWeek2);
    endOfWeek2.setDate(startOfWeek2.getDate() + 7);
    return value >= startOfWeek2 && value < endOfWeek2;
  }
  matchIsLastWeek(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    const startOfLastWeek = new Date(now2);
    startOfLastWeek.setDate(now2.getDate() - now2.getDay() - 7);
    startOfLastWeek.setHours(0, 0, 0, 0);
    const endOfLastWeek = new Date(startOfLastWeek);
    endOfLastWeek.setDate(startOfLastWeek.getDate() + 7);
    return value >= startOfLastWeek && value < endOfLastWeek;
  }
  matchIsNextWeek(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    const startOfNextWeek = new Date(now2);
    startOfNextWeek.setDate(now2.getDate() - now2.getDay() + 7);
    startOfNextWeek.setHours(0, 0, 0, 0);
    const endOfNextWeek = new Date(startOfNextWeek);
    endOfNextWeek.setDate(startOfNextWeek.getDate() + 7);
    return value >= startOfNextWeek && value < endOfNextWeek;
  }
  matchIsThisMonth(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    return value.getFullYear() === now2.getFullYear() && value.getMonth() === now2.getMonth();
  }
  matchIsLastMonth(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    const lastMonth = new Date(now2.getFullYear(), now2.getMonth() - 1);
    return value.getFullYear() === lastMonth.getFullYear() && value.getMonth() === lastMonth.getMonth();
  }
  matchIsNextMonth(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    const nextMonth = new Date(now2.getFullYear(), now2.getMonth() + 1);
    return value.getFullYear() === nextMonth.getFullYear() && value.getMonth() === nextMonth.getMonth();
  }
  matchIsThisYear(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    return value.getFullYear() === now2.getFullYear();
  }
  matchIsLastYear(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    return value.getFullYear() === now2.getFullYear() - 1;
  }
  matchIsNextYear(record) {
    const value = this.getDateValue(record);
    if (!value) {
      return false;
    }
    const now2 = /* @__PURE__ */ new Date();
    return value.getFullYear() === now2.getFullYear() + 1;
  }
};

// ../../packages/aitable/src/model/filter/LinkFilter.ts
var LinkFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
      case "hasNoRecord":
        return this.matchHasNoRecord(record);
      case "isNotEmpty":
      case "hasRecord":
        return this.matchHasRecord(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
      case "hasNoRecord":
        return `${fieldName} 无关联记录`;
      case "isNotEmpty":
      case "hasRecord":
        return `${fieldName} 有关联记录`;
      default:
        return "";
    }
  }
  getLinkedRecordIds(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return [];
    }
    if (Array.isArray(value)) {
      return value.filter((v) => v != null).map((v) => String(v));
    }
    return [String(value)];
  }
  matchHasRecord(record) {
    const linkedIds = this.getLinkedRecordIds(record);
    return linkedIds.length > 0;
  }
  matchHasNoRecord(record) {
    return !this.matchHasRecord(record);
  }
};

// ../../packages/aitable/src/model/filter/UserFilter.ts
var UserFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "is":
        return this.matchIs(record);
      case "isNot":
        return !this.matchIs(record);
      case "isAnyOf":
        return this.matchIsAnyOf(record);
      case "isNoneOf":
        return this.matchIsNoneOf(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    const valueArray = Array.isArray(value) ? value : [value];
    const valueText = valueArray.join(", ");
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "is":
        return `${fieldName} 是 "${valueText}"`;
      case "isNot":
        return `${fieldName} 不是 "${valueText}"`;
      case "isAnyOf":
        return `${fieldName} 是以下任一: ${valueText}`;
      case "isNoneOf":
        return `${fieldName} 不是以下任一: ${valueText}`;
      default:
        return "";
    }
  }
  getUserIds(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return [];
    }
    if (Array.isArray(value)) {
      return value.map((v) => String(v));
    }
    return [String(value)];
  }
  getFilterUserIds() {
    const { value } = this.config;
    if (Array.isArray(value)) {
      return value.map((v) => String(v));
    }
    return [String(value)];
  }
  matchIs(record) {
    const userIds = this.getUserIds(record);
    const filterUserId = String(this.config.value);
    if (userIds.length === 0) {
      return false;
    }
    return userIds.length === 1 && userIds[0] === filterUserId;
  }
  matchIsAnyOf(record) {
    const userIds = this.getUserIds(record);
    const filterUserIds = this.getFilterUserIds();
    if (userIds.length === 0) {
      return false;
    }
    return userIds.some((id) => filterUserIds.includes(id));
  }
  matchIsNoneOf(record) {
    return !this.matchIsAnyOf(record);
  }
};

// ../../packages/aitable/src/model/filter/AttachmentFilter.ts
var AttachmentFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 无附件`;
      case "isNotEmpty":
        return `${fieldName} 有附件`;
      default:
        return "";
    }
  }
  matchIsEmpty(record) {
    const value = this.getValue(record);
    if (value === null || value === void 0) {
      return true;
    }
    if (Array.isArray(value)) {
      return value.length === 0;
    }
    return false;
  }
};

// ../../packages/aitable/src/model/filter/RatingFilter.ts
var RatingFilter = class extends BaseFilter {
  constructor(field, config) {
    super(field, config);
  }
  match(record) {
    const { operator } = this.config;
    switch (operator) {
      case "isEmpty":
        return this.matchIsEmpty(record);
      case "isNotEmpty":
        return this.matchIsNotEmpty(record);
      case "equal":
        return this.matchEqual(record);
      case "notEqual":
        return !this.matchEqual(record);
      case "greaterThan":
        return this.matchGreaterThan(record);
      case "greaterThanOrEqual":
        return this.matchGreaterThanOrEqual(record);
      case "lessThan":
        return this.matchLessThan(record);
      case "lessThanOrEqual":
        return this.matchLessThanOrEqual(record);
      default:
        return false;
    }
  }
  getDisplayText() {
    const { operator, value } = this.config;
    const fieldName = this.field.name;
    switch (operator) {
      case "isEmpty":
        return `${fieldName} 为空`;
      case "isNotEmpty":
        return `${fieldName} 不为空`;
      case "equal":
        return `${fieldName} = ${value}`;
      case "notEqual":
        return `${fieldName} ≠ ${value}`;
      case "greaterThan":
        return `${fieldName} > ${value}`;
      case "greaterThanOrEqual":
        return `${fieldName} ≥ ${value}`;
      case "lessThan":
        return `${fieldName} < ${value}`;
      case "lessThanOrEqual":
        return `${fieldName} ≤ ${value}`;
      default:
        return "";
    }
  }
  getRatingValue(record) {
    const value = this.getValue(record);
    if (this.isEmpty(value)) {
      return null;
    }
    const num = typeof value === "number" ? value : parseFloat(String(value));
    return isNaN(num) ? null : num;
  }
  matchEqual(record) {
    const value = this.getRatingValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value === filterValue;
  }
  matchGreaterThan(record) {
    const value = this.getRatingValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value > filterValue;
  }
  matchGreaterThanOrEqual(record) {
    const value = this.getRatingValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value >= filterValue;
  }
  matchLessThan(record) {
    const value = this.getRatingValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value < filterValue;
  }
  matchLessThanOrEqual(record) {
    const value = this.getRatingValue(record);
    const filterValue = Number(this.config.value);
    if (value === null) {
      return false;
    }
    return value <= filterValue;
  }
};

// ../../packages/aitable/src/model/filter/factory.ts
function createFilterInstance(field, config) {
  switch (field.type) {
    case "singleLineText" /* SingleLineText */:
    case "longText" /* LongText */:
      return new TextFilter(field, config);
    case "number" /* Number */:
      return new NumberFilter(field, config);
    case "checkbox" /* Checkbox */:
      return new BooleanFilter(field, config);
    case "singleSelect" /* SingleSelect */:
    case "multipleSelect" /* MultipleSelect */:
      return new SelectFilter(field, config);
    case "date" /* Date */:
    case "createdTime" /* CreatedTime */:
    case "lastModifiedTime" /* LastModifiedTime */:
      return new DateFilter(field, config);
    case "link" /* Link */:
      return new LinkFilter(field, config);
    case "user" /* User */:
    case "createdBy" /* CreatedBy */:
    case "lastModifiedBy" /* LastModifiedBy */:
      return new UserFilter(field, config);
    case "attachment" /* Attachment */:
      return new AttachmentFilter(field, config);
    case "rating" /* Rating */:
      return new RatingFilter(field, config);
    // Formula 和 Rollup 字段根据其返回类型创建过滤器
    case "formula" /* Formula */:
    case "rollup" /* Rollup */:
      return new TextFilter(field, config);
    default:
      return new TextFilter(field, config);
  }
}

// ../../packages/aitable/src/model/filter/FilterManager.ts
var FilterManager = class {
  filterGroup;
  fields;
  constructor(filterGroup, fields) {
    this.filterGroup = filterGroup;
    this.fields = new Map(fields.map((f) => [f.id, f]));
  }
  /**
   * 检查记录是否匹配过滤条件
   */
  match(record) {
    const { conjunction, filters } = this.filterGroup;
    if (filters.length === 0) {
      return true;
    }
    const filterInstances = this.createFilterInstances(filters);
    if (conjunction === "and") {
      return filterInstances.every((filter3) => filter3.match(record));
    } else {
      return filterInstances.some((filter3) => filter3.match(record));
    }
  }
  /**
   * 过滤记录数组
   */
  filter(records) {
    if (this.filterGroup.filters.length === 0) {
      return records;
    }
    return records.filter((record) => this.match(record));
  }
  /**
   * 获取过滤器的显示文本
   */
  getDisplayText() {
    const { conjunction, filters } = this.filterGroup;
    if (filters.length === 0) {
      return "";
    }
    const filterInstances = this.createFilterInstances(filters);
    const texts = filterInstances.map((f) => f.getDisplayText());
    const conjunctionText = conjunction === "and" ? " 且 " : " 或 ";
    return texts.join(conjunctionText);
  }
  /**
   * 添加过滤器
   */
  addFilter(filter3) {
    this.filterGroup.filters.push(filter3);
  }
  /**
   * 移除过滤器
   */
  removeFilter(filterId) {
    this.filterGroup.filters = this.filterGroup.filters.filter(
      (f) => f.id !== filterId
    );
  }
  /**
   * 更新过滤器
   */
  updateFilter(filterId, config) {
    const filter3 = this.filterGroup.filters.find((f) => f.id === filterId);
    if (filter3) {
      filter3.config = { ...filter3.config, ...config };
    }
  }
  /**
   * 清空所有过滤器
   */
  clearFilters() {
    this.filterGroup.filters = [];
  }
  /**
   * 设置连接类型
   */
  setConjunction(conjunction) {
    this.filterGroup.conjunction = conjunction;
  }
  /**
   * 获取过滤器数量
   */
  getFilterCount() {
    return this.filterGroup.filters.length;
  }
  /**
   * 验证所有过滤器
   */
  validate() {
    const filterInstances = this.createFilterInstances(
      this.filterGroup.filters
    );
    return filterInstances.every((filter3) => filter3.validate());
  }
  /**
   * 创建过滤器实例
   */
  createFilterInstances(filters) {
    return filters.map((filterItem) => {
      const field = this.fields.get(filterItem.fieldId);
      if (!field) {
        console.warn(`Field ${filterItem.fieldId} not found`);
        return null;
      }
      return createFilterInstance(field, filterItem.config);
    }).filter((filter3) => filter3 !== null);
  }
};

// ../../packages/aitable/src/model/sort/SortManager.ts
var SortManager = class {
  sortConfigs;
  fields;
  constructor(sortConfigs, fields) {
    this.sortConfigs = sortConfigs;
    this.fields = new Map(fields.map((f) => [f.id, f]));
  }
  /**
   * 对记录数组进行排序
   */
  sort(records) {
    if (this.sortConfigs.length === 0) {
      return records;
    }
    const sortedRecords = [...records];
    sortedRecords.sort((a, b2) => {
      for (const config of this.sortConfigs) {
        const comparison = this.compare(a, b2, config);
        if (comparison !== 0) {
          return comparison;
        }
      }
      return 0;
    });
    return sortedRecords;
  }
  /**
   * 添加排序配置
   */
  addSort(config) {
    this.removeSort(config.fieldId);
    this.sortConfigs.push(config);
  }
  /**
   * 移除排序配置
   */
  removeSort(fieldId) {
    this.sortConfigs = this.sortConfigs.filter((c) => c.fieldId !== fieldId);
  }
  /**
   * 更新排序配置
   */
  updateSort(fieldId, direction) {
    const config = this.sortConfigs.find((c) => c.fieldId === fieldId);
    if (config) {
      config.direction = direction;
    }
  }
  /**
   * 清空所有排序
   */
  clearSorts() {
    this.sortConfigs = [];
  }
  /**
   * 获取排序数量
   */
  getSortCount() {
    return this.sortConfigs.length;
  }
  /**
   * 获取字段的排序方向
   */
  getSortDirection(fieldId) {
    const config = this.sortConfigs.find((c) => c.fieldId === fieldId);
    return config ? config.direction : null;
  }
  /**
   * 获取字段的排序索引（用于显示排序顺序）
   */
  getSortIndex(fieldId) {
    return this.sortConfigs.findIndex((c) => c.fieldId === fieldId);
  }
  /**
   * 比较两条记录的字段值
   */
  compare(a, b2, config) {
    const field = this.fields.get(config.fieldId);
    if (!field) {
      return 0;
    }
    const valueA = a.getCellValue(config.fieldId);
    const valueB = b2.getCellValue(config.fieldId);
    if (valueA == null && valueB == null) {
      return 0;
    }
    if (valueA == null) {
      return 1;
    }
    if (valueB == null) {
      return -1;
    }
    let comparison = 0;
    switch (field.type) {
      case "number" /* Number */:
      case "rating" /* Rating */:
        comparison = this.compareNumbers(valueA, valueB);
        break;
      case "date" /* Date */:
      case "createdTime" /* CreatedTime */:
      case "lastModifiedTime" /* LastModifiedTime */:
        comparison = this.compareDates(valueA, valueB);
        break;
      case "checkbox" /* Checkbox */:
        comparison = this.compareBooleans(valueA, valueB);
        break;
      case "singleSelect" /* SingleSelect */:
      case "multipleSelect" /* MultipleSelect */:
        comparison = this.compareSelects(valueA, valueB, field);
        break;
      case "singleLineText" /* SingleLineText */:
      case "longText" /* LongText */:
      default:
        comparison = this.compareStrings(valueA, valueB);
        break;
    }
    return config.direction === "asc" ? comparison : -comparison;
  }
  /**
   * 比较数字
   */
  compareNumbers(a, b2) {
    const numA = typeof a === "number" ? a : parseFloat(String(a));
    const numB = typeof b2 === "number" ? b2 : parseFloat(String(b2));
    if (isNaN(numA) && isNaN(numB)) {
      return 0;
    }
    if (isNaN(numA)) {
      return 1;
    }
    if (isNaN(numB)) {
      return -1;
    }
    return numA - numB;
  }
  /**
   * 比较日期
   */
  compareDates(a, b2) {
    const dateA = new Date(a);
    const dateB = new Date(b2);
    const timeA = dateA.getTime();
    const timeB = dateB.getTime();
    if (isNaN(timeA) && isNaN(timeB)) {
      return 0;
    }
    if (isNaN(timeA)) {
      return 1;
    }
    if (isNaN(timeB)) {
      return -1;
    }
    return timeA - timeB;
  }
  /**
   * 比较布尔值
   */
  compareBooleans(a, b2) {
    const boolA = Boolean(a);
    const boolB = Boolean(b2);
    if (boolA === boolB) {
      return 0;
    }
    return boolA ? -1 : 1;
  }
  /**
   * 比较字符串
   */
  compareStrings(a, b2) {
    const strA = String(a).toLowerCase();
    const strB = String(b2).toLowerCase();
    return strA.localeCompare(strB, "zh-CN");
  }
  /**
   * 比较选择字段
   */
  compareSelects(a, b2, field) {
    const options = field.options?.choices || [];
    const optionOrder = new Map(
      options.map((opt, index3) => [opt.id || opt.name, index3])
    );
    const getOptionIndex = (value) => {
      if (value == null) {
        return Infinity;
      }
      if (Array.isArray(value)) {
        if (value.length === 0) {
          return Infinity;
        }
        const firstValue = value[0];
        const index4 = optionOrder.get(firstValue);
        return index4 !== void 0 ? index4 : Infinity;
      }
      const index3 = optionOrder.get(value);
      return index3 !== void 0 ? index3 : Infinity;
    };
    const indexA = getOptionIndex(a);
    const indexB = getOptionIndex(b2);
    return indexA - indexB;
  }
};

// ../../packages/aitable/src/model/group/GroupManager.ts
var GroupManager = class {
  groupConfigs;
  fields;
  collapsedGroups;
  constructor(groupConfigs, fields) {
    this.groupConfigs = groupConfigs;
    this.fields = new Map(fields.map((f) => [f.id, f]));
    this.collapsedGroups = /* @__PURE__ */ new Set();
  }
  /**
   * 对记录进行分组
   */
  group(records) {
    if (this.groupConfigs.length === 0) {
      return [];
    }
    return this.groupRecursive(records, 0);
  }
  /**
   * 获取扁平化的分组记录列表（用于渲染）
   */
  getFlattenedRecords(records) {
    const grouped = this.group(records);
    const flattened = [];
    const flatten3 = (nodes, path = []) => {
      for (const node of nodes) {
        const currentPath = [...path, node.displayValue];
        for (const record of node.records) {
          flattened.push({
            record,
            level: node.level,
            groupPath: currentPath
          });
        }
        if (!this.isCollapsed(node.id) && node.children.length > 0) {
          flatten3(node.children, currentPath);
        }
      }
    };
    flatten3(grouped);
    return flattened;
  }
  /**
   * 获取分组摘要信息
   */
  getGroupSummaries(records) {
    const summaries = /* @__PURE__ */ new Map();
    const grouped = this.group(records);
    const collect = (nodes) => {
      for (const node of nodes) {
        summaries.set(node.id, node.count);
        if (node.children.length > 0) {
          collect(node.children);
        }
      }
    };
    collect(grouped);
    return summaries;
  }
  /**
   * 添加分组配置
   */
  addGroup(config) {
    this.removeGroup(config.fieldId);
    this.groupConfigs.push(config);
  }
  /**
   * 移除分组配置
   */
  removeGroup(fieldId) {
    this.groupConfigs = this.groupConfigs.filter((c) => c.fieldId !== fieldId);
  }
  /**
   * 清空所有分组
   */
  clearGroups() {
    this.groupConfigs = [];
    this.collapsedGroups.clear();
  }
  /**
   * 获取分组数量
   */
  getGroupCount() {
    return this.groupConfigs.length;
  }
  /**
   * 折叠/展开分组
   */
  toggleCollapse(groupId) {
    if (this.collapsedGroups.has(groupId)) {
      this.collapsedGroups.delete(groupId);
    } else {
      this.collapsedGroups.add(groupId);
    }
  }
  /**
   * 折叠指定分组
   */
  collapse(groupId) {
    this.collapsedGroups.add(groupId);
  }
  /**
   * 展开指定分组
   */
  expand(groupId) {
    this.collapsedGroups.delete(groupId);
  }
  /**
   * 检查分组是否折叠
   */
  isCollapsed(groupId) {
    return this.collapsedGroups.has(groupId);
  }
  /**
   * 折叠所有分组
   */
  collapseAll() {
    const grouped = this.group([]);
    const collectIds = (nodes) => {
      for (const node of nodes) {
        this.collapsedGroups.add(node.id);
        if (node.children.length > 0) {
          collectIds(node.children);
        }
      }
    };
    collectIds(grouped);
  }
  /**
   * 展开所有分组
   */
  expandAll() {
    this.collapsedGroups.clear();
  }
  /**
   * 递归分组函数
   */
  groupRecursive(records, level) {
    if (level >= this.groupConfigs.length) {
      return [];
    }
    const config = this.groupConfigs[level];
    const field = this.fields.get(config.fieldId);
    if (!field) {
      console.warn(`Field ${config.fieldId} not found`);
      return [];
    }
    const groups = /* @__PURE__ */ new Map();
    for (const record of records) {
      const value = record.getCellValue(config.fieldId);
      const key = this.getGroupKey(value);
      if (!groups.has(key)) {
        groups.set(key, []);
      }
      groups.get(key).push(record);
    }
    const nodes = [];
    for (const [key, groupRecords] of groups) {
      const value = groupRecords[0]?.getCellValue(config.fieldId);
      const displayValue = this.getDisplayValue(value, field);
      const nodeId = this.generateGroupId(level, key);
      const node = {
        id: nodeId,
        fieldId: config.fieldId,
        value,
        displayValue,
        level,
        records: groupRecords,
        children: this.groupRecursive(groupRecords, level + 1),
        collapsed: this.isCollapsed(nodeId),
        count: groupRecords.length
      };
      nodes.push(node);
    }
    this.sortGroups(nodes, config.direction || "asc");
    return nodes;
  }
  /**
   * 获取分组键
   */
  getGroupKey(value) {
    if (value === null || value === void 0) {
      return "__empty__";
    }
    if (Array.isArray(value)) {
      return value.length > 0 ? String(value[0]) : "__empty__";
    }
    return String(value);
  }
  /**
   * 获取显示值
   */
  getDisplayValue(value, field) {
    if (value === null || value === void 0 || value === "") {
      return "(空)";
    }
    if (Array.isArray(value)) {
      if (value.length === 0) {
        return "(空)";
      }
      return value.join(", ");
    }
    if (field.type === "singleSelect" || field.type === "multipleSelect") {
      const options = field.options?.choices || [];
      const option = options.find((opt) => (opt.id || opt.name) === value);
      if (option) {
        return option.name || String(value);
      }
    }
    if (field.type === "checkbox" /* Checkbox */) {
      return value ? "是" : "否";
    }
    return String(value);
  }
  /**
   * 生成分组 ID
   */
  generateGroupId(level, key) {
    return `group_${level}_${key}`;
  }
  /**
   * 排序分组
   */
  sortGroups(nodes, direction) {
    nodes.sort((a, b2) => {
      if (a.value == null && b2.value == null) {
        return 0;
      }
      if (a.value == null) {
        return 1;
      }
      if (b2.value == null) {
        return -1;
      }
      let comparison = 0;
      if (typeof a.value === "number" && typeof b2.value === "number") {
        comparison = a.value - b2.value;
      } else if (typeof a.value === "boolean" && typeof b2.value === "boolean") {
        comparison = a.value === b2.value ? 0 : a.value ? -1 : 1;
      } else {
        comparison = String(a.value).localeCompare(String(b2.value), "zh-CN");
      }
      return direction === "asc" ? comparison : -comparison;
    });
  }
};

// ../../packages/aitable/src/hooks/useYjsConnection.ts
var import_react213 = __toESM(require_react(), 1);
function useYjsConnection(params) {
  const { documentId, viewId, userId, token, endpoint, debug, baseUrl } = params;
  const [state, setState] = (0, import_react213.useState)("idle");
  const connRef = (0, import_react213.useRef)();
  const connection = (0, import_react213.useMemo)(() => {
    const conn2 = new YjsConnection({
      documentId,
      viewId,
      userId,
      token,
      endpoint,
      debug,
      baseUrl
    });
    connRef.current = conn2;
    return conn2;
  }, [documentId, viewId, userId, token, endpoint, debug, baseUrl]);
  (0, import_react213.useEffect)(() => {
    let mounted = true;
    (async () => {
      setState("connecting");
      try {
        await connection.connect();
        mounted && setState("connected");
      } catch {
        mounted && setState("disconnected");
      }
    })();
    return () => {
      mounted = false;
      try {
        connection.disconnect();
      } catch {
      }
    };
  }, [connection]);
  return {
    state,
    connect: () => connection.connect(),
    disconnect: () => connection.disconnect(),
    onMessage: (handler) => connection.onMessage(handler),
    sendBinary: (data) => connection.sendBinary(data),
    sendJSON: (obj) => connection.sendJSON(obj)
  };
}

// ../../packages/aitable/src/hooks/useTableHeaderSync.ts
var import_react214 = __toESM(require_react(), 1);
function useTableHeaderSync(params) {
  const {
    tableId,
    viewId,
    userId,
    token,
    endpoint,
    debug,
    baseUrl,
    onColumnOrder,
    onColumnWidth
  } = params;
  const { state, onMessage, sendJSON } = useYjsConnection({
    documentId: tableId,
    viewId,
    userId,
    token,
    endpoint,
    debug,
    baseUrl
  });
  (0, import_react214.useEffect)(() => {
    onMessage((data) => {
      if (data instanceof ArrayBuffer) {
        return;
      }
      try {
        const msg = JSON.parse(data);
        if (msg?.type === "column.order" && Array.isArray(msg?.payload)) {
          onColumnOrder && onColumnOrder(msg.payload);
          return;
        }
        if (msg?.type === "column.width" && msg?.payload && typeof msg.payload === "object") {
          onColumnWidth && onColumnWidth(msg.payload);
          return;
        }
      } catch {
      }
    });
  }, [onMessage, onColumnOrder, onColumnWidth]);
  const sendColumnOrder = (0, import_react214.useCallback)(
    (order) => {
      sendJSON({ type: "column.order", document: tableId, payload: order });
    },
    [sendJSON, tableId]
  );
  const sendColumnWidth = (0, import_react214.useCallback)(
    (widths) => {
      sendJSON({ type: "column.width", document: tableId, payload: widths });
    },
    [sendJSON, tableId]
  );
  return {
    state,
    sendColumnOrder,
    sendColumnWidth
  };
}

// ../../packages/aitable/src/hooks/useTableData.ts
var import_react215 = __toESM(require_react(), 1);
function useTableData(options) {
  const {
    baseURL,
    token,
    tableId,
    autoLoad = true,
    limit = 100,
    offset = 0,
    sdk,
    apiClient: externalApiClient
  } = options;
  const [state, setState] = (0, import_react215.useState)({
    table: null,
    fields: [],
    records: [],
    totalRecords: 0,
    loading: false,
    error: null
  });
  const apiClient = (0, import_react215.useMemo)(() => {
    if (externalApiClient) {
      return externalApiClient;
    }
    if (sdk) {
      return createAdapter(sdk);
    }
    if (baseURL) {
      return new ApiClient({
        baseURL,
        token,
        onError: (error) => {
          console.error("API Error:", error);
          setState((prev) => ({
            ...prev,
            error: error.message || "API 请求失败"
          }));
        },
        onUnauthorized: () => {
          console.log("未授权，需要重新登录");
          setState((prev) => ({ ...prev, error: "未授权，请重新登录" }));
        }
      });
    }
    throw new Error("必须提供 baseURL、sdk 或 apiClient 其中之一");
  }, [baseURL, token, sdk, externalApiClient]);
  const loadTableData = (0, import_react215.useCallback)(async () => {
    if (!tableId) return;
    setState((prev) => ({ ...prev, loading: true, error: null }));
    try {
      const [table, fields, recordsResponse] = await Promise.all([
        apiClient.getTable(tableId),
        apiClient.getFields(tableId),
        apiClient.getRecords(tableId, {
          skip: offset,
          take: limit
        })
      ]);
      let recordsData = [];
      if (recordsResponse) {
        if (Array.isArray(recordsResponse)) {
          recordsData = recordsResponse;
        } else if (recordsResponse.data) {
          if (Array.isArray(recordsResponse.data)) {
            recordsData = recordsResponse.data;
          } else if (recordsResponse.data.list && Array.isArray(recordsResponse.data.list)) {
            recordsData = recordsResponse.data.list;
          }
        } else if (recordsResponse.list && Array.isArray(recordsResponse.list)) {
          recordsData = recordsResponse.list;
        }
      }
      const totalRecords = recordsResponse?.total || recordsResponse?.data?.total || recordsData.length;
      setState({
        table,
        fields,
        records: recordsData,
        totalRecords,
        loading: false,
        error: null
      });
      console.log(
        `✅ 表格数据加载完成: ${table.name} (${recordsData.length}/${totalRecords} 条记录)`,
        {
          recordsResponse,
          recordsData: recordsData.slice(0, 2),
          // 只打印前两条
          fieldsCount: fields.length
        }
      );
    } catch (error) {
      console.error("❌ 加载表格数据失败:", error);
      setState((prev) => ({
        ...prev,
        loading: false,
        error: error.message || "加载数据失败"
      }));
    }
  }, [apiClient, tableId, limit, offset]);
  const createRecord = (0, import_react215.useCallback)(
    async (data) => {
      if (!tableId) throw new Error("表格ID不能为空");
      try {
        const newRecord = await apiClient.createRecord(tableId, {
          fields: data
        });
        setState((prev) => ({
          ...prev,
          records: [newRecord, ...prev.records],
          totalRecords: prev.totalRecords + 1
        }));
        console.log("✅ 记录创建成功:", newRecord.id);
        return newRecord;
      } catch (error) {
        console.error("❌ 创建记录失败:", error);
        throw error;
      }
    },
    [apiClient, tableId]
  );
  const updateRecord = (0, import_react215.useCallback)(
    async (recordId, fieldId, value) => {
      if (!tableId) throw new Error("表格ID不能为空");
      try {
        const updatedRecord = await apiClient.updateRecord(
          tableId,
          recordId,
          fieldId,
          value
        );
        setState((prev) => ({
          ...prev,
          records: prev.records.map(
            (record) => record.id === recordId ? updatedRecord : record
          )
        }));
        console.log("✅ 记录更新成功:", recordId);
        return updatedRecord;
      } catch (error) {
        console.error("❌ 更新记录失败:", error);
        throw error;
      }
    },
    [apiClient, tableId]
  );
  const deleteRecord = (0, import_react215.useCallback)(
    async (recordId) => {
      if (!tableId) throw new Error("表格ID不能为空");
      try {
        await apiClient.deleteRecord(tableId, recordId);
        setState((prev) => ({
          ...prev,
          records: prev.records.filter((record) => record.id !== recordId),
          totalRecords: prev.totalRecords - 1
        }));
        console.log("✅ 记录删除成功:", recordId);
      } catch (error) {
        console.error("❌ 删除记录失败:", error);
        throw error;
      }
    },
    [apiClient, tableId]
  );
  const getCellContent = (0, import_react215.useMemo)(() => {
    return createGetCellContent(state.fields, state.records);
  }, [state.fields, state.records]);
  const columns = (0, import_react215.useMemo)(() => {
    return convertFieldsToColumns(state.fields);
  }, [state.fields]);
  (0, import_react215.useEffect)(() => {
    if (autoLoad && tableId) {
      loadTableData();
    }
  }, [autoLoad, tableId, loadTableData]);
  return {
    // 状态
    ...state,
    // 数据
    columns,
    rowCount: state.records.length,
    // 方法
    loadTableData,
    createRecord,
    updateRecord,
    deleteRecord,
    getCellContent,
    // API 客户端（用于高级操作）
    apiClient
  };
}

// ../../packages/aitable/src/components/StandardDataView.tsx
var import_react236 = __toESM(require_react(), 1);

// ../../packages/aitable/src/components/view-header/index.tsx
var import_jsx_runtime60 = __toESM(require_jsx_runtime(), 1);
function ViewHeader({
  title,
  viewType,
  showToolbar = true,
  toolbarItems = [],
  className,
  onViewTypeChange,
  onTitleChange
}) {
  return (0, import_jsx_runtime60.jsxs)(
    "div",
    {
      className: cn2(
        "flex items-center justify-between",
        "px-4 py-3 border-b",
        "bg-white",
        className
      ),
      style: {
        borderColor: tokens.colors.border.subtle
      },
      children: [
        (0, import_jsx_runtime60.jsxs)("div", { className: "flex items-center gap-3", children: [
          (0, import_jsx_runtime60.jsx)(
            "h1",
            {
              className: "text-lg font-semibold",
              style: { color: tokens.colors.text.primary },
              children: title
            }
          ),
          (0, import_jsx_runtime60.jsx)(
            "span",
            {
              className: "px-2 py-1 text-xs rounded-md",
              style: {
                backgroundColor: tokens.colors.primary[50],
                color: tokens.colors.primary[700]
              },
              children: viewType
            }
          )
        ] }),
        showToolbar && (0, import_jsx_runtime60.jsx)("div", { className: "flex items-center gap-2", children: toolbarItems })
      ]
    }
  );
}

// ../../packages/aitable/src/components/field-config/AddFieldDialog.tsx
var import_react216 = __toESM(require_react(), 1);
var import_jsx_runtime61 = __toESM(require_jsx_runtime(), 1);

// ../../packages/aitable/src/components/field-config/AddFieldDialog.v2.tsx
var import_react217 = __toESM(require_react(), 1);
var import_jsx_runtime62 = __toESM(require_jsx_runtime(), 1);
var categoryConfig3 = {
  basic: {
    name: "基础类型",
    icon: FileText,
    color: "#3b82f6"
  },
  select: {
    name: "选择类型",
    icon: List,
    color: "#8b5cf6"
  },
  datetime: {
    name: "日期时间",
    icon: Calendar,
    color: "#06b6d4"
  },
  link: {
    name: "链接类型",
    icon: Link,
    color: "#10b981"
  },
  advanced: {
    name: "高级类型",
    icon: Sparkles,
    color: "#f59e0b"
  },
  collab: {
    name: "协作类型",
    icon: User,
    color: "#ec4899"
  }
};
var fieldTypes3 = [
  // 基础类型
  {
    id: "text",
    name: "单行文本",
    icon: TextAlignStart,
    description: "简短的文本内容",
    example: "如：姓名、标题、标签",
    category: "basic",
    color: "#3b82f6",
    popular: true,
    keywords: ["文本", "text", "单行"]
  },
  {
    id: "longText",
    name: "长文本",
    icon: FileText,
    description: "多行文本，支持换行",
    example: "如：描述、备注、说明",
    category: "basic",
    color: "#10b981",
    popular: true,
    keywords: ["长文本", "textarea", "多行"]
  },
  {
    id: "number",
    name: "数字",
    icon: Hash2,
    description: "数值和计算",
    example: "如：价格、数量、得分",
    category: "basic",
    color: "#f59e0b",
    popular: true,
    keywords: ["数字", "number", "数值"]
  },
  // 选择类型
  {
    id: "singleSelect",
    name: "单选",
    icon: SquareCheckBig,
    description: "从多个选项中选择一个",
    example: "如：状态、优先级、类型",
    category: "select",
    color: "#8b5cf6",
    popular: true,
    keywords: ["单选", "select", "选项"]
  },
  {
    id: "multipleSelect",
    name: "多选",
    icon: List,
    description: "可以选择多个选项",
    example: "如：标签、分类、技能",
    category: "select",
    color: "#ec4899",
    popular: true,
    keywords: ["多选", "multi", "标签"]
  },
  {
    id: "checkbox",
    name: "复选框",
    icon: Check2,
    description: "是/否 二选一",
    example: "如：已完成、是否启用",
    category: "select",
    color: "#84cc16",
    keywords: ["复选框", "checkbox", "是否"]
  },
  // 日期时间
  {
    id: "date",
    name: "日期",
    icon: Calendar,
    description: "日期和时间",
    example: "如：创建时间、截止日期",
    category: "datetime",
    color: "#06b6d4",
    popular: true,
    keywords: ["日期", "date", "时间"]
  },
  {
    id: "duration",
    name: "时长",
    icon: Clock,
    description: "时间段或持续时间",
    example: "如：工时、时长",
    category: "datetime",
    color: "#0ea5e9",
    keywords: ["时长", "duration", "持续"]
  },
  // 链接类型
  {
    id: "link",
    name: "链接",
    icon: Link,
    description: "网址链接",
    example: "如：网站、文档链接",
    category: "link",
    color: "#6366f1",
    keywords: ["链接", "url", "网址"]
  },
  {
    id: "email",
    name: "邮箱",
    icon: Mail,
    description: "电子邮件地址",
    example: "如：联系邮箱",
    category: "link",
    color: "#14b8a6",
    keywords: ["邮箱", "email", "邮件"]
  },
  {
    id: "phone",
    name: "电话",
    icon: Phone,
    description: "电话号码",
    example: "如：手机号、座机",
    category: "link",
    color: "#ef4444",
    keywords: ["电话", "phone", "手机"]
  },
  {
    id: "location",
    name: "地址",
    icon: MapPin,
    description: "地理位置",
    example: "如：公司地址、配送地址",
    category: "link",
    color: "#22c55e",
    keywords: ["地址", "location", "位置"]
  },
  // 高级类型
  {
    id: "rating",
    name: "评分",
    icon: Star,
    description: "星级评分",
    example: "如：满意度、重要性",
    category: "advanced",
    color: "#eab308",
    keywords: ["评分", "rating", "星级"]
  },
  {
    id: "progress",
    name: "进度",
    icon: Clock,
    description: "百分比进度条",
    example: "如：完成度、进展",
    category: "advanced",
    color: "#a855f7",
    keywords: ["进度", "progress", "百分比"]
  },
  // 协作类型
  {
    id: "user",
    name: "成员",
    icon: User,
    description: "选择用户或成员",
    example: "如：负责人、参与者",
    category: "collab",
    color: "#64748b",
    keywords: ["用户", "user", "成员", "人员"]
  },
  {
    id: "attachment",
    name: "附件",
    icon: Image2,
    description: "上传文件和图片",
    example: "如：图片、文档、视频",
    category: "collab",
    color: "#f97316",
    keywords: ["附件", "attachment", "文件", "图片"]
  }
];
function AddFieldDialog({
  isOpen,
  onClose,
  onConfirm
}) {
  const [step, setStep] = (0, import_react217.useState)("selectType");
  const [selectedType, setSelectedType] = (0, import_react217.useState)(null);
  const [fieldName, setFieldName] = (0, import_react217.useState)("");
  const [searchQuery, setSearchQuery] = (0, import_react217.useState)("");
  const [selectedCategory, setSelectedCategory] = (0, import_react217.useState)("all");
  const [fieldConfig, setFieldConfig] = (0, import_react217.useState)({});
  const filteredFieldTypes = (0, import_react217.useMemo)(() => {
    let result2 = fieldTypes3;
    if (selectedCategory === "popular") {
      result2 = result2.filter((type) => type.popular);
    } else if (selectedCategory !== "all") {
      result2 = result2.filter((type) => type.category === selectedCategory);
    }
    if (searchQuery.trim()) {
      const query = searchQuery.toLowerCase();
      result2 = result2.filter(
        (type) => type.name.toLowerCase().includes(query) || type.description.toLowerCase().includes(query) || type.keywords?.some(
          (keyword) => keyword.toLowerCase().includes(query)
        )
      );
    }
    return result2;
  }, [selectedCategory, searchQuery]);
  const resetDialog = () => {
    setStep("selectType");
    setSelectedType(null);
    setFieldName("");
    setSearchQuery("");
    setSelectedCategory("all");
    setFieldConfig({});
  };
  const handleSelectType = (type) => {
    setSelectedType(type);
    setFieldName("");
    let defaultConfig = {};
    if (type.id === "singleSelect" || type.id === "multipleSelect") {
      defaultConfig = { options: [] };
    } else if (type.id === "number") {
      defaultConfig = { format: "number", precision: 0 };
    } else if (type.id === "date") {
      defaultConfig = { includeTime: false, dateFormat: "YYYY-MM-DD" };
    } else if (type.id === "rating") {
      defaultConfig = { maxRating: 5, icon: "star" };
    }
    setFieldConfig(defaultConfig);
    setStep("configure");
  };
  const handleBackToTypeSelection = () => {
    setStep("selectType");
    setSelectedType(null);
  };
  const handleConfirm = () => {
    if (selectedType && fieldName.trim()) {
      onConfirm(fieldName.trim(), selectedType.id, fieldConfig);
      resetDialog();
      onClose();
    }
  };
  const handleClose = () => {
    resetDialog();
    onClose();
  };
  const handleKeyPress = (e2) => {
    if (e2.key === "Escape") {
      if (step === "configure") {
        handleBackToTypeSelection();
      } else {
        handleClose();
      }
    } else if (e2.key === "Enter" && step === "configure") {
      handleConfirm();
    }
  };
  if (!isOpen) return null;
  return (0, import_jsx_runtime62.jsxs)(import_jsx_runtime62.Fragment, { children: [
    (0, import_jsx_runtime62.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: "rgba(0, 0, 0, 0.4)",
          backdropFilter: "blur(4px)",
          zIndex: 60,
          animation: "fadeIn 200ms cubic-bezier(0.4, 0.0, 0.2, 1)"
        },
        onClick: handleClose
      }
    ),
    (0, import_jsx_runtime62.jsx)(
      "div",
      {
        style: {
          position: "fixed",
          top: "50%",
          left: "50%",
          transform: "translate(-50%, -50%)",
          width: step === "selectType" ? "720px" : "560px",
          maxHeight: "85vh",
          backgroundColor: tokens.colors.surface.base,
          borderRadius: "16px",
          boxShadow: "0 24px 48px -12px rgba(0, 0, 0, 0.18), 0 0 1px rgba(0, 0, 0, 0.3)",
          zIndex: 61,
          display: "flex",
          flexDirection: "column",
          overflow: "hidden",
          animation: "slideUp 300ms cubic-bezier(0.16, 1, 0.3, 1)",
          transition: "width 300ms cubic-bezier(0.4, 0.0, 0.2, 1)"
        },
        children: step === "selectType" ? (0, import_jsx_runtime62.jsx)(
          TypeSelectionStep,
          {
            searchQuery,
            onSearchChange: setSearchQuery,
            selectedCategory,
            onCategoryChange: setSelectedCategory,
            filteredTypes: filteredFieldTypes,
            onSelectType: handleSelectType,
            onClose: handleClose
          }
        ) : (0, import_jsx_runtime62.jsx)(
          ConfigurationStep,
          {
            selectedType,
            fieldName,
            onFieldNameChange: setFieldName,
            fieldConfig,
            onFieldConfigChange: setFieldConfig,
            onBack: handleBackToTypeSelection,
            onConfirm: handleConfirm,
            onClose: handleClose,
            onKeyPress: handleKeyPress
          }
        )
      }
    ),
    (0, import_jsx_runtime62.jsx)("style", { children: `
        @keyframes fadeIn {
          from {
            opacity: 0;
          }
          to {
            opacity: 1;
          }
        }

        @keyframes slideUp {
          from {
            opacity: 0;
            transform: translate(-50%, -48%) scale(0.96);
          }
          to {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
          }
        }

        @keyframes slideInStagger {
          from {
            opacity: 0;
            transform: translateY(8px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
      ` })
  ] });
}
function TypeSelectionStep({
  searchQuery,
  onSearchChange,
  selectedCategory,
  onCategoryChange,
  filteredTypes,
  onSelectType,
  onClose
}) {
  const groupedTypes = (0, import_react217.useMemo)(() => {
    const groups = {};
    if (selectedCategory === "all" || selectedCategory === "popular") {
      filteredTypes.forEach((type) => {
        if (!groups[type.category]) {
          groups[type.category] = [];
        }
        groups[type.category].push(type);
      });
    } else {
      groups[selectedCategory] = filteredTypes;
    }
    return groups;
  }, [filteredTypes, selectedCategory]);
  const categories = [
    { id: "all", name: "全部类型" },
    { id: "popular", name: "常用", icon: Star },
    ...Object.entries(categoryConfig3).map(([id, config]) => ({
      id,
      name: config.name,
      icon: config.icon
    }))
  ];
  return (0, import_jsx_runtime62.jsxs)(import_jsx_runtime62.Fragment, { children: [
    (0, import_jsx_runtime62.jsxs)(
      "div",
      {
        style: {
          padding: "24px 24px 20px",
          borderBottom: `1px solid ${tokens.colors.border.subtle}`
        },
        children: [
          (0, import_jsx_runtime62.jsxs)(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center",
                justifyContent: "space-between",
                marginBottom: "16px"
              },
              children: [
                (0, import_jsx_runtime62.jsx)(
                  "h2",
                  {
                    style: {
                      fontSize: "20px",
                      fontWeight: 600,
                      color: tokens.colors.text.primary,
                      margin: 0,
                      letterSpacing: "-0.01em"
                    },
                    children: "选择字段类型"
                  }
                ),
                (0, import_jsx_runtime62.jsx)(
                  "button",
                  {
                    onClick: onClose,
                    style: {
                      padding: "6px",
                      backgroundColor: "transparent",
                      border: "none",
                      borderRadius: "6px",
                      cursor: "pointer",
                      transition: transitions.presets.all,
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center"
                    },
                    onMouseEnter: (e2) => {
                      e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = "transparent";
                    },
                    children: (0, import_jsx_runtime62.jsx)(X2, { size: 20, style: { color: tokens.colors.text.secondary } })
                  }
                )
              ]
            }
          ),
          (0, import_jsx_runtime62.jsxs)("div", { style: { position: "relative" }, children: [
            (0, import_jsx_runtime62.jsx)(
              Search,
              {
                size: 18,
                style: {
                  position: "absolute",
                  left: "12px",
                  top: "50%",
                  transform: "translateY(-50%)",
                  color: tokens.colors.text.tertiary,
                  pointerEvents: "none"
                }
              }
            ),
            (0, import_jsx_runtime62.jsx)(
              "input",
              {
                type: "text",
                value: searchQuery,
                onChange: (e2) => onSearchChange(e2.target.value),
                placeholder: "搜索字段类型...",
                autoFocus: true,
                style: {
                  width: "100%",
                  padding: "10px 16px 10px 40px",
                  fontSize: "14px",
                  color: tokens.colors.text.primary,
                  backgroundColor: tokens.colors.surface.base,
                  border: `1px solid ${tokens.colors.border.subtle}`,
                  borderRadius: "8px",
                  outline: "none",
                  transition: transitions.presets.all,
                  boxSizing: "border-box"
                },
                onFocus: (e2) => {
                  e2.target.style.borderColor = tokens.colors.border.focus;
                  e2.target.style.boxShadow = `0 0 0 3px ${tokens.colors.border.focus}15`;
                },
                onBlur: (e2) => {
                  e2.target.style.borderColor = tokens.colors.border.subtle;
                  e2.target.style.boxShadow = "none";
                }
              }
            )
          ] })
        ]
      }
    ),
    (0, import_jsx_runtime62.jsx)(
      "div",
      {
        style: {
          padding: "16px 24px",
          borderBottom: `1px solid ${tokens.colors.border.subtle}`,
          display: "flex",
          gap: "8px",
          flexWrap: "wrap",
          backgroundColor: tokens.colors.surface.hover
        },
        children: categories.map((category) => {
          const isSelected = selectedCategory === category.id;
          const IconComponent = category.icon;
          return (0, import_jsx_runtime62.jsxs)(
            "button",
            {
              onClick: () => onCategoryChange(category.id),
              style: {
                padding: "6px 12px",
                fontSize: "13px",
                fontWeight: isSelected ? 500 : 400,
                color: isSelected ? tokens.colors.text.primary : tokens.colors.text.secondary,
                backgroundColor: isSelected ? tokens.colors.surface.base : "transparent",
                border: `1px solid ${isSelected ? tokens.colors.border.default : "transparent"}`,
                borderRadius: "6px",
                cursor: "pointer",
                transition: transitions.presets.all,
                display: "flex",
                alignItems: "center",
                gap: "6px",
                boxShadow: isSelected ? elevation.xs : "none"
              },
              onMouseEnter: (e2) => {
                if (!isSelected) {
                  e2.currentTarget.style.backgroundColor = tokens.colors.surface.base;
                }
              },
              onMouseLeave: (e2) => {
                if (!isSelected) {
                  e2.currentTarget.style.backgroundColor = "transparent";
                }
              },
              children: [
                IconComponent && (0, import_jsx_runtime62.jsx)(IconComponent, { size: 14 }),
                category.name
              ]
            },
            category.id
          );
        })
      }
    ),
    (0, import_jsx_runtime62.jsx)(
      "div",
      {
        style: {
          flex: 1,
          overflowY: "auto",
          padding: "8px"
        },
        children: Object.keys(groupedTypes).length === 0 ? (0, import_jsx_runtime62.jsxs)(
          "div",
          {
            style: {
              padding: "48px 24px",
              textAlign: "center",
              color: tokens.colors.text.secondary
            },
            children: [
              (0, import_jsx_runtime62.jsx)(
                Search,
                {
                  size: 48,
                  style: {
                    color: tokens.colors.text.tertiary,
                    marginBottom: "16px"
                  }
                }
              ),
              (0, import_jsx_runtime62.jsx)("div", { style: { fontSize: "14px" }, children: "没有找到匹配的字段类型" }),
              (0, import_jsx_runtime62.jsx)(
                "div",
                {
                  style: {
                    fontSize: "13px",
                    marginTop: "8px",
                    color: tokens.colors.text.tertiary
                  },
                  children: "试试其他关键词"
                }
              )
            ]
          }
        ) : Object.entries(groupedTypes).map(([category, types], groupIndex) => (0, import_jsx_runtime62.jsxs)("div", { style: { marginBottom: "16px" }, children: [
          (selectedCategory === "all" || selectedCategory === "popular") && (0, import_jsx_runtime62.jsxs)(
            "div",
            {
              style: {
                padding: "8px 16px 8px 16px",
                fontSize: "12px",
                fontWeight: 600,
                color: tokens.colors.text.secondary,
                textTransform: "uppercase",
                letterSpacing: "0.05em",
                display: "flex",
                alignItems: "center",
                gap: "8px"
              },
              children: [
                import_react217.default.createElement(
                  categoryConfig3[category].icon,
                  {
                    size: 14
                  }
                ),
                categoryConfig3[category].name
              ]
            }
          ),
          (0, import_jsx_runtime62.jsx)(
            "div",
            {
              style: {
                display: "grid",
                gridTemplateColumns: "repeat(2, 1fr)",
                gap: "8px",
                padding: "0 8px"
              },
              children: types.map((type, index3) => {
                const IconComponent = type.icon;
                return (0, import_jsx_runtime62.jsxs)(
                  "button",
                  {
                    onClick: () => onSelectType(type),
                    style: {
                      padding: "16px",
                      backgroundColor: tokens.colors.surface.base,
                      border: `1px solid ${tokens.colors.border.subtle}`,
                      borderRadius: "10px",
                      cursor: "pointer",
                      textAlign: "left",
                      transition: "all 200ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                      display: "flex",
                      gap: "12px",
                      position: "relative",
                      overflow: "hidden",
                      animation: `slideInStagger 300ms cubic-bezier(0.16, 1, 0.3, 1) ${groupIndex * 100 + index3 * 40}ms both`
                    },
                    onMouseEnter: (e2) => {
                      e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                      e2.currentTarget.style.borderColor = tokens.colors.border.strong;
                      e2.currentTarget.style.transform = "translateY(-2px)";
                      e2.currentTarget.style.boxShadow = elevation.sm;
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = tokens.colors.surface.base;
                      e2.currentTarget.style.borderColor = tokens.colors.border.subtle;
                      e2.currentTarget.style.transform = "translateY(0)";
                      e2.currentTarget.style.boxShadow = "none";
                    },
                    children: [
                      (0, import_jsx_runtime62.jsx)(
                        "div",
                        {
                          style: {
                            width: "40px",
                            height: "40px",
                            borderRadius: "8px",
                            backgroundColor: `${type.color}10`,
                            display: "flex",
                            alignItems: "center",
                            justifyContent: "center",
                            flexShrink: 0
                          },
                          children: (0, import_jsx_runtime62.jsx)(
                            IconComponent,
                            {
                              size: 22,
                              style: { color: type.color }
                            }
                          )
                        }
                      ),
                      (0, import_jsx_runtime62.jsxs)("div", { style: { flex: 1, minWidth: 0 }, children: [
                        (0, import_jsx_runtime62.jsxs)(
                          "div",
                          {
                            style: {
                              fontSize: "14px",
                              fontWeight: 500,
                              color: tokens.colors.text.primary,
                              marginBottom: "4px",
                              display: "flex",
                              alignItems: "center",
                              gap: "6px"
                            },
                            children: [
                              type.name,
                              type.popular && (0, import_jsx_runtime62.jsx)(
                                Star,
                                {
                                  size: 12,
                                  style: {
                                    color: tokens.colors.text.warning,
                                    fill: tokens.colors.text.warning
                                  }
                                }
                              )
                            ]
                          }
                        ),
                        (0, import_jsx_runtime62.jsx)(
                          "div",
                          {
                            style: {
                              fontSize: "12px",
                              color: tokens.colors.text.secondary,
                              lineHeight: "1.4"
                            },
                            children: type.description
                          }
                        )
                      ] }),
                      (0, import_jsx_runtime62.jsx)(
                        ChevronRight2,
                        {
                          size: 18,
                          style: {
                            color: tokens.colors.text.tertiary,
                            flexShrink: 0,
                            opacity: 0,
                            transition: transitions.presets.all
                          },
                          className: "arrow-icon"
                        }
                      )
                    ]
                  },
                  type.id
                );
              })
            }
          )
        ] }, category))
      }
    ),
    (0, import_jsx_runtime62.jsx)("style", { children: `
        button:hover .arrow-icon {
          opacity: 1 !important;
        }
      ` })
  ] });
}
function ConfigurationStep({
  selectedType,
  fieldName,
  onFieldNameChange,
  fieldConfig,
  onFieldConfigChange,
  onBack,
  onConfirm,
  onClose,
  onKeyPress
}) {
  const IconComponent = selectedType.icon;
  const renderFieldConfiguration2 = () => {
    switch (selectedType.id) {
      case "singleSelect":
        return (0, import_jsx_runtime62.jsx)(
          SelectFieldConfiguration,
          {
            config: fieldConfig,
            onChange: onFieldConfigChange,
            isMultiple: false
          }
        );
      case "multipleSelect":
        return (0, import_jsx_runtime62.jsx)(
          SelectFieldConfiguration,
          {
            config: fieldConfig,
            onChange: onFieldConfigChange,
            isMultiple: true
          }
        );
      case "number":
        return (0, import_jsx_runtime62.jsx)(
          NumberFieldConfiguration,
          {
            config: fieldConfig,
            onChange: onFieldConfigChange
          }
        );
      case "date":
        return (0, import_jsx_runtime62.jsx)(
          DateFieldConfiguration,
          {
            config: fieldConfig,
            onChange: onFieldConfigChange
          }
        );
      case "rating":
        return (0, import_jsx_runtime62.jsx)(
          RatingFieldConfiguration,
          {
            config: fieldConfig,
            onChange: onFieldConfigChange
          }
        );
      default:
        return (0, import_jsx_runtime62.jsx)(
          "div",
          {
            style: {
              padding: "16px",
              backgroundColor: tokens.colors.surface.hover,
              borderRadius: "8px",
              fontSize: "13px",
              color: tokens.colors.text.secondary,
              textAlign: "center"
            },
            children: "此字段类型暂无额外配置项"
          }
        );
    }
  };
  return (0, import_jsx_runtime62.jsxs)(import_jsx_runtime62.Fragment, { children: [
    (0, import_jsx_runtime62.jsx)(
      "div",
      {
        style: {
          padding: "24px 24px 20px",
          borderBottom: `1px solid ${tokens.colors.border.subtle}`
        },
        children: (0, import_jsx_runtime62.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
              marginBottom: "16px"
            },
            children: [
              (0, import_jsx_runtime62.jsxs)("div", { style: { display: "flex", alignItems: "center", gap: "12px" }, children: [
                (0, import_jsx_runtime62.jsx)(
                  "button",
                  {
                    onClick: onBack,
                    style: {
                      padding: "6px",
                      backgroundColor: "transparent",
                      border: "none",
                      borderRadius: "6px",
                      cursor: "pointer",
                      transition: transitions.presets.all,
                      display: "flex",
                      alignItems: "center",
                      justifyContent: "center"
                    },
                    onMouseEnter: (e2) => {
                      e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                    },
                    onMouseLeave: (e2) => {
                      e2.currentTarget.style.backgroundColor = "transparent";
                    },
                    children: (0, import_jsx_runtime62.jsx)(
                      ChevronRight2,
                      {
                        size: 20,
                        style: {
                          color: tokens.colors.text.secondary,
                          transform: "rotate(180deg)"
                        }
                      }
                    )
                  }
                ),
                (0, import_jsx_runtime62.jsxs)("div", { style: { display: "flex", alignItems: "center", gap: "10px" }, children: [
                  (0, import_jsx_runtime62.jsx)(
                    "div",
                    {
                      style: {
                        width: "36px",
                        height: "36px",
                        borderRadius: "8px",
                        backgroundColor: `${selectedType.color}10`,
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center"
                      },
                      children: (0, import_jsx_runtime62.jsx)(
                        IconComponent,
                        {
                          size: 20,
                          style: { color: selectedType.color }
                        }
                      )
                    }
                  ),
                  (0, import_jsx_runtime62.jsxs)("div", { children: [
                    (0, import_jsx_runtime62.jsx)(
                      "h2",
                      {
                        style: {
                          fontSize: "18px",
                          fontWeight: 600,
                          color: tokens.colors.text.primary,
                          margin: 0,
                          letterSpacing: "-0.01em"
                        },
                        children: selectedType.name
                      }
                    ),
                    (0, import_jsx_runtime62.jsx)(
                      "div",
                      {
                        style: {
                          fontSize: "12px",
                          color: tokens.colors.text.secondary,
                          marginTop: "2px"
                        },
                        children: selectedType.description
                      }
                    )
                  ] })
                ] })
              ] }),
              (0, import_jsx_runtime62.jsx)(
                "button",
                {
                  onClick: onClose,
                  style: {
                    padding: "6px",
                    backgroundColor: "transparent",
                    border: "none",
                    borderRadius: "6px",
                    cursor: "pointer",
                    transition: transitions.presets.all,
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center"
                  },
                  onMouseEnter: (e2) => {
                    e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                  },
                  onMouseLeave: (e2) => {
                    e2.currentTarget.style.backgroundColor = "transparent";
                  },
                  children: (0, import_jsx_runtime62.jsx)(X2, { size: 20, style: { color: tokens.colors.text.secondary } })
                }
              )
            ]
          }
        )
      }
    ),
    (0, import_jsx_runtime62.jsxs)("div", { style: { flex: 1, overflowY: "auto", padding: "24px" }, children: [
      (0, import_jsx_runtime62.jsxs)("div", { style: { marginBottom: "24px" }, children: [
        (0, import_jsx_runtime62.jsxs)(
          "label",
          {
            style: {
              display: "block",
              fontSize: "13px",
              fontWeight: 500,
              color: tokens.colors.text.primary,
              marginBottom: "8px"
            },
            children: [
              "字段名称 ",
              (0, import_jsx_runtime62.jsx)("span", { style: { color: tokens.colors.text.error }, children: "*" })
            ]
          }
        ),
        (0, import_jsx_runtime62.jsx)(
          "input",
          {
            type: "text",
            value: fieldName,
            onChange: (e2) => onFieldNameChange(e2.target.value),
            onKeyDown: onKeyPress,
            placeholder: `如：${selectedType.example || "请输入字段名称"}`,
            autoFocus: true,
            style: {
              width: "100%",
              padding: "12px 16px",
              fontSize: "14px",
              color: tokens.colors.text.primary,
              backgroundColor: tokens.colors.surface.base,
              border: `2px solid ${tokens.colors.border.subtle}`,
              borderRadius: "8px",
              outline: "none",
              transition: transitions.presets.all,
              boxSizing: "border-box"
            },
            onFocus: (e2) => {
              e2.target.style.borderColor = tokens.colors.border.focus;
              e2.target.style.boxShadow = `0 0 0 3px ${tokens.colors.border.focus}15`;
            },
            onBlur: (e2) => {
              e2.target.style.borderColor = tokens.colors.border.subtle;
              e2.target.style.boxShadow = "none";
            }
          }
        ),
        selectedType.example && (0, import_jsx_runtime62.jsxs)(
          "div",
          {
            style: {
              fontSize: "12px",
              color: tokens.colors.text.tertiary,
              marginTop: "6px"
            },
            children: [
              "💡 示例：",
              selectedType.example
            ]
          }
        )
      ] }),
      renderFieldConfiguration2()
    ] }),
    (0, import_jsx_runtime62.jsxs)(
      "div",
      {
        style: {
          padding: "16px 24px",
          borderTop: `1px solid ${tokens.colors.border.subtle}`,
          display: "flex",
          justifyContent: "flex-end",
          gap: "12px",
          backgroundColor: tokens.colors.surface.hover
        },
        children: [
          (0, import_jsx_runtime62.jsx)(
            "button",
            {
              onClick: onBack,
              style: {
                padding: "10px 18px",
                fontSize: "14px",
                fontWeight: 500,
                color: tokens.colors.text.secondary,
                backgroundColor: "transparent",
                border: `1px solid ${tokens.colors.border.subtle}`,
                borderRadius: "8px",
                cursor: "pointer",
                transition: transitions.presets.all
              },
              onMouseEnter: (e2) => {
                e2.currentTarget.style.backgroundColor = tokens.colors.surface.base;
                e2.currentTarget.style.borderColor = tokens.colors.border.default;
              },
              onMouseLeave: (e2) => {
                e2.currentTarget.style.backgroundColor = "transparent";
                e2.currentTarget.style.borderColor = tokens.colors.border.subtle;
              },
              children: "返回"
            }
          ),
          (0, import_jsx_runtime62.jsx)(
            "button",
            {
              onClick: () => {
                alert("测试按钮被点击了！");
                console.log("🔍 测试按钮被点击");
              },
              style: {
                padding: "10px 24px",
                fontSize: "14px",
                fontWeight: 500,
                color: "white",
                backgroundColor: "red",
                border: "none",
                borderRadius: "8px",
                cursor: "pointer",
                marginRight: "10px"
              },
              children: "测试按钮"
            }
          ),
          (0, import_jsx_runtime62.jsxs)(
            "button",
            {
              onClick: (e2) => {
                e2.preventDefault();
                e2.stopPropagation();
                console.log("🔍 创建字段按钮被点击", {
                  fieldName,
                  fieldNameTrimmed: fieldName.trim(),
                  isDisabled: !fieldName.trim(),
                  buttonElement: e2.target,
                  eventType: e2.type
                });
                alert("按钮被点击了！");
                onConfirm();
              },
              disabled: false,
              style: {
                padding: "10px 24px",
                fontSize: "14px",
                fontWeight: 500,
                color: fieldName.trim() ? tokens.colors.text.inverse : tokens.colors.text.tertiary,
                backgroundColor: fieldName.trim() ? tokens.colors.primary[600] : tokens.colors.surface.disabled,
                border: "none",
                borderRadius: "8px",
                cursor: fieldName.trim() ? "pointer" : "not-allowed",
                transition: transitions.presets.all,
                display: "flex",
                alignItems: "center",
                gap: "8px",
                boxShadow: fieldName.trim() ? elevation.xs : "none"
              },
              onMouseEnter: (e2) => {
                if (fieldName.trim()) {
                  e2.currentTarget.style.backgroundColor = tokens.colors.primary[700];
                  e2.currentTarget.style.boxShadow = elevation.sm;
                  e2.currentTarget.style.transform = "translateY(-1px)";
                }
              },
              onMouseLeave: (e2) => {
                if (fieldName.trim()) {
                  e2.currentTarget.style.backgroundColor = tokens.colors.primary[600];
                  e2.currentTarget.style.boxShadow = elevation.xs;
                  e2.currentTarget.style.transform = "translateY(0)";
                }
              },
              children: [
                (0, import_jsx_runtime62.jsx)(Check2, { size: 16 }),
                "创建字段"
              ]
            }
          )
        ]
      }
    )
  ] });
}

// ../../packages/aitable/src/components/field-config/EditFieldDialog.tsx
var import_react218 = __toESM(require_react(), 1);
var import_jsx_runtime63 = __toESM(require_jsx_runtime(), 1);

// ../../packages/aitable/src/components/field-config/FieldConfigPanel.tsx
var import_react219 = __toESM(require_react(), 1);
var import_jsx_runtime64 = __toESM(require_jsx_runtime(), 1);

// ../../packages/aitable/src/components/field-config/FieldConfigCombobox.tsx
var import_react221 = __toESM(require_react(), 1);

// ../../packages/aitable/src/components/ui/Combobox.tsx
var import_react220 = __toESM(require_react(), 1);
var import_react_dom3 = __toESM(require_react_dom(), 1);
var import_jsx_runtime65 = __toESM(require_jsx_runtime(), 1);
var sizeStyles2 = {
  sm: {
    trigger: "h-8 px-2 text-xs",
    option: "px-2 py-1.5 text-xs",
    icon: 12
  },
  md: {
    trigger: "h-9 px-3 text-sm",
    option: "px-3 py-2 text-sm",
    icon: 14
  },
  lg: {
    trigger: "h-10 px-4 text-base",
    option: "px-4 py-2.5 text-base",
    icon: 16
  }
};
var variantStyles2 = {
  default: {
    trigger: "bg-white border-gray-300 text-gray-900 hover:bg-gray-50 hover:border-gray-400",
    focus: "border-blue-500 ring-2 ring-blue-500/20"
  },
  ghost: {
    trigger: "bg-transparent border-transparent text-gray-700 hover:bg-gray-100",
    focus: "border-gray-300 ring-2 ring-gray-500/20"
  },
  outline: {
    trigger: "bg-transparent border-gray-300 text-gray-900 hover:bg-gray-50",
    focus: "border-blue-500 ring-2 ring-blue-500/20"
  }
};
var Combobox = (0, import_react220.forwardRef)(
  ({
    value,
    onChange,
    options,
    placeholder = "请选择...",
    label,
    description: description2,
    disabled = false,
    loading = false,
    error,
    size: size2 = "md",
    variant = "default",
    className,
    searchable = false,
    clearable = false,
    multiple = false,
    placement = "bottom-start",
    renderTrigger,
    renderOption,
    onOpen,
    onClose,
    onSearch
  }, ref) => {
    const [isOpen, setIsOpen] = (0, import_react220.useState)(false);
    const [searchQuery, setSearchQuery] = (0, import_react220.useState)("");
    const [focusedIndex, setFocusedIndex] = (0, import_react220.useState)(-1);
    const triggerRef = (0, import_react220.useRef)(null);
    const dropdownRef = (0, import_react220.useRef)(null);
    const searchRef = (0, import_react220.useRef)(null);
    const sizeStyle = sizeStyles2[size2];
    const variantStyle = variantStyles2[variant];
    const selectedOption = options.find((option) => option.value === value) || null;
    const filteredOptions = searchable && searchQuery ? options.filter(
      (option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()) || option.description?.toLowerCase().includes(searchQuery.toLowerCase())
    ) : options;
    (0, import_react220.useEffect)(() => {
      const handleClickOutside = (event) => {
        if (dropdownRef.current && !dropdownRef.current.contains(event.target) && triggerRef.current && !triggerRef.current.contains(event.target)) {
          setIsOpen(false);
          setSearchQuery("");
          setFocusedIndex(-1);
          onClose?.();
        }
      };
      if (isOpen) {
        document.addEventListener("mousedown", handleClickOutside);
        return () => document.removeEventListener("mousedown", handleClickOutside);
      }
    }, [isOpen, onClose]);
    const handleKeyDown = (0, import_react220.useCallback)(
      (e2) => {
        if (!isOpen) {
          if (e2.key === "Enter" || e2.key === " " || e2.key === "ArrowDown") {
            e2.preventDefault();
            setIsOpen(true);
            onOpen?.();
          }
          return;
        }
        switch (e2.key) {
          case "Escape":
            e2.preventDefault();
            setIsOpen(false);
            setSearchQuery("");
            setFocusedIndex(-1);
            onClose?.();
            triggerRef.current?.focus();
            break;
          case "ArrowDown":
            e2.preventDefault();
            setFocusedIndex(
              (prev) => prev < filteredOptions.length - 1 ? prev + 1 : 0
            );
            break;
          case "ArrowUp":
            e2.preventDefault();
            setFocusedIndex(
              (prev) => prev > 0 ? prev - 1 : filteredOptions.length - 1
            );
            break;
          case "Enter":
            e2.preventDefault();
            if (focusedIndex >= 0 && focusedIndex < filteredOptions.length) {
              const option = filteredOptions[focusedIndex];
              if (!option.disabled) {
                onChange?.(option.value);
                setIsOpen(false);
                setSearchQuery("");
                setFocusedIndex(-1);
                onClose?.();
              }
            }
            break;
          case "Tab":
            setIsOpen(false);
            setSearchQuery("");
            setFocusedIndex(-1);
            onClose?.();
            break;
        }
      },
      [isOpen, filteredOptions, focusedIndex, onChange, onOpen, onClose]
    );
    const handleSelect = (0, import_react220.useCallback)(
      (option) => {
        if (option.disabled) return;
        onChange?.(option.value);
        setIsOpen(false);
        setSearchQuery("");
        setFocusedIndex(-1);
        onClose?.();
      },
      [onChange, onClose]
    );
    const handleClear = (0, import_react220.useCallback)(
      (e2) => {
        e2.stopPropagation();
        onChange?.(void 0);
      },
      [onChange]
    );
    const handleSearch = (0, import_react220.useCallback)(
      (e2) => {
        const query = e2.target.value;
        setSearchQuery(query);
        setFocusedIndex(-1);
        onSearch?.(query);
      },
      [onSearch]
    );
    const getDropdownPosition = (0, import_react220.useCallback)(() => {
      if (!triggerRef.current) return { top: 0, left: 0 };
      const rect = triggerRef.current.getBoundingClientRect();
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
      let top = rect.bottom + scrollTop + 4;
      let left = rect.left + scrollLeft;
      if (placement.includes("top")) {
        top = rect.top + scrollTop - 4;
      }
      if (placement.includes("end")) {
        left = rect.right + scrollLeft;
      }
      return { top, left };
    }, [placement]);
    const dropdownPosition = getDropdownPosition();
    return (0, import_jsx_runtime65.jsxs)("div", { className: cn2("relative", className), children: [
      label && (0, import_jsx_runtime65.jsx)("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: label }),
      (0, import_jsx_runtime65.jsxs)(
        "button",
        {
          ref: ref || triggerRef,
          type: "button",
          disabled,
          onClick: () => {
            if (!disabled && !loading) {
              setIsOpen(!isOpen);
              if (!isOpen) {
                onOpen?.();
                setTimeout(() => searchRef.current?.focus(), 0);
              } else {
                onClose?.();
              }
            }
          },
          onKeyDown: handleKeyDown,
          className: cn2(
            // 基础样式
            "flex items-center justify-between",
            "border rounded-md",
            "transition-all duration-200",
            "focus:outline-none",
            // 尺寸
            sizeStyle.trigger,
            // 变体样式
            variantStyle.trigger,
            // 状态样式
            disabled && "opacity-50 cursor-not-allowed",
            loading && "opacity-75 cursor-wait",
            error && "border-red-500",
            isOpen && variantStyle.focus,
            // 自定义样式
            className
          ),
          style: {
            borderColor: error ? tokens.colors.border.error : void 0
          },
          "aria-expanded": isOpen,
          "aria-haspopup": "listbox",
          "aria-label": label || placeholder,
          children: [
            (0, import_jsx_runtime65.jsxs)("div", { className: "flex items-center gap-2 min-w-0 flex-1", children: [
              selectedOption?.icon && (0, import_jsx_runtime65.jsx)(
                selectedOption.icon,
                {
                  size: sizeStyle.icon,
                  className: "flex-shrink-0 text-gray-500"
                }
              ),
              (0, import_jsx_runtime65.jsx)(
                "span",
                {
                  className: cn2("truncate", !selectedOption && "text-gray-500"),
                  children: selectedOption?.label || placeholder
                }
              )
            ] }),
            (0, import_jsx_runtime65.jsxs)("div", { className: "flex items-center gap-1 flex-shrink-0", children: [
              clearable && selectedOption && (0, import_jsx_runtime65.jsx)(
                "button",
                {
                  onClick: handleClear,
                  className: "p-0.5 rounded hover:bg-gray-200 transition-colors",
                  "aria-label": "清除选择",
                  children: (0, import_jsx_runtime65.jsxs)(
                    "svg",
                    {
                      width: sizeStyle.icon,
                      height: sizeStyle.icon,
                      viewBox: "0 0 24 24",
                      fill: "none",
                      stroke: "currentColor",
                      strokeWidth: "2",
                      children: [
                        (0, import_jsx_runtime65.jsx)("line", { x1: "18", y1: "6", x2: "6", y2: "18" }),
                        (0, import_jsx_runtime65.jsx)("line", { x1: "6", y1: "6", x2: "18", y2: "18" })
                      ]
                    }
                  )
                }
              ),
              (0, import_jsx_runtime65.jsx)(
                ChevronDown2,
                {
                  size: sizeStyle.icon,
                  className: cn2(
                    "text-gray-400 transition-transform duration-200",
                    isOpen && "rotate-180"
                  )
                }
              )
            ] })
          ]
        }
      ),
      description2 && (0, import_jsx_runtime65.jsx)("p", { className: "mt-1 text-xs text-gray-500", children: description2 }),
      error && (0, import_jsx_runtime65.jsx)("p", { className: "mt-1 text-xs text-red-600", children: error }),
      isOpen && (0, import_react_dom3.createPortal)(
        (0, import_jsx_runtime65.jsxs)(
          "div",
          {
            ref: dropdownRef,
            className: cn2(
              "absolute z-50",
              "bg-white border rounded-lg shadow-lg",
              "w-64 max-h-60 overflow-hidden",
              "animate-in fade-in-0 slide-in-from-top-2 duration-200"
            ),
            style: {
              top: dropdownPosition.top,
              left: dropdownPosition.left,
              borderColor: tokens.colors.border.subtle,
              boxShadow: elevation.lg
            },
            onKeyDown: handleKeyDown,
            role: "listbox",
            "aria-label": label || "选项列表",
            children: [
              searchable && (0, import_jsx_runtime65.jsx)(
                "div",
                {
                  className: "p-2 border-b",
                  style: { borderColor: tokens.colors.border.subtle },
                  children: (0, import_jsx_runtime65.jsx)(
                    "input",
                    {
                      ref: searchRef,
                      type: "text",
                      value: searchQuery,
                      onChange: handleSearch,
                      placeholder: "搜索...",
                      className: cn2(
                        "w-full px-2 py-1 text-sm border rounded",
                        "focus:outline-none focus:ring-2 focus:ring-blue-500/20",
                        "border-gray-300"
                      )
                    }
                  )
                }
              ),
              (0, import_jsx_runtime65.jsx)("div", { className: "max-h-48 overflow-y-auto", children: filteredOptions.length === 0 ? (0, import_jsx_runtime65.jsx)("div", { className: "px-3 py-2 text-sm text-gray-500 text-center", children: searchQuery ? "未找到匹配项" : "暂无选项" }) : filteredOptions.map((option, index3) => {
                const isSelected = option.value === value;
                const isFocused = index3 === focusedIndex;
                return (0, import_jsx_runtime65.jsxs)(
                  "button",
                  {
                    onClick: () => handleSelect(option),
                    disabled: option.disabled,
                    className: cn2(
                      "w-full flex items-center gap-2 text-left",
                      "transition-colors duration-150",
                      sizeStyle.option,
                      "hover:bg-gray-50 focus:bg-gray-50",
                      "focus:outline-none",
                      isFocused && "bg-blue-50",
                      isSelected && "bg-blue-50 text-blue-700",
                      option.disabled && "opacity-50 cursor-not-allowed"
                    ),
                    role: "option",
                    "aria-selected": isSelected,
                    children: [
                      (0, import_jsx_runtime65.jsx)("div", { className: "w-4 h-4 flex items-center justify-center flex-shrink-0", children: isSelected ? (0, import_jsx_runtime65.jsx)(Check2, { size: 12, className: "text-blue-600" }) : (0, import_jsx_runtime65.jsx)("div", { className: "w-3 h-3 rounded-full border border-gray-300" }) }),
                      option.icon && (0, import_jsx_runtime65.jsx)(
                        option.icon,
                        {
                          size: sizeStyle.icon,
                          className: "flex-shrink-0 text-gray-500"
                        }
                      ),
                      (0, import_jsx_runtime65.jsxs)("div", { className: "min-w-0 flex-1", children: [
                        (0, import_jsx_runtime65.jsx)("div", { className: "font-medium truncate", children: option.label }),
                        option.description && (0, import_jsx_runtime65.jsx)("div", { className: "text-xs text-gray-500 truncate", children: option.description })
                      ] })
                    ]
                  },
                  String(option.value)
                );
              }) })
            ]
          }
        ),
        document.body
      )
    ] });
  }
);
Combobox.displayName = "Combobox";

// ../../packages/aitable/src/components/field-config/FieldContextMenu.tsx
var import_jsx_runtime66 = __toESM(require_jsx_runtime(), 1);
function FieldContextMenu({
  isOpen,
  position,
  fieldId,
  fieldName,
  onClose,
  onEdit,
  onCopy,
  onInsertLeft,
  onInsertRight,
  onFilter,
  onSort,
  onGroup,
  onFreeze,
  onToggleVisibility,
  onDelete,
  fieldVisible = true,
  fieldLocked = false
}) {
  if (!isOpen || !position) {
    return null;
  }
  const menuItems = [
    {
      id: "edit",
      label: "编辑字段",
      icon: PenLine,
      onClick: () => onEdit(fieldId),
      primary: true,
      disabled: false
    },
    {
      id: "copy",
      label: "复制字段",
      icon: Copy,
      onClick: () => onCopy(fieldId),
      disabled: false
    },
    {
      id: "insert-left",
      label: "在左侧插入字段",
      icon: ChevronLeft,
      onClick: () => onInsertLeft(fieldId),
      disabled: false
    },
    {
      id: "insert-right",
      label: "在右侧插入字段",
      icon: ChevronRight2,
      onClick: () => onInsertRight(fieldId),
      disabled: false
    },
    {
      id: "filter",
      label: "按此字段筛选",
      icon: Funnel,
      onClick: () => onFilter(fieldId),
      disabled: false
    },
    {
      id: "sort",
      label: "按此字段排序",
      icon: ArrowUpDown,
      onClick: () => onSort(fieldId),
      disabled: false
    },
    {
      id: "group",
      label: "按此字段分组",
      icon: Layers,
      onClick: () => onGroup(fieldId),
      disabled: false
    },
    {
      id: "freeze",
      label: "冻结至此字段",
      icon: Grid3x3,
      onClick: () => onFreeze(fieldId),
      disabled: false
    },
    {
      id: "toggle-visibility",
      label: fieldVisible ? "隐藏字段" : "显示字段",
      icon: fieldVisible ? EyeOff2 : Eye2,
      onClick: () => onToggleVisibility(fieldId),
      disabled: fieldLocked
    },
    {
      id: "delete",
      label: "删除字段",
      icon: Trash2,
      onClick: () => onDelete(fieldId),
      destructive: true,
      disabled: fieldLocked
    }
  ];
  return (0, import_jsx_runtime66.jsxs)(import_jsx_runtime66.Fragment, { children: [
    (0, import_jsx_runtime66.jsx)("div", { className: "fixed inset-0 z-40", onClick: onClose }),
    (0, import_jsx_runtime66.jsxs)(
      "div",
      {
        className: "absolute bg-white border border-gray-200 rounded-lg shadow-lg py-2 z-50",
        style: {
          left: position.x,
          top: position.y,
          backgroundColor: tokens.colors.surface.base,
          borderColor: tokens.colors.border.subtle,
          boxShadow: elevation.lg,
          minWidth: "180px"
        },
        children: [
          (0, import_jsx_runtime66.jsxs)(
            "div",
            {
              className: "px-3 py-2 border-b border-gray-100 mb-1",
              style: { borderBottomColor: tokens.colors.border.subtle },
              children: [
                (0, import_jsx_runtime66.jsx)(
                  "div",
                  {
                    className: "text-xs font-medium text-gray-500",
                    style: { color: tokens.colors.text.secondary },
                    children: "字段操作"
                  }
                ),
                (0, import_jsx_runtime66.jsx)(
                  "div",
                  {
                    className: "text-sm font-medium text-gray-900 truncate",
                    style: { color: tokens.colors.text.primary },
                    children: fieldName
                  }
                )
              ]
            }
          ),
          menuItems.map((item) => {
            const IconComponent = item.icon;
            return (0, import_jsx_runtime66.jsxs)(
              "button",
              {
                onClick: () => {
                  if (!item.disabled) {
                    item.onClick();
                    onClose();
                  }
                },
                disabled: item.disabled,
                className: cn2(
                  "w-full px-3 py-2 text-left text-sm flex items-center gap-3 transition-colors duration-150",
                  "focus:outline-none",
                  item.disabled ? "text-gray-400 cursor-not-allowed" : item.destructive ? "text-red-600 hover:bg-red-50" : item.primary ? "text-blue-600 hover:bg-blue-50 font-medium" : "text-gray-700 hover:bg-gray-50"
                ),
                style: {
                  color: item.disabled ? tokens.colors.text.disabled : item.destructive ? tokens.colors.text.error : item.primary ? tokens.colors.text.accent : tokens.colors.text.primary,
                  backgroundColor: "transparent"
                },
                onMouseEnter: (e2) => {
                  if (!item.disabled) {
                    e2.currentTarget.style.backgroundColor = item.destructive ? tokens.colors.surface.destructive : item.primary ? tokens.colors.surface.selected : tokens.colors.surface.hover;
                  }
                },
                onMouseLeave: (e2) => {
                  e2.currentTarget.style.backgroundColor = "transparent";
                },
                children: [
                  (0, import_jsx_runtime66.jsx)(
                    IconComponent,
                    {
                      size: 16,
                      className: cn2(item.disabled && "opacity-50")
                    }
                  ),
                  (0, import_jsx_runtime66.jsx)("span", { className: "flex-1", children: item.label }),
                  item.primary && (0, import_jsx_runtime66.jsx)("div", { className: "w-4 h-4 rounded-full border-2 border-current flex items-center justify-center", children: (0, import_jsx_runtime66.jsx)("div", { className: "w-2 h-2 bg-current rounded-full" }) })
                ]
              },
              item.id
            );
          }),
          fieldLocked && (0, import_jsx_runtime66.jsx)(
            "div",
            {
              className: "px-3 py-2 border-t border-gray-100 mt-1",
              style: { borderTopColor: tokens.colors.border.subtle },
              children: (0, import_jsx_runtime66.jsxs)(
                "div",
                {
                  className: "flex items-center gap-2 text-xs text-gray-500",
                  style: { color: tokens.colors.text.tertiary },
                  children: [
                    (0, import_jsx_runtime66.jsx)(Lock2, { size: 12 }),
                    (0, import_jsx_runtime66.jsx)("span", { children: "主键字段，部分操作不可用" })
                  ]
                }
              )
            }
          )
        ]
      }
    )
  ] });
}

// ../../packages/aitable/src/components/field-config/FieldConfigCombobox.tsx
var import_jsx_runtime67 = __toESM(require_jsx_runtime(), 1);
var FIELD_TYPE_ICONS2 = {
  text: Type,
  number: Hash2,
  singleSelect: Circle,
  multipleSelect: SquareCheckBig,
  date: Calendar,
  attachment: Paperclip,
  checkbox: SquareCheckBig,
  email: Mail,
  phone: Phone,
  url: Link,
  rating: Star,
  formula: SquareFunction,
  lookup: Search,
  rollup: Calculator,
  createdTime: Clock,
  lastModifiedTime: PenLine,
  createdBy: UserPlus,
  lastModifiedBy: UserCheck
};
function getFieldIcon2(type) {
  return FIELD_TYPE_ICONS2[type] || FileText;
}
function FieldOption({
  field,
  index: index3,
  onToggle,
  onContextMenu,
  onDragStart,
  onDragEnd,
  onDragOver,
  onDrop,
  isDragging = false
}) {
  const FieldIcon = getFieldIcon2(field.type);
  return (0, import_jsx_runtime67.jsxs)(
    "div",
    {
      draggable: !field.locked,
      onDragStart: (e2) => onDragStart(index3, e2),
      onDragEnd,
      onDragOver,
      onDrop: (e2) => onDrop(index3, e2),
      onContextMenu: (e2) => !field.locked && onContextMenu(field.id, e2),
      className: cn2(
        "flex items-center gap-3 px-3 py-2",
        "border-b border-gray-100 last:border-b-0",
        "transition-all duration-150",
        "hover:bg-gray-50",
        isDragging && "opacity-50",
        field.locked && "bg-gray-50"
      ),
      style: {
        borderBottomColor: tokens.colors.border.subtle
      },
      children: [
        !field.locked && (0, import_jsx_runtime67.jsx)(
          GripVertical,
          {
            size: 14,
            className: "text-gray-400 cursor-grab hover:text-gray-600 flex-shrink-0",
            style: { color: tokens.colors.text.tertiary }
          }
        ),
        field.locked && (0, import_jsx_runtime67.jsx)(
          Lock2,
          {
            size: 14,
            className: "text-gray-400 flex-shrink-0",
            style: { color: tokens.colors.text.tertiary }
          }
        ),
        (0, import_jsx_runtime67.jsxs)("div", { className: "flex items-center gap-2 flex-1 min-w-0", children: [
          (0, import_jsx_runtime67.jsx)(
            FieldIcon,
            {
              size: 16,
              className: "text-gray-500 flex-shrink-0",
              style: { color: tokens.colors.text.secondary }
            }
          ),
          (0, import_jsx_runtime67.jsxs)("div", { className: "flex-1 min-w-0", children: [
            (0, import_jsx_runtime67.jsx)(
              "div",
              {
                className: cn2(
                  "text-sm truncate",
                  field.locked ? "font-semibold" : "font-medium"
                ),
                style: { color: tokens.colors.text.primary },
                title: field.name,
                children: field.name
              }
            ),
            (0, import_jsx_runtime67.jsx)(
              "div",
              {
                className: "text-xs truncate mt-0.5",
                style: { color: tokens.colors.text.tertiary },
                children: field.type
              }
            )
          ] })
        ] }),
        (0, import_jsx_runtime67.jsx)(
          "button",
          {
            onClick: (e2) => {
              e2.stopPropagation();
              onToggle(field.id, !field.visible);
            },
            className: cn2(
              "p-1 rounded transition-colors duration-150",
              "hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
            ),
            style: {
              color: field.visible ? tokens.colors.text.primary : tokens.colors.text.tertiary
            },
            "aria-label": field.visible ? "隐藏字段" : "显示字段",
            children: field.visible ? (0, import_jsx_runtime67.jsx)(Eye2, { size: 14 }) : (0, import_jsx_runtime67.jsx)(EyeOff2, { size: 14 })
          }
        ),
        !field.locked && (0, import_jsx_runtime67.jsx)(
          "button",
          {
            onClick: (e2) => {
              e2.stopPropagation();
              onContextMenu(field.id, e2);
            },
            className: cn2(
              "p-1 rounded transition-colors duration-150",
              "hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
            ),
            style: { color: tokens.colors.text.secondary },
            "aria-label": "更多操作",
            children: (0, import_jsx_runtime67.jsx)(Ellipsis, { size: 14 })
          }
        )
      ]
    }
  );
}
function FieldConfigCombobox({
  fields,
  onFieldToggle,
  onFieldReorder,
  onFieldEdit,
  onFieldDelete,
  onFieldGroup,
  onFieldCopy,
  onFieldInsertLeft,
  onFieldInsertRight,
  onFieldFilter,
  onFieldSort,
  onFieldFreeze,
  disabled = false,
  className
}) {
  const [draggedIndex, setDraggedIndex] = (0, import_react221.useState)(null);
  const [showContextMenu, setShowContextMenu] = (0, import_react221.useState)(null);
  const [contextMenuPosition, setContextMenuPosition] = (0, import_react221.useState)(null);
  const handleDragStart = (0, import_react221.useCallback)((index3, e2) => {
    setDraggedIndex(index3);
    e2.dataTransfer.effectAllowed = "move";
    e2.dataTransfer.setData("text/html", e2.currentTarget.outerHTML);
    e2.currentTarget.style.opacity = "0.5";
  }, []);
  const handleDragEnd = (0, import_react221.useCallback)((e2) => {
    e2.currentTarget.style.opacity = "1";
    setDraggedIndex(null);
  }, []);
  const handleDragOver = (0, import_react221.useCallback)((e2) => {
    e2.preventDefault();
    e2.dataTransfer.dropEffect = "move";
  }, []);
  const handleDrop = (0, import_react221.useCallback)(
    (dropIndex, e2) => {
      e2.preventDefault();
      if (draggedIndex !== null && draggedIndex !== dropIndex) {
        onFieldReorder(draggedIndex, dropIndex);
      }
      setDraggedIndex(null);
    },
    [draggedIndex, onFieldReorder]
  );
  const handleContextMenu = (0, import_react221.useCallback)(
    (fieldId, e2) => {
      e2.preventDefault();
      e2.stopPropagation();
      const rect = e2.currentTarget.getBoundingClientRect();
      setContextMenuPosition({
        x: rect.right,
        y: rect.top
      });
      setShowContextMenu(fieldId);
    },
    []
  );
  const options = fields.map((field) => ({
    value: field,
    label: field.name,
    icon: getFieldIcon2(field.type),
    disabled: field.locked,
    description: field.type
  }));
  const renderTrigger = (0, import_react221.useCallback)(
    () => (0, import_jsx_runtime67.jsxs)("div", { className: "flex items-center gap-2", children: [
      (0, import_jsx_runtime67.jsx)(Settings, { size: 14 }),
      (0, import_jsx_runtime67.jsx)("span", { children: "字段配置" })
    ] }),
    []
  );
  const renderOption = (0, import_react221.useCallback)(
    (option, isSelected) => (0, import_jsx_runtime67.jsx)(
      FieldOption,
      {
        field: option.value,
        index: fields.findIndex((f) => f.id === option.value.id),
        onToggle: onFieldToggle,
        onContextMenu: handleContextMenu,
        onDragStart: handleDragStart,
        onDragEnd: handleDragEnd,
        onDragOver: handleDragOver,
        onDrop: handleDrop,
        isDragging: draggedIndex === fields.findIndex((f) => f.id === option.value.id)
      }
    ),
    [
      fields,
      onFieldToggle,
      handleContextMenu,
      handleDragStart,
      handleDragEnd,
      handleDragOver,
      handleDrop,
      draggedIndex
    ]
  );
  return (0, import_jsx_runtime67.jsxs)("div", { className: cn2("relative", className), children: [
    (0, import_jsx_runtime67.jsx)(
      Combobox,
      {
        value: null,
        onChange: () => {
        },
        options,
        placeholder: "字段配置",
        disabled,
        size: "sm",
        variant: "default",
        searchable: true,
        renderTrigger,
        renderOption,
        className: "min-w-[120px]"
      }
    ),
    (0, import_jsx_runtime67.jsx)(
      FieldContextMenu,
      {
        isOpen: !!showContextMenu,
        position: contextMenuPosition,
        fieldId: showContextMenu || "",
        fieldName: fields.find((f) => f.id === showContextMenu)?.name || "",
        onClose: () => setShowContextMenu(null),
        onEdit: onFieldEdit,
        onCopy: onFieldCopy || (() => {
        }),
        onInsertLeft: onFieldInsertLeft || (() => {
        }),
        onInsertRight: onFieldInsertRight || (() => {
        }),
        onFilter: onFieldFilter || (() => {
        }),
        onSort: onFieldSort || (() => {
        }),
        onGroup: onFieldGroup,
        onFreeze: onFieldFreeze || (() => {
        }),
        onToggleVisibility: (fieldId) => {
          const field = fields.find((f) => f.id === fieldId);
          if (field) {
            onFieldToggle(fieldId, !field.visible);
          }
        },
        onDelete: onFieldDelete,
        fieldVisible: fields.find((f) => f.id === showContextMenu)?.visible,
        fieldLocked: fields.find((f) => f.id === showContextMenu)?.locked
      }
    )
  ] });
}

// ../../packages/aitable/src/components/row-height/RowHeightCombobox.tsx
var import_jsx_runtime68 = __toESM(require_jsx_runtime(), 1);
function RowHeightIcon({ height, size: size2 = 16 }) {
  const getGap = () => {
    switch (height) {
      case "short":
        return "gap-0.5";
      case "medium":
        return "gap-1";
      case "tall":
        return "gap-1.5";
      case "extra-tall":
        return "gap-2";
      default:
        return "gap-1";
    }
  };
  return (0, import_jsx_runtime68.jsxs)("div", { className: cn5("flex items-center gap-1"), children: [
    (0, import_jsx_runtime68.jsxs)("div", { className: cn5("flex flex-col", getGap()), children: [
      (0, import_jsx_runtime68.jsx)("div", { className: "w-3 h-0.5 bg-current opacity-60" }),
      (0, import_jsx_runtime68.jsx)("div", { className: "w-4 h-0.5 bg-current" }),
      (0, import_jsx_runtime68.jsx)("div", { className: "w-3 h-0.5 bg-current opacity-60" })
    ] }),
    (0, import_jsx_runtime68.jsx)(ChevronDown2, { size: size2 * 0.75, className: "opacity-50" })
  ] });
}
var rowHeightOptions = [
  {
    value: "short",
    label: "低",
    description: "紧凑显示，适合大量数据"
  },
  {
    value: "medium",
    label: "中等",
    description: "标准显示，平衡美观与效率"
  },
  {
    value: "tall",
    label: "高",
    description: "宽松显示，提升可读性"
  },
  {
    value: "extra-tall",
    label: "超高",
    description: "最大显示，最佳可读性"
  }
];
function RowHeightCombobox({
  value = "medium",
  onChange,
  disabled = false,
  className
}) {
  const renderOption = (option, isSelected) => {
    return (0, import_jsx_runtime68.jsxs)("div", { className: "flex items-center gap-3 px-3 py-2", children: [
      (0, import_jsx_runtime68.jsx)("div", { className: "w-4 h-4 flex items-center justify-center flex-shrink-0", children: isSelected ? (0, import_jsx_runtime68.jsx)(Check2, { size: 12, className: "text-blue-600" }) : (0, import_jsx_runtime68.jsx)("div", { className: "w-3 h-3 rounded-full border border-gray-300" }) }),
      (0, import_jsx_runtime68.jsx)("div", { className: "flex-shrink-0", children: (0, import_jsx_runtime68.jsx)(RowHeightIcon, { height: option.value }) }),
      (0, import_jsx_runtime68.jsxs)("div", { className: "min-w-0 flex-1", children: [
        (0, import_jsx_runtime68.jsx)("div", { className: "font-medium text-sm", children: option.label }),
        option.description && (0, import_jsx_runtime68.jsx)("div", { className: "text-xs text-gray-500 mt-0.5", children: option.description })
      ] })
    ] });
  };
  return (0, import_jsx_runtime68.jsx)(
    Combobox,
    {
      value,
      onChange,
      options: rowHeightOptions,
      placeholder: "行高配置",
      disabled,
      size: "sm",
      variant: "default",
      renderOption,
      className
    }
  );
}
function cn5(...classes) {
  return classes.filter(Boolean).join(" ");
}

// ../../packages/aitable/src/components/filter/FilterManager.tsx
var import_react224 = __toESM(require_react(), 1);

// ../../packages/aitable/src/components/filter/FilterDialog.tsx
var import_react223 = __toESM(require_react(), 1);
var import_react_dom4 = __toESM(require_react_dom(), 1);

// ../../packages/aitable/src/components/filter/FilterCondition.tsx
var import_react222 = __toESM(require_react(), 1);
var import_jsx_runtime69 = __toESM(require_jsx_runtime(), 1);
var OPERATOR_LABELS = {
  equals: "等于",
  not_equals: "不等于",
  contains: "包含",
  not_contains: "不包含",
  starts_with: "开头是",
  ends_with: "结尾是",
  greater_than: "大于",
  less_than: "小于",
  greater_equal: "大于等于",
  less_equal: "小于等于",
  is_empty: "为空",
  is_not_empty: "不为空",
  in: "在列表中",
  not_in: "不在列表中"
};
function ValueInput({ field, operator, value, onChange }) {
  const noValueOperators = ["is_empty", "is_not_empty"];
  if (noValueOperators.includes(operator)) {
    return (0, import_jsx_runtime69.jsx)(
      "div",
      {
        className: "px-3 py-2 text-sm rounded-md border",
        style: {
          backgroundColor: tokens.colors.surface.disabled,
          borderColor: tokens.colors.border.subtle,
          color: tokens.colors.text.tertiary
        },
        children: "无需输入值"
      }
    );
  }
  switch (field.type) {
    case "select":
      const selectOptions = field.options?.map((option) => ({
        value: option,
        label: option
      })) || [];
      return (0, import_jsx_runtime69.jsx)(
        Combobox,
        {
          value,
          onChange,
          options: selectOptions,
          placeholder: "选择选项",
          size: "sm",
          className: "min-w-[120px]"
        }
      );
    case "boolean":
      const booleanOptions = [
        { value: true, label: "是" },
        { value: false, label: "否" }
      ];
      return (0, import_jsx_runtime69.jsx)(
        Combobox,
        {
          value,
          onChange,
          options: booleanOptions,
          placeholder: "选择",
          size: "sm",
          className: "min-w-[80px]"
        }
      );
    case "date":
      return (0, import_jsx_runtime69.jsx)(
        "input",
        {
          type: "date",
          value: value || "",
          onChange: (e2) => onChange(e2.target.value),
          className: cn2(
            "px-3 py-2 text-sm rounded-md border",
            "focus:outline-none focus:ring-2 focus:ring-blue-500/20",
            "border-gray-300"
          ),
          style: {
            minWidth: "140px"
          }
        }
      );
    case "number":
      return (0, import_jsx_runtime69.jsx)(
        "input",
        {
          type: "number",
          value: value || "",
          onChange: (e2) => onChange(e2.target.value ? Number(e2.target.value) : ""),
          placeholder: "请输入数字",
          className: cn2(
            "px-3 py-2 text-sm rounded-md border",
            "focus:outline-none focus:ring-2 focus:ring-blue-500/20",
            "border-gray-300"
          ),
          style: {
            minWidth: "120px"
          }
        }
      );
    case "text":
    default:
      return (0, import_jsx_runtime69.jsx)(
        "input",
        {
          type: "text",
          value: value || "",
          onChange: (e2) => onChange(e2.target.value),
          placeholder: "请输入",
          className: cn2(
            "px-3 py-2 text-sm rounded-md border",
            "focus:outline-none focus:ring-2 focus:ring-blue-500/20",
            "border-gray-300"
          ),
          style: {
            minWidth: "120px"
          }
        }
      );
  }
}
function FilterCondition({
  condition,
  fields,
  operators,
  onUpdate,
  onDelete,
  showDelete = true,
  className
}) {
  const [localCondition, setLocalCondition] = (0, import_react222.useState)(condition);
  const selectedField = fields.find((f) => f.id === localCondition.fieldId);
  const selectedOperator = localCondition.operator;
  (0, import_react222.useEffect)(() => {
    onUpdate(localCondition);
  }, [localCondition, onUpdate]);
  const handleFieldChange = (0, import_react222.useCallback)(
    (fieldId) => {
      const field = fields.find((f) => f.id === fieldId);
      if (!field) return;
      const fieldOperators = operators.filter((op) => {
        const operatorConfig = {
          equals: {
            valueTypes: ["text", "number", "date", "select", "boolean"]
          },
          not_equals: {
            valueTypes: ["text", "number", "date", "select", "boolean"]
          },
          contains: { valueTypes: ["text"] },
          not_contains: { valueTypes: ["text"] },
          starts_with: { valueTypes: ["text"] },
          ends_with: { valueTypes: ["text"] },
          greater_than: { valueTypes: ["number", "date"] },
          less_than: { valueTypes: ["number", "date"] },
          greater_equal: { valueTypes: ["number", "date"] },
          less_equal: { valueTypes: ["number", "date"] },
          is_empty: {
            valueTypes: ["text", "number", "date", "select", "attachment"]
          },
          is_not_empty: {
            valueTypes: ["text", "number", "date", "select", "attachment"]
          },
          in: { valueTypes: ["text", "number", "select"] },
          not_in: { valueTypes: ["text", "number", "select"] }
        };
        return operatorConfig[op]?.valueTypes.includes(field.type);
      });
      const newOperator = fieldOperators.includes(selectedOperator) ? selectedOperator : fieldOperators[0] || "equals";
      setLocalCondition((prev) => ({
        ...prev,
        fieldId,
        operator: newOperator,
        value: ""
        // 重置值
      }));
    },
    [fields, operators, selectedOperator]
  );
  const handleOperatorChange = (0, import_react222.useCallback)((operator) => {
    setLocalCondition((prev) => ({
      ...prev,
      operator,
      value: ""
      // 重置值
    }));
  }, []);
  const handleValueChange = (0, import_react222.useCallback)((value) => {
    setLocalCondition((prev) => ({
      ...prev,
      value
    }));
  }, []);
  const fieldOptions = fields.map((field) => ({
    value: field.id,
    label: field.name,
    description: field.type
  }));
  const operatorOptions = operators.map((operator) => ({
    value: operator,
    label: OPERATOR_LABELS[operator]
  }));
  return (0, import_jsx_runtime69.jsxs)(
    "div",
    {
      className: cn2(
        "flex items-center gap-3 p-4 rounded-lg border",
        "bg-gray-50/50",
        className
      ),
      style: {
        borderColor: tokens.colors.border.subtle,
        backgroundColor: tokens.colors.surface.hover
      },
      children: [
        (0, import_jsx_runtime69.jsx)("div", { className: "flex-shrink-0", children: (0, import_jsx_runtime69.jsx)(
          Combobox,
          {
            value: localCondition.fieldId,
            onChange: handleFieldChange,
            options: fieldOptions,
            placeholder: "选择字段",
            size: "sm",
            className: "min-w-[120px]"
          }
        ) }),
        (0, import_jsx_runtime69.jsx)("div", { className: "flex-shrink-0", children: (0, import_jsx_runtime69.jsx)(
          Combobox,
          {
            value: localCondition.operator,
            onChange: handleOperatorChange,
            options: operatorOptions,
            placeholder: "选择条件",
            size: "sm",
            className: "min-w-[100px]"
          }
        ) }),
        selectedField && (0, import_jsx_runtime69.jsx)("div", { className: "flex-1", children: (0, import_jsx_runtime69.jsx)(
          ValueInput,
          {
            field: selectedField,
            operator: selectedOperator,
            value: localCondition.value,
            onChange: handleValueChange
          }
        ) }),
        showDelete && (0, import_jsx_runtime69.jsx)("div", { className: "flex-shrink-0", children: (0, import_jsx_runtime69.jsx)(
          Button,
          {
            icon: Trash2,
            variant: "ghost",
            size: "sm",
            onClick: onDelete,
            className: "text-red-500 hover:text-red-700 hover:bg-red-50",
            "aria-label": "删除条件"
          }
        ) })
      ]
    }
  );
}

// ../../packages/aitable/src/components/filter/FilterDialog.tsx
var import_jsx_runtime70 = __toESM(require_jsx_runtime(), 1);
var FILTER_OPERATORS = {
  equals: {
    label: "等于",
    valueTypes: ["text", "number", "date", "select", "boolean"]
  },
  not_equals: {
    label: "不等于",
    valueTypes: ["text", "number", "date", "select", "boolean"]
  },
  contains: { label: "包含", valueTypes: ["text"] },
  not_contains: { label: "不包含", valueTypes: ["text"] },
  starts_with: { label: "开头是", valueTypes: ["text"] },
  ends_with: { label: "结尾是", valueTypes: ["text"] },
  greater_than: { label: "大于", valueTypes: ["number", "date"] },
  less_than: { label: "小于", valueTypes: ["number", "date"] },
  greater_equal: { label: "大于等于", valueTypes: ["number", "date"] },
  less_equal: { label: "小于等于", valueTypes: ["number", "date"] },
  is_empty: {
    label: "为空",
    valueTypes: ["text", "number", "date", "select", "attachment"]
  },
  is_not_empty: {
    label: "不为空",
    valueTypes: ["text", "number", "date", "select", "attachment"]
  },
  in: { label: "在列表中", valueTypes: ["text", "number", "select"] },
  not_in: { label: "不在列表中", valueTypes: ["text", "number", "select"] }
};
function getFieldOperators(fieldType) {
  return Object.entries(FILTER_OPERATORS).filter(([_2, config]) => config.valueTypes.includes(fieldType)).map(([operator]) => operator);
}
function createNewCondition(fields) {
  const firstField = fields[0];
  const operators = firstField ? getFieldOperators(firstField.type) : ["equals"];
  return {
    id: `condition_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
    fieldId: firstField?.id || "",
    operator: operators[0],
    value: ""
  };
}
function FilterDialog({
  isOpen,
  onClose,
  fields,
  conditions,
  onConditionsChange,
  className
}) {
  const [localConditions, setLocalConditions] = (0, import_react223.useState)(conditions);
  const handleAddCondition = (0, import_react223.useCallback)(() => {
    const newCondition = createNewCondition(fields);
    setLocalConditions((prev) => [...prev, newCondition]);
  }, [fields]);
  const handleDeleteCondition = (0, import_react223.useCallback)((conditionId) => {
    setLocalConditions((prev) => prev.filter((c) => c.id !== conditionId));
  }, []);
  const handleUpdateCondition = (0, import_react223.useCallback)(
    (updatedCondition) => {
      setLocalConditions(
        (prev) => prev.map((c) => c.id === updatedCondition.id ? updatedCondition : c)
      );
    },
    []
  );
  const handleApply = (0, import_react223.useCallback)(() => {
    onConditionsChange(localConditions);
    onClose();
  }, [localConditions, onConditionsChange, onClose]);
  const handleClear = (0, import_react223.useCallback)(() => {
    setLocalConditions([]);
  }, []);
  const handleReset = (0, import_react223.useCallback)(() => {
    setLocalConditions(conditions);
  }, [conditions]);
  if (!isOpen) return null;
  return (0, import_react_dom4.createPortal)(
    (0, import_jsx_runtime70.jsx)(
      "div",
      {
        className: "fixed inset-0 z-50 flex items-center justify-center",
        style: { backgroundColor: "rgba(0, 0, 0, 0.5)" },
        onClick: onClose,
        children: (0, import_jsx_runtime70.jsxs)(
          "div",
          {
            className: cn2(
              "relative w-full max-w-2xl mx-4",
              "bg-white rounded-lg shadow-xl",
              "animate-in fade-in-0 zoom-in-95 duration-200",
              className
            ),
            style: {
              boxShadow: elevation.xl
            },
            onClick: (e2) => e2.stopPropagation(),
            children: [
              (0, import_jsx_runtime70.jsxs)(
                "div",
                {
                  className: "flex items-center justify-between p-6 border-b",
                  style: { borderColor: tokens.colors.border.subtle },
                  children: [
                    (0, import_jsx_runtime70.jsxs)("div", { className: "flex items-center gap-3", children: [
                      (0, import_jsx_runtime70.jsx)(
                        "div",
                        {
                          className: "flex items-center justify-center w-8 h-8 rounded-md",
                          style: { backgroundColor: tokens.colors.primary[50] },
                          children: (0, import_jsx_runtime70.jsx)(Funnel, { size: 16, style: { color: tokens.colors.primary[600] } })
                        }
                      ),
                      (0, import_jsx_runtime70.jsxs)("div", { children: [
                        (0, import_jsx_runtime70.jsx)(
                          "h2",
                          {
                            className: "text-lg font-semibold",
                            style: { color: tokens.colors.text.primary },
                            children: "设置筛选条件"
                          }
                        ),
                        (0, import_jsx_runtime70.jsx)(
                          "p",
                          {
                            className: "text-sm mt-1",
                            style: { color: tokens.colors.text.secondary },
                            children: "定义数据筛选规则，支持多条件组合"
                          }
                        )
                      ] })
                    ] }),
                    (0, import_jsx_runtime70.jsx)(
                      Button,
                      {
                        icon: X2,
                        variant: "ghost",
                        size: "sm",
                        onClick: onClose,
                        "aria-label": "关闭"
                      }
                    )
                  ]
                }
              ),
              (0, import_jsx_runtime70.jsxs)("div", { className: "p-6", children: [
                (0, import_jsx_runtime70.jsx)("div", { className: "space-y-4", children: localConditions.length === 0 ? (0, import_jsx_runtime70.jsxs)(
                  "div",
                  {
                    className: "text-center py-8",
                    style: { color: tokens.colors.text.tertiary },
                    children: [
                      (0, import_jsx_runtime70.jsx)(Funnel, { size: 32, className: "mx-auto mb-3 opacity-50" }),
                      (0, import_jsx_runtime70.jsx)("p", { className: "text-sm", children: "暂无筛选条件" }),
                      (0, import_jsx_runtime70.jsx)("p", { className: "text-xs mt-1", children: "点击下方按钮添加筛选条件" })
                    ]
                  }
                ) : localConditions.map((condition, index3) => (0, import_jsx_runtime70.jsx)(
                  FilterCondition,
                  {
                    condition,
                    fields,
                    operators: getFieldOperators(
                      fields.find((f) => f.id === condition.fieldId)?.type || "text"
                    ),
                    onUpdate: handleUpdateCondition,
                    onDelete: () => handleDeleteCondition(condition.id),
                    showDelete: localConditions.length > 1
                  },
                  condition.id
                )) }),
                (0, import_jsx_runtime70.jsx)("div", { className: "mt-6", children: (0, import_jsx_runtime70.jsx)(
                  Button,
                  {
                    icon: Plus2,
                    variant: "secondary",
                    onClick: handleAddCondition,
                    className: "w-full",
                    children: "添加条件"
                  }
                ) })
              ] }),
              (0, import_jsx_runtime70.jsxs)(
                "div",
                {
                  className: "flex items-center justify-between p-6 border-t",
                  style: { borderColor: tokens.colors.border.subtle },
                  children: [
                    (0, import_jsx_runtime70.jsxs)("div", { className: "flex items-center gap-2", children: [
                      (0, import_jsx_runtime70.jsx)(
                        Button,
                        {
                          variant: "ghost",
                          size: "sm",
                          onClick: handleClear,
                          disabled: localConditions.length === 0,
                          children: "清除全部"
                        }
                      ),
                      (0, import_jsx_runtime70.jsx)(
                        Button,
                        {
                          variant: "ghost",
                          size: "sm",
                          onClick: handleReset,
                          disabled: JSON.stringify(localConditions) === JSON.stringify(conditions),
                          children: "重置"
                        }
                      )
                    ] }),
                    (0, import_jsx_runtime70.jsxs)("div", { className: "flex items-center gap-3", children: [
                      (0, import_jsx_runtime70.jsx)(Button, { variant: "secondary", onClick: onClose, children: "取消" }),
                      (0, import_jsx_runtime70.jsx)(Button, { variant: "primary", onClick: handleApply, children: "确定" })
                    ] })
                  ]
                }
              )
            ]
          }
        )
      }
    ),
    document.body
  );
}

// ../../packages/aitable/src/components/filter/FilterButton.tsx
var import_jsx_runtime71 = __toESM(require_jsx_runtime(), 1);
function FilterButton({
  isActive,
  conditionCount,
  onClick,
  onClear,
  variant = "default",
  size: size2 = "md",
  className
}) {
  const hasConditions = conditionCount > 0;
  if (variant === "compact") {
    return (0, import_jsx_runtime71.jsxs)("div", { className: cn2("relative", className), children: [
      (0, import_jsx_runtime71.jsx)(
        Button,
        {
          icon: Funnel,
          variant: isActive ? "primary" : "secondary",
          size: size2,
          onClick,
          className: cn2("transition-all duration-200", isActive && "shadow-md"),
          "aria-label": `筛选${hasConditions ? ` (${conditionCount} 个条件)` : ""}`
        }
      ),
      hasConditions && (0, import_jsx_runtime71.jsx)(
        "div",
        {
          className: "absolute -top-1 -right-1 w-5 h-5 rounded-full flex items-center justify-center text-xs font-medium",
          style: {
            backgroundColor: tokens.colors.primary[500],
            color: tokens.colors.text.inverse
          },
          children: conditionCount > 9 ? "9+" : conditionCount
        }
      ),
      hasConditions && onClear && (0, import_jsx_runtime71.jsx)(
        "button",
        {
          onClick: (e2) => {
            e2.stopPropagation();
            onClear();
          },
          className: cn2(
            "absolute -top-1 -right-1 w-5 h-5 rounded-full flex items-center justify-center",
            "bg-red-500 text-white text-xs hover:bg-red-600",
            "transition-colors duration-200"
          ),
          "aria-label": "清除筛选",
          children: (0, import_jsx_runtime71.jsx)(X2, { size: 10 })
        }
      )
    ] });
  }
  return (0, import_jsx_runtime71.jsxs)("div", { className: cn2("relative", className), children: [
    (0, import_jsx_runtime71.jsx)(
      Button,
      {
        icon: Funnel,
        variant: isActive ? "primary" : "secondary",
        size: size2,
        onClick,
        className: cn2("transition-all duration-200", isActive && "shadow-md"),
        children: "筛选"
      }
    ),
    hasConditions && (0, import_jsx_runtime71.jsx)(
      "div",
      {
        className: "absolute -top-1 -right-1 w-5 h-5 rounded-full flex items-center justify-center text-xs font-medium",
        style: {
          backgroundColor: tokens.colors.primary[500],
          color: tokens.colors.text.inverse
        },
        children: conditionCount > 9 ? "9+" : conditionCount
      }
    )
  ] });
}

// ../../packages/aitable/src/components/filter/FilterManager.tsx
var import_jsx_runtime72 = __toESM(require_jsx_runtime(), 1);
function filterData(data, conditions, fields) {
  if (conditions.length === 0) {
    return data;
  }
  return data.filter((item) => {
    return conditions.every((condition) => {
      const field = fields.find((f) => f.id === condition.fieldId);
      if (!field) return true;
      const itemValue = item[field.id];
      const filterValue = condition.value;
      switch (condition.operator) {
        case "equals":
          return itemValue === filterValue;
        case "not_equals":
          return itemValue !== filterValue;
        case "contains":
          return String(itemValue).toLowerCase().includes(String(filterValue).toLowerCase());
        case "not_contains":
          return !String(itemValue).toLowerCase().includes(String(filterValue).toLowerCase());
        case "starts_with":
          return String(itemValue).toLowerCase().startsWith(String(filterValue).toLowerCase());
        case "ends_with":
          return String(itemValue).toLowerCase().endsWith(String(filterValue).toLowerCase());
        case "greater_than":
          return Number(itemValue) > Number(filterValue);
        case "less_than":
          return Number(itemValue) < Number(filterValue);
        case "greater_equal":
          return Number(itemValue) >= Number(filterValue);
        case "less_equal":
          return Number(itemValue) <= Number(filterValue);
        case "is_empty":
          return itemValue === null || itemValue === void 0 || itemValue === "";
        case "is_not_empty":
          return itemValue !== null && itemValue !== void 0 && itemValue !== "";
        case "in":
          return Array.isArray(filterValue) && filterValue.includes(itemValue);
        case "not_in":
          return Array.isArray(filterValue) && !filterValue.includes(itemValue);
        default:
          return true;
      }
    });
  });
}
var FilterManager2 = FilterManagerComponent;
function FilterManagerComponent({
  data,
  fields,
  conditions,
  onConditionsChange,
  onFilteredDataChange,
  buttonVariant = "default",
  buttonSize = "md",
  className
}) {
  const [isDialogOpen, setIsDialogOpen] = (0, import_react224.useState)(false);
  const filteredData = (0, import_react224.useMemo)(() => {
    return filterData(data, conditions, fields);
  }, [data, conditions, fields]);
  const onFilteredDataChangeRef = import_react224.default.useRef(onFilteredDataChange);
  onFilteredDataChangeRef.current = onFilteredDataChange;
  import_react224.default.useEffect(() => {
    if (onFilteredDataChangeRef.current) {
      onFilteredDataChangeRef.current(filteredData);
    }
  }, [filteredData]);
  const handleOpenDialog = (0, import_react224.useCallback)(() => {
    setIsDialogOpen(true);
  }, []);
  const handleCloseDialog = (0, import_react224.useCallback)(() => {
    setIsDialogOpen(false);
  }, []);
  const handleClearFilters = (0, import_react224.useCallback)(() => {
    onConditionsChange([]);
  }, [onConditionsChange]);
  const handleConditionsChange = (0, import_react224.useCallback)(
    (newConditions) => {
      onConditionsChange(newConditions);
    },
    [onConditionsChange]
  );
  return (0, import_jsx_runtime72.jsxs)("div", { className, children: [
    (0, import_jsx_runtime72.jsx)(
      FilterButton,
      {
        isActive: conditions.length > 0,
        conditionCount: conditions.length,
        onClick: handleOpenDialog,
        onClear: conditions.length > 0 ? handleClearFilters : void 0,
        variant: buttonVariant,
        size: buttonSize
      }
    ),
    (0, import_jsx_runtime72.jsx)(
      FilterDialog,
      {
        isOpen: isDialogOpen,
        onClose: handleCloseDialog,
        fields,
        conditions,
        onConditionsChange: handleConditionsChange
      }
    )
  ] });
}

// ../../packages/aitable/src/components/view-toolbar/ViewToolbar.tsx
var import_jsx_runtime73 = __toESM(require_jsx_runtime(), 1);
var EMPTY_ARRAY2 = [];
var DEFAULT_CONFIG = {
  showUndoRedo: true,
  showAddNew: true,
  showFieldConfig: true,
  showRowHeight: true,
  showFilter: true,
  showSort: true,
  showGroup: true,
  showSearch: true
};
function ViewToolbar({
  config,
  fields,
  fieldConfigMode = "combobox",
  onFieldToggle,
  onFieldReorder,
  onFieldEdit,
  onFieldDelete,
  onFieldGroup,
  onFieldCopy,
  onFieldInsertLeft,
  onFieldInsertRight,
  onFieldFilter,
  onFieldSort,
  onFieldFreeze,
  rowHeight = "medium",
  onRowHeightChange,
  filterFields,
  filterConditions = [],
  onFilterConditionsChange,
  onFilteredDataChange,
  onAddRecord,
  onUndo,
  onRedo,
  onFilter,
  onSort,
  onGroup,
  onSearch,
  isMobile = false,
  className
}) {
  const mergedConfig = { ...DEFAULT_CONFIG, ...config };
  return (0, import_jsx_runtime73.jsxs)(
    "div",
    {
      className: cn2("flex items-center gap-2", "px-4 py-2 border-b", className),
      style: {
        borderColor: tokens.colors.border.subtle,
        backgroundColor: tokens.colors.surface.base
      },
      role: "toolbar",
      "aria-label": "数据操作工具栏",
      children: [
        (0, import_jsx_runtime73.jsxs)("div", { className: "flex items-center gap-2", children: [
          mergedConfig.showAddNew && onAddRecord && (0, import_jsx_runtime73.jsx)(
            Button,
            {
              variant: "primary",
              size: "sm",
              icon: Plus2,
              onClick: onAddRecord,
              children: "添加记录"
            }
          ),
          mergedConfig.showFieldConfig && fields && fieldConfigMode === "combobox" && (0, import_jsx_runtime73.jsx)(
            FieldConfigCombobox,
            {
              fields,
              onFieldToggle,
              onFieldReorder,
              onFieldEdit,
              onFieldDelete,
              onFieldGroup,
              onFieldCopy,
              onFieldInsertLeft,
              onFieldInsertRight,
              onFieldFilter,
              onFieldSort,
              onFieldFreeze
            }
          ),
          mergedConfig.showRowHeight && (0, import_jsx_runtime73.jsx)(RowHeightCombobox, { value: rowHeight, onChange: onRowHeightChange })
        ] }),
        (mergedConfig.showFilter || mergedConfig.showSort || mergedConfig.showGroup) && (0, import_jsx_runtime73.jsx)(
          "div",
          {
            className: "w-px h-6 bg-gray-300",
            style: { backgroundColor: tokens.colors.border.default }
          }
        ),
        (0, import_jsx_runtime73.jsxs)("div", { className: "flex items-center gap-2", children: [
          mergedConfig.showFilter && filterFields && (0, import_jsx_runtime73.jsx)(
            FilterManager2,
            {
              data: EMPTY_ARRAY2,
              fields: filterFields,
              conditions: filterConditions,
              onConditionsChange: onFilterConditionsChange || (() => {
              }),
              onFilteredDataChange,
              buttonVariant: "default",
              buttonSize: "sm"
            }
          ),
          mergedConfig.showSort && onSort && (0, import_jsx_runtime73.jsx)(
            Button,
            {
              variant: "secondary",
              size: "sm",
              icon: ArrowUpDown,
              onClick: onSort,
              children: !isMobile && "排序"
            }
          ),
          mergedConfig.showGroup && onGroup && (0, import_jsx_runtime73.jsx)(
            Button,
            {
              variant: "secondary",
              size: "sm",
              icon: Group,
              onClick: onGroup,
              children: !isMobile && "分组"
            }
          )
        ] }),
        mergedConfig.showUndoRedo && (0, import_jsx_runtime73.jsx)(
          "div",
          {
            className: "w-px h-6 bg-gray-300",
            style: { backgroundColor: tokens.colors.border.default }
          }
        ),
        mergedConfig.showUndoRedo && (0, import_jsx_runtime73.jsxs)("div", { className: "flex items-center gap-1", children: [
          (0, import_jsx_runtime73.jsx)(
            Button,
            {
              variant: "ghost",
              size: "sm",
              icon: Undo2,
              onClick: onUndo,
              "aria-label": "撤销",
              title: "撤销"
            }
          ),
          (0, import_jsx_runtime73.jsx)(
            Button,
            {
              variant: "ghost",
              size: "sm",
              icon: Redo2,
              onClick: onRedo,
              "aria-label": "重做",
              title: "重做"
            }
          )
        ] })
      ]
    }
  );
}

// ../../packages/aitable/src/grid/error-handling/GridErrorBoundary.tsx
var import_react225 = __toESM(require_react(), 1);
var import_jsx_runtime74 = __toESM(require_jsx_runtime(), 1);
var GridErrorBoundary = class extends import_react225.Component {
  constructor(props) {
    super(props);
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null
    };
  }
  static getDerivedStateFromError(error) {
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    this.setState({
      error,
      errorInfo
    });
    this.props.onError?.(error, errorInfo);
    if (true) {
      console.group("🚨 Grid Error Boundary Caught Error");
      console.error("Error:", error);
      console.error("Error Info:", errorInfo);
      console.error("Component Stack:", errorInfo.componentStack);
      console.groupEnd();
    }
    if (false) {
      this.reportError(error, errorInfo);
    }
  }
  reportError = (error, errorInfo) => {
    try {
    } catch (reportingError) {
      console.warn("Failed to report error:", reportingError);
    }
  };
  handleRetry = () => {
    this.setState({
      hasError: false,
      error: null,
      errorInfo: null
    });
  };
  render() {
    if (this.state.hasError) {
      if (this.props.fallback) {
        return this.props.fallback;
      }
      return (0, import_jsx_runtime74.jsxs)("div", { className: "flex flex-col items-center justify-center p-8 bg-gray-50 rounded-lg border border-gray-200", children: [
        (0, import_jsx_runtime74.jsxs)("div", { className: "flex items-center space-x-3 mb-4", children: [
          (0, import_jsx_runtime74.jsx)(TriangleAlert, { className: "h-8 w-8 text-red-500" }),
          (0, import_jsx_runtime74.jsx)("h3", { className: "text-lg font-semibold text-gray-900", children: "Grid 渲染出错" })
        ] }),
        (0, import_jsx_runtime74.jsx)("p", { className: "text-gray-600 text-center mb-6 max-w-md", children: "表格组件遇到了一个错误。这可能是由于数据格式问题或网络连接不稳定导致的。" }),
        (0, import_jsx_runtime74.jsxs)("div", { className: "flex space-x-3", children: [
          (0, import_jsx_runtime74.jsxs)(
            "button",
            {
              onClick: this.handleRetry,
              className: "inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors",
              children: [
                (0, import_jsx_runtime74.jsx)(RefreshCw, { className: "h-4 w-4 mr-2" }),
                "重试"
              ]
            }
          ),
          (0, import_jsx_runtime74.jsx)(
            "button",
            {
              onClick: () => window.location.reload(),
              className: "inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors",
              children: "刷新页面"
            }
          )
        ] }),
        this.state.error && (0, import_jsx_runtime74.jsxs)("details", { className: "mt-6 w-full max-w-2xl", children: [
          (0, import_jsx_runtime74.jsx)("summary", { className: "cursor-pointer text-sm text-gray-500 hover:text-gray-700", children: "开发者信息" }),
          (0, import_jsx_runtime74.jsxs)("div", { className: "mt-2 p-4 bg-gray-100 rounded-md text-xs font-mono text-gray-800 overflow-auto", children: [
            (0, import_jsx_runtime74.jsxs)("div", { className: "mb-2", children: [
              (0, import_jsx_runtime74.jsx)("strong", { children: "错误信息:" }),
              (0, import_jsx_runtime74.jsx)("pre", { className: "whitespace-pre-wrap", children: this.state.error.message })
            ] }),
            this.state.error.stack && (0, import_jsx_runtime74.jsxs)("div", { className: "mb-2", children: [
              (0, import_jsx_runtime74.jsx)("strong", { children: "错误堆栈:" }),
              (0, import_jsx_runtime74.jsx)("pre", { className: "whitespace-pre-wrap", children: this.state.error.stack })
            ] }),
            this.state.errorInfo?.componentStack && (0, import_jsx_runtime74.jsxs)("div", { children: [
              (0, import_jsx_runtime74.jsx)("strong", { children: "组件堆栈:" }),
              (0, import_jsx_runtime74.jsx)("pre", { className: "whitespace-pre-wrap", children: this.state.errorInfo.componentStack })
            ] })
          ] })
        ] })
      ] });
    }
    return this.props.children;
  }
};

// ../../packages/aitable/src/components/states/LoadingState.tsx
var import_jsx_runtime75 = __toESM(require_jsx_runtime(), 1);
function LoadingState({
  message: message2 = "正在加载..."
}) {
  return (0, import_jsx_runtime75.jsxs)(
    "div",
    {
      className: "flex flex-col items-center justify-center",
      style: {
        minHeight: "400px",
        color: tokens.colors.text.secondary
      },
      children: [
        (0, import_jsx_runtime75.jsxs)("div", { className: "relative", children: [
          [0, 1, 2].map((i) => (0, import_jsx_runtime75.jsx)(
            "div",
            {
              className: "absolute inset-0",
              style: {
                width: "48px",
                height: "48px",
                borderRadius: "50%",
                border: `2px solid ${tokens.colors.primary[500]}`,
                opacity: 0.6 - i * 0.2,
                animation: `pulse 1.5s ease-in-out ${i * 0.15}s infinite`
              }
            },
            i
          )),
          (0, import_jsx_runtime75.jsx)(
            "div",
            {
              style: {
                width: "48px",
                height: "48px",
                borderRadius: "50%",
                backgroundColor: tokens.colors.primary[50],
                display: "flex",
                alignItems: "center",
                justifyContent: "center"
              },
              children: (0, import_jsx_runtime75.jsx)(
                "div",
                {
                  style: {
                    width: "20px",
                    height: "20px",
                    borderRadius: "50%",
                    backgroundColor: tokens.colors.primary[500]
                  }
                }
              )
            }
          )
        ] }),
        (0, import_jsx_runtime75.jsx)(
          "p",
          {
            className: "mt-6 text-sm",
            style: {
              color: tokens.colors.text.secondary,
              fontWeight: tokens.typography.fontWeight.medium
            },
            children: message2
          }
        ),
        (0, import_jsx_runtime75.jsx)("div", { className: "mt-3 flex gap-1.5", children: [0, 1, 2].map((i) => (0, import_jsx_runtime75.jsx)(
          "div",
          {
            style: {
              width: "6px",
              height: "6px",
              borderRadius: "50%",
              backgroundColor: tokens.colors.primary[400],
              animation: `bounce 1.4s ease-in-out ${i * 0.16}s infinite`
            }
          },
          i
        )) }),
        (0, import_jsx_runtime75.jsx)("style", { children: `
        @keyframes pulse {
          0%, 100% {
            transform: scale(1);
            opacity: 0.6;
          }
          50% {
            transform: scale(1.3);
            opacity: 0.1;
          }
        }

        @keyframes bounce {
          0%, 80%, 100% {
            transform: translateY(0);
            opacity: 0.5;
          }
          40% {
            transform: translateY(-8px);
            opacity: 1;
          }
        }
      ` })
      ]
    }
  );
}

// ../../packages/aitable/src/components/states/EmptyState.tsx
var import_jsx_runtime76 = __toESM(require_jsx_runtime(), 1);
function EmptyState({
  title = "暂无数据",
  description: description2 = "开始添加第一条记录吧",
  actionLabel = "添加记录",
  onAction,
  icon
}) {
  return (0, import_jsx_runtime76.jsxs)(
    "div",
    {
      className: "flex flex-col items-center justify-center",
      style: {
        minHeight: "400px",
        padding: "48px 24px"
      },
      children: [
        (0, import_jsx_runtime76.jsx)(
          "div",
          {
            style: {
              width: "96px",
              height: "96px",
              borderRadius: tokens.radius.xl,
              backgroundColor: tokens.colors.surface.hover,
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              marginBottom: "24px",
              border: `1px solid ${tokens.colors.border.subtle}`
            },
            children: icon || (0, import_jsx_runtime76.jsxs)(
              "svg",
              {
                width: "48",
                height: "48",
                viewBox: "0 0 24 24",
                fill: "none",
                stroke: tokens.colors.text.tertiary,
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                children: [
                  (0, import_jsx_runtime76.jsx)("path", { d: "M9 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2H14" }),
                  (0, import_jsx_runtime76.jsx)("polyline", { points: "14 2 14 8 20 8" }),
                  (0, import_jsx_runtime76.jsx)("line", { x1: "12", y1: "11", x2: "12", y2: "17" }),
                  (0, import_jsx_runtime76.jsx)("line", { x1: "9", y1: "14", x2: "15", y2: "14" })
                ]
              }
            )
          }
        ),
        (0, import_jsx_runtime76.jsx)(
          "h3",
          {
            style: {
              fontSize: "18px",
              fontWeight: tokens.typography.fontWeight.semibold,
              color: tokens.colors.text.primary,
              marginBottom: "8px",
              letterSpacing: tokens.typography.letterSpacing.tight
            },
            children: title
          }
        ),
        (0, import_jsx_runtime76.jsx)(
          "p",
          {
            style: {
              fontSize: "14px",
              color: tokens.colors.text.secondary,
              textAlign: "center",
              maxWidth: "320px",
              marginBottom: "24px",
              lineHeight: "1.6"
            },
            children: description2
          }
        ),
        onAction && (0, import_jsx_runtime76.jsxs)(
          "button",
          {
            onClick: onAction,
            className: "group",
            style: {
              height: "40px",
              padding: "0 24px",
              borderRadius: tokens.radius.md,
              backgroundColor: tokens.colors.primary[500],
              color: "white",
              fontSize: "14px",
              fontWeight: tokens.typography.fontWeight.medium,
              border: "none",
              cursor: "pointer",
              display: "inline-flex",
              alignItems: "center",
              gap: "8px",
              transition: "all 150ms cubic-bezier(0.4, 0.0, 0.2, 1)",
              boxShadow: elevation.sm
            },
            onMouseEnter: (e2) => {
              e2.currentTarget.style.backgroundColor = tokens.colors.primary[600];
              e2.currentTarget.style.boxShadow = elevation.md;
              e2.currentTarget.style.transform = "translateY(-1px)";
            },
            onMouseLeave: (e2) => {
              e2.currentTarget.style.backgroundColor = tokens.colors.primary[500];
              e2.currentTarget.style.boxShadow = elevation.sm;
              e2.currentTarget.style.transform = "translateY(0)";
            },
            onMouseDown: (e2) => {
              e2.currentTarget.style.transform = "translateY(0) scale(0.98)";
            },
            onMouseUp: (e2) => {
              e2.currentTarget.style.transform = "translateY(-1px) scale(1)";
            },
            children: [
              (0, import_jsx_runtime76.jsxs)(
                "svg",
                {
                  width: "16",
                  height: "16",
                  viewBox: "0 0 24 24",
                  fill: "none",
                  stroke: "currentColor",
                  strokeWidth: "2",
                  strokeLinecap: "round",
                  strokeLinejoin: "round",
                  children: [
                    (0, import_jsx_runtime76.jsx)("line", { x1: "12", y1: "5", x2: "12", y2: "19" }),
                    (0, import_jsx_runtime76.jsx)("line", { x1: "5", y1: "12", x2: "19", y2: "12" })
                  ]
                }
              ),
              actionLabel
            ]
          }
        )
      ]
    }
  );
}

// ../../packages/aitable/src/components/states/ErrorState.tsx
var import_jsx_runtime77 = __toESM(require_jsx_runtime(), 1);
function ErrorState({
  title = "出错了",
  message: message2 = "加载数据时遇到问题，请稍后重试",
  actionLabel = "重新加载",
  onAction,
  secondaryActionLabel = "联系支持",
  onSecondaryAction
}) {
  return (0, import_jsx_runtime77.jsxs)(
    "div",
    {
      className: "flex flex-col items-center justify-center",
      style: {
        minHeight: "400px",
        padding: "48px 24px"
      },
      children: [
        (0, import_jsx_runtime77.jsx)(
          "div",
          {
            style: {
              width: "96px",
              height: "96px",
              borderRadius: tokens.radius.xl,
              backgroundColor: tokens.colors.semantic.error.bg,
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              marginBottom: "24px",
              border: `1px solid ${tokens.colors.semantic.error.border}`
            },
            children: (0, import_jsx_runtime77.jsxs)(
              "svg",
              {
                width: "48",
                height: "48",
                viewBox: "0 0 24 24",
                fill: "none",
                stroke: tokens.colors.semantic.error.text,
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                children: [
                  (0, import_jsx_runtime77.jsx)("circle", { cx: "12", cy: "12", r: "10" }),
                  (0, import_jsx_runtime77.jsx)("line", { x1: "12", y1: "8", x2: "12", y2: "12" }),
                  (0, import_jsx_runtime77.jsx)("line", { x1: "12", y1: "16", x2: "12.01", y2: "16" })
                ]
              }
            )
          }
        ),
        (0, import_jsx_runtime77.jsx)(
          "h3",
          {
            style: {
              fontSize: "18px",
              fontWeight: tokens.typography.fontWeight.semibold,
              color: tokens.colors.text.primary,
              marginBottom: "8px",
              letterSpacing: tokens.typography.letterSpacing.tight
            },
            children: title
          }
        ),
        (0, import_jsx_runtime77.jsx)(
          "p",
          {
            style: {
              fontSize: "14px",
              color: tokens.colors.text.secondary,
              textAlign: "center",
              maxWidth: "400px",
              marginBottom: "24px",
              lineHeight: "1.6"
            },
            children: message2
          }
        ),
        (0, import_jsx_runtime77.jsxs)(
          "div",
          {
            style: {
              display: "flex",
              gap: "12px",
              flexWrap: "wrap",
              justifyContent: "center"
            },
            children: [
              onAction && (0, import_jsx_runtime77.jsxs)(
                "button",
                {
                  onClick: onAction,
                  style: {
                    height: "40px",
                    padding: "0 24px",
                    borderRadius: tokens.radius.md,
                    backgroundColor: tokens.colors.primary[500],
                    color: "white",
                    fontSize: "14px",
                    fontWeight: tokens.typography.fontWeight.medium,
                    border: "none",
                    cursor: "pointer",
                    display: "inline-flex",
                    alignItems: "center",
                    gap: "8px",
                    transition: "all 150ms cubic-bezier(0.4, 0.0, 0.2, 1)",
                    boxShadow: elevation.sm
                  },
                  onMouseEnter: (e2) => {
                    e2.currentTarget.style.backgroundColor = tokens.colors.primary[600];
                    e2.currentTarget.style.boxShadow = elevation.md;
                    e2.currentTarget.style.transform = "translateY(-1px)";
                  },
                  onMouseLeave: (e2) => {
                    e2.currentTarget.style.backgroundColor = tokens.colors.primary[500];
                    e2.currentTarget.style.boxShadow = elevation.sm;
                    e2.currentTarget.style.transform = "translateY(0)";
                  },
                  children: [
                    (0, import_jsx_runtime77.jsxs)(
                      "svg",
                      {
                        width: "16",
                        height: "16",
                        viewBox: "0 0 24 24",
                        fill: "none",
                        stroke: "currentColor",
                        strokeWidth: "2",
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        children: [
                          (0, import_jsx_runtime77.jsx)("polyline", { points: "23 4 23 10 17 10" }),
                          (0, import_jsx_runtime77.jsx)("path", { d: "M20.49 15a9 9 0 1 1-2.12-9.36L23 10" })
                        ]
                      }
                    ),
                    actionLabel
                  ]
                }
              ),
              onSecondaryAction && (0, import_jsx_runtime77.jsx)(
                "button",
                {
                  onClick: onSecondaryAction,
                  style: {
                    height: "40px",
                    padding: "0 24px",
                    borderRadius: tokens.radius.md,
                    backgroundColor: "transparent",
                    color: tokens.colors.text.secondary,
                    fontSize: "14px",
                    fontWeight: tokens.typography.fontWeight.medium,
                    border: `1px solid ${tokens.colors.border.default}`,
                    cursor: "pointer",
                    display: "inline-flex",
                    alignItems: "center",
                    gap: "8px",
                    transition: "all 150ms cubic-bezier(0.4, 0.0, 0.2, 1)"
                  },
                  onMouseEnter: (e2) => {
                    e2.currentTarget.style.backgroundColor = tokens.colors.surface.hover;
                    e2.currentTarget.style.borderColor = tokens.colors.border.strong;
                    e2.currentTarget.style.color = tokens.colors.text.primary;
                  },
                  onMouseLeave: (e2) => {
                    e2.currentTarget.style.backgroundColor = "transparent";
                    e2.currentTarget.style.borderColor = tokens.colors.border.default;
                    e2.currentTarget.style.color = tokens.colors.text.secondary;
                  },
                  children: secondaryActionLabel
                }
              )
            ]
          }
        )
      ]
    }
  );
}

// ../../packages/aitable/src/components/view-content/ViewContent.tsx
var import_jsx_runtime78 = __toESM(require_jsx_runtime(), 1);
function ViewContent({
  state = "idle",
  loadingMessage,
  emptyStateProps,
  errorStateProps,
  gridProps,
  gridRef,
  rowHeight,
  onAddColumn,
  onEditColumn,
  onDeleteColumn,
  onColumnResize,
  onColumnOrdered,
  className
}) {
  return (0, import_jsx_runtime78.jsx)(
    "div",
    {
      className: cn2("flex min-h-0 flex-1 flex-col", className),
      role: "main",
      "aria-label": "主内容区",
      children: (0, import_jsx_runtime78.jsxs)("div", { className: "relative flex min-h-0 flex-1", children: [
        state === "loading" && (0, import_jsx_runtime78.jsx)(
          "div",
          {
            role: "status",
            "aria-live": "polite",
            "aria-label": "正在加载",
            className: "absolute inset-0 flex items-center justify-center",
            style: { backgroundColor: tokens.colors.surface.base },
            children: (0, import_jsx_runtime78.jsx)(LoadingState, { message: loadingMessage })
          }
        ),
        state === "empty" && (0, import_jsx_runtime78.jsx)(
          "div",
          {
            role: "status",
            "aria-live": "polite",
            "aria-label": "无数据",
            className: "absolute inset-0 flex items-center justify-center",
            style: { backgroundColor: tokens.colors.surface.base },
            children: (0, import_jsx_runtime78.jsx)(EmptyState, { ...emptyStateProps })
          }
        ),
        state === "error" && (0, import_jsx_runtime78.jsx)(
          "div",
          {
            role: "alert",
            "aria-live": "assertive",
            "aria-label": "发生错误",
            className: "absolute inset-0 flex items-center justify-center",
            style: { backgroundColor: tokens.colors.surface.base },
            children: (0, import_jsx_runtime78.jsx)(ErrorState, { ...errorStateProps })
          }
        ),
        state === "idle" && (0, import_jsx_runtime78.jsx)(GridErrorBoundary, { children: (0, import_jsx_runtime78.jsx)(
          Grid,
          {
            ref: gridRef,
            ...gridProps,
            rowHeight,
            onAddColumn,
            onEditColumn,
            onDeleteColumn,
            onColumnResize,
            onColumnOrdered
          }
        ) })
      ] })
    }
  );
}

// ../../packages/aitable/src/components/view-statusbar/ViewStatusBar.tsx
var import_jsx_runtime79 = __toESM(require_jsx_runtime(), 1);
function ViewStatusBar({
  recordCount = 0,
  children,
  isMobile = false,
  className
}) {
  return (0, import_jsx_runtime79.jsxs)(
    "div",
    {
      className: cn2(
        "border-t flex items-center",
        isMobile ? "h-9 px-2 text-xs flex-col gap-1 justify-center" : "h-10 px-4 text-sm justify-between",
        className
      ),
      style: {
        borderColor: tokens.colors.border.subtle,
        backgroundColor: tokens.colors.surface.base,
        color: tokens.colors.text.secondary
      },
      role: "status",
      "aria-live": "polite",
      "aria-label": "状态栏",
      children: [
        (0, import_jsx_runtime79.jsx)(
          "div",
          {
            "aria-label": `共 ${recordCount} 条记录`,
            className: "flex items-center gap-2",
            children: (0, import_jsx_runtime79.jsxs)("span", { className: "font-medium", children: [
              "共 ",
              recordCount,
              " 条记录"
            ] })
          }
        ),
        !isMobile && children && (0, import_jsx_runtime79.jsx)("div", { className: "flex items-center gap-2", children })
      ]
    }
  );
}

// ../../packages/aitable/src/components/utils/responsive.ts
var breakpoints = {
  xs: 0,
  // 手机竖屏
  sm: 640,
  // 手机横屏 / 小平板
  md: 768,
  // 平板
  lg: 1024,
  // 小笔记本
  xl: 1280,
  // 桌面
  "2xl": 1536
  // 大屏
};
function getDeviceType() {
  if (typeof window === "undefined") return "desktop";
  const width = window.innerWidth;
  if (width < breakpoints.sm) return "mobile";
  if (width < breakpoints.lg) return "tablet";
  return "desktop";
}
function isTouchDevice() {
  if (typeof window === "undefined") return false;
  return "ontouchstart" in window || navigator.maxTouchPoints > 0 || // @ts-ignore - 旧版浏览器支持
  navigator.msMaxTouchPoints > 0;
}

// ../../packages/aitable/src/components/add-record/AddRecordDialog.tsx
var import_react235 = __toESM(require_react(), 1);
var import_react_dom5 = __toESM(require_react_dom(), 1);

// ../../packages/aitable/src/components/add-record/field-editors/TextEditor.tsx
var import_react226 = __toESM(require_react(), 1);
var import_jsx_runtime80 = __toESM(require_jsx_runtime(), 1);
function TextEditor2({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react226.useRef)(null);
  (0, import_react226.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  return (0, import_jsx_runtime80.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime80.jsx)(
    "input",
    {
      ref: inputRef,
      type: "text",
      value: value || "",
      onChange: (e2) => onChange(e2.target.value),
      onKeyDown: handleKeyDown,
      placeholder: field.description || `请输入${field.name}`,
      disabled: field.locked,
      className: cn2(
        "w-full h-9 px-3 rounded-md text-sm",
        "border transition-all",
        "focus:outline-none focus:ring-2",
        error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
        field.locked && "bg-gray-50 cursor-not-allowed"
      ),
      style: {
        backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
        borderColor: error ? "#fca5a5" : tokens.colors.border.default
      }
    }
  ) });
}

// ../../packages/aitable/src/components/add-record/field-editors/LongTextEditor.tsx
var import_react227 = __toESM(require_react(), 1);
var import_jsx_runtime81 = __toESM(require_jsx_runtime(), 1);
function LongTextEditor({
  field,
  value,
  onChange,
  error,
  autoFocus
}) {
  const textareaRef = (0, import_react227.useRef)(null);
  (0, import_react227.useEffect)(() => {
    if (autoFocus && textareaRef.current) {
      textareaRef.current.focus();
    }
  }, [autoFocus]);
  return (0, import_jsx_runtime81.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime81.jsx)(
    "textarea",
    {
      ref: textareaRef,
      value: value || "",
      onChange: (e2) => onChange(e2.target.value),
      placeholder: field.description || `请输入${field.name}`,
      disabled: field.locked,
      rows: 4,
      className: cn2(
        "w-full px-3 py-2 rounded-md text-sm",
        "border transition-all resize-vertical",
        "focus:outline-none focus:ring-2",
        error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
        field.locked && "bg-gray-50 cursor-not-allowed"
      ),
      style: {
        backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
        borderColor: error ? "#fca5a5" : tokens.colors.border.default
      }
    }
  ) });
}

// ../../packages/aitable/src/components/add-record/field-editors/NumberEditor.tsx
var import_react228 = __toESM(require_react(), 1);
var import_jsx_runtime82 = __toESM(require_jsx_runtime(), 1);
function NumberEditor2({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react228.useRef)(null);
  (0, import_react228.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  const handleChange = (e2) => {
    const val = e2.target.value;
    if (val === "" || val === "-" || val === ".") {
      onChange(val);
    } else {
      const num = Number(val);
      if (!isNaN(num)) {
        onChange(num);
      }
    }
  };
  const { min: min3, max: max3, precision } = field.options || {};
  return (0, import_jsx_runtime82.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime82.jsx)(
    "input",
    {
      ref: inputRef,
      type: "number",
      value: value ?? "",
      onChange: handleChange,
      onKeyDown: handleKeyDown,
      placeholder: field.description || `请输入${field.name}`,
      disabled: field.locked,
      min: min3,
      max: max3,
      step: precision !== void 0 ? Math.pow(10, -precision) : "any",
      className: cn2(
        "w-full h-9 px-3 rounded-md text-sm",
        "border transition-all",
        "focus:outline-none focus:ring-2",
        error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
        field.locked && "bg-gray-50 cursor-not-allowed"
      ),
      style: {
        backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
        borderColor: error ? "#fca5a5" : tokens.colors.border.default
      }
    }
  ) });
}

// ../../packages/aitable/src/components/add-record/field-editors/BooleanEditor.tsx
var import_jsx_runtime83 = __toESM(require_jsx_runtime(), 1);
function BooleanEditor2({
  field,
  value,
  onChange,
  error
}) {
  const checked = Boolean(value);
  return (0, import_jsx_runtime83.jsxs)("div", { className: "w-full flex items-center gap-3", children: [
    (0, import_jsx_runtime83.jsx)(
      "button",
      {
        type: "button",
        role: "switch",
        "aria-checked": checked,
        disabled: field.locked,
        onClick: () => onChange(!checked),
        className: cn2(
          "relative inline-flex h-6 w-11 shrink-0 rounded-full",
          "border-2 border-transparent transition-colors",
          "focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2",
          "disabled:cursor-not-allowed disabled:opacity-50",
          checked ? "bg-blue-600" : "bg-gray-200"
        ),
        style: {
          backgroundColor: checked ? "#3b82f6" : field.locked ? tokens.colors.surface.disabled : "#e5e7eb"
        },
        children: (0, import_jsx_runtime83.jsx)(
          "span",
          {
            "aria-hidden": "true",
            className: cn2(
              "pointer-events-none inline-block h-5 w-5 rounded-full",
              "bg-white shadow-lg ring-0 transition-transform",
              checked ? "translate-x-5" : "translate-x-0"
            )
          }
        )
      }
    ),
    (0, import_jsx_runtime83.jsx)("span", { className: "text-sm text-gray-700", children: checked ? "已选中" : "未选中" })
  ] });
}

// ../../packages/aitable/src/components/add-record/field-editors/DateEditor.tsx
var import_react229 = __toESM(require_react(), 1);
var import_jsx_runtime84 = __toESM(require_jsx_runtime(), 1);
function DateEditor2({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react229.useRef)(null);
  (0, import_react229.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  const inputValue = value ? value instanceof Date ? format(value, "yyyy-MM-dd") : typeof value === "string" ? value.split("T")[0] : "" : "";
  const handleChange = (e2) => {
    const dateStr = e2.target.value;
    if (dateStr) {
      onChange(dateStr);
    } else {
      onChange(null);
    }
  };
  return (0, import_jsx_runtime84.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime84.jsx)(
    "input",
    {
      ref: inputRef,
      type: "date",
      value: inputValue,
      onChange: handleChange,
      onKeyDown: handleKeyDown,
      disabled: field.locked,
      className: cn2(
        "w-full h-9 px-3 rounded-md text-sm",
        "border transition-all",
        "focus:outline-none focus:ring-2",
        error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
        field.locked && "bg-gray-50 cursor-not-allowed"
      ),
      style: {
        backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
        borderColor: error ? "#fca5a5" : tokens.colors.border.default
      }
    }
  ) });
}

// ../../packages/aitable/src/components/add-record/field-editors/SelectEditor.tsx
var import_react230 = __toESM(require_react(), 1);
var import_jsx_runtime85 = __toESM(require_jsx_runtime(), 1);
function SelectEditor2({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const selectRef = (0, import_react230.useRef)(null);
  const choices = field.options?.choices || [];
  (0, import_react230.useEffect)(() => {
    if (autoFocus && selectRef.current) {
      selectRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  if (choices.length === 0) {
    return (0, import_jsx_runtime85.jsx)("div", { className: "w-full h-9 px-3 rounded-md text-sm flex items-center bg-gray-50 text-gray-500 border border-gray-300", children: "暂无选项" });
  }
  return (0, import_jsx_runtime85.jsxs)("div", { className: "w-full relative", children: [
    (0, import_jsx_runtime85.jsxs)(
      "select",
      {
        ref: selectRef,
        value: value || "",
        onChange: (e2) => onChange(e2.target.value || null),
        onKeyDown: handleKeyDown,
        disabled: field.locked,
        className: cn2(
          "w-full h-9 pl-3 pr-8 rounded-md text-sm appearance-none",
          "border transition-all",
          "focus:outline-none focus:ring-2",
          error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
          field.locked && "bg-gray-50 cursor-not-allowed"
        ),
        style: {
          backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
          borderColor: error ? "#fca5a5" : tokens.colors.border.default
        },
        children: [
          (0, import_jsx_runtime85.jsx)("option", { value: "", children: "-- 请选择 --" }),
          choices.map((choice) => (0, import_jsx_runtime85.jsx)("option", { value: choice.id, children: choice.name }, choice.id))
        ]
      }
    ),
    (0, import_jsx_runtime85.jsx)(
      ChevronDown2,
      {
        size: 16,
        className: "absolute right-2 top-1/2 -translate-y-1/2 pointer-events-none text-gray-400"
      }
    )
  ] });
}

// ../../packages/aitable/src/components/add-record/field-editors/MultiSelectEditor.tsx
var import_react231 = __toESM(require_react(), 1);
var import_jsx_runtime86 = __toESM(require_jsx_runtime(), 1);
function MultiSelectEditor({
  field,
  value,
  onChange,
  error
}) {
  const choices = field.options?.choices || [];
  const selectedIds = Array.isArray(value) ? value : [];
  const [isOpen, setIsOpen] = (0, import_react231.useState)(false);
  const handleToggle = (choiceId) => {
    const newSelection = selectedIds.includes(choiceId) ? selectedIds.filter((id) => id !== choiceId) : [...selectedIds, choiceId];
    onChange(newSelection);
  };
  const handleRemove = (choiceId) => {
    onChange(selectedIds.filter((id) => id !== choiceId));
  };
  const selectedChoices = choices.filter((c) => selectedIds.includes(c.id));
  if (choices.length === 0) {
    return (0, import_jsx_runtime86.jsx)("div", { className: "w-full h-9 px-3 rounded-md text-sm flex items-center bg-gray-50 text-gray-500 border border-gray-300", children: "暂无选项" });
  }
  return (0, import_jsx_runtime86.jsxs)("div", { className: "w-full", children: [
    selectedChoices.length > 0 && (0, import_jsx_runtime86.jsx)("div", { className: "flex flex-wrap gap-2 mb-2", children: selectedChoices.map((choice) => (0, import_jsx_runtime86.jsxs)(
      "span",
      {
        className: "inline-flex items-center gap-1 px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-700",
        style: {
          backgroundColor: choice.color ? `${choice.color}20` : "#dbeafe",
          color: choice.color || "#1e40af"
        },
        children: [
          choice.name,
          (0, import_jsx_runtime86.jsx)(
            "button",
            {
              type: "button",
              onClick: () => handleRemove(choice.id),
              className: "hover:bg-black/10 rounded p-0.5 transition-colors",
              disabled: field.locked,
              children: (0, import_jsx_runtime86.jsx)(X2, { size: 12 })
            }
          )
        ]
      },
      choice.id
    )) }),
    (0, import_jsx_runtime86.jsxs)("div", { className: "relative", children: [
      (0, import_jsx_runtime86.jsx)(
        "button",
        {
          type: "button",
          onClick: () => setIsOpen(!isOpen),
          disabled: field.locked,
          className: cn2(
            "w-full h-9 px-3 rounded-md text-sm text-left",
            "border transition-all",
            "focus:outline-none focus:ring-2",
            error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
            field.locked && "bg-gray-50 cursor-not-allowed"
          ),
          style: {
            backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
            borderColor: error ? "#fca5a5" : tokens.colors.border.default
          },
          children: selectedChoices.length === 0 ? (0, import_jsx_runtime86.jsx)("span", { className: "text-gray-500", children: "选择选项..." }) : (0, import_jsx_runtime86.jsxs)("span", { className: "text-gray-700", children: [
            "已选 ",
            selectedChoices.length,
            " 项"
          ] })
        }
      ),
      isOpen && !field.locked && (0, import_jsx_runtime86.jsxs)(import_jsx_runtime86.Fragment, { children: [
        (0, import_jsx_runtime86.jsx)(
          "div",
          {
            className: "fixed inset-0 z-10",
            onClick: () => setIsOpen(false)
          }
        ),
        (0, import_jsx_runtime86.jsx)(
          "div",
          {
            className: "absolute z-20 mt-1 w-full max-h-60 overflow-auto rounded-md bg-white shadow-lg border border-gray-200",
            style: {
              backgroundColor: tokens.colors.surface.base,
              borderColor: tokens.colors.border.default
            },
            children: choices.map((choice) => {
              const isSelected = selectedIds.includes(choice.id);
              return (0, import_jsx_runtime86.jsxs)(
                "label",
                {
                  className: "flex items-center gap-2 px-3 py-2 hover:bg-gray-50 cursor-pointer transition-colors",
                  style: {
                    backgroundColor: isSelected ? "#f0f9ff" : void 0
                  },
                  children: [
                    (0, import_jsx_runtime86.jsx)(
                      "input",
                      {
                        type: "checkbox",
                        checked: isSelected,
                        onChange: () => handleToggle(choice.id),
                        className: "w-4 h-4 text-blue-600 rounded focus:ring-blue-500"
                      }
                    ),
                    (0, import_jsx_runtime86.jsx)("span", { className: "text-sm", children: choice.name })
                  ]
                },
                choice.id
              );
            })
          }
        )
      ] })
    ] })
  ] });
}

// ../../packages/aitable/src/components/add-record/field-editors/RatingEditor.tsx
var import_jsx_runtime87 = __toESM(require_jsx_runtime(), 1);
function RatingEditor2({
  field,
  value,
  onChange,
  error
}) {
  const max3 = field.options?.max || 5;
  const currentRating = typeof value === "number" ? value : 0;
  const handleClick = (rating) => {
    if (field.locked) return;
    onChange(currentRating === rating ? 0 : rating);
  };
  return (0, import_jsx_runtime87.jsxs)("div", { className: "w-full", children: [
    (0, import_jsx_runtime87.jsxs)("div", { className: "flex items-center gap-1", children: [
      Array.from({ length: max3 }, (_2, i) => i + 1).map((rating) => {
        const isFilled = rating <= currentRating;
        return (0, import_jsx_runtime87.jsx)(
          "button",
          {
            type: "button",
            onClick: () => handleClick(rating),
            disabled: field.locked,
            className: cn2(
              "p-1 rounded transition-all",
              "hover:scale-110 active:scale-95",
              field.locked && "cursor-not-allowed opacity-50"
            ),
            "aria-label": `评分 ${rating}`,
            children: (0, import_jsx_runtime87.jsx)(
              Star,
              {
                size: 24,
                className: cn2(
                  "transition-all",
                  isFilled ? "fill-yellow-400 text-yellow-400" : "fill-none text-gray-300"
                )
              }
            )
          },
          rating
        );
      }),
      (0, import_jsx_runtime87.jsx)("span", { className: "ml-2 text-sm text-gray-600", children: currentRating > 0 ? `${currentRating} / ${max3}` : "未评分" })
    ] }),
    error && (0, import_jsx_runtime87.jsx)("p", { className: "mt-1 text-xs text-red-600", children: error })
  ] });
}

// ../../packages/aitable/src/components/add-record/field-editors/LinkEditor.tsx
var import_react232 = __toESM(require_react(), 1);
var import_jsx_runtime88 = __toESM(require_jsx_runtime(), 1);
function LinkEditor2({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react232.useRef)(null);
  (0, import_react232.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  return (0, import_jsx_runtime88.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime88.jsxs)("div", { className: "relative", children: [
    (0, import_jsx_runtime88.jsx)(
      Link,
      {
        size: 16,
        className: "absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"
      }
    ),
    (0, import_jsx_runtime88.jsx)(
      "input",
      {
        ref: inputRef,
        type: "url",
        value: value || "",
        onChange: (e2) => onChange(e2.target.value),
        onKeyDown: handleKeyDown,
        placeholder: "https://example.com",
        disabled: field.locked,
        className: cn2(
          "w-full h-9 pl-9 pr-3 rounded-md text-sm",
          "border transition-all",
          "focus:outline-none focus:ring-2",
          error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
          field.locked && "bg-gray-50 cursor-not-allowed"
        ),
        style: {
          backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
          borderColor: error ? "#fca5a5" : tokens.colors.border.default
        }
      }
    )
  ] }) });
}

// ../../packages/aitable/src/components/add-record/field-editors/EmailEditor.tsx
var import_react233 = __toESM(require_react(), 1);
var import_jsx_runtime89 = __toESM(require_jsx_runtime(), 1);
function EmailEditor({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react233.useRef)(null);
  (0, import_react233.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  return (0, import_jsx_runtime89.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime89.jsxs)("div", { className: "relative", children: [
    (0, import_jsx_runtime89.jsx)(
      Mail,
      {
        size: 16,
        className: "absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"
      }
    ),
    (0, import_jsx_runtime89.jsx)(
      "input",
      {
        ref: inputRef,
        type: "email",
        value: value || "",
        onChange: (e2) => onChange(e2.target.value),
        onKeyDown: handleKeyDown,
        placeholder: "example@email.com",
        disabled: field.locked,
        className: cn2(
          "w-full h-9 pl-9 pr-3 rounded-md text-sm",
          "border transition-all",
          "focus:outline-none focus:ring-2",
          error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
          field.locked && "bg-gray-50 cursor-not-allowed"
        ),
        style: {
          backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
          borderColor: error ? "#fca5a5" : tokens.colors.border.default
        }
      }
    )
  ] }) });
}

// ../../packages/aitable/src/components/add-record/field-editors/PhoneEditor.tsx
var import_react234 = __toESM(require_react(), 1);
var import_jsx_runtime90 = __toESM(require_jsx_runtime(), 1);
function PhoneEditor({
  field,
  value,
  onChange,
  error,
  autoFocus,
  onEnter
}) {
  const inputRef = (0, import_react234.useRef)(null);
  (0, import_react234.useEffect)(() => {
    if (autoFocus && inputRef.current) {
      inputRef.current.focus();
    }
  }, [autoFocus]);
  const handleKeyDown = (e2) => {
    if (e2.key === "Enter" && onEnter) {
      e2.preventDefault();
      onEnter();
    }
  };
  return (0, import_jsx_runtime90.jsx)("div", { className: "w-full", children: (0, import_jsx_runtime90.jsxs)("div", { className: "relative", children: [
    (0, import_jsx_runtime90.jsx)(
      Phone,
      {
        size: 16,
        className: "absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"
      }
    ),
    (0, import_jsx_runtime90.jsx)(
      "input",
      {
        ref: inputRef,
        type: "tel",
        value: value || "",
        onChange: (e2) => onChange(e2.target.value),
        onKeyDown: handleKeyDown,
        placeholder: "138****8888",
        disabled: field.locked,
        className: cn2(
          "w-full h-9 pl-9 pr-3 rounded-md text-sm",
          "border transition-all",
          "focus:outline-none focus:ring-2",
          error ? "border-red-300 focus:border-red-500 focus:ring-red-200" : "border-gray-300 focus:border-blue-500 focus:ring-blue-200",
          field.locked && "bg-gray-50 cursor-not-allowed"
        ),
        style: {
          backgroundColor: field.locked ? tokens.colors.surface.disabled : tokens.colors.surface.base,
          borderColor: error ? "#fca5a5" : tokens.colors.border.default
        }
      }
    )
  ] }) });
}

// ../../packages/aitable/src/components/add-record/field-editors/FieldEditorRegistry.tsx
var EDITOR_MAP = {
  // 文本类
  text: TextEditor2,
  singleLineText: TextEditor2,
  longText: LongTextEditor,
  // 数字类
  number: NumberEditor2,
  // 布尔类
  boolean: BooleanEditor2,
  checkbox: BooleanEditor2,
  // 日期类
  date: DateEditor2,
  dateTime: DateEditor2,
  // 选择类
  singleSelect: SelectEditor2,
  multipleSelect: MultiSelectEditor,
  multiSelect: MultiSelectEditor,
  // 特殊类
  rating: RatingEditor2,
  link: LinkEditor2,
  url: LinkEditor2,
  email: EmailEditor,
  phone: PhoneEditor,
  // 关联类（暂不支持编辑）
  user: TextEditor2,
  // 临时用文本编辑器
  attachment: TextEditor2,
  // 临时用文本编辑器
  // 计算类（只读，不需要编辑器）
  formula: () => null,
  rollup: () => null,
  count: () => null,
  createdTime: () => null,
  lastModifiedTime: () => null,
  createdBy: () => null,
  lastModifiedBy: () => null,
  autoNumber: () => null,
  button: () => null
};
function getFieldEditor(fieldType) {
  const Editor = EDITOR_MAP[fieldType];
  if (!Editor) {
    console.warn(
      `No editor found for field type: ${fieldType}, using TextEditor as fallback`
    );
    return TextEditor2;
  }
  return Editor;
}
function isFieldEditable(fieldType) {
  const computedTypes = [
    "formula",
    "rollup",
    "count",
    "createdTime",
    "lastModifiedTime",
    "createdBy",
    "lastModifiedBy",
    "autoNumber",
    "button"
  ];
  return !computedTypes.includes(fieldType);
}

// ../../packages/aitable/src/components/add-record/validators.ts
var EMAIL_REGEX = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
var URL_REGEX = /^https?:\/\/.+/;
var PHONE_REGEX = /^1[3-9]\d{9}$/;
function validateField(field, value, locale) {
  if (field.required) {
    if (value === null || value === void 0 || value === "") {
      return locale.required;
    }
    if (Array.isArray(value) && value.length === 0) {
      return locale.required;
    }
  }
  if (value === null || value === void 0 || value === "") {
    return null;
  }
  switch (field.type) {
    case "number": {
      const num = Number(value);
      if (isNaN(num)) {
        return locale.invalidFormat;
      }
      if (field.options?.min !== void 0 && num < field.options.min) {
        return `最小值为 ${field.options.min}`;
      }
      if (field.options?.max !== void 0 && num > field.options.max) {
        return `最大值为 ${field.options.max}`;
      }
      break;
    }
    case "link": {
      if (!URL_REGEX.test(value)) {
        return "请输入有效的链接（以 http:// 或 https:// 开头）";
      }
      break;
    }
    case "email": {
      if (!EMAIL_REGEX.test(value)) {
        return "请输入有效的邮箱地址";
      }
      break;
    }
    case "phone": {
      if (!PHONE_REGEX.test(value)) {
        return "请输入有效的手机号码";
      }
      break;
    }
    case "date": {
      const date = new Date(value);
      if (isNaN(date.getTime())) {
        return "请输入有效的日期";
      }
      break;
    }
    case "rating": {
      const rating = Number(value);
      const max3 = field.options?.max || 5;
      if (isNaN(rating) || rating < 0 || rating > max3) {
        return `评分范围: 0-${max3}`;
      }
      break;
    }
    case "singleSelect": {
      const choices = field.options?.choices || [];
      if (choices.length > 0 && !choices.find((c) => c.id === value || c.name === value)) {
        return "请选择有效的选项";
      }
      break;
    }
    case "multipleSelect": {
      if (!Array.isArray(value)) {
        return "请选择至少一个选项";
      }
      const choices = field.options?.choices || [];
      if (choices.length > 0) {
        const validIds = choices.map((c) => c.id);
        const invalidValues = value.filter((v) => !validIds.includes(v));
        if (invalidValues.length > 0) {
          return "包含无效的选项";
        }
      }
      break;
    }
  }
  return null;
}
function validateForm(fields, values2, locale) {
  const errors = {};
  for (const field of fields) {
    if (field.visible === false || field.locked) {
      continue;
    }
    const value = values2[field.id];
    const error = validateField(field, value, locale);
    if (error) {
      errors[field.id] = error;
    }
  }
  return errors;
}
function hasErrors(errors) {
  return Object.keys(errors).length > 0;
}

// ../../packages/aitable/src/components/add-record/AddRecordDialog.tsx
var import_jsx_runtime91 = __toESM(require_jsx_runtime(), 1);
var DEFAULT_LOCALE = {
  title: "添加记录",
  cancel: "取消",
  save: "保存",
  saving: "保存中...",
  required: "此字段为必填项",
  invalidFormat: "格式不正确"
};
function AddRecordDialog(props) {
  const {
    isOpen,
    onClose,
    fields,
    tableId,
    adapter: adapter2,
    onSuccess,
    onError,
    defaultValues = {},
    customEditors = {},
    transformBeforeSubmit,
    locale: customLocale
  } = props;
  const locale = { ...DEFAULT_LOCALE, ...customLocale };
  const [values2, setValues] = (0, import_react235.useState)(defaultValues);
  const [errors, setErrors] = (0, import_react235.useState)({});
  const [isSubmitting, setIsSubmitting] = (0, import_react235.useState)(false);
  const [submitError, setSubmitError] = (0, import_react235.useState)(null);
  const dialogRef = (0, import_react235.useRef)(null);
  const previousActiveElement = (0, import_react235.useRef)(null);
  const resetForm = (0, import_react235.useCallback)(() => {
    setValues(defaultValues);
    setErrors({});
    setSubmitError(null);
  }, [defaultValues]);
  const editableFields = fields.filter(
    (field) => field.visible !== false && !field.locked && isFieldEditable(field.type)
  );
  const sortedFields = [...editableFields].sort((a, b2) => {
    if (a.isPrimary && !b2.isPrimary) return -1;
    if (!a.isPrimary && b2.isPrimary) return 1;
    return 0;
  });
  const handleValueChange = (0, import_react235.useCallback)((fieldId, value) => {
    setValues((prev) => ({ ...prev, [fieldId]: value }));
    setErrors((prev) => {
      const next = { ...prev };
      delete next[fieldId];
      return next;
    });
    setSubmitError(null);
  }, []);
  const handleSubmit = (0, import_react235.useCallback)(async () => {
    const validationErrors = validateForm(sortedFields, values2, locale);
    setErrors(validationErrors);
    if (hasErrors(validationErrors)) {
      return;
    }
    if (!adapter2) {
      setSubmitError("未配置数据适配器，无法保存");
      console.error("AddRecordDialog: adapter is required for submission");
      return;
    }
    setIsSubmitting(true);
    setSubmitError(null);
    try {
      let submitData = { ...values2 };
      if (transformBeforeSubmit) {
        submitData = transformBeforeSubmit(submitData);
      }
      const adapterInstance = createAdapter(adapter2);
      const record = await adapterInstance.createRecord(tableId, {
        fields: submitData
      });
      if (onSuccess) {
        onSuccess(record);
      }
      resetForm();
      onClose();
    } catch (error) {
      console.error("Failed to create record:", error);
      setSubmitError(error.message || "保存失败，请重试");
      if (onError) {
        onError(error);
      }
    } finally {
      setIsSubmitting(false);
    }
  }, [
    sortedFields,
    values2,
    locale,
    adapter2,
    tableId,
    transformBeforeSubmit,
    onSuccess,
    onError,
    onClose,
    resetForm
  ]);
  (0, import_react235.useEffect)(() => {
    if (!isOpen) return;
    const handleKeyDown = (e2) => {
      if (e2.key === "Escape" && !isSubmitting) {
        onClose();
      }
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [isOpen, isSubmitting, onClose]);
  (0, import_react235.useEffect)(() => {
    if (isOpen) {
      previousActiveElement.current = document.activeElement;
      document.body.style.overflow = "hidden";
      setTimeout(() => {
        const firstInput = dialogRef.current?.querySelector(
          "input:not([disabled]), textarea:not([disabled]), select:not([disabled])"
        );
        if (firstInput) {
          firstInput.focus();
        }
      }, 100);
    } else {
      document.body.style.overflow = "";
      if (previousActiveElement.current) {
        previousActiveElement.current.focus();
      }
    }
    return () => {
      document.body.style.overflow = "";
    };
  }, [isOpen]);
  (0, import_react235.useEffect)(() => {
    if (!isOpen || !dialogRef.current) return;
    const handleTabKey = (e2) => {
      if (e2.key !== "Tab") return;
      const focusableElements = dialogRef.current.querySelectorAll(
        'button:not([disabled]), input:not([disabled]), textarea:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex="-1"])'
      );
      const firstElement = focusableElements[0];
      const lastElement = focusableElements[focusableElements.length - 1];
      if (e2.shiftKey && document.activeElement === firstElement) {
        e2.preventDefault();
        lastElement?.focus();
      } else if (!e2.shiftKey && document.activeElement === lastElement) {
        e2.preventDefault();
        firstElement?.focus();
      }
    };
    document.addEventListener("keydown", handleTabKey);
    return () => document.removeEventListener("keydown", handleTabKey);
  }, [isOpen]);
  const handleFieldEnter = (0, import_react235.useCallback)(() => {
    if (!isSubmitting) {
      handleSubmit();
    }
  }, [isSubmitting, handleSubmit]);
  if (!isOpen) return null;
  return (0, import_react_dom5.createPortal)(
    (0, import_jsx_runtime91.jsxs)(
      "div",
      {
        className: "fixed inset-0 z-[1000] flex items-center justify-center p-4",
        "aria-modal": "true",
        role: "dialog",
        "aria-labelledby": "add-record-dialog-title",
        children: [
          (0, import_jsx_runtime91.jsx)(
            "div",
            {
              className: "fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity",
              onClick: () => !isSubmitting && onClose(),
              "aria-hidden": "true"
            }
          ),
          (0, import_jsx_runtime91.jsxs)(
            "div",
            {
              ref: dialogRef,
              className: cn2(
                "relative z-[1001] w-full rounded-lg bg-white",
                "max-w-2xl max-h-[90vh] flex flex-col",
                "shadow-2xl",
                "animate-in fade-in-0 zoom-in-95 duration-200"
              ),
              style: {
                backgroundColor: tokens.colors.surface.base,
                boxShadow: elevation.xl
              },
              children: [
                (0, import_jsx_runtime91.jsxs)(
                  "div",
                  {
                    className: "flex items-center justify-between px-6 py-4 border-b",
                    style: { borderColor: tokens.colors.border.subtle },
                    children: [
                      (0, import_jsx_runtime91.jsx)(
                        "h3",
                        {
                          id: "add-record-dialog-title",
                          className: "text-lg font-semibold",
                          style: { color: tokens.colors.text.primary },
                          children: locale.title
                        }
                      ),
                      (0, import_jsx_runtime91.jsx)(
                        "button",
                        {
                          type: "button",
                          onClick: onClose,
                          disabled: isSubmitting,
                          className: cn2(
                            "p-1 rounded-md text-gray-500 hover:text-gray-700",
                            "hover:bg-gray-100 transition-colors",
                            "focus:outline-none focus:ring-2 focus:ring-blue-500",
                            isSubmitting && "cursor-not-allowed opacity-50"
                          ),
                          "aria-label": "关闭",
                          children: (0, import_jsx_runtime91.jsx)(X2, { size: 20 })
                        }
                      )
                    ]
                  }
                ),
                (0, import_jsx_runtime91.jsxs)("div", { className: "flex-1 overflow-y-auto px-6 py-4", children: [
                  sortedFields.length === 0 ? (0, import_jsx_runtime91.jsx)("div", { className: "text-center py-8 text-gray-500", children: (0, import_jsx_runtime91.jsx)("p", { children: "暂无可编辑的字段" }) }) : (0, import_jsx_runtime91.jsx)("div", { className: "space-y-4", children: sortedFields.map((field) => {
                    const Editor = customEditors[field.type] || getFieldEditor(field.type);
                    const error = errors[field.id];
                    const value = values2[field.id];
                    return (0, import_jsx_runtime91.jsxs)("div", { className: "space-y-1.5", children: [
                      (0, import_jsx_runtime91.jsxs)(
                        "label",
                        {
                          htmlFor: `field-${field.id}`,
                          className: "flex items-center gap-1 text-sm font-medium",
                          style: { color: tokens.colors.text.primary },
                          children: [
                            (0, import_jsx_runtime91.jsx)("span", { children: field.name }),
                            field.required && (0, import_jsx_runtime91.jsx)("span", { className: "text-red-500", "aria-label": "必填", children: "*" }),
                            field.isPrimary && (0, import_jsx_runtime91.jsx)(
                              "span",
                              {
                                className: "text-xs px-1.5 py-0.5 rounded bg-blue-100 text-blue-700",
                                "aria-label": "主字段",
                                children: "主字段"
                              }
                            )
                          ]
                        }
                      ),
                      (0, import_jsx_runtime91.jsx)(
                        Editor,
                        {
                          field,
                          value,
                          onChange: (newValue) => handleValueChange(field.id, newValue),
                          error,
                          autoFocus: sortedFields.indexOf(field) === 0,
                          onEnter: handleFieldEnter
                        }
                      ),
                      error && (0, import_jsx_runtime91.jsxs)("p", { className: "text-xs text-red-600 flex items-center gap-1", children: [
                        (0, import_jsx_runtime91.jsx)(CircleAlert, { size: 12 }),
                        error
                      ] }),
                      field.description && !error && (0, import_jsx_runtime91.jsx)("p", { className: "text-xs text-gray-500", children: field.description })
                    ] }, field.id);
                  }) }),
                  submitError && (0, import_jsx_runtime91.jsxs)(
                    "div",
                    {
                      className: "mt-4 p-3 rounded-md bg-red-50 border border-red-200 flex items-start gap-2",
                      role: "alert",
                      children: [
                        (0, import_jsx_runtime91.jsx)(CircleAlert, { size: 16, className: "text-red-600 mt-0.5" }),
                        (0, import_jsx_runtime91.jsx)("p", { className: "text-sm text-red-700", children: submitError })
                      ]
                    }
                  )
                ] }),
                (0, import_jsx_runtime91.jsxs)(
                  "div",
                  {
                    className: "flex justify-end gap-2 px-6 py-4 border-t",
                    style: { borderColor: tokens.colors.border.subtle },
                    children: [
                      (0, import_jsx_runtime91.jsx)(
                        "button",
                        {
                          type: "button",
                          onClick: onClose,
                          disabled: isSubmitting,
                          className: cn2(
                            "px-4 h-9 rounded-md text-sm font-medium",
                            "border transition-all",
                            "hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500",
                            isSubmitting && "cursor-not-allowed opacity-50"
                          ),
                          style: {
                            borderColor: tokens.colors.border.default,
                            color: tokens.colors.text.primary
                          },
                          children: locale.cancel
                        }
                      ),
                      (0, import_jsx_runtime91.jsx)(
                        "button",
                        {
                          type: "button",
                          onClick: handleSubmit,
                          disabled: isSubmitting || sortedFields.length === 0,
                          className: cn2(
                            "px-4 h-9 rounded-md text-sm font-medium",
                            "bg-blue-600 text-white",
                            "hover:bg-blue-700 active:bg-blue-800",
                            "transition-all shadow-sm hover:shadow-md",
                            "focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2",
                            "disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-blue-600"
                          ),
                          children: isSubmitting ? (0, import_jsx_runtime91.jsxs)(import_jsx_runtime91.Fragment, { children: [
                            (0, import_jsx_runtime91.jsx)(LoaderCircle, { size: 16, className: "inline-block mr-2 animate-spin" }),
                            locale.saving
                          ] }) : locale.save
                        }
                      )
                    ]
                  }
                )
              ]
            }
          )
        ]
      }
    ),
    document.body
  );
}

// ../../packages/aitable/src/components/StandardDataView.tsx
var import_jsx_runtime92 = __toESM(require_jsx_runtime(), 1);
var DEFAULT_TABS = [
  { key: "table", label: "表" },
  { key: "chart", label: "示图" }
];
function StandardDataView(props) {
  const {
    state = "idle",
    loadingMessage,
    emptyStateProps,
    errorStateProps,
    showHeader = true,
    showToolbar = true,
    showStatus = true,
    tabs = DEFAULT_TABS,
    defaultTabKey = "table",
    onAdd,
    views,
    activeViewId,
    onViewChange,
    onCreateView,
    // 新增：视图重命名/删除（可选，未提供则走内置默认实现）
    onRenameView,
    onDeleteView,
    apiClient,
    sdk,
    tableId,
    fields,
    onFieldToggle,
    onFieldReorder,
    onFieldEdit,
    onFieldDelete,
    onFieldGroup,
    onFieldCopy,
    onFieldInsertLeft,
    onFieldInsertRight,
    onFieldFilter,
    onFieldSort,
    onFieldFreeze,
    onAddField,
    onAddColumn,
    onEditColumn,
    onDeleteColumn,
    onUpdateField,
    fieldConfigMode = "combobox",
    rowHeight: controlledRowHeight = "medium",
    onRowHeightChange,
    filterFields,
    filterConditions = [],
    onFilterConditionsChange,
    onFilteredDataChange,
    toolbarConfig,
    onToolbar,
    gridProps,
    statusContent,
    className,
    style
  } = props;
  const gridRef = (0, import_react236.useRef)(null);
  const [activeKey, setActiveKey] = (0, import_react236.useState)(defaultTabKey);
  const [deviceType, setDeviceType] = (0, import_react236.useState)(
    "desktop"
  );
  const [isTouch, setIsTouch] = (0, import_react236.useState)(false);
  const [rowHeightState, setRowHeightState] = (0, import_react236.useState)(controlledRowHeight);
  const [columnWidths, setColumnWidths] = (0, import_react236.useState)({});
  const [columnOrder, setColumnOrder] = (0, import_react236.useState)([]);
  const [columnMeta, setColumnMeta] = (0, import_react236.useState)([]);
  const [showAddFieldDialog, setShowAddFieldDialog] = (0, import_react236.useState)(false);
  const [showEditFieldDialog, setShowEditFieldDialog] = (0, import_react236.useState)(false);
  const [showAddRecordDialog, setShowAddRecordDialog] = (0, import_react236.useState)(false);
  const [editingField, setEditingField] = (0, import_react236.useState)(null);
  const [internalViews, setInternalViews] = (0, import_react236.useState)([]);
  const [internalActiveViewId, setInternalActiveViewId] = (0, import_react236.useState)("");
  const [viewsLoading, setViewsLoading] = (0, import_react236.useState)(false);
  const toast2 = useToast();
  const finalViews = (0, import_react236.useMemo)(() => {
    return views && views.length > 0 ? views : internalViews;
  }, [views, internalViews]);
  const finalActiveViewId = (0, import_react236.useMemo)(() => {
    return activeViewId || internalActiveViewId;
  }, [activeViewId, internalActiveViewId]);
  const { sendColumnOrder, sendColumnWidth } = useTableHeaderSync(
    (0, import_react236.useMemo)(() => {
      if (!props.syncHeader) {
        return {
          tableId: "",
          viewId: void 0,
          userId: "",
          onColumnOrder: void 0,
          onColumnWidth: void 0
        };
      }
      const onColumnOrder = (orderIds) => {
        if (!gridProps.columns || gridProps.columns.length === 0) return;
        const idToIndex = {};
        gridProps.columns.forEach((col, idx) => {
          if (col && typeof col.id === "string") {
            idToIndex[col.id] = idx;
          }
        });
        const newOrder = orderIds.map((id) => idToIndex[id]).filter((idx) => typeof idx === "number");
        if (newOrder.length > 0) {
          setColumnOrder(newOrder);
        }
      };
      const onColumnWidth = (widths) => {
        const sanitized = {};
        Object.keys(widths || {}).forEach((k) => {
          if (k) sanitized[k] = widths[k];
        });
        if (Object.keys(sanitized).length > 0) {
          setColumnWidths((prev) => ({ ...prev, ...sanitized }));
        }
      };
      return {
        tableId: props.syncHeader.tableId,
        viewId: finalActiveViewId,
        userId: props.syncHeader.userId,
        token: props.syncHeader.token,
        endpoint: props.syncHeader.endpoint,
        debug: props.syncHeader.debug,
        baseUrl: props.syncHeader.baseUrl,
        onColumnOrder,
        onColumnWidth
      };
    }, [props.syncHeader, gridProps.columns, finalActiveViewId])
  );
  (0, import_react236.useEffect)(() => {
    const loadViewConfig = async () => {
      if (!tableId || !(sdk || apiClient)) return;
      const currentViewId = activeViewId || internalActiveViewId;
      if (!currentViewId) return;
      try {
        const adapter2 = createAdapter(sdk || apiClient);
        const view = await adapter2.getView(tableId, currentViewId);
        if (view && view.columnMeta) {
          console.log("📋 加载视图列配置:", view.columnMeta);
          const columnMetaArray = Object.entries(view.columnMeta).map(
            ([fieldId, meta]) => ({
              fieldId,
              ...meta
            })
          );
          setColumnMeta(columnMetaArray);
          const widths = {};
          columnMetaArray.forEach((col) => {
            if (col.fieldId && col.width) {
              widths[col.fieldId] = col.width;
            }
          });
          setColumnWidths(widths);
        }
      } catch (error) {
        console.warn("⚠️ 加载视图配置失败:", error);
      }
    };
    loadViewConfig();
  }, [tableId, sdk, apiClient, activeViewId, internalActiveViewId]);
  (0, import_react236.useEffect)(() => {
    const updateDeviceType = () => {
      setDeviceType(getDeviceType());
      setIsTouch(isTouchDevice());
    };
    updateDeviceType();
    window.addEventListener("resize", updateDeviceType);
    return () => window.removeEventListener("resize", updateDeviceType);
  }, []);
  (0, import_react236.useEffect)(() => {
    return () => {
      if (resizeTimeoutRef.current) {
        clearTimeout(resizeTimeoutRef.current);
      }
    };
  }, []);
  (0, import_react236.useEffect)(() => {
    setRowHeightState(controlledRowHeight);
  }, [controlledRowHeight]);
  (0, import_react236.useEffect)(() => {
    if (!tableId || !(sdk || apiClient)) return;
    const loadViews = async () => {
      try {
        setViewsLoading(true);
        const adapter2 = createAdapter(sdk || apiClient);
        const viewsList = await adapter2.getViews(tableId);
        setInternalViews(viewsList);
        if (!activeViewId && viewsList.length > 0 && viewsList[0]?.id) {
          setInternalActiveViewId(viewsList[0].id);
        }
        console.log("✅ 视图数据自动加载完成:", {
          viewsCount: viewsList.length,
          activeViewId: activeViewId || viewsList[0]?.id
        });
      } catch (error) {
        console.error("❌ 加载视图数据失败:", error);
        toast2.showToast({ type: "error", message: "加载视图数据失败" });
      } finally {
        setViewsLoading(false);
      }
    };
    loadViews();
  }, [tableId, sdk, apiClient, activeViewId, toast2]);
  (0, import_react236.useEffect)(() => {
    if (activeViewId) {
      setInternalActiveViewId(activeViewId);
    }
  }, [activeViewId]);
  const handleInternalViewChange = (0, import_react236.useCallback)(
    async (viewId) => {
      if (onViewChange) {
        onViewChange(viewId);
        return;
      }
      setInternalActiveViewId(viewId);
      toast2.showToast({ type: "info", message: "视图切换成功" });
    },
    [onViewChange, toast2]
  );
  const handleInternalCreateView = (0, import_react236.useCallback)(
    async (viewType) => {
      if (onCreateView) {
        onCreateView(viewType);
        return;
      }
      try {
        if (!tableId || !(sdk || apiClient)) {
          console.error("❌ 缺少 sdk/apiClient 或 tableId");
          return;
        }
        const adapter2 = createAdapter(sdk || apiClient);
        const defaultNameBase = viewType === "grid" ? "表格视图" : "看板视图";
        const existingViewsOfType = internalViews.filter((v) => {
          if (v.type !== viewType) return false;
          const pattern = new RegExp(`^${defaultNameBase} \\d+$`);
          return pattern.test(v.name);
        });
        const existingNumbers = existingViewsOfType.map((v) => {
          const match2 = v.name.match(
            new RegExp(`^${defaultNameBase} (\\d+)$`)
          );
          return match2 ? parseInt(match2[1], 10) : 0;
        }).filter((num) => num > 0).sort((a, b2) => a - b2);
        let nextIndex = 1;
        for (const num of existingNumbers) {
          if (num === nextIndex) {
            nextIndex++;
          } else {
            break;
          }
        }
        const name = `${defaultNameBase} ${nextIndex}`;
        const newView = await adapter2.createView(String(tableId), {
          tableId: String(tableId),
          name,
          type: viewType
        });
        setInternalViews((prev) => [...prev, newView]);
        setInternalActiveViewId(newView.id);
        toast2.showToast({
          type: "success",
          message: `已创建${name}并自动切换`
        });
      } catch (error) {
        console.error("❌ 创建视图失败:", error);
        toast2.showToast({ type: "error", message: "创建视图失败" });
      }
    },
    [onCreateView, sdk, apiClient, tableId, internalViews, toast2]
  );
  const handleInternalRenameView = (0, import_react236.useCallback)(
    async (viewId, newName) => {
      if (onRenameView) {
        onRenameView(viewId, newName);
        return;
      }
      try {
        if (!tableId || !(sdk || apiClient)) return;
        const adapter2 = createAdapter(sdk || apiClient);
        const updated = await adapter2.updateView(
          tableId,
          viewId,
          { name: newName }
        );
        setInternalViews(
          (prev) => prev.map((v) => v.id === viewId ? updated : v)
        );
        toast2.showToast({ type: "success", message: "重命名成功" });
      } catch (e2) {
        console.error("❌ 重命名视图失败:", e2);
        toast2.showToast({ type: "error", message: "重命名失败" });
      }
    },
    [onRenameView, sdk, apiClient, tableId, toast2]
  );
  const handleInternalDeleteView = (0, import_react236.useCallback)(
    async (viewId) => {
      if (onDeleteView) {
        onDeleteView(viewId);
        return;
      }
      try {
        if (!tableId || !(sdk || apiClient)) return;
        const adapter2 = createAdapter(sdk || apiClient);
        await adapter2.deleteView(tableId, viewId);
        setInternalViews((prev) => prev.filter((v) => v.id !== viewId));
        setInternalActiveViewId(
          (prev) => prev === viewId ? internalViews[0]?.id || "" : prev
        );
        toast2.showToast({ type: "success", message: "已删除视图" });
      } catch (e2) {
        console.error("❌ 删除视图失败:", e2);
        toast2.showToast({ type: "error", message: "删除失败" });
      }
    },
    [onDeleteView, sdk, apiClient, tableId, toast2, internalViews]
  );
  const handleAddField = (0, import_react236.useCallback)(
    async (fieldName, fieldType, options) => {
      if (onAddField) {
        onAddField(fieldName, fieldType);
        return;
      }
      try {
        if (!tableId || !(sdk || apiClient)) {
          console.error("❌ 缺少 sdk/apiClient 或 tableId");
          return;
        }
        const adapter2 = createAdapter(sdk || apiClient);
        await adapter2.createField(tableId, {
          name: fieldName,
          type: fieldType,
          options: options || {}
        });
        setShowAddFieldDialog(false);
        gridProps.onDataRefresh?.();
        toast2.showToast({ type: "success", message: "字段创建成功" });
      } catch (error) {
        console.error("❌ 字段创建失败:", error);
        toast2.showToast({ type: "error", message: "字段创建失败" });
      }
    },
    [onAddField, sdk, apiClient, tableId, gridProps, toast2]
  );
  const handleCloseAddFieldDialog = (0, import_react236.useCallback)(() => {
    setShowAddFieldDialog(false);
  }, []);
  const handleCloseAddRecordDialog = (0, import_react236.useCallback)(() => {
    setShowAddRecordDialog(false);
  }, []);
  const handleAddRecordSuccess = (0, import_react236.useCallback)(() => {
    gridProps.onDataRefresh?.();
    toast2.showToast({ type: "success", message: "记录添加成功" });
  }, [gridProps, toast2]);
  const handleAddRecordError = (0, import_react236.useCallback)(() => {
    toast2.showToast({ type: "error", message: "记录添加失败" });
  }, [toast2]);
  const handleGridAddColumn = (0, import_react236.useCallback)(
    async (fieldType, insertIndex, fieldName, options) => {
      if (onAddColumn) {
        onAddColumn(fieldType, insertIndex, fieldName, options);
        return;
      }
      try {
        if (!tableId || !(sdk || apiClient)) return;
        const adapter2 = createAdapter(sdk || apiClient);
        await adapter2.createField(tableId, {
          name: fieldName || `新字段_${Date.now()}`,
          type: fieldType,
          options: options || {}
        });
        gridProps.onDataRefresh?.();
        toast2.showToast({ type: "success", message: "字段添加成功" });
      } catch (error) {
        console.error("❌ Grid 字段创建失败:", error);
        toast2.showToast({ type: "error", message: "字段添加失败" });
      }
    },
    [onAddColumn, sdk, apiClient, tableId, gridProps, toast2]
  );
  const resizeTimeoutRef = (0, import_react236.useRef)();
  const handleColumnResize = (0, import_react236.useCallback)(
    (column, newSize, colIndex) => {
      console.log("🔍 StandardDataView handleColumnResize 被调用:", {
        column: column.name,
        newSize,
        colIndex,
        columnId: column.id
      });
      if (gridProps.onColumnResize) {
        gridProps.onColumnResize(column, newSize, colIndex);
        return;
      }
      if (!column || typeof column.id !== "string") {
        return;
      }
      setColumnWidths((prev) => ({ ...prev, [column.id]: newSize }));
      try {
        sendColumnWidth && sendColumnWidth({ [column.id]: newSize });
      } catch {
      }
      if (resizeTimeoutRef.current) {
        clearTimeout(resizeTimeoutRef.current);
      }
      resizeTimeoutRef.current = setTimeout(async () => {
        try {
          if (!tableId || !(sdk || apiClient)) {
            console.warn("⚠️ 缺少 tableId 或 SDK/API 客户端，无法保存列宽配置");
            return;
          }
          const adapter2 = createAdapter(sdk || apiClient);
          const currentViewId = activeViewId || internalActiveViewId;
          if (!currentViewId) {
            console.warn("⚠️ 缺少视图 ID，无法保存列宽配置");
            return;
          }
          const viewId = currentViewId;
          const currentColumnMeta = columnMeta || [];
          let updatedColumnMeta = [...currentColumnMeta];
          const existingColumnIndex = updatedColumnMeta.findIndex(
            (col) => col.fieldId === column.id
          );
          if (existingColumnIndex >= 0) {
            updatedColumnMeta[existingColumnIndex] = {
              ...updatedColumnMeta[existingColumnIndex],
              width: newSize
            };
          } else {
            updatedColumnMeta.push({
              fieldId: column.id,
              width: newSize,
              visible: true,
              order: colIndex
            });
          }
          console.log("💾 保存列宽配置:", {
            viewId: currentViewId,
            columnId: column.id,
            newWidth: newSize,
            columnMeta: updatedColumnMeta
          });
          if (sdk) {
            await sdk.views.setColumnWidth(
              viewId,
              column.id,
              newSize
            );
          } else if (apiClient) {
            const response = await fetch(
              `/api/v1/views/${viewId}/column-meta`,
              {
                method: "PATCH",
                headers: {
                  "Content-Type": "application/json",
                  Authorization: `Bearer ${apiClient.config.accessToken}`
                },
                body: JSON.stringify({
                  columnMeta: updatedColumnMeta
                })
              }
            );
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
          } else {
            throw new Error("No SDK or API client available");
          }
          console.log("✅ 列宽配置保存成功");
          setColumnMeta(updatedColumnMeta);
          try {
            sendColumnWidth && sendColumnWidth({ [column.id]: newSize });
          } catch {
          }
        } catch (error) {
          console.error("❌ 保存列宽配置失败:", error);
          toast2.showToast({
            type: "error",
            message: "保存列宽配置失败"
          });
        }
      }, 500);
    },
    [
      gridProps,
      tableId,
      sdk,
      apiClient,
      activeViewId,
      internalActiveViewId,
      columnMeta,
      toast2,
      sendColumnWidth
    ]
  );
  const handleColumnOrdered = (0, import_react236.useCallback)(
    (dragColIndexCollection, dropColIndex) => {
      if (gridProps.onColumnOrdered) {
        gridProps.onColumnOrdered(dragColIndexCollection, dropColIndex);
        return;
      }
      setColumnOrder((prev) => {
        const initial2 = prev.length === 0 && Array.isArray(gridProps.columns) ? Array.from({ length: gridProps.columns.length }, (_2, i) => i) : prev;
        const newOrder = [...initial2];
        const draggedItems = [...dragColIndexCollection].sort((a, b2) => b2 - a);
        draggedItems.forEach((index3) => newOrder.splice(index3, 1));
        const adjustedDropIndex = draggedItems[0] < dropColIndex ? dropColIndex - draggedItems.length : dropColIndex;
        newOrder.splice(adjustedDropIndex, 0, ...dragColIndexCollection);
        try {
          if (Array.isArray(gridProps.columns) && gridProps.columns.length > 0) {
            const orderedIds = newOrder.map(
              (idx) => gridProps.columns[idx]?.id
            ).filter(
              (id) => typeof id === "string" && id.length > 0
            );
            if (orderedIds.length > 0) {
              sendColumnOrder && sendColumnOrder(orderedIds);
            }
          }
        } catch {
        }
        (async () => {
          try {
            if (!tableId || !(sdk || apiClient)) return;
            const currentViewId = activeViewId || internalActiveViewId;
            if (!currentViewId || !Array.isArray(gridProps.columns)) return;
            const payload = newOrder.map((idx, order) => ({
              fieldId: String(
                (gridProps.columns && gridProps.columns[idx] && gridProps.columns[idx].id) ?? ""
              ),
              order,
              // 可携带已有宽度，避免被覆盖
              width: columnWidths[String(
                (gridProps.columns && gridProps.columns[idx] && gridProps.columns[idx].id) ?? ""
              )]
            }));
            if (sdk) {
              await sdk.views.updateColumnMeta(currentViewId, payload);
            } else if (apiClient) {
              await fetch(
                `/api/v1/views/${String(currentViewId)}/column-meta`,
                {
                  method: "PATCH",
                  headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${apiClient.config.accessToken}`
                  },
                  body: JSON.stringify({ columnMeta: payload })
                }
              );
            }
            setColumnMeta((prevMeta) => {
              const metaById = {};
              (prevMeta || []).forEach((m) => {
                metaById[m.fieldId] = m;
              });
              payload.forEach((m) => {
                metaById[m.fieldId] = { ...metaById[m.fieldId] || {}, ...m };
              });
              return Object.values(metaById);
            });
            try {
              const orderedIds = newOrder.map(
                (idx) => gridProps.columns[idx]?.id
              ).filter(
                (id) => typeof id === "string" && id.length > 0
              );
              if (orderedIds.length > 0) {
                sendColumnOrder && sendColumnOrder(orderedIds);
              }
            } catch {
            }
          } catch (e2) {
            console.warn("⚠️ 列顺序持久化失败:", e2);
          }
        })();
        return newOrder;
      });
    },
    [
      gridProps,
      sendColumnOrder,
      tableId,
      sdk,
      apiClient,
      activeViewId,
      internalActiveViewId,
      columnWidths
    ]
  );
  const handleRowHeightChange = (0, import_react236.useCallback)(
    (newRowHeight) => {
      setRowHeightState(newRowHeight);
      onRowHeightChange?.(newRowHeight);
    },
    [onRowHeightChange]
  );
  const isMobile = deviceType === "mobile";
  const resolvedRowHeight = (0, import_react236.useMemo)(() => {
    const heightMap = {
      short: 28,
      medium: 32,
      tall: 40,
      "extra-tall": 56
    };
    return heightMap[rowHeightState] || 32;
  }, [rowHeightState]);
  const enhancedGridProps = (0, import_react236.useMemo)(() => {
    if (!gridProps || !gridProps.columns) return gridProps;
    const finalColumnOrder = columnOrder.length === 0 ? Array.from({ length: gridProps.columns.length }, (_2, i) => i) : columnOrder;
    const reorderedColumns = finalColumnOrder.map((originalIndex) => {
      const column = gridProps.columns[originalIndex];
      const nameSafe = typeof column.name === "string" ? column.name : String(column.name ?? "");
      const idSafe = typeof column.id === "string" ? column.id : String(column.id ?? "");
      return {
        ...column,
        name: nameSafe,
        id: idSafe,
        width: columnWidths[idSafe] ?? column.width ?? 150
      };
    });
    return { ...gridProps, columns: reorderedColumns };
  }, [gridProps, columnWidths, columnOrder]);
  return (0, import_jsx_runtime92.jsxs)(
    "div",
    {
      className: cn2("flex h-full w-full flex-col", className),
      style,
      role: "application",
      "aria-label": "数据视图",
      children: [
        showHeader && (0, import_jsx_runtime92.jsx)(
          ViewHeader,
          {
            tabs,
            activeTabKey: activeKey,
            onTabChange: setActiveKey,
            views: finalViews,
            activeViewId: finalActiveViewId,
            onViewChange: handleInternalViewChange,
            onCreateView: handleInternalCreateView,
            onRenameView: handleInternalRenameView,
            onDeleteView: handleInternalDeleteView,
            onAdd,
            isMobile,
            isTouch,
            syncHeader: props.syncHeader ? {
              tableId: props.syncHeader.tableId,
              userId: props.syncHeader.userId,
              token: props.syncHeader.token,
              endpoint: props.syncHeader.endpoint,
              debug: props.syncHeader.debug,
              onColumnOrder: (orderIds) => {
                if (!gridProps.columns) return;
                const idToIndex = {};
                gridProps.columns.forEach((c, i) => {
                  if (c && c.id) idToIndex[String(c.id)] = i;
                });
                const newOrder = orderIds.map((id) => idToIndex[id]).filter((v) => typeof v === "number");
                if (newOrder.length > 0) setColumnOrder(newOrder);
              },
              onColumnWidth: (widths) => setColumnWidths((prev) => ({ ...prev, ...widths }))
            } : void 0
          }
        ),
        showToolbar && activeKey === "table" && (0, import_jsx_runtime92.jsx)(
          ViewToolbar,
          {
            config: toolbarConfig,
            fields,
            fieldConfigMode,
            onFieldToggle,
            onFieldReorder,
            onFieldEdit,
            onFieldDelete,
            onFieldGroup,
            onFieldCopy,
            onFieldInsertLeft,
            onFieldInsertRight,
            onFieldFilter,
            onFieldSort,
            onFieldFreeze,
            rowHeight: rowHeightState,
            onRowHeightChange: handleRowHeightChange,
            filterFields,
            filterConditions,
            onFilterConditionsChange,
            onFilteredDataChange,
            onAddRecord: () => setShowAddRecordDialog(true),
            onUndo: onToolbar?.onUndo,
            onRedo: onToolbar?.onRedo,
            onFilter: onToolbar?.onFilter,
            onSort: onToolbar?.onSort,
            onGroup: onToolbar?.onGroup,
            isMobile
          }
        ),
        activeKey === "table" ? (0, import_jsx_runtime92.jsx)(
          ViewContent,
          {
            state,
            loadingMessage,
            emptyStateProps,
            errorStateProps,
            gridProps: enhancedGridProps,
            gridRef,
            rowHeight: resolvedRowHeight,
            onAddColumn: handleGridAddColumn,
            onEditColumn,
            onDeleteColumn,
            onColumnResize: handleColumnResize,
            onColumnOrdered: handleColumnOrdered
          }
        ) : (0, import_jsx_runtime92.jsx)("div", { className: "flex flex-1 items-center justify-center text-sm text-gray-500", children: "图表视图将在后续版本中提供" }),
        showStatus && (0, import_jsx_runtime92.jsx)(ViewStatusBar, { recordCount: gridProps.rowCount, isMobile, children: statusContent }),
        fields && tableId && (0, import_jsx_runtime92.jsxs)(import_jsx_runtime92.Fragment, { children: [
          (0, import_jsx_runtime92.jsx)(
            AddFieldDialog,
            {
              isOpen: showAddFieldDialog,
              onClose: handleCloseAddFieldDialog,
              onConfirm: handleAddField
            }
          ),
          (0, import_jsx_runtime92.jsx)(
            AddRecordDialog,
            {
              isOpen: showAddRecordDialog,
              onClose: handleCloseAddRecordDialog,
              fields,
              tableId,
              adapter: sdk || apiClient,
              onSuccess: handleAddRecordSuccess,
              onError: handleAddRecordError
            }
          )
        ] })
      ]
    }
  );
}

// ../../packages/aitable/src/components/filter/FilterExample.tsx
var import_react237 = __toESM(require_react(), 1);
var import_jsx_runtime93 = __toESM(require_jsx_runtime(), 1);
var SAMPLE_DATA = [
  {
    id: 1,
    name: "张三",
    age: 25,
    department: "技术部",
    salary: 15e3,
    joinDate: "2023-01-15"
  },
  {
    id: 2,
    name: "李四",
    age: 30,
    department: "产品部",
    salary: 18e3,
    joinDate: "2022-08-20"
  },
  {
    id: 3,
    name: "王五",
    age: 28,
    department: "技术部",
    salary: 16e3,
    joinDate: "2023-03-10"
  },
  {
    id: 4,
    name: "赵六",
    age: 35,
    department: "市场部",
    salary: 2e4,
    joinDate: "2021-12-05"
  },
  {
    id: 5,
    name: "钱七",
    age: 26,
    department: "技术部",
    salary: 14e3,
    joinDate: "2023-06-18"
  },
  {
    id: 6,
    name: "孙八",
    age: 32,
    department: "产品部",
    salary: 19e3,
    joinDate: "2022-11-30"
  }
];
var SAMPLE_FIELDS = [
  { id: "name", name: "姓名", type: "text" },
  { id: "age", name: "年龄", type: "number" },
  {
    id: "department",
    name: "部门",
    type: "select",
    options: ["技术部", "产品部", "市场部", "运营部"]
  },
  { id: "salary", name: "薪资", type: "number" },
  { id: "joinDate", name: "入职日期", type: "date" }
];
function FilterExample() {
  const [filterConditions, setFilterConditions] = (0, import_react237.useState)(
    []
  );
  const [filteredData, setFilteredData] = (0, import_react237.useState)(SAMPLE_DATA);
  const handleFilterConditionsChange = (conditions) => {
    setFilterConditions(conditions);
  };
  const handleFilteredDataChange = (data) => {
    setFilteredData(data);
  };
  return (0, import_jsx_runtime93.jsx)("div", { className: "p-6 space-y-6", children: (0, import_jsx_runtime93.jsxs)("div", { children: [
    (0, import_jsx_runtime93.jsx)("h2", { className: "text-xl font-semibold mb-4", children: "过滤功能示例" }),
    (0, import_jsx_runtime93.jsx)("div", { className: "mb-6", children: (0, import_jsx_runtime93.jsx)(
      ViewToolbar,
      {
        config: {
          showFilter: true,
          showSort: true,
          showGroup: true
        },
        filterFields: SAMPLE_FIELDS,
        filterConditions,
        onFilterConditionsChange: handleFilterConditionsChange,
        onFilteredDataChange: handleFilteredDataChange
      }
    ) }),
    (0, import_jsx_runtime93.jsxs)("div", { className: "mb-4 p-4 bg-gray-50 rounded-lg", children: [
      (0, import_jsx_runtime93.jsx)("h3", { className: "font-medium mb-2", children: "当前过滤状态：" }),
      filterConditions.length === 0 ? (0, import_jsx_runtime93.jsxs)("p", { className: "text-gray-600", children: [
        "无过滤条件，显示全部 ",
        SAMPLE_DATA.length,
        " 条数据"
      ] }) : (0, import_jsx_runtime93.jsxs)("div", { children: [
        (0, import_jsx_runtime93.jsxs)("p", { className: "text-gray-600 mb-2", children: [
          "已设置 ",
          filterConditions.length,
          " 个过滤条件，显示",
          " ",
          filteredData.length,
          " 条数据"
        ] }),
        (0, import_jsx_runtime93.jsx)("div", { className: "space-y-1", children: filterConditions.map((condition, index3) => {
          const field = SAMPLE_FIELDS.find(
            (f) => f.id === condition.fieldId
          );
          return (0, import_jsx_runtime93.jsxs)("div", { className: "text-sm text-gray-700", children: [
            index3 + 1,
            ". ",
            field?.name,
            " ",
            condition.operator,
            " ",
            condition.value
          ] }, condition.id);
        }) })
      ] })
    ] }),
    (0, import_jsx_runtime93.jsx)("div", { className: "overflow-x-auto", children: (0, import_jsx_runtime93.jsxs)("table", { className: "w-full border-collapse border border-gray-300", children: [
      (0, import_jsx_runtime93.jsx)("thead", { children: (0, import_jsx_runtime93.jsxs)("tr", { className: "bg-gray-100", children: [
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "ID" }),
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "姓名" }),
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "年龄" }),
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "部门" }),
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "薪资" }),
        (0, import_jsx_runtime93.jsx)("th", { className: "border border-gray-300 px-4 py-2 text-left", children: "入职日期" })
      ] }) }),
      (0, import_jsx_runtime93.jsx)("tbody", { children: filteredData.map((item) => (0, import_jsx_runtime93.jsxs)("tr", { className: "hover:bg-gray-50", children: [
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.id }),
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.name }),
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.age }),
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.department }),
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.salary }),
        (0, import_jsx_runtime93.jsx)("td", { className: "border border-gray-300 px-4 py-2", children: item.joinDate })
      ] }, item.id)) })
    ] }) }),
    (0, import_jsx_runtime93.jsxs)("div", { className: "mt-6 p-4 bg-blue-50 rounded-lg", children: [
      (0, import_jsx_runtime93.jsx)("h3", { className: "font-medium mb-2", children: "使用说明：" }),
      (0, import_jsx_runtime93.jsxs)("ul", { className: "text-sm text-gray-700 space-y-1", children: [
        (0, import_jsx_runtime93.jsx)("li", { children: '• 点击"筛选"按钮打开过滤条件设置对话框' }),
        (0, import_jsx_runtime93.jsx)("li", { children: "• 可以添加多个过滤条件，支持不同字段类型" }),
        (0, import_jsx_runtime93.jsx)("li", { children: "• 支持文本、数字、日期、选择等字段类型" }),
        (0, import_jsx_runtime93.jsx)("li", { children: "• 过滤条件会实时应用到数据上" }),
        (0, import_jsx_runtime93.jsx)("li", { children: "• 可以清除所有过滤条件或重置到之前状态" })
      ] })
    ] })
  ] }) });
}
export {
  AddRecordDialog,
  AlertCircle,
  ApiClient,
  ApiClientAdapter,
  AppProvider,
  AppProviders,
  AttachmentEditor,
  AttachmentField,
  AttachmentFilter,
  BaseFilter,
  BaseProvider,
  BooleanEditor,
  BooleanField,
  BooleanFilter,
  Button,
  ButtonGroup,
  CellRegionType,
  CellType,
  ChartEditor,
  ChartType,
  Check,
  ChevronDown,
  ChevronRight,
  ColorUtils,
  Colors,
  ColumnContextMenu,
  ColumnManagement,
  CombinedSelection,
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
  FilterManager2 as ComponentFilterManager,
  CoordinateManager,
  DEFAULT_COLUMN_RESIZE_STATE,
  DEFAULT_DRAG_STATE,
  DEFAULT_FREEZE_COLUMN_STATE,
  DEFAULT_MOUSE_STATE,
  DEFAULT_SCROLL_STATE,
  DateEditor,
  DateField,
  DateFilter,
  DeleteConfirmDialog,
  DividerRegion,
  DraggableHandle,
  EditorContainer,
  Eye,
  EyeOff,
  FIELD_TYPE_ICONS,
  Field,
  FieldCreateOrSelectModal,
  FieldManagementProvider,
  FieldPropertyEditor,
  FieldProvider,
  FieldSetting,
  FieldTypeSelectModal,
  FieldTypeSelector,
  FilePreviewer,
  FilterDialog,
  FilterExample,
  FilterManager,
  FormulaEditor,
  FormulaField,
  GRID_CONTAINER_ATTR,
  GRID_DEFAULT,
  Grid,
  GridInnerIcon,
  GridToolbar,
  Grip,
  GroupManager,
  IconButton,
  ImageEditor,
  ImageManager,
  Input,
  ItemType,
  LinkEditor,
  LinkField,
  LinkFilter,
  LoadingIndicator,
  Lock,
  LuckDBAdapter,
  MagicAi,
  Maximize2,
  Menu,
  MinusSquare,
  NumberDisplayType,
  NumberEditor,
  NumberField,
  NumberFilter,
  PermissionProvider,
  Plus,
  ROW_RELATED_REGIONS,
  RatingEditor,
  RatingField,
  RatingFilter,
  RecordModel,
  RenderRegion,
  RollupField,
  RowContextMenu,
  RowCounter,
  RowHeightCombobox,
  SelectEditor,
  SelectField,
  SelectFilter,
  SessionProvider,
  SortManager,
  SpriteManager,
  Square,
  SquareCheck,
  StandardDataView,
  StatisticsRow,
  TableProvider,
  TextEditor,
  TextField,
  TextFilter,
  ToastProvider,
  ToastProviderWithEmitter,
  Tooltip,
  UserEditor,
  UserField,
  UserFilter,
  View2 as View,
  ViewHeader,
  ViewProvider,
  VirtualFieldConfig,
  X,
  calcCells,
  cn,
  computeShouldRerender,
  contractColorForTheme,
  convertFieldValueToCell,
  convertFieldsToColumns,
  createAdapter,
  createApiClient,
  createFieldInstance,
  createFieldInstances,
  createFilterInstance,
  createGetCellContent,
  createRecordInstance,
  createRecordInstances,
  createViewInstance,
  createViewInstances,
  drawActiveCell,
  drawAppendColumn,
  drawAppendRow,
  drawCacheContent,
  drawCellContent,
  drawCells,
  drawClipRegion,
  drawCollaborators,
  drawColumnDraggingRegion,
  drawColumnFreezeHandler,
  drawColumnHeader,
  drawColumnHeaders,
  drawColumnHeadersRegion,
  drawColumnResizeHandler,
  drawColumnStatistics,
  drawColumnStatisticsRegion,
  drawCommentCount,
  drawFillHandler,
  drawFreezeRegionDivider,
  drawGrid,
  drawGridHeader,
  drawGroupRow,
  drawGroupRowHeader,
  drawRowDraggingRegion,
  drawRowHeader,
  drawSearchCursor,
  drawSearchResult,
  drawSearchTargetIndex,
  drawStatisticCell,
  emptySelection,
  extractFieldValue,
  eyeOff,
  getCellRenderer,
  getCellScrollState,
  getDropTargetIndex,
  getFieldIcon,
  getHorizontalRangeInfo,
  getRandomString,
  getVerticalRangeInfo,
  getVisibleSearchTargetIndex,
  gridTheme,
  hideGridTooltip,
  isApiClient,
  isLuckDBSDK,
  isMultiSelectField,
  isSingleSelectField,
  mapFieldTypeToCellType,
  performanceTracker,
  setToastEmitter,
  showGridTooltip,
  sprites,
  toast,
  useAutoScroll,
  useBuildBaseAgentStore,
  useColumnFreeze,
  useColumnResize,
  useDrag,
  useEventListener,
  useFieldManagement,
  useGridAsyncRecords,
  useGridCollapsedGroup,
  useGridCollapsedGroupStore,
  useGridColumnOrder,
  useGridColumnResize,
  useGridColumnStatistics,
  useGridColumns,
  useGridFileEvent,
  useGridGroupCollection,
  useGridIcons,
  useGridPopupPosition,
  useGridPrefillingRow,
  useGridRowOrder,
  useGridSelection,
  useGridTheme,
  useGridTooltipStore,
  useGridViewStore,
  useIsTouchDevice,
  useKeyboardSelection,
  useResizeObserver,
  useScrollFrameRate,
  useSelection,
  useTableData,
  useTableHeaderSync,
  useToast,
  useVisibleRegion,
  useYjsConnection
};
/*! Bundled license information:

js-cookie/src/js.cookie.js:
  (*!
   * JavaScript Cookie v2.2.1
   * https://github.com/js-cookie/js-cookie
   *
   * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
   * Released under the MIT license
   *)

screenfull/dist/screenfull.js:
  (*!
  * screenfull
  * v5.2.0 - 2021-11-03
  * (c) Sindre Sorhus; MIT License
  *)

lodash/lodash.default.js:
lodash/lodash.js:
  (**
   * @license
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="es" -o ./`
   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   *)

lucide-react/dist/esm/shared/src/utils.js:
lucide-react/dist/esm/defaultAttributes.js:
lucide-react/dist/esm/Icon.js:
lucide-react/dist/esm/createLucideIcon.js:
lucide-react/dist/esm/icons/a-arrow-down.js:
lucide-react/dist/esm/icons/a-large-small.js:
lucide-react/dist/esm/icons/a-arrow-up.js:
lucide-react/dist/esm/icons/accessibility.js:
lucide-react/dist/esm/icons/activity.js:
lucide-react/dist/esm/icons/air-vent.js:
lucide-react/dist/esm/icons/airplay.js:
lucide-react/dist/esm/icons/alarm-clock-check.js:
lucide-react/dist/esm/icons/alarm-clock-minus.js:
lucide-react/dist/esm/icons/alarm-clock-off.js:
lucide-react/dist/esm/icons/alarm-clock-plus.js:
lucide-react/dist/esm/icons/alarm-clock.js:
lucide-react/dist/esm/icons/alarm-smoke.js:
lucide-react/dist/esm/icons/album.js:
lucide-react/dist/esm/icons/align-center-horizontal.js:
lucide-react/dist/esm/icons/align-center-vertical.js:
lucide-react/dist/esm/icons/align-end-horizontal.js:
lucide-react/dist/esm/icons/align-horizontal-distribute-center.js:
lucide-react/dist/esm/icons/align-end-vertical.js:
lucide-react/dist/esm/icons/align-horizontal-distribute-end.js:
lucide-react/dist/esm/icons/align-horizontal-distribute-start.js:
lucide-react/dist/esm/icons/align-horizontal-justify-end.js:
lucide-react/dist/esm/icons/align-horizontal-justify-center.js:
lucide-react/dist/esm/icons/align-horizontal-justify-start.js:
lucide-react/dist/esm/icons/align-horizontal-space-around.js:
lucide-react/dist/esm/icons/align-horizontal-space-between.js:
lucide-react/dist/esm/icons/align-start-horizontal.js:
lucide-react/dist/esm/icons/align-start-vertical.js:
lucide-react/dist/esm/icons/align-vertical-distribute-center.js:
lucide-react/dist/esm/icons/align-vertical-distribute-end.js:
lucide-react/dist/esm/icons/align-vertical-distribute-start.js:
lucide-react/dist/esm/icons/align-vertical-justify-center.js:
lucide-react/dist/esm/icons/align-vertical-justify-end.js:
lucide-react/dist/esm/icons/align-vertical-justify-start.js:
lucide-react/dist/esm/icons/align-vertical-space-around.js:
lucide-react/dist/esm/icons/align-vertical-space-between.js:
lucide-react/dist/esm/icons/ambulance.js:
lucide-react/dist/esm/icons/ampersand.js:
lucide-react/dist/esm/icons/ampersands.js:
lucide-react/dist/esm/icons/amphora.js:
lucide-react/dist/esm/icons/angry.js:
lucide-react/dist/esm/icons/anchor.js:
lucide-react/dist/esm/icons/annoyed.js:
lucide-react/dist/esm/icons/antenna.js:
lucide-react/dist/esm/icons/anvil.js:
lucide-react/dist/esm/icons/aperture.js:
lucide-react/dist/esm/icons/app-window-mac.js:
lucide-react/dist/esm/icons/app-window.js:
lucide-react/dist/esm/icons/apple.js:
lucide-react/dist/esm/icons/archive-x.js:
lucide-react/dist/esm/icons/archive-restore.js:
lucide-react/dist/esm/icons/archive.js:
lucide-react/dist/esm/icons/armchair.js:
lucide-react/dist/esm/icons/arrow-big-down-dash.js:
lucide-react/dist/esm/icons/arrow-big-down.js:
lucide-react/dist/esm/icons/arrow-big-left-dash.js:
lucide-react/dist/esm/icons/arrow-big-left.js:
lucide-react/dist/esm/icons/arrow-big-right-dash.js:
lucide-react/dist/esm/icons/arrow-big-right.js:
lucide-react/dist/esm/icons/arrow-big-up-dash.js:
lucide-react/dist/esm/icons/arrow-big-up.js:
lucide-react/dist/esm/icons/arrow-down-0-1.js:
lucide-react/dist/esm/icons/arrow-down-1-0.js:
lucide-react/dist/esm/icons/arrow-down-a-z.js:
lucide-react/dist/esm/icons/arrow-down-from-line.js:
lucide-react/dist/esm/icons/arrow-down-left.js:
lucide-react/dist/esm/icons/arrow-down-narrow-wide.js:
lucide-react/dist/esm/icons/arrow-down-right.js:
lucide-react/dist/esm/icons/arrow-down-to-dot.js:
lucide-react/dist/esm/icons/arrow-down-to-line.js:
lucide-react/dist/esm/icons/arrow-down-up.js:
lucide-react/dist/esm/icons/arrow-down-wide-narrow.js:
lucide-react/dist/esm/icons/arrow-down-z-a.js:
lucide-react/dist/esm/icons/arrow-down.js:
lucide-react/dist/esm/icons/arrow-left-from-line.js:
lucide-react/dist/esm/icons/arrow-left-right.js:
lucide-react/dist/esm/icons/arrow-left-to-line.js:
lucide-react/dist/esm/icons/arrow-left.js:
lucide-react/dist/esm/icons/arrow-right-from-line.js:
lucide-react/dist/esm/icons/arrow-right-left.js:
lucide-react/dist/esm/icons/arrow-right-to-line.js:
lucide-react/dist/esm/icons/arrow-right.js:
lucide-react/dist/esm/icons/arrow-up-0-1.js:
lucide-react/dist/esm/icons/arrow-up-1-0.js:
lucide-react/dist/esm/icons/arrow-up-a-z.js:
lucide-react/dist/esm/icons/arrow-up-down.js:
lucide-react/dist/esm/icons/arrow-up-from-dot.js:
lucide-react/dist/esm/icons/arrow-up-from-line.js:
lucide-react/dist/esm/icons/arrow-up-left.js:
lucide-react/dist/esm/icons/arrow-up-narrow-wide.js:
lucide-react/dist/esm/icons/arrow-up-right.js:
lucide-react/dist/esm/icons/arrow-up-to-line.js:
lucide-react/dist/esm/icons/arrow-up-wide-narrow.js:
lucide-react/dist/esm/icons/arrow-up-z-a.js:
lucide-react/dist/esm/icons/arrow-up.js:
lucide-react/dist/esm/icons/arrows-up-from-line.js:
lucide-react/dist/esm/icons/asterisk.js:
lucide-react/dist/esm/icons/at-sign.js:
lucide-react/dist/esm/icons/atom.js:
lucide-react/dist/esm/icons/audio-lines.js:
lucide-react/dist/esm/icons/audio-waveform.js:
lucide-react/dist/esm/icons/award.js:
lucide-react/dist/esm/icons/axe.js:
lucide-react/dist/esm/icons/axis-3d.js:
lucide-react/dist/esm/icons/baby.js:
lucide-react/dist/esm/icons/backpack.js:
lucide-react/dist/esm/icons/badge-alert.js:
lucide-react/dist/esm/icons/badge-cent.js:
lucide-react/dist/esm/icons/badge-check.js:
lucide-react/dist/esm/icons/badge-dollar-sign.js:
lucide-react/dist/esm/icons/badge-euro.js:
lucide-react/dist/esm/icons/badge-info.js:
lucide-react/dist/esm/icons/badge-indian-rupee.js:
lucide-react/dist/esm/icons/badge-japanese-yen.js:
lucide-react/dist/esm/icons/badge-minus.js:
lucide-react/dist/esm/icons/badge-percent.js:
lucide-react/dist/esm/icons/badge-plus.js:
lucide-react/dist/esm/icons/badge-pound-sterling.js:
lucide-react/dist/esm/icons/badge-question-mark.js:
lucide-react/dist/esm/icons/badge-swiss-franc.js:
lucide-react/dist/esm/icons/badge-russian-ruble.js:
lucide-react/dist/esm/icons/badge-turkish-lira.js:
lucide-react/dist/esm/icons/badge-x.js:
lucide-react/dist/esm/icons/badge.js:
lucide-react/dist/esm/icons/baggage-claim.js:
lucide-react/dist/esm/icons/ban.js:
lucide-react/dist/esm/icons/banana.js:
lucide-react/dist/esm/icons/bandage.js:
lucide-react/dist/esm/icons/banknote-arrow-down.js:
lucide-react/dist/esm/icons/banknote-arrow-up.js:
lucide-react/dist/esm/icons/banknote-x.js:
lucide-react/dist/esm/icons/banknote.js:
lucide-react/dist/esm/icons/barcode.js:
lucide-react/dist/esm/icons/barrel.js:
lucide-react/dist/esm/icons/baseline.js:
lucide-react/dist/esm/icons/bath.js:
lucide-react/dist/esm/icons/battery-charging.js:
lucide-react/dist/esm/icons/battery-full.js:
lucide-react/dist/esm/icons/battery-low.js:
lucide-react/dist/esm/icons/battery-medium.js:
lucide-react/dist/esm/icons/battery-plus.js:
lucide-react/dist/esm/icons/battery-warning.js:
lucide-react/dist/esm/icons/battery.js:
lucide-react/dist/esm/icons/beaker.js:
lucide-react/dist/esm/icons/bean-off.js:
lucide-react/dist/esm/icons/bean.js:
lucide-react/dist/esm/icons/bed-double.js:
lucide-react/dist/esm/icons/bed-single.js:
lucide-react/dist/esm/icons/bed.js:
lucide-react/dist/esm/icons/beef.js:
lucide-react/dist/esm/icons/beer-off.js:
lucide-react/dist/esm/icons/beer.js:
lucide-react/dist/esm/icons/bell-dot.js:
lucide-react/dist/esm/icons/bell-electric.js:
lucide-react/dist/esm/icons/bell-minus.js:
lucide-react/dist/esm/icons/bell-off.js:
lucide-react/dist/esm/icons/bell-plus.js:
lucide-react/dist/esm/icons/bell-ring.js:
lucide-react/dist/esm/icons/bell.js:
lucide-react/dist/esm/icons/between-horizontal-end.js:
lucide-react/dist/esm/icons/between-horizontal-start.js:
lucide-react/dist/esm/icons/between-vertical-end.js:
lucide-react/dist/esm/icons/between-vertical-start.js:
lucide-react/dist/esm/icons/biceps-flexed.js:
lucide-react/dist/esm/icons/bike.js:
lucide-react/dist/esm/icons/binary.js:
lucide-react/dist/esm/icons/binoculars.js:
lucide-react/dist/esm/icons/biohazard.js:
lucide-react/dist/esm/icons/bird.js:
lucide-react/dist/esm/icons/bitcoin.js:
lucide-react/dist/esm/icons/blend.js:
lucide-react/dist/esm/icons/blinds.js:
lucide-react/dist/esm/icons/blocks.js:
lucide-react/dist/esm/icons/bluetooth-connected.js:
lucide-react/dist/esm/icons/bluetooth-off.js:
lucide-react/dist/esm/icons/bluetooth.js:
lucide-react/dist/esm/icons/bluetooth-searching.js:
lucide-react/dist/esm/icons/bold.js:
lucide-react/dist/esm/icons/bolt.js:
lucide-react/dist/esm/icons/bomb.js:
lucide-react/dist/esm/icons/bone.js:
lucide-react/dist/esm/icons/book-a.js:
lucide-react/dist/esm/icons/book-alert.js:
lucide-react/dist/esm/icons/book-audio.js:
lucide-react/dist/esm/icons/book-check.js:
lucide-react/dist/esm/icons/book-copy.js:
lucide-react/dist/esm/icons/book-dashed.js:
lucide-react/dist/esm/icons/book-down.js:
lucide-react/dist/esm/icons/book-headphones.js:
lucide-react/dist/esm/icons/book-heart.js:
lucide-react/dist/esm/icons/book-image.js:
lucide-react/dist/esm/icons/book-key.js:
lucide-react/dist/esm/icons/book-lock.js:
lucide-react/dist/esm/icons/book-marked.js:
lucide-react/dist/esm/icons/book-minus.js:
lucide-react/dist/esm/icons/book-open-check.js:
lucide-react/dist/esm/icons/book-open-text.js:
lucide-react/dist/esm/icons/book-open.js:
lucide-react/dist/esm/icons/book-plus.js:
lucide-react/dist/esm/icons/book-text.js:
lucide-react/dist/esm/icons/book-type.js:
lucide-react/dist/esm/icons/book-up-2.js:
lucide-react/dist/esm/icons/book-up.js:
lucide-react/dist/esm/icons/book-user.js:
lucide-react/dist/esm/icons/book-x.js:
lucide-react/dist/esm/icons/book.js:
lucide-react/dist/esm/icons/bookmark-check.js:
lucide-react/dist/esm/icons/bookmark-minus.js:
lucide-react/dist/esm/icons/bookmark-plus.js:
lucide-react/dist/esm/icons/bookmark-x.js:
lucide-react/dist/esm/icons/bookmark.js:
lucide-react/dist/esm/icons/boom-box.js:
lucide-react/dist/esm/icons/bot-message-square.js:
lucide-react/dist/esm/icons/bot-off.js:
lucide-react/dist/esm/icons/bot.js:
lucide-react/dist/esm/icons/bottle-wine.js:
lucide-react/dist/esm/icons/bow-arrow.js:
lucide-react/dist/esm/icons/box.js:
lucide-react/dist/esm/icons/boxes.js:
lucide-react/dist/esm/icons/braces.js:
lucide-react/dist/esm/icons/brackets.js:
lucide-react/dist/esm/icons/brain-circuit.js:
lucide-react/dist/esm/icons/brain-cog.js:
lucide-react/dist/esm/icons/brain.js:
lucide-react/dist/esm/icons/brick-wall-fire.js:
lucide-react/dist/esm/icons/brick-wall-shield.js:
lucide-react/dist/esm/icons/brick-wall.js:
lucide-react/dist/esm/icons/briefcase-business.js:
lucide-react/dist/esm/icons/briefcase-conveyor-belt.js:
lucide-react/dist/esm/icons/briefcase.js:
lucide-react/dist/esm/icons/briefcase-medical.js:
lucide-react/dist/esm/icons/bring-to-front.js:
lucide-react/dist/esm/icons/brush-cleaning.js:
lucide-react/dist/esm/icons/bubbles.js:
lucide-react/dist/esm/icons/brush.js:
lucide-react/dist/esm/icons/bug-off.js:
lucide-react/dist/esm/icons/bug-play.js:
lucide-react/dist/esm/icons/bug.js:
lucide-react/dist/esm/icons/building-2.js:
lucide-react/dist/esm/icons/building.js:
lucide-react/dist/esm/icons/bus.js:
lucide-react/dist/esm/icons/bus-front.js:
lucide-react/dist/esm/icons/cable-car.js:
lucide-react/dist/esm/icons/cake-slice.js:
lucide-react/dist/esm/icons/cable.js:
lucide-react/dist/esm/icons/cake.js:
lucide-react/dist/esm/icons/calculator.js:
lucide-react/dist/esm/icons/calendar-1.js:
lucide-react/dist/esm/icons/calendar-arrow-down.js:
lucide-react/dist/esm/icons/calendar-arrow-up.js:
lucide-react/dist/esm/icons/calendar-check-2.js:
lucide-react/dist/esm/icons/calendar-check.js:
lucide-react/dist/esm/icons/calendar-clock.js:
lucide-react/dist/esm/icons/calendar-cog.js:
lucide-react/dist/esm/icons/calendar-days.js:
lucide-react/dist/esm/icons/calendar-heart.js:
lucide-react/dist/esm/icons/calendar-fold.js:
lucide-react/dist/esm/icons/calendar-minus-2.js:
lucide-react/dist/esm/icons/calendar-minus.js:
lucide-react/dist/esm/icons/calendar-off.js:
lucide-react/dist/esm/icons/calendar-plus-2.js:
lucide-react/dist/esm/icons/calendar-plus.js:
lucide-react/dist/esm/icons/calendar-range.js:
lucide-react/dist/esm/icons/calendar-search.js:
lucide-react/dist/esm/icons/calendar-sync.js:
lucide-react/dist/esm/icons/calendar-x-2.js:
lucide-react/dist/esm/icons/calendar-x.js:
lucide-react/dist/esm/icons/calendar.js:
lucide-react/dist/esm/icons/camera.js:
lucide-react/dist/esm/icons/camera-off.js:
lucide-react/dist/esm/icons/candy-cane.js:
lucide-react/dist/esm/icons/candy-off.js:
lucide-react/dist/esm/icons/cannabis.js:
lucide-react/dist/esm/icons/candy.js:
lucide-react/dist/esm/icons/captions-off.js:
lucide-react/dist/esm/icons/captions.js:
lucide-react/dist/esm/icons/car-taxi-front.js:
lucide-react/dist/esm/icons/car-front.js:
lucide-react/dist/esm/icons/car.js:
lucide-react/dist/esm/icons/caravan.js:
lucide-react/dist/esm/icons/carrot.js:
lucide-react/dist/esm/icons/card-sim.js:
lucide-react/dist/esm/icons/case-lower.js:
lucide-react/dist/esm/icons/case-sensitive.js:
lucide-react/dist/esm/icons/case-upper.js:
lucide-react/dist/esm/icons/cassette-tape.js:
lucide-react/dist/esm/icons/cast.js:
lucide-react/dist/esm/icons/castle.js:
lucide-react/dist/esm/icons/cat.js:
lucide-react/dist/esm/icons/cctv.js:
lucide-react/dist/esm/icons/chart-area.js:
lucide-react/dist/esm/icons/chart-bar-big.js:
lucide-react/dist/esm/icons/chart-bar-decreasing.js:
lucide-react/dist/esm/icons/chart-bar-increasing.js:
lucide-react/dist/esm/icons/chart-bar-stacked.js:
lucide-react/dist/esm/icons/chart-bar.js:
lucide-react/dist/esm/icons/chart-candlestick.js:
lucide-react/dist/esm/icons/chart-column-big.js:
lucide-react/dist/esm/icons/chart-column-increasing.js:
lucide-react/dist/esm/icons/chart-column-decreasing.js:
lucide-react/dist/esm/icons/chart-column-stacked.js:
lucide-react/dist/esm/icons/chart-column.js:
lucide-react/dist/esm/icons/chart-gantt.js:
lucide-react/dist/esm/icons/chart-line.js:
lucide-react/dist/esm/icons/chart-network.js:
lucide-react/dist/esm/icons/chart-no-axes-column-decreasing.js:
lucide-react/dist/esm/icons/chart-no-axes-column-increasing.js:
lucide-react/dist/esm/icons/chart-no-axes-column.js:
lucide-react/dist/esm/icons/chart-no-axes-combined.js:
lucide-react/dist/esm/icons/chart-no-axes-gantt.js:
lucide-react/dist/esm/icons/chart-pie.js:
lucide-react/dist/esm/icons/chart-spline.js:
lucide-react/dist/esm/icons/chart-scatter.js:
lucide-react/dist/esm/icons/check-check.js:
lucide-react/dist/esm/icons/check.js:
lucide-react/dist/esm/icons/chef-hat.js:
lucide-react/dist/esm/icons/check-line.js:
lucide-react/dist/esm/icons/cherry.js:
lucide-react/dist/esm/icons/chevron-down.js:
lucide-react/dist/esm/icons/chevron-first.js:
lucide-react/dist/esm/icons/chevron-last.js:
lucide-react/dist/esm/icons/chevron-left.js:
lucide-react/dist/esm/icons/chevron-right.js:
lucide-react/dist/esm/icons/chevron-up.js:
lucide-react/dist/esm/icons/chevrons-down-up.js:
lucide-react/dist/esm/icons/chevrons-down.js:
lucide-react/dist/esm/icons/chevrons-left-right-ellipsis.js:
lucide-react/dist/esm/icons/chevrons-left-right.js:
lucide-react/dist/esm/icons/chevrons-left.js:
lucide-react/dist/esm/icons/chevrons-right-left.js:
lucide-react/dist/esm/icons/chevrons-right.js:
lucide-react/dist/esm/icons/chevrons-up-down.js:
lucide-react/dist/esm/icons/chevrons-up.js:
lucide-react/dist/esm/icons/chromium.js:
lucide-react/dist/esm/icons/church.js:
lucide-react/dist/esm/icons/cigarette-off.js:
lucide-react/dist/esm/icons/cigarette.js:
lucide-react/dist/esm/icons/circle-alert.js:
lucide-react/dist/esm/icons/circle-arrow-down.js:
lucide-react/dist/esm/icons/circle-arrow-left.js:
lucide-react/dist/esm/icons/circle-arrow-out-down-left.js:
lucide-react/dist/esm/icons/circle-arrow-out-down-right.js:
lucide-react/dist/esm/icons/circle-arrow-out-up-left.js:
lucide-react/dist/esm/icons/circle-arrow-out-up-right.js:
lucide-react/dist/esm/icons/circle-arrow-right.js:
lucide-react/dist/esm/icons/circle-arrow-up.js:
lucide-react/dist/esm/icons/circle-check.js:
lucide-react/dist/esm/icons/circle-check-big.js:
lucide-react/dist/esm/icons/circle-chevron-down.js:
lucide-react/dist/esm/icons/circle-chevron-left.js:
lucide-react/dist/esm/icons/circle-chevron-right.js:
lucide-react/dist/esm/icons/circle-chevron-up.js:
lucide-react/dist/esm/icons/circle-dashed.js:
lucide-react/dist/esm/icons/circle-divide.js:
lucide-react/dist/esm/icons/circle-dollar-sign.js:
lucide-react/dist/esm/icons/circle-dot-dashed.js:
lucide-react/dist/esm/icons/circle-dot.js:
lucide-react/dist/esm/icons/circle-ellipsis.js:
lucide-react/dist/esm/icons/circle-equal.js:
lucide-react/dist/esm/icons/circle-fading-arrow-up.js:
lucide-react/dist/esm/icons/circle-fading-plus.js:
lucide-react/dist/esm/icons/circle-gauge.js:
lucide-react/dist/esm/icons/circle-minus.js:
lucide-react/dist/esm/icons/circle-off.js:
lucide-react/dist/esm/icons/circle-parking-off.js:
lucide-react/dist/esm/icons/circle-parking.js:
lucide-react/dist/esm/icons/circle-pause.js:
lucide-react/dist/esm/icons/circle-percent.js:
lucide-react/dist/esm/icons/circle-play.js:
lucide-react/dist/esm/icons/circle-plus.js:
lucide-react/dist/esm/icons/circle-pound-sterling.js:
lucide-react/dist/esm/icons/circle-power.js:
lucide-react/dist/esm/icons/circle-question-mark.js:
lucide-react/dist/esm/icons/circle-slash-2.js:
lucide-react/dist/esm/icons/circle-slash.js:
lucide-react/dist/esm/icons/circle-small.js:
lucide-react/dist/esm/icons/circle-star.js:
lucide-react/dist/esm/icons/circle-stop.js:
lucide-react/dist/esm/icons/circle-user-round.js:
lucide-react/dist/esm/icons/circle-user.js:
lucide-react/dist/esm/icons/circle-x.js:
lucide-react/dist/esm/icons/circle.js:
lucide-react/dist/esm/icons/circuit-board.js:
lucide-react/dist/esm/icons/citrus.js:
lucide-react/dist/esm/icons/clapperboard.js:
lucide-react/dist/esm/icons/clipboard-check.js:
lucide-react/dist/esm/icons/clipboard-clock.js:
lucide-react/dist/esm/icons/clipboard-copy.js:
lucide-react/dist/esm/icons/clipboard-list.js:
lucide-react/dist/esm/icons/clipboard-minus.js:
lucide-react/dist/esm/icons/clipboard-paste.js:
lucide-react/dist/esm/icons/clipboard-pen-line.js:
lucide-react/dist/esm/icons/clipboard-pen.js:
lucide-react/dist/esm/icons/clipboard-plus.js:
lucide-react/dist/esm/icons/clipboard-type.js:
lucide-react/dist/esm/icons/clipboard.js:
lucide-react/dist/esm/icons/clipboard-x.js:
lucide-react/dist/esm/icons/clock-1.js:
lucide-react/dist/esm/icons/clock-10.js:
lucide-react/dist/esm/icons/clock-11.js:
lucide-react/dist/esm/icons/clock-12.js:
lucide-react/dist/esm/icons/clock-2.js:
lucide-react/dist/esm/icons/clock-3.js:
lucide-react/dist/esm/icons/clock-4.js:
lucide-react/dist/esm/icons/clock-5.js:
lucide-react/dist/esm/icons/clock-6.js:
lucide-react/dist/esm/icons/clock-7.js:
lucide-react/dist/esm/icons/clock-8.js:
lucide-react/dist/esm/icons/clock-9.js:
lucide-react/dist/esm/icons/clock-alert.js:
lucide-react/dist/esm/icons/clock-arrow-down.js:
lucide-react/dist/esm/icons/clock-arrow-up.js:
lucide-react/dist/esm/icons/clock-fading.js:
lucide-react/dist/esm/icons/clock-plus.js:
lucide-react/dist/esm/icons/clock.js:
lucide-react/dist/esm/icons/closed-caption.js:
lucide-react/dist/esm/icons/cloud-alert.js:
lucide-react/dist/esm/icons/cloud-check.js:
lucide-react/dist/esm/icons/cloud-cog.js:
lucide-react/dist/esm/icons/cloud-download.js:
lucide-react/dist/esm/icons/cloud-drizzle.js:
lucide-react/dist/esm/icons/cloud-fog.js:
lucide-react/dist/esm/icons/cloud-hail.js:
lucide-react/dist/esm/icons/cloud-lightning.js:
lucide-react/dist/esm/icons/cloud-moon-rain.js:
lucide-react/dist/esm/icons/cloud-moon.js:
lucide-react/dist/esm/icons/cloud-off.js:
lucide-react/dist/esm/icons/cloud-rain-wind.js:
lucide-react/dist/esm/icons/cloud-rain.js:
lucide-react/dist/esm/icons/cloud-snow.js:
lucide-react/dist/esm/icons/cloud-sun-rain.js:
lucide-react/dist/esm/icons/cloud-upload.js:
lucide-react/dist/esm/icons/cloud-sun.js:
lucide-react/dist/esm/icons/cloud.js:
lucide-react/dist/esm/icons/cloudy.js:
lucide-react/dist/esm/icons/clover.js:
lucide-react/dist/esm/icons/club.js:
lucide-react/dist/esm/icons/code-xml.js:
lucide-react/dist/esm/icons/code.js:
lucide-react/dist/esm/icons/codepen.js:
lucide-react/dist/esm/icons/codesandbox.js:
lucide-react/dist/esm/icons/cog.js:
lucide-react/dist/esm/icons/coffee.js:
lucide-react/dist/esm/icons/coins.js:
lucide-react/dist/esm/icons/columns-2.js:
lucide-react/dist/esm/icons/columns-3-cog.js:
lucide-react/dist/esm/icons/columns-3.js:
lucide-react/dist/esm/icons/columns-4.js:
lucide-react/dist/esm/icons/combine.js:
lucide-react/dist/esm/icons/command.js:
lucide-react/dist/esm/icons/compass.js:
lucide-react/dist/esm/icons/component.js:
lucide-react/dist/esm/icons/computer.js:
lucide-react/dist/esm/icons/concierge-bell.js:
lucide-react/dist/esm/icons/cone.js:
lucide-react/dist/esm/icons/construction.js:
lucide-react/dist/esm/icons/contact-round.js:
lucide-react/dist/esm/icons/contact.js:
lucide-react/dist/esm/icons/contrast.js:
lucide-react/dist/esm/icons/container.js:
lucide-react/dist/esm/icons/cookie.js:
lucide-react/dist/esm/icons/cooking-pot.js:
lucide-react/dist/esm/icons/copy-check.js:
lucide-react/dist/esm/icons/copy-minus.js:
lucide-react/dist/esm/icons/copy-plus.js:
lucide-react/dist/esm/icons/copy-slash.js:
lucide-react/dist/esm/icons/copy.js:
lucide-react/dist/esm/icons/copy-x.js:
lucide-react/dist/esm/icons/copyright.js:
lucide-react/dist/esm/icons/copyleft.js:
lucide-react/dist/esm/icons/corner-down-left.js:
lucide-react/dist/esm/icons/corner-down-right.js:
lucide-react/dist/esm/icons/corner-left-down.js:
lucide-react/dist/esm/icons/corner-left-up.js:
lucide-react/dist/esm/icons/corner-right-down.js:
lucide-react/dist/esm/icons/corner-right-up.js:
lucide-react/dist/esm/icons/corner-up-left.js:
lucide-react/dist/esm/icons/corner-up-right.js:
lucide-react/dist/esm/icons/creative-commons.js:
lucide-react/dist/esm/icons/credit-card.js:
lucide-react/dist/esm/icons/cpu.js:
lucide-react/dist/esm/icons/croissant.js:
lucide-react/dist/esm/icons/crop.js:
lucide-react/dist/esm/icons/cross.js:
lucide-react/dist/esm/icons/crosshair.js:
lucide-react/dist/esm/icons/crown.js:
lucide-react/dist/esm/icons/cuboid.js:
lucide-react/dist/esm/icons/cup-soda.js:
lucide-react/dist/esm/icons/currency.js:
lucide-react/dist/esm/icons/cylinder.js:
lucide-react/dist/esm/icons/dam.js:
lucide-react/dist/esm/icons/database-backup.js:
lucide-react/dist/esm/icons/database.js:
lucide-react/dist/esm/icons/database-zap.js:
lucide-react/dist/esm/icons/decimals-arrow-left.js:
lucide-react/dist/esm/icons/decimals-arrow-right.js:
lucide-react/dist/esm/icons/delete.js:
lucide-react/dist/esm/icons/dessert.js:
lucide-react/dist/esm/icons/diameter.js:
lucide-react/dist/esm/icons/diamond-minus.js:
lucide-react/dist/esm/icons/diamond-percent.js:
lucide-react/dist/esm/icons/diamond-plus.js:
lucide-react/dist/esm/icons/diamond.js:
lucide-react/dist/esm/icons/dice-1.js:
lucide-react/dist/esm/icons/dice-3.js:
lucide-react/dist/esm/icons/dice-2.js:
lucide-react/dist/esm/icons/dice-4.js:
lucide-react/dist/esm/icons/dice-5.js:
lucide-react/dist/esm/icons/dice-6.js:
lucide-react/dist/esm/icons/dices.js:
lucide-react/dist/esm/icons/disc-2.js:
lucide-react/dist/esm/icons/diff.js:
lucide-react/dist/esm/icons/disc-3.js:
lucide-react/dist/esm/icons/disc.js:
lucide-react/dist/esm/icons/disc-album.js:
lucide-react/dist/esm/icons/divide.js:
lucide-react/dist/esm/icons/dna-off.js:
lucide-react/dist/esm/icons/dna.js:
lucide-react/dist/esm/icons/dock.js:
lucide-react/dist/esm/icons/dog.js:
lucide-react/dist/esm/icons/dollar-sign.js:
lucide-react/dist/esm/icons/donut.js:
lucide-react/dist/esm/icons/door-closed-locked.js:
lucide-react/dist/esm/icons/door-closed.js:
lucide-react/dist/esm/icons/door-open.js:
lucide-react/dist/esm/icons/dot.js:
lucide-react/dist/esm/icons/download.js:
lucide-react/dist/esm/icons/drafting-compass.js:
lucide-react/dist/esm/icons/drama.js:
lucide-react/dist/esm/icons/dribbble.js:
lucide-react/dist/esm/icons/drill.js:
lucide-react/dist/esm/icons/drone.js:
lucide-react/dist/esm/icons/droplet-off.js:
lucide-react/dist/esm/icons/droplet.js:
lucide-react/dist/esm/icons/droplets.js:
lucide-react/dist/esm/icons/drum.js:
lucide-react/dist/esm/icons/drumstick.js:
lucide-react/dist/esm/icons/dumbbell.js:
lucide-react/dist/esm/icons/ear-off.js:
lucide-react/dist/esm/icons/ear.js:
lucide-react/dist/esm/icons/earth-lock.js:
lucide-react/dist/esm/icons/earth.js:
lucide-react/dist/esm/icons/eclipse.js:
lucide-react/dist/esm/icons/egg-fried.js:
lucide-react/dist/esm/icons/egg-off.js:
lucide-react/dist/esm/icons/egg.js:
lucide-react/dist/esm/icons/ellipsis-vertical.js:
lucide-react/dist/esm/icons/ellipsis.js:
lucide-react/dist/esm/icons/equal-approximately.js:
lucide-react/dist/esm/icons/equal-not.js:
lucide-react/dist/esm/icons/equal.js:
lucide-react/dist/esm/icons/eraser.js:
lucide-react/dist/esm/icons/ethernet-port.js:
lucide-react/dist/esm/icons/euro.js:
lucide-react/dist/esm/icons/expand.js:
lucide-react/dist/esm/icons/ev-charger.js:
lucide-react/dist/esm/icons/external-link.js:
lucide-react/dist/esm/icons/eye-closed.js:
lucide-react/dist/esm/icons/eye-off.js:
lucide-react/dist/esm/icons/factory.js:
lucide-react/dist/esm/icons/eye.js:
lucide-react/dist/esm/icons/facebook.js:
lucide-react/dist/esm/icons/fan.js:
lucide-react/dist/esm/icons/fast-forward.js:
lucide-react/dist/esm/icons/feather.js:
lucide-react/dist/esm/icons/ferris-wheel.js:
lucide-react/dist/esm/icons/figma.js:
lucide-react/dist/esm/icons/fence.js:
lucide-react/dist/esm/icons/file-audio-2.js:
lucide-react/dist/esm/icons/file-archive.js:
lucide-react/dist/esm/icons/file-audio.js:
lucide-react/dist/esm/icons/file-axis-3d.js:
lucide-react/dist/esm/icons/file-badge-2.js:
lucide-react/dist/esm/icons/file-badge.js:
lucide-react/dist/esm/icons/file-box.js:
lucide-react/dist/esm/icons/file-chart-column-increasing.js:
lucide-react/dist/esm/icons/file-chart-column.js:
lucide-react/dist/esm/icons/file-chart-pie.js:
lucide-react/dist/esm/icons/file-chart-line.js:
lucide-react/dist/esm/icons/file-check-2.js:
lucide-react/dist/esm/icons/file-check.js:
lucide-react/dist/esm/icons/file-clock.js:
lucide-react/dist/esm/icons/file-code-2.js:
lucide-react/dist/esm/icons/file-cog.js:
lucide-react/dist/esm/icons/file-code.js:
lucide-react/dist/esm/icons/file-diff.js:
lucide-react/dist/esm/icons/file-digit.js:
lucide-react/dist/esm/icons/file-down.js:
lucide-react/dist/esm/icons/file-heart.js:
lucide-react/dist/esm/icons/file-image.js:
lucide-react/dist/esm/icons/file-input.js:
lucide-react/dist/esm/icons/file-json-2.js:
lucide-react/dist/esm/icons/file-json.js:
lucide-react/dist/esm/icons/file-key-2.js:
lucide-react/dist/esm/icons/file-key.js:
lucide-react/dist/esm/icons/file-lock.js:
lucide-react/dist/esm/icons/file-lock-2.js:
lucide-react/dist/esm/icons/file-minus-2.js:
lucide-react/dist/esm/icons/file-minus.js:
lucide-react/dist/esm/icons/file-music.js:
lucide-react/dist/esm/icons/file-output.js:
lucide-react/dist/esm/icons/file-pen-line.js:
lucide-react/dist/esm/icons/file-pen.js:
lucide-react/dist/esm/icons/file-play.js:
lucide-react/dist/esm/icons/file-plus-2.js:
lucide-react/dist/esm/icons/file-plus.js:
lucide-react/dist/esm/icons/file-question-mark.js:
lucide-react/dist/esm/icons/file-scan.js:
lucide-react/dist/esm/icons/file-search-2.js:
lucide-react/dist/esm/icons/file-search.js:
lucide-react/dist/esm/icons/file-spreadsheet.js:
lucide-react/dist/esm/icons/file-sliders.js:
lucide-react/dist/esm/icons/file-stack.js:
lucide-react/dist/esm/icons/file-symlink.js:
lucide-react/dist/esm/icons/file-terminal.js:
lucide-react/dist/esm/icons/file-text.js:
lucide-react/dist/esm/icons/file-type.js:
lucide-react/dist/esm/icons/file-type-2.js:
lucide-react/dist/esm/icons/file-up.js:
lucide-react/dist/esm/icons/file-user.js:
lucide-react/dist/esm/icons/file-video-camera.js:
lucide-react/dist/esm/icons/file-volume.js:
lucide-react/dist/esm/icons/file-volume-2.js:
lucide-react/dist/esm/icons/file-warning.js:
lucide-react/dist/esm/icons/file-x-2.js:
lucide-react/dist/esm/icons/file-x.js:
lucide-react/dist/esm/icons/file.js:
lucide-react/dist/esm/icons/files.js:
lucide-react/dist/esm/icons/film.js:
lucide-react/dist/esm/icons/fingerprint.js:
lucide-react/dist/esm/icons/fire-extinguisher.js:
lucide-react/dist/esm/icons/fish-off.js:
lucide-react/dist/esm/icons/fish-symbol.js:
lucide-react/dist/esm/icons/fish.js:
lucide-react/dist/esm/icons/flag-triangle-left.js:
lucide-react/dist/esm/icons/flag-off.js:
lucide-react/dist/esm/icons/flag-triangle-right.js:
lucide-react/dist/esm/icons/flag.js:
lucide-react/dist/esm/icons/flame-kindling.js:
lucide-react/dist/esm/icons/flame.js:
lucide-react/dist/esm/icons/flashlight-off.js:
lucide-react/dist/esm/icons/flashlight.js:
lucide-react/dist/esm/icons/flask-conical-off.js:
lucide-react/dist/esm/icons/flask-conical.js:
lucide-react/dist/esm/icons/flask-round.js:
lucide-react/dist/esm/icons/flip-horizontal.js:
lucide-react/dist/esm/icons/flip-horizontal-2.js:
lucide-react/dist/esm/icons/flip-vertical-2.js:
lucide-react/dist/esm/icons/flip-vertical.js:
lucide-react/dist/esm/icons/flower-2.js:
lucide-react/dist/esm/icons/flower.js:
lucide-react/dist/esm/icons/focus.js:
lucide-react/dist/esm/icons/fold-vertical.js:
lucide-react/dist/esm/icons/fold-horizontal.js:
lucide-react/dist/esm/icons/folder-archive.js:
lucide-react/dist/esm/icons/folder-check.js:
lucide-react/dist/esm/icons/folder-closed.js:
lucide-react/dist/esm/icons/folder-clock.js:
lucide-react/dist/esm/icons/folder-code.js:
lucide-react/dist/esm/icons/folder-cog.js:
lucide-react/dist/esm/icons/folder-dot.js:
lucide-react/dist/esm/icons/folder-down.js:
lucide-react/dist/esm/icons/folder-git-2.js:
lucide-react/dist/esm/icons/folder-git.js:
lucide-react/dist/esm/icons/folder-heart.js:
lucide-react/dist/esm/icons/folder-input.js:
lucide-react/dist/esm/icons/folder-kanban.js:
lucide-react/dist/esm/icons/folder-key.js:
lucide-react/dist/esm/icons/folder-lock.js:
lucide-react/dist/esm/icons/folder-minus.js:
lucide-react/dist/esm/icons/folder-open-dot.js:
lucide-react/dist/esm/icons/folder-open.js:
lucide-react/dist/esm/icons/folder-output.js:
lucide-react/dist/esm/icons/folder-pen.js:
lucide-react/dist/esm/icons/folder-plus.js:
lucide-react/dist/esm/icons/folder-root.js:
lucide-react/dist/esm/icons/folder-search-2.js:
lucide-react/dist/esm/icons/folder-search.js:
lucide-react/dist/esm/icons/folder-symlink.js:
lucide-react/dist/esm/icons/folder-sync.js:
lucide-react/dist/esm/icons/folder-tree.js:
lucide-react/dist/esm/icons/folder-up.js:
lucide-react/dist/esm/icons/folder-x.js:
lucide-react/dist/esm/icons/folder.js:
lucide-react/dist/esm/icons/folders.js:
lucide-react/dist/esm/icons/footprints.js:
lucide-react/dist/esm/icons/forklift.js:
lucide-react/dist/esm/icons/forward.js:
lucide-react/dist/esm/icons/frame.js:
lucide-react/dist/esm/icons/framer.js:
lucide-react/dist/esm/icons/frown.js:
lucide-react/dist/esm/icons/fuel.js:
lucide-react/dist/esm/icons/funnel-plus.js:
lucide-react/dist/esm/icons/fullscreen.js:
lucide-react/dist/esm/icons/funnel-x.js:
lucide-react/dist/esm/icons/funnel.js:
lucide-react/dist/esm/icons/gallery-horizontal-end.js:
lucide-react/dist/esm/icons/gallery-horizontal.js:
lucide-react/dist/esm/icons/gallery-thumbnails.js:
lucide-react/dist/esm/icons/gallery-vertical-end.js:
lucide-react/dist/esm/icons/gallery-vertical.js:
lucide-react/dist/esm/icons/gamepad-2.js:
lucide-react/dist/esm/icons/gamepad.js:
lucide-react/dist/esm/icons/gauge.js:
lucide-react/dist/esm/icons/gavel.js:
lucide-react/dist/esm/icons/gem.js:
lucide-react/dist/esm/icons/georgian-lari.js:
lucide-react/dist/esm/icons/ghost.js:
lucide-react/dist/esm/icons/gift.js:
lucide-react/dist/esm/icons/git-branch-plus.js:
lucide-react/dist/esm/icons/git-branch.js:
lucide-react/dist/esm/icons/git-commit-horizontal.js:
lucide-react/dist/esm/icons/git-commit-vertical.js:
lucide-react/dist/esm/icons/git-compare-arrows.js:
lucide-react/dist/esm/icons/git-compare.js:
lucide-react/dist/esm/icons/git-fork.js:
lucide-react/dist/esm/icons/git-graph.js:
lucide-react/dist/esm/icons/git-merge.js:
lucide-react/dist/esm/icons/git-pull-request-arrow.js:
lucide-react/dist/esm/icons/git-pull-request-closed.js:
lucide-react/dist/esm/icons/git-pull-request-create-arrow.js:
lucide-react/dist/esm/icons/git-pull-request-create.js:
lucide-react/dist/esm/icons/git-pull-request-draft.js:
lucide-react/dist/esm/icons/git-pull-request.js:
lucide-react/dist/esm/icons/github.js:
lucide-react/dist/esm/icons/gitlab.js:
lucide-react/dist/esm/icons/glass-water.js:
lucide-react/dist/esm/icons/glasses.js:
lucide-react/dist/esm/icons/globe-lock.js:
lucide-react/dist/esm/icons/globe.js:
lucide-react/dist/esm/icons/goal.js:
lucide-react/dist/esm/icons/gpu.js:
lucide-react/dist/esm/icons/graduation-cap.js:
lucide-react/dist/esm/icons/grape.js:
lucide-react/dist/esm/icons/grid-2x2-check.js:
lucide-react/dist/esm/icons/grid-2x2-plus.js:
lucide-react/dist/esm/icons/grid-2x2-x.js:
lucide-react/dist/esm/icons/grid-2x2.js:
lucide-react/dist/esm/icons/grid-3x2.js:
lucide-react/dist/esm/icons/grid-3x3.js:
lucide-react/dist/esm/icons/grip-horizontal.js:
lucide-react/dist/esm/icons/grip-vertical.js:
lucide-react/dist/esm/icons/grip.js:
lucide-react/dist/esm/icons/group.js:
lucide-react/dist/esm/icons/guitar.js:
lucide-react/dist/esm/icons/ham.js:
lucide-react/dist/esm/icons/hamburger.js:
lucide-react/dist/esm/icons/hammer.js:
lucide-react/dist/esm/icons/hand-coins.js:
lucide-react/dist/esm/icons/hand-fist.js:
lucide-react/dist/esm/icons/hand-grab.js:
lucide-react/dist/esm/icons/hand-heart.js:
lucide-react/dist/esm/icons/hand-helping.js:
lucide-react/dist/esm/icons/hand-metal.js:
lucide-react/dist/esm/icons/hand-platter.js:
lucide-react/dist/esm/icons/hand.js:
lucide-react/dist/esm/icons/handbag.js:
lucide-react/dist/esm/icons/handshake.js:
lucide-react/dist/esm/icons/hard-drive-download.js:
lucide-react/dist/esm/icons/hard-drive-upload.js:
lucide-react/dist/esm/icons/hard-drive.js:
lucide-react/dist/esm/icons/hard-hat.js:
lucide-react/dist/esm/icons/hash.js:
lucide-react/dist/esm/icons/hat-glasses.js:
lucide-react/dist/esm/icons/haze.js:
lucide-react/dist/esm/icons/hdmi-port.js:
lucide-react/dist/esm/icons/heading-1.js:
lucide-react/dist/esm/icons/heading-2.js:
lucide-react/dist/esm/icons/heading-3.js:
lucide-react/dist/esm/icons/heading-4.js:
lucide-react/dist/esm/icons/heading-5.js:
lucide-react/dist/esm/icons/heading-6.js:
lucide-react/dist/esm/icons/heading.js:
lucide-react/dist/esm/icons/headphone-off.js:
lucide-react/dist/esm/icons/headset.js:
lucide-react/dist/esm/icons/headphones.js:
lucide-react/dist/esm/icons/heart-crack.js:
lucide-react/dist/esm/icons/heart-handshake.js:
lucide-react/dist/esm/icons/heart-minus.js:
lucide-react/dist/esm/icons/heart-plus.js:
lucide-react/dist/esm/icons/heart-off.js:
lucide-react/dist/esm/icons/heart-pulse.js:
lucide-react/dist/esm/icons/heart.js:
lucide-react/dist/esm/icons/heater.js:
lucide-react/dist/esm/icons/hexagon.js:
lucide-react/dist/esm/icons/highlighter.js:
lucide-react/dist/esm/icons/history.js:
lucide-react/dist/esm/icons/hop-off.js:
lucide-react/dist/esm/icons/hospital.js:
lucide-react/dist/esm/icons/hop.js:
lucide-react/dist/esm/icons/hotel.js:
lucide-react/dist/esm/icons/hourglass.js:
lucide-react/dist/esm/icons/house-heart.js:
lucide-react/dist/esm/icons/house-plug.js:
lucide-react/dist/esm/icons/house-wifi.js:
lucide-react/dist/esm/icons/house-plus.js:
lucide-react/dist/esm/icons/house.js:
lucide-react/dist/esm/icons/ice-cream-bowl.js:
lucide-react/dist/esm/icons/ice-cream-cone.js:
lucide-react/dist/esm/icons/id-card-lanyard.js:
lucide-react/dist/esm/icons/id-card.js:
lucide-react/dist/esm/icons/image-down.js:
lucide-react/dist/esm/icons/image-minus.js:
lucide-react/dist/esm/icons/image-off.js:
lucide-react/dist/esm/icons/image-play.js:
lucide-react/dist/esm/icons/image-plus.js:
lucide-react/dist/esm/icons/image-up.js:
lucide-react/dist/esm/icons/image-upscale.js:
lucide-react/dist/esm/icons/image.js:
lucide-react/dist/esm/icons/import.js:
lucide-react/dist/esm/icons/images.js:
lucide-react/dist/esm/icons/inbox.js:
lucide-react/dist/esm/icons/indian-rupee.js:
lucide-react/dist/esm/icons/infinity.js:
lucide-react/dist/esm/icons/info.js:
lucide-react/dist/esm/icons/inspection-panel.js:
lucide-react/dist/esm/icons/instagram.js:
lucide-react/dist/esm/icons/italic.js:
lucide-react/dist/esm/icons/iteration-ccw.js:
lucide-react/dist/esm/icons/iteration-cw.js:
lucide-react/dist/esm/icons/japanese-yen.js:
lucide-react/dist/esm/icons/joystick.js:
lucide-react/dist/esm/icons/kanban.js:
lucide-react/dist/esm/icons/kayak.js:
lucide-react/dist/esm/icons/key-round.js:
lucide-react/dist/esm/icons/key-square.js:
lucide-react/dist/esm/icons/key.js:
lucide-react/dist/esm/icons/keyboard-music.js:
lucide-react/dist/esm/icons/keyboard-off.js:
lucide-react/dist/esm/icons/keyboard.js:
lucide-react/dist/esm/icons/lamp-ceiling.js:
lucide-react/dist/esm/icons/lamp-desk.js:
lucide-react/dist/esm/icons/lamp-floor.js:
lucide-react/dist/esm/icons/lamp-wall-down.js:
lucide-react/dist/esm/icons/lamp-wall-up.js:
lucide-react/dist/esm/icons/lamp.js:
lucide-react/dist/esm/icons/land-plot.js:
lucide-react/dist/esm/icons/landmark.js:
lucide-react/dist/esm/icons/languages.js:
lucide-react/dist/esm/icons/laptop-minimal-check.js:
lucide-react/dist/esm/icons/laptop-minimal.js:
lucide-react/dist/esm/icons/laptop.js:
lucide-react/dist/esm/icons/lasso-select.js:
lucide-react/dist/esm/icons/lasso.js:
lucide-react/dist/esm/icons/laugh.js:
lucide-react/dist/esm/icons/layers-2.js:
lucide-react/dist/esm/icons/layout-dashboard.js:
lucide-react/dist/esm/icons/layers.js:
lucide-react/dist/esm/icons/layout-grid.js:
lucide-react/dist/esm/icons/layout-list.js:
lucide-react/dist/esm/icons/layout-panel-left.js:
lucide-react/dist/esm/icons/layout-panel-top.js:
lucide-react/dist/esm/icons/layout-template.js:
lucide-react/dist/esm/icons/leaf.js:
lucide-react/dist/esm/icons/leafy-green.js:
lucide-react/dist/esm/icons/lectern.js:
lucide-react/dist/esm/icons/library-big.js:
lucide-react/dist/esm/icons/library.js:
lucide-react/dist/esm/icons/life-buoy.js:
lucide-react/dist/esm/icons/ligature.js:
lucide-react/dist/esm/icons/lightbulb-off.js:
lucide-react/dist/esm/icons/line-squiggle.js:
lucide-react/dist/esm/icons/lightbulb.js:
lucide-react/dist/esm/icons/link-2-off.js:
lucide-react/dist/esm/icons/link-2.js:
lucide-react/dist/esm/icons/link.js:
lucide-react/dist/esm/icons/linkedin.js:
lucide-react/dist/esm/icons/list-check.js:
lucide-react/dist/esm/icons/list-checks.js:
lucide-react/dist/esm/icons/list-chevrons-down-up.js:
lucide-react/dist/esm/icons/list-collapse.js:
lucide-react/dist/esm/icons/list-chevrons-up-down.js:
lucide-react/dist/esm/icons/list-end.js:
lucide-react/dist/esm/icons/list-filter-plus.js:
lucide-react/dist/esm/icons/list-filter.js:
lucide-react/dist/esm/icons/list-indent-decrease.js:
lucide-react/dist/esm/icons/list-minus.js:
lucide-react/dist/esm/icons/list-indent-increase.js:
lucide-react/dist/esm/icons/list-music.js:
lucide-react/dist/esm/icons/list-ordered.js:
lucide-react/dist/esm/icons/list-plus.js:
lucide-react/dist/esm/icons/list-restart.js:
lucide-react/dist/esm/icons/list-start.js:
lucide-react/dist/esm/icons/list-todo.js:
lucide-react/dist/esm/icons/list-tree.js:
lucide-react/dist/esm/icons/list-x.js:
lucide-react/dist/esm/icons/list-video.js:
lucide-react/dist/esm/icons/list.js:
lucide-react/dist/esm/icons/loader-circle.js:
lucide-react/dist/esm/icons/loader-pinwheel.js:
lucide-react/dist/esm/icons/loader.js:
lucide-react/dist/esm/icons/locate-off.js:
lucide-react/dist/esm/icons/locate-fixed.js:
lucide-react/dist/esm/icons/locate.js:
lucide-react/dist/esm/icons/lock-keyhole-open.js:
lucide-react/dist/esm/icons/lock-keyhole.js:
lucide-react/dist/esm/icons/lock-open.js:
lucide-react/dist/esm/icons/log-in.js:
lucide-react/dist/esm/icons/log-out.js:
lucide-react/dist/esm/icons/lock.js:
lucide-react/dist/esm/icons/logs.js:
lucide-react/dist/esm/icons/lollipop.js:
lucide-react/dist/esm/icons/luggage.js:
lucide-react/dist/esm/icons/magnet.js:
lucide-react/dist/esm/icons/mail-check.js:
lucide-react/dist/esm/icons/mail-minus.js:
lucide-react/dist/esm/icons/mail-open.js:
lucide-react/dist/esm/icons/mail-plus.js:
lucide-react/dist/esm/icons/mail-question-mark.js:
lucide-react/dist/esm/icons/mail-search.js:
lucide-react/dist/esm/icons/mail.js:
lucide-react/dist/esm/icons/mail-x.js:
lucide-react/dist/esm/icons/mail-warning.js:
lucide-react/dist/esm/icons/mailbox.js:
lucide-react/dist/esm/icons/map-minus.js:
lucide-react/dist/esm/icons/mails.js:
lucide-react/dist/esm/icons/map-pin-check-inside.js:
lucide-react/dist/esm/icons/map-pin-check.js:
lucide-react/dist/esm/icons/map-pin-house.js:
lucide-react/dist/esm/icons/map-pin-minus-inside.js:
lucide-react/dist/esm/icons/map-pin-minus.js:
lucide-react/dist/esm/icons/map-pin-pen.js:
lucide-react/dist/esm/icons/map-pin-plus-inside.js:
lucide-react/dist/esm/icons/map-pin-off.js:
lucide-react/dist/esm/icons/map-pin-plus.js:
lucide-react/dist/esm/icons/map-pin-x-inside.js:
lucide-react/dist/esm/icons/map-pin.js:
lucide-react/dist/esm/icons/map-pin-x.js:
lucide-react/dist/esm/icons/map-pinned.js:
lucide-react/dist/esm/icons/map.js:
lucide-react/dist/esm/icons/map-plus.js:
lucide-react/dist/esm/icons/mars-stroke.js:
lucide-react/dist/esm/icons/mars.js:
lucide-react/dist/esm/icons/martini.js:
lucide-react/dist/esm/icons/maximize.js:
lucide-react/dist/esm/icons/maximize-2.js:
lucide-react/dist/esm/icons/medal.js:
lucide-react/dist/esm/icons/megaphone-off.js:
lucide-react/dist/esm/icons/megaphone.js:
lucide-react/dist/esm/icons/meh.js:
lucide-react/dist/esm/icons/memory-stick.js:
lucide-react/dist/esm/icons/merge.js:
lucide-react/dist/esm/icons/message-circle-code.js:
lucide-react/dist/esm/icons/menu.js:
lucide-react/dist/esm/icons/message-circle-dashed.js:
lucide-react/dist/esm/icons/message-circle-heart.js:
lucide-react/dist/esm/icons/message-circle-more.js:
lucide-react/dist/esm/icons/message-circle-off.js:
lucide-react/dist/esm/icons/message-circle-plus.js:
lucide-react/dist/esm/icons/message-circle-question-mark.js:
lucide-react/dist/esm/icons/message-circle-reply.js:
lucide-react/dist/esm/icons/message-circle-warning.js:
lucide-react/dist/esm/icons/message-circle-x.js:
lucide-react/dist/esm/icons/message-circle.js:
lucide-react/dist/esm/icons/message-square-code.js:
lucide-react/dist/esm/icons/message-square-dashed.js:
lucide-react/dist/esm/icons/message-square-diff.js:
lucide-react/dist/esm/icons/message-square-dot.js:
lucide-react/dist/esm/icons/message-square-heart.js:
lucide-react/dist/esm/icons/message-square-lock.js:
lucide-react/dist/esm/icons/message-square-more.js:
lucide-react/dist/esm/icons/message-square-off.js:
lucide-react/dist/esm/icons/message-square-plus.js:
lucide-react/dist/esm/icons/message-square-quote.js:
lucide-react/dist/esm/icons/message-square-reply.js:
lucide-react/dist/esm/icons/message-square-share.js:
lucide-react/dist/esm/icons/message-square-text.js:
lucide-react/dist/esm/icons/message-square-warning.js:
lucide-react/dist/esm/icons/message-square-x.js:
lucide-react/dist/esm/icons/message-square.js:
lucide-react/dist/esm/icons/messages-square.js:
lucide-react/dist/esm/icons/mic-off.js:
lucide-react/dist/esm/icons/mic-vocal.js:
lucide-react/dist/esm/icons/mic.js:
lucide-react/dist/esm/icons/microchip.js:
lucide-react/dist/esm/icons/microscope.js:
lucide-react/dist/esm/icons/microwave.js:
lucide-react/dist/esm/icons/milestone.js:
lucide-react/dist/esm/icons/milk-off.js:
lucide-react/dist/esm/icons/milk.js:
lucide-react/dist/esm/icons/minimize-2.js:
lucide-react/dist/esm/icons/minimize.js:
lucide-react/dist/esm/icons/minus.js:
lucide-react/dist/esm/icons/monitor-check.js:
lucide-react/dist/esm/icons/monitor-cog.js:
lucide-react/dist/esm/icons/monitor-dot.js:
lucide-react/dist/esm/icons/monitor-down.js:
lucide-react/dist/esm/icons/monitor-off.js:
lucide-react/dist/esm/icons/monitor-pause.js:
lucide-react/dist/esm/icons/monitor-play.js:
lucide-react/dist/esm/icons/monitor-smartphone.js:
lucide-react/dist/esm/icons/monitor-speaker.js:
lucide-react/dist/esm/icons/monitor-stop.js:
lucide-react/dist/esm/icons/monitor-up.js:
lucide-react/dist/esm/icons/monitor-x.js:
lucide-react/dist/esm/icons/monitor.js:
lucide-react/dist/esm/icons/moon-star.js:
lucide-react/dist/esm/icons/moon.js:
lucide-react/dist/esm/icons/motorbike.js:
lucide-react/dist/esm/icons/mountain-snow.js:
lucide-react/dist/esm/icons/mountain.js:
lucide-react/dist/esm/icons/mouse-off.js:
lucide-react/dist/esm/icons/mouse-pointer-2.js:
lucide-react/dist/esm/icons/mouse-pointer-ban.js:
lucide-react/dist/esm/icons/mouse-pointer-click.js:
lucide-react/dist/esm/icons/mouse-pointer.js:
lucide-react/dist/esm/icons/mouse.js:
lucide-react/dist/esm/icons/move-3d.js:
lucide-react/dist/esm/icons/move-diagonal.js:
lucide-react/dist/esm/icons/move-diagonal-2.js:
lucide-react/dist/esm/icons/move-down-left.js:
lucide-react/dist/esm/icons/move-down-right.js:
lucide-react/dist/esm/icons/move-down.js:
lucide-react/dist/esm/icons/move-horizontal.js:
lucide-react/dist/esm/icons/move-left.js:
lucide-react/dist/esm/icons/move-right.js:
lucide-react/dist/esm/icons/move-up-left.js:
lucide-react/dist/esm/icons/move-up-right.js:
lucide-react/dist/esm/icons/move-up.js:
lucide-react/dist/esm/icons/move-vertical.js:
lucide-react/dist/esm/icons/move.js:
lucide-react/dist/esm/icons/music-2.js:
lucide-react/dist/esm/icons/music-3.js:
lucide-react/dist/esm/icons/music-4.js:
lucide-react/dist/esm/icons/music.js:
lucide-react/dist/esm/icons/navigation-2-off.js:
lucide-react/dist/esm/icons/navigation-2.js:
lucide-react/dist/esm/icons/navigation-off.js:
lucide-react/dist/esm/icons/network.js:
lucide-react/dist/esm/icons/newspaper.js:
lucide-react/dist/esm/icons/navigation.js:
lucide-react/dist/esm/icons/nfc.js:
lucide-react/dist/esm/icons/non-binary.js:
lucide-react/dist/esm/icons/notebook-pen.js:
lucide-react/dist/esm/icons/notebook-tabs.js:
lucide-react/dist/esm/icons/notebook-text.js:
lucide-react/dist/esm/icons/notebook.js:
lucide-react/dist/esm/icons/notepad-text-dashed.js:
lucide-react/dist/esm/icons/notepad-text.js:
lucide-react/dist/esm/icons/nut-off.js:
lucide-react/dist/esm/icons/octagon-alert.js:
lucide-react/dist/esm/icons/nut.js:
lucide-react/dist/esm/icons/octagon-minus.js:
lucide-react/dist/esm/icons/octagon-pause.js:
lucide-react/dist/esm/icons/octagon-x.js:
lucide-react/dist/esm/icons/octagon.js:
lucide-react/dist/esm/icons/omega.js:
lucide-react/dist/esm/icons/option.js:
lucide-react/dist/esm/icons/orbit.js:
lucide-react/dist/esm/icons/origami.js:
lucide-react/dist/esm/icons/package-2.js:
lucide-react/dist/esm/icons/package-check.js:
lucide-react/dist/esm/icons/package-minus.js:
lucide-react/dist/esm/icons/package-open.js:
lucide-react/dist/esm/icons/package-plus.js:
lucide-react/dist/esm/icons/package-search.js:
lucide-react/dist/esm/icons/package-x.js:
lucide-react/dist/esm/icons/package.js:
lucide-react/dist/esm/icons/paint-bucket.js:
lucide-react/dist/esm/icons/paint-roller.js:
lucide-react/dist/esm/icons/paintbrush-vertical.js:
lucide-react/dist/esm/icons/paintbrush.js:
lucide-react/dist/esm/icons/palette.js:
lucide-react/dist/esm/icons/panda.js:
lucide-react/dist/esm/icons/panel-bottom-close.js:
lucide-react/dist/esm/icons/panel-bottom-open.js:
lucide-react/dist/esm/icons/panel-bottom-dashed.js:
lucide-react/dist/esm/icons/panel-bottom.js:
lucide-react/dist/esm/icons/panel-left-close.js:
lucide-react/dist/esm/icons/panel-left-dashed.js:
lucide-react/dist/esm/icons/panel-left-open.js:
lucide-react/dist/esm/icons/panel-left-right-dashed.js:
lucide-react/dist/esm/icons/panel-left.js:
lucide-react/dist/esm/icons/panel-right-close.js:
lucide-react/dist/esm/icons/panel-right-dashed.js:
lucide-react/dist/esm/icons/panel-right.js:
lucide-react/dist/esm/icons/panel-right-open.js:
lucide-react/dist/esm/icons/panel-top-bottom-dashed.js:
lucide-react/dist/esm/icons/panel-top-close.js:
lucide-react/dist/esm/icons/panel-top-open.js:
lucide-react/dist/esm/icons/panel-top.js:
lucide-react/dist/esm/icons/panel-top-dashed.js:
lucide-react/dist/esm/icons/panels-left-bottom.js:
lucide-react/dist/esm/icons/panels-right-bottom.js:
lucide-react/dist/esm/icons/panels-top-left.js:
lucide-react/dist/esm/icons/paperclip.js:
lucide-react/dist/esm/icons/parentheses.js:
lucide-react/dist/esm/icons/parking-meter.js:
lucide-react/dist/esm/icons/party-popper.js:
lucide-react/dist/esm/icons/pause.js:
lucide-react/dist/esm/icons/paw-print.js:
lucide-react/dist/esm/icons/pc-case.js:
lucide-react/dist/esm/icons/pen-line.js:
lucide-react/dist/esm/icons/pen-off.js:
lucide-react/dist/esm/icons/pen-tool.js:
lucide-react/dist/esm/icons/pencil-line.js:
lucide-react/dist/esm/icons/pen.js:
lucide-react/dist/esm/icons/pencil-off.js:
lucide-react/dist/esm/icons/pencil-ruler.js:
lucide-react/dist/esm/icons/pencil.js:
lucide-react/dist/esm/icons/pentagon.js:
lucide-react/dist/esm/icons/percent.js:
lucide-react/dist/esm/icons/person-standing.js:
lucide-react/dist/esm/icons/philippine-peso.js:
lucide-react/dist/esm/icons/phone-call.js:
lucide-react/dist/esm/icons/phone-forwarded.js:
lucide-react/dist/esm/icons/phone-incoming.js:
lucide-react/dist/esm/icons/phone-missed.js:
lucide-react/dist/esm/icons/phone-off.js:
lucide-react/dist/esm/icons/phone-outgoing.js:
lucide-react/dist/esm/icons/phone.js:
lucide-react/dist/esm/icons/pi.js:
lucide-react/dist/esm/icons/piano.js:
lucide-react/dist/esm/icons/pickaxe.js:
lucide-react/dist/esm/icons/picture-in-picture-2.js:
lucide-react/dist/esm/icons/piggy-bank.js:
lucide-react/dist/esm/icons/picture-in-picture.js:
lucide-react/dist/esm/icons/pilcrow-left.js:
lucide-react/dist/esm/icons/pilcrow-right.js:
lucide-react/dist/esm/icons/pilcrow.js:
lucide-react/dist/esm/icons/pill-bottle.js:
lucide-react/dist/esm/icons/pill.js:
lucide-react/dist/esm/icons/pin-off.js:
lucide-react/dist/esm/icons/pin.js:
lucide-react/dist/esm/icons/pipette.js:
lucide-react/dist/esm/icons/pizza.js:
lucide-react/dist/esm/icons/plane-landing.js:
lucide-react/dist/esm/icons/plane-takeoff.js:
lucide-react/dist/esm/icons/plane.js:
lucide-react/dist/esm/icons/play.js:
lucide-react/dist/esm/icons/plug-zap.js:
lucide-react/dist/esm/icons/plug-2.js:
lucide-react/dist/esm/icons/plug.js:
lucide-react/dist/esm/icons/plus.js:
lucide-react/dist/esm/icons/pocket-knife.js:
lucide-react/dist/esm/icons/pocket.js:
lucide-react/dist/esm/icons/podcast.js:
lucide-react/dist/esm/icons/pointer-off.js:
lucide-react/dist/esm/icons/pointer.js:
lucide-react/dist/esm/icons/popsicle.js:
lucide-react/dist/esm/icons/popcorn.js:
lucide-react/dist/esm/icons/pound-sterling.js:
lucide-react/dist/esm/icons/power-off.js:
lucide-react/dist/esm/icons/power.js:
lucide-react/dist/esm/icons/presentation.js:
lucide-react/dist/esm/icons/printer.js:
lucide-react/dist/esm/icons/printer-check.js:
lucide-react/dist/esm/icons/projector.js:
lucide-react/dist/esm/icons/proportions.js:
lucide-react/dist/esm/icons/puzzle.js:
lucide-react/dist/esm/icons/pyramid.js:
lucide-react/dist/esm/icons/qr-code.js:
lucide-react/dist/esm/icons/quote.js:
lucide-react/dist/esm/icons/rabbit.js:
lucide-react/dist/esm/icons/radar.js:
lucide-react/dist/esm/icons/radiation.js:
lucide-react/dist/esm/icons/radical.js:
lucide-react/dist/esm/icons/radio-receiver.js:
lucide-react/dist/esm/icons/radio-tower.js:
lucide-react/dist/esm/icons/radio.js:
lucide-react/dist/esm/icons/radius.js:
lucide-react/dist/esm/icons/rainbow.js:
lucide-react/dist/esm/icons/rail-symbol.js:
lucide-react/dist/esm/icons/rat.js:
lucide-react/dist/esm/icons/ratio.js:
lucide-react/dist/esm/icons/receipt-euro.js:
lucide-react/dist/esm/icons/receipt-cent.js:
lucide-react/dist/esm/icons/receipt-indian-rupee.js:
lucide-react/dist/esm/icons/receipt-japanese-yen.js:
lucide-react/dist/esm/icons/receipt-pound-sterling.js:
lucide-react/dist/esm/icons/receipt-russian-ruble.js:
lucide-react/dist/esm/icons/receipt-swiss-franc.js:
lucide-react/dist/esm/icons/receipt-text.js:
lucide-react/dist/esm/icons/receipt-turkish-lira.js:
lucide-react/dist/esm/icons/receipt.js:
lucide-react/dist/esm/icons/rectangle-circle.js:
lucide-react/dist/esm/icons/rectangle-ellipsis.js:
lucide-react/dist/esm/icons/rectangle-goggles.js:
lucide-react/dist/esm/icons/rectangle-horizontal.js:
lucide-react/dist/esm/icons/recycle.js:
lucide-react/dist/esm/icons/rectangle-vertical.js:
lucide-react/dist/esm/icons/redo-2.js:
lucide-react/dist/esm/icons/redo-dot.js:
lucide-react/dist/esm/icons/redo.js:
lucide-react/dist/esm/icons/refresh-ccw-dot.js:
lucide-react/dist/esm/icons/refresh-ccw.js:
lucide-react/dist/esm/icons/refresh-cw-off.js:
lucide-react/dist/esm/icons/refresh-cw.js:
lucide-react/dist/esm/icons/refrigerator.js:
lucide-react/dist/esm/icons/regex.js:
lucide-react/dist/esm/icons/remove-formatting.js:
lucide-react/dist/esm/icons/repeat-1.js:
lucide-react/dist/esm/icons/repeat-2.js:
lucide-react/dist/esm/icons/repeat.js:
lucide-react/dist/esm/icons/replace-all.js:
lucide-react/dist/esm/icons/replace.js:
lucide-react/dist/esm/icons/reply-all.js:
lucide-react/dist/esm/icons/reply.js:
lucide-react/dist/esm/icons/rewind.js:
lucide-react/dist/esm/icons/ribbon.js:
lucide-react/dist/esm/icons/rocket.js:
lucide-react/dist/esm/icons/rocking-chair.js:
lucide-react/dist/esm/icons/roller-coaster.js:
lucide-react/dist/esm/icons/rose.js:
lucide-react/dist/esm/icons/rotate-3d.js:
lucide-react/dist/esm/icons/rotate-ccw-key.js:
lucide-react/dist/esm/icons/rotate-ccw-square.js:
lucide-react/dist/esm/icons/rotate-ccw.js:
lucide-react/dist/esm/icons/rotate-cw-square.js:
lucide-react/dist/esm/icons/rotate-cw.js:
lucide-react/dist/esm/icons/route-off.js:
lucide-react/dist/esm/icons/route.js:
lucide-react/dist/esm/icons/router.js:
lucide-react/dist/esm/icons/rows-2.js:
lucide-react/dist/esm/icons/rows-3.js:
lucide-react/dist/esm/icons/rows-4.js:
lucide-react/dist/esm/icons/rss.js:
lucide-react/dist/esm/icons/ruler-dimension-line.js:
lucide-react/dist/esm/icons/ruler.js:
lucide-react/dist/esm/icons/russian-ruble.js:
lucide-react/dist/esm/icons/sailboat.js:
lucide-react/dist/esm/icons/salad.js:
lucide-react/dist/esm/icons/sandwich.js:
lucide-react/dist/esm/icons/satellite-dish.js:
lucide-react/dist/esm/icons/satellite.js:
lucide-react/dist/esm/icons/saudi-riyal.js:
lucide-react/dist/esm/icons/save-all.js:
lucide-react/dist/esm/icons/save-off.js:
lucide-react/dist/esm/icons/save.js:
lucide-react/dist/esm/icons/scale-3d.js:
lucide-react/dist/esm/icons/scale.js:
lucide-react/dist/esm/icons/scaling.js:
lucide-react/dist/esm/icons/scan-barcode.js:
lucide-react/dist/esm/icons/scan-eye.js:
lucide-react/dist/esm/icons/scan-face.js:
lucide-react/dist/esm/icons/scan-heart.js:
lucide-react/dist/esm/icons/scan-line.js:
lucide-react/dist/esm/icons/scan-qr-code.js:
lucide-react/dist/esm/icons/scan-search.js:
lucide-react/dist/esm/icons/scan-text.js:
lucide-react/dist/esm/icons/scan.js:
lucide-react/dist/esm/icons/school.js:
lucide-react/dist/esm/icons/scissors-line-dashed.js:
lucide-react/dist/esm/icons/scissors.js:
lucide-react/dist/esm/icons/screen-share-off.js:
lucide-react/dist/esm/icons/screen-share.js:
lucide-react/dist/esm/icons/scroll.js:
lucide-react/dist/esm/icons/scroll-text.js:
lucide-react/dist/esm/icons/search-check.js:
lucide-react/dist/esm/icons/search-code.js:
lucide-react/dist/esm/icons/search-slash.js:
lucide-react/dist/esm/icons/search-x.js:
lucide-react/dist/esm/icons/search.js:
lucide-react/dist/esm/icons/section.js:
lucide-react/dist/esm/icons/send-horizontal.js:
lucide-react/dist/esm/icons/send-to-back.js:
lucide-react/dist/esm/icons/send.js:
lucide-react/dist/esm/icons/separator-horizontal.js:
lucide-react/dist/esm/icons/separator-vertical.js:
lucide-react/dist/esm/icons/server-cog.js:
lucide-react/dist/esm/icons/server-crash.js:
lucide-react/dist/esm/icons/server-off.js:
lucide-react/dist/esm/icons/server.js:
lucide-react/dist/esm/icons/settings-2.js:
lucide-react/dist/esm/icons/settings.js:
lucide-react/dist/esm/icons/shapes.js:
lucide-react/dist/esm/icons/share-2.js:
lucide-react/dist/esm/icons/share.js:
lucide-react/dist/esm/icons/sheet.js:
lucide-react/dist/esm/icons/shell.js:
lucide-react/dist/esm/icons/shield-alert.js:
lucide-react/dist/esm/icons/shield-ban.js:
lucide-react/dist/esm/icons/shield-check.js:
lucide-react/dist/esm/icons/shield-half.js:
lucide-react/dist/esm/icons/shield-ellipsis.js:
lucide-react/dist/esm/icons/shield-minus.js:
lucide-react/dist/esm/icons/shield-off.js:
lucide-react/dist/esm/icons/shield-plus.js:
lucide-react/dist/esm/icons/shield-question-mark.js:
lucide-react/dist/esm/icons/shield-user.js:
lucide-react/dist/esm/icons/shield-x.js:
lucide-react/dist/esm/icons/shield.js:
lucide-react/dist/esm/icons/ship.js:
lucide-react/dist/esm/icons/ship-wheel.js:
lucide-react/dist/esm/icons/shirt.js:
lucide-react/dist/esm/icons/shopping-bag.js:
lucide-react/dist/esm/icons/shopping-basket.js:
lucide-react/dist/esm/icons/shopping-cart.js:
lucide-react/dist/esm/icons/shovel.js:
lucide-react/dist/esm/icons/shower-head.js:
lucide-react/dist/esm/icons/shredder.js:
lucide-react/dist/esm/icons/shrimp.js:
lucide-react/dist/esm/icons/shrink.js:
lucide-react/dist/esm/icons/shrub.js:
lucide-react/dist/esm/icons/shuffle.js:
lucide-react/dist/esm/icons/sigma.js:
lucide-react/dist/esm/icons/signal-high.js:
lucide-react/dist/esm/icons/signal-low.js:
lucide-react/dist/esm/icons/signal-medium.js:
lucide-react/dist/esm/icons/signal-zero.js:
lucide-react/dist/esm/icons/signal.js:
lucide-react/dist/esm/icons/signature.js:
lucide-react/dist/esm/icons/signpost.js:
lucide-react/dist/esm/icons/signpost-big.js:
lucide-react/dist/esm/icons/siren.js:
lucide-react/dist/esm/icons/skip-back.js:
lucide-react/dist/esm/icons/skip-forward.js:
lucide-react/dist/esm/icons/skull.js:
lucide-react/dist/esm/icons/slack.js:
lucide-react/dist/esm/icons/slash.js:
lucide-react/dist/esm/icons/slice.js:
lucide-react/dist/esm/icons/sliders-horizontal.js:
lucide-react/dist/esm/icons/sliders-vertical.js:
lucide-react/dist/esm/icons/smartphone-charging.js:
lucide-react/dist/esm/icons/smartphone-nfc.js:
lucide-react/dist/esm/icons/smile-plus.js:
lucide-react/dist/esm/icons/smartphone.js:
lucide-react/dist/esm/icons/smile.js:
lucide-react/dist/esm/icons/snail.js:
lucide-react/dist/esm/icons/snowflake.js:
lucide-react/dist/esm/icons/soap-dispenser-droplet.js:
lucide-react/dist/esm/icons/sofa.js:
lucide-react/dist/esm/icons/soup.js:
lucide-react/dist/esm/icons/space.js:
lucide-react/dist/esm/icons/spade.js:
lucide-react/dist/esm/icons/sparkle.js:
lucide-react/dist/esm/icons/sparkles.js:
lucide-react/dist/esm/icons/speaker.js:
lucide-react/dist/esm/icons/speech.js:
lucide-react/dist/esm/icons/spell-check-2.js:
lucide-react/dist/esm/icons/spell-check.js:
lucide-react/dist/esm/icons/spline-pointer.js:
lucide-react/dist/esm/icons/spline.js:
lucide-react/dist/esm/icons/split.js:
lucide-react/dist/esm/icons/spool.js:
lucide-react/dist/esm/icons/spotlight.js:
lucide-react/dist/esm/icons/spray-can.js:
lucide-react/dist/esm/icons/sprout.js:
lucide-react/dist/esm/icons/square-activity.js:
lucide-react/dist/esm/icons/square-arrow-down-left.js:
lucide-react/dist/esm/icons/square-arrow-down-right.js:
lucide-react/dist/esm/icons/square-arrow-down.js:
lucide-react/dist/esm/icons/square-arrow-left.js:
lucide-react/dist/esm/icons/square-arrow-out-down-left.js:
lucide-react/dist/esm/icons/square-arrow-out-down-right.js:
lucide-react/dist/esm/icons/square-arrow-out-up-left.js:
lucide-react/dist/esm/icons/square-arrow-out-up-right.js:
lucide-react/dist/esm/icons/square-arrow-right.js:
lucide-react/dist/esm/icons/square-arrow-up-left.js:
lucide-react/dist/esm/icons/square-arrow-up-right.js:
lucide-react/dist/esm/icons/square-arrow-up.js:
lucide-react/dist/esm/icons/square-asterisk.js:
lucide-react/dist/esm/icons/square-bottom-dashed-scissors.js:
lucide-react/dist/esm/icons/square-chart-gantt.js:
lucide-react/dist/esm/icons/square-check-big.js:
lucide-react/dist/esm/icons/square-check.js:
lucide-react/dist/esm/icons/square-chevron-left.js:
lucide-react/dist/esm/icons/square-chevron-down.js:
lucide-react/dist/esm/icons/square-chevron-right.js:
lucide-react/dist/esm/icons/square-chevron-up.js:
lucide-react/dist/esm/icons/square-code.js:
lucide-react/dist/esm/icons/square-dashed-bottom.js:
lucide-react/dist/esm/icons/square-dashed-bottom-code.js:
lucide-react/dist/esm/icons/square-dashed-kanban.js:
lucide-react/dist/esm/icons/square-dashed-mouse-pointer.js:
lucide-react/dist/esm/icons/square-dashed-top-solid.js:
lucide-react/dist/esm/icons/square-dashed.js:
lucide-react/dist/esm/icons/square-divide.js:
lucide-react/dist/esm/icons/square-dot.js:
lucide-react/dist/esm/icons/square-equal.js:
lucide-react/dist/esm/icons/square-function.js:
lucide-react/dist/esm/icons/square-kanban.js:
lucide-react/dist/esm/icons/square-library.js:
lucide-react/dist/esm/icons/square-m.js:
lucide-react/dist/esm/icons/square-menu.js:
lucide-react/dist/esm/icons/square-minus.js:
lucide-react/dist/esm/icons/square-mouse-pointer.js:
lucide-react/dist/esm/icons/square-parking-off.js:
lucide-react/dist/esm/icons/square-parking.js:
lucide-react/dist/esm/icons/square-pause.js:
lucide-react/dist/esm/icons/square-pen.js:
lucide-react/dist/esm/icons/square-percent.js:
lucide-react/dist/esm/icons/square-pi.js:
lucide-react/dist/esm/icons/square-pilcrow.js:
lucide-react/dist/esm/icons/square-plus.js:
lucide-react/dist/esm/icons/square-play.js:
lucide-react/dist/esm/icons/square-power.js:
lucide-react/dist/esm/icons/square-radical.js:
lucide-react/dist/esm/icons/square-round-corner.js:
lucide-react/dist/esm/icons/square-scissors.js:
lucide-react/dist/esm/icons/square-sigma.js:
lucide-react/dist/esm/icons/square-slash.js:
lucide-react/dist/esm/icons/square-split-horizontal.js:
lucide-react/dist/esm/icons/square-split-vertical.js:
lucide-react/dist/esm/icons/square-square.js:
lucide-react/dist/esm/icons/square-stack.js:
lucide-react/dist/esm/icons/square-star.js:
lucide-react/dist/esm/icons/square-stop.js:
lucide-react/dist/esm/icons/square-terminal.js:
lucide-react/dist/esm/icons/square-user.js:
lucide-react/dist/esm/icons/square-user-round.js:
lucide-react/dist/esm/icons/square-x.js:
lucide-react/dist/esm/icons/square.js:
lucide-react/dist/esm/icons/squares-exclude.js:
lucide-react/dist/esm/icons/squares-intersect.js:
lucide-react/dist/esm/icons/squares-subtract.js:
lucide-react/dist/esm/icons/squares-unite.js:
lucide-react/dist/esm/icons/squircle-dashed.js:
lucide-react/dist/esm/icons/squircle.js:
lucide-react/dist/esm/icons/squirrel.js:
lucide-react/dist/esm/icons/stamp.js:
lucide-react/dist/esm/icons/star-half.js:
lucide-react/dist/esm/icons/star-off.js:
lucide-react/dist/esm/icons/star.js:
lucide-react/dist/esm/icons/step-back.js:
lucide-react/dist/esm/icons/step-forward.js:
lucide-react/dist/esm/icons/stethoscope.js:
lucide-react/dist/esm/icons/sticky-note.js:
lucide-react/dist/esm/icons/sticker.js:
lucide-react/dist/esm/icons/stretch-horizontal.js:
lucide-react/dist/esm/icons/store.js:
lucide-react/dist/esm/icons/stretch-vertical.js:
lucide-react/dist/esm/icons/strikethrough.js:
lucide-react/dist/esm/icons/subscript.js:
lucide-react/dist/esm/icons/sun-dim.js:
lucide-react/dist/esm/icons/sun-medium.js:
lucide-react/dist/esm/icons/sun-moon.js:
lucide-react/dist/esm/icons/sun-snow.js:
lucide-react/dist/esm/icons/sun.js:
lucide-react/dist/esm/icons/sunrise.js:
lucide-react/dist/esm/icons/sunset.js:
lucide-react/dist/esm/icons/superscript.js:
lucide-react/dist/esm/icons/swatch-book.js:
lucide-react/dist/esm/icons/swiss-franc.js:
lucide-react/dist/esm/icons/switch-camera.js:
lucide-react/dist/esm/icons/sword.js:
lucide-react/dist/esm/icons/swords.js:
lucide-react/dist/esm/icons/syringe.js:
lucide-react/dist/esm/icons/table-2.js:
lucide-react/dist/esm/icons/table-cells-merge.js:
lucide-react/dist/esm/icons/table-cells-split.js:
lucide-react/dist/esm/icons/table-columns-split.js:
lucide-react/dist/esm/icons/table-of-contents.js:
lucide-react/dist/esm/icons/table-properties.js:
lucide-react/dist/esm/icons/table-rows-split.js:
lucide-react/dist/esm/icons/table.js:
lucide-react/dist/esm/icons/tablet-smartphone.js:
lucide-react/dist/esm/icons/tablet.js:
lucide-react/dist/esm/icons/tablets.js:
lucide-react/dist/esm/icons/tag.js:
lucide-react/dist/esm/icons/tags.js:
lucide-react/dist/esm/icons/tally-1.js:
lucide-react/dist/esm/icons/tally-2.js:
lucide-react/dist/esm/icons/tally-3.js:
lucide-react/dist/esm/icons/tally-5.js:
lucide-react/dist/esm/icons/tally-4.js:
lucide-react/dist/esm/icons/tangent.js:
lucide-react/dist/esm/icons/target.js:
lucide-react/dist/esm/icons/telescope.js:
lucide-react/dist/esm/icons/tent-tree.js:
lucide-react/dist/esm/icons/tent.js:
lucide-react/dist/esm/icons/test-tube-diagonal.js:
lucide-react/dist/esm/icons/terminal.js:
lucide-react/dist/esm/icons/test-tube.js:
lucide-react/dist/esm/icons/test-tubes.js:
lucide-react/dist/esm/icons/text-align-center.js:
lucide-react/dist/esm/icons/text-align-end.js:
lucide-react/dist/esm/icons/text-align-justify.js:
lucide-react/dist/esm/icons/text-align-start.js:
lucide-react/dist/esm/icons/text-cursor-input.js:
lucide-react/dist/esm/icons/text-cursor.js:
lucide-react/dist/esm/icons/text-initial.js:
lucide-react/dist/esm/icons/text-quote.js:
lucide-react/dist/esm/icons/text-search.js:
lucide-react/dist/esm/icons/text-select.js:
lucide-react/dist/esm/icons/text-wrap.js:
lucide-react/dist/esm/icons/theater.js:
lucide-react/dist/esm/icons/thermometer-snowflake.js:
lucide-react/dist/esm/icons/thermometer-sun.js:
lucide-react/dist/esm/icons/thermometer.js:
lucide-react/dist/esm/icons/thumbs-down.js:
lucide-react/dist/esm/icons/thumbs-up.js:
lucide-react/dist/esm/icons/ticket-check.js:
lucide-react/dist/esm/icons/ticket-minus.js:
lucide-react/dist/esm/icons/ticket-percent.js:
lucide-react/dist/esm/icons/ticket-plus.js:
lucide-react/dist/esm/icons/ticket-slash.js:
lucide-react/dist/esm/icons/ticket-x.js:
lucide-react/dist/esm/icons/ticket.js:
lucide-react/dist/esm/icons/tickets-plane.js:
lucide-react/dist/esm/icons/tickets.js:
lucide-react/dist/esm/icons/timer-off.js:
lucide-react/dist/esm/icons/timer-reset.js:
lucide-react/dist/esm/icons/timer.js:
lucide-react/dist/esm/icons/toggle-left.js:
lucide-react/dist/esm/icons/toggle-right.js:
lucide-react/dist/esm/icons/toilet.js:
lucide-react/dist/esm/icons/tool-case.js:
lucide-react/dist/esm/icons/tornado.js:
lucide-react/dist/esm/icons/torus.js:
lucide-react/dist/esm/icons/touchpad.js:
lucide-react/dist/esm/icons/touchpad-off.js:
lucide-react/dist/esm/icons/tower-control.js:
lucide-react/dist/esm/icons/toy-brick.js:
lucide-react/dist/esm/icons/tractor.js:
lucide-react/dist/esm/icons/train-front-tunnel.js:
lucide-react/dist/esm/icons/traffic-cone.js:
lucide-react/dist/esm/icons/train-front.js:
lucide-react/dist/esm/icons/train-track.js:
lucide-react/dist/esm/icons/tram-front.js:
lucide-react/dist/esm/icons/transgender.js:
lucide-react/dist/esm/icons/trash-2.js:
lucide-react/dist/esm/icons/trash.js:
lucide-react/dist/esm/icons/tree-deciduous.js:
lucide-react/dist/esm/icons/tree-pine.js:
lucide-react/dist/esm/icons/trees.js:
lucide-react/dist/esm/icons/tree-palm.js:
lucide-react/dist/esm/icons/trello.js:
lucide-react/dist/esm/icons/trending-down.js:
lucide-react/dist/esm/icons/trending-up-down.js:
lucide-react/dist/esm/icons/trending-up.js:
lucide-react/dist/esm/icons/triangle-alert.js:
lucide-react/dist/esm/icons/triangle-dashed.js:
lucide-react/dist/esm/icons/triangle-right.js:
lucide-react/dist/esm/icons/trophy.js:
lucide-react/dist/esm/icons/triangle.js:
lucide-react/dist/esm/icons/truck-electric.js:
lucide-react/dist/esm/icons/truck.js:
lucide-react/dist/esm/icons/turkish-lira.js:
lucide-react/dist/esm/icons/turntable.js:
lucide-react/dist/esm/icons/turtle.js:
lucide-react/dist/esm/icons/tv-minimal-play.js:
lucide-react/dist/esm/icons/tv-minimal.js:
lucide-react/dist/esm/icons/tv.js:
lucide-react/dist/esm/icons/twitter.js:
lucide-react/dist/esm/icons/type-outline.js:
lucide-react/dist/esm/icons/twitch.js:
lucide-react/dist/esm/icons/type.js:
lucide-react/dist/esm/icons/umbrella-off.js:
lucide-react/dist/esm/icons/umbrella.js:
lucide-react/dist/esm/icons/undo-2.js:
lucide-react/dist/esm/icons/undo-dot.js:
lucide-react/dist/esm/icons/underline.js:
lucide-react/dist/esm/icons/undo.js:
lucide-react/dist/esm/icons/unfold-horizontal.js:
lucide-react/dist/esm/icons/unfold-vertical.js:
lucide-react/dist/esm/icons/university.js:
lucide-react/dist/esm/icons/ungroup.js:
lucide-react/dist/esm/icons/unlink-2.js:
lucide-react/dist/esm/icons/unlink.js:
lucide-react/dist/esm/icons/unplug.js:
lucide-react/dist/esm/icons/upload.js:
lucide-react/dist/esm/icons/usb.js:
lucide-react/dist/esm/icons/user-check.js:
lucide-react/dist/esm/icons/user-cog.js:
lucide-react/dist/esm/icons/user-lock.js:
lucide-react/dist/esm/icons/user-minus.js:
lucide-react/dist/esm/icons/user-pen.js:
lucide-react/dist/esm/icons/user-plus.js:
lucide-react/dist/esm/icons/user-round-check.js:
lucide-react/dist/esm/icons/user-round-cog.js:
lucide-react/dist/esm/icons/user-round-minus.js:
lucide-react/dist/esm/icons/user-round-pen.js:
lucide-react/dist/esm/icons/user-round-search.js:
lucide-react/dist/esm/icons/user-round-plus.js:
lucide-react/dist/esm/icons/user-round-x.js:
lucide-react/dist/esm/icons/user-round.js:
lucide-react/dist/esm/icons/user-search.js:
lucide-react/dist/esm/icons/user-star.js:
lucide-react/dist/esm/icons/user-x.js:
lucide-react/dist/esm/icons/users-round.js:
lucide-react/dist/esm/icons/users.js:
lucide-react/dist/esm/icons/user.js:
lucide-react/dist/esm/icons/utensils-crossed.js:
lucide-react/dist/esm/icons/utensils.js:
lucide-react/dist/esm/icons/utility-pole.js:
lucide-react/dist/esm/icons/vault.js:
lucide-react/dist/esm/icons/vector-square.js:
lucide-react/dist/esm/icons/variable.js:
lucide-react/dist/esm/icons/vegan.js:
lucide-react/dist/esm/icons/venetian-mask.js:
lucide-react/dist/esm/icons/venus-and-mars.js:
lucide-react/dist/esm/icons/venus.js:
lucide-react/dist/esm/icons/vibrate.js:
lucide-react/dist/esm/icons/vibrate-off.js:
lucide-react/dist/esm/icons/video-off.js:
lucide-react/dist/esm/icons/video.js:
lucide-react/dist/esm/icons/videotape.js:
lucide-react/dist/esm/icons/view.js:
lucide-react/dist/esm/icons/voicemail.js:
lucide-react/dist/esm/icons/volleyball.js:
lucide-react/dist/esm/icons/volume-1.js:
lucide-react/dist/esm/icons/volume-2.js:
lucide-react/dist/esm/icons/volume-off.js:
lucide-react/dist/esm/icons/volume-x.js:
lucide-react/dist/esm/icons/volume.js:
lucide-react/dist/esm/icons/vote.js:
lucide-react/dist/esm/icons/wallet-cards.js:
lucide-react/dist/esm/icons/wallet-minimal.js:
lucide-react/dist/esm/icons/wallet.js:
lucide-react/dist/esm/icons/wallpaper.js:
lucide-react/dist/esm/icons/wand.js:
lucide-react/dist/esm/icons/wand-sparkles.js:
lucide-react/dist/esm/icons/warehouse.js:
lucide-react/dist/esm/icons/washing-machine.js:
lucide-react/dist/esm/icons/watch.js:
lucide-react/dist/esm/icons/waves-ladder.js:
lucide-react/dist/esm/icons/waves.js:
lucide-react/dist/esm/icons/waypoints.js:
lucide-react/dist/esm/icons/webcam.js:
lucide-react/dist/esm/icons/webhook-off.js:
lucide-react/dist/esm/icons/webhook.js:
lucide-react/dist/esm/icons/weight.js:
lucide-react/dist/esm/icons/wheat-off.js:
lucide-react/dist/esm/icons/wheat.js:
lucide-react/dist/esm/icons/whole-word.js:
lucide-react/dist/esm/icons/wifi-cog.js:
lucide-react/dist/esm/icons/wifi-high.js:
lucide-react/dist/esm/icons/wifi-low.js:
lucide-react/dist/esm/icons/wifi-off.js:
lucide-react/dist/esm/icons/wifi-pen.js:
lucide-react/dist/esm/icons/wifi-sync.js:
lucide-react/dist/esm/icons/wifi-zero.js:
lucide-react/dist/esm/icons/wifi.js:
lucide-react/dist/esm/icons/wind-arrow-down.js:
lucide-react/dist/esm/icons/wind.js:
lucide-react/dist/esm/icons/wine-off.js:
lucide-react/dist/esm/icons/wine.js:
lucide-react/dist/esm/icons/workflow.js:
lucide-react/dist/esm/icons/worm.js:
lucide-react/dist/esm/icons/wrench.js:
lucide-react/dist/esm/icons/x.js:
lucide-react/dist/esm/icons/youtube.js:
lucide-react/dist/esm/icons/zap-off.js:
lucide-react/dist/esm/icons/zap.js:
lucide-react/dist/esm/icons/zoom-in.js:
lucide-react/dist/esm/icons/zoom-out.js:
lucide-react/dist/esm/icons/index.js:
lucide-react/dist/esm/lucide-react.js:
  (**
   * @license lucide-react v0.545.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@easyspace_aitable.js.map
